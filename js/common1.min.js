//external js (material,angularjs)
/*! jQuery v1.10.2 | (c) 2005, 2013 jQuery Foundation, Inc. | jquery.org/license
//@ sourceMappingURL=jquery.min.map
*/
(function (e, t) {
    var n, r, i = typeof t, o = e.location, a = e.document, s = a.documentElement, l = e.jQuery, u = e.$, c = {}, p = [], f = "1.10.2", d = p.concat, h = p.push, g = p.slice, m = p.indexOf, y = c.toString, v = c.hasOwnProperty, b = f.trim, x = function (e, t) { return new x.fn.init(e, t, r) }, w = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source, T = /\S+/g, C = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, N = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/, k = /^<(\w+)\s*\/?>(?:<\/\1>|)$/, E = /^[\],:{}\s]*$/, S = /(?:^|:|,)(?:\s*\[)+/g, A = /\\(?:["\\\/bfnrt]|u[\da-fA-F]{4})/g, j = /"[^"\\\r\n]*"|true|false|null|-?(?:\d+\.|)\d+(?:[eE][+-]?\d+|)/g, D = /^-ms-/, L = /-([\da-z])/gi, H = function (e, t) { return t.toUpperCase() }, q = function (e) { (a.addEventListener || "load" === e.type || "complete" === a.readyState) && (_(), x.ready()) }, _ = function () { a.addEventListener ? (a.removeEventListener("DOMContentLoaded", q, !1), e.removeEventListener("load", q, !1)) : (a.detachEvent("onreadystatechange", q), e.detachEvent("onload", q)) }; x.fn = x.prototype = { jquery: f, constructor: x, init: function (e, n, r) { var i, o; if (!e) return this; if ("string" == typeof e) { if (i = "<" === e.charAt(0) && ">" === e.charAt(e.length - 1) && e.length >= 3 ? [null, e, null] : N.exec(e), !i || !i[1] && n) return !n || n.jquery ? (n || r).find(e) : this.constructor(n).find(e); if (i[1]) { if (n = n instanceof x ? n[0] : n, x.merge(this, x.parseHTML(i[1], n && n.nodeType ? n.ownerDocument || n : a, !0)), k.test(i[1]) && x.isPlainObject(n)) for (i in n) x.isFunction(this[i]) ? this[i](n[i]) : this.attr(i, n[i]); return this } if (o = a.getElementById(i[2]), o && o.parentNode) { if (o.id !== i[2]) return r.find(e); this.length = 1, this[0] = o } return this.context = a, this.selector = e, this } return e.nodeType ? (this.context = this[0] = e, this.length = 1, this) : x.isFunction(e) ? r.ready(e) : (e.selector !== t && (this.selector = e.selector, this.context = e.context), x.makeArray(e, this)) }, selector: "", length: 0, toArray: function () { return g.call(this) }, get: function (e) { return null == e ? this.toArray() : 0 > e ? this[this.length + e] : this[e] }, pushStack: function (e) { var t = x.merge(this.constructor(), e); return t.prevObject = this, t.context = this.context, t }, each: function (e, t) { return x.each(this, e, t) }, ready: function (e) { return x.ready.promise().done(e), this }, slice: function () { return this.pushStack(g.apply(this, arguments)) }, first: function () { return this.eq(0) }, last: function () { return this.eq(-1) }, eq: function (e) { var t = this.length, n = +e + (0 > e ? t : 0); return this.pushStack(n >= 0 && t > n ? [this[n]] : []) }, map: function (e) { return this.pushStack(x.map(this, function (t, n) { return e.call(t, n, t) })) }, end: function () { return this.prevObject || this.constructor(null) }, push: h, sort: [].sort, splice: [].splice }, x.fn.init.prototype = x.fn, x.extend = x.fn.extend = function () { var e, n, r, i, o, a, s = arguments[0] || {}, l = 1, u = arguments.length, c = !1; for ("boolean" == typeof s && (c = s, s = arguments[1] || {}, l = 2), "object" == typeof s || x.isFunction(s) || (s = {}), u === l && (s = this, --l); u > l; l++)if (null != (o = arguments[l])) for (i in o) e = s[i], r = o[i], s !== r && (c && r && (x.isPlainObject(r) || (n = x.isArray(r))) ? (n ? (n = !1, a = e && x.isArray(e) ? e : []) : a = e && x.isPlainObject(e) ? e : {}, s[i] = x.extend(c, a, r)) : r !== t && (s[i] = r)); return s }, x.extend({ expando: "jQuery" + (f + Math.random()).replace(/\D/g, ""), noConflict: function (t) { return e.$ === x && (e.$ = u), t && e.jQuery === x && (e.jQuery = l), x }, isReady: !1, readyWait: 1, holdReady: function (e) { e ? x.readyWait++ : x.ready(!0) }, ready: function (e) { if (e === !0 ? !--x.readyWait : !x.isReady) { if (!a.body) return setTimeout(x.ready); x.isReady = !0, e !== !0 && --x.readyWait > 0 || (n.resolveWith(a, [x]), x.fn.trigger && x(a).trigger("ready").off("ready")) } }, isFunction: function (e) { return "function" === x.type(e) }, isArray: Array.isArray || function (e) { return "array" === x.type(e) }, isWindow: function (e) { return null != e && e == e.window }, isNumeric: function (e) { return !isNaN(parseFloat(e)) && isFinite(e) }, type: function (e) { return null == e ? e + "" : "object" == typeof e || "function" == typeof e ? c[y.call(e)] || "object" : typeof e }, isPlainObject: function (e) { var n; if (!e || "object" !== x.type(e) || e.nodeType || x.isWindow(e)) return !1; try { if (e.constructor && !v.call(e, "constructor") && !v.call(e.constructor.prototype, "isPrototypeOf")) return !1 } catch (r) { return !1 } if (x.support.ownLast) for (n in e) return v.call(e, n); for (n in e); return n === t || v.call(e, n) }, isEmptyObject: function (e) { var t; for (t in e) return !1; return !0 }, error: function (e) { throw Error(e) }, parseHTML: function (e, t, n) { if (!e || "string" != typeof e) return null; "boolean" == typeof t && (n = t, t = !1), t = t || a; var r = k.exec(e), i = !n && []; return r ? [t.createElement(r[1])] : (r = x.buildFragment([e], t, i), i && x(i).remove(), x.merge([], r.childNodes)) }, parseJSON: function (n) { return e.JSON && e.JSON.parse ? e.JSON.parse(n) : null === n ? n : "string" == typeof n && (n = x.trim(n), n && E.test(n.replace(A, "@").replace(j, "]").replace(S, ""))) ? Function("return " + n)() : (x.error("Invalid JSON: " + n), t) }, parseXML: function (n) { var r, i; if (!n || "string" != typeof n) return null; try { e.DOMParser ? (i = new DOMParser, r = i.parseFromString(n, "text/xml")) : (r = new ActiveXObject("Microsoft.XMLDOM"), r.async = "false", r.loadXML(n)) } catch (o) { r = t } return r && r.documentElement && !r.getElementsByTagName("parsererror").length || x.error("Invalid XML: " + n), r }, noop: function () { }, globalEval: function (t) { t && x.trim(t) && (e.execScript || function (t) { e.eval.call(e, t) })(t) }, camelCase: function (e) { return e.replace(D, "ms-").replace(L, H) }, nodeName: function (e, t) { return e.nodeName && e.nodeName.toLowerCase() === t.toLowerCase() }, each: function (e, t, n) { var r, i = 0, o = e.length, a = M(e); if (n) { if (a) { for (; o > i; i++)if (r = t.apply(e[i], n), r === !1) break } else for (i in e) if (r = t.apply(e[i], n), r === !1) break } else if (a) { for (; o > i; i++)if (r = t.call(e[i], i, e[i]), r === !1) break } else for (i in e) if (r = t.call(e[i], i, e[i]), r === !1) break; return e }, trim: b && !b.call("\ufeff\u00a0") ? function (e) { return null == e ? "" : b.call(e) } : function (e) { return null == e ? "" : (e + "").replace(C, "") }, makeArray: function (e, t) { var n = t || []; return null != e && (M(Object(e)) ? x.merge(n, "string" == typeof e ? [e] : e) : h.call(n, e)), n }, inArray: function (e, t, n) { var r; if (t) { if (m) return m.call(t, e, n); for (r = t.length, n = n ? 0 > n ? Math.max(0, r + n) : n : 0; r > n; n++)if (n in t && t[n] === e) return n } return -1 }, merge: function (e, n) { var r = n.length, i = e.length, o = 0; if ("number" == typeof r) for (; r > o; o++)e[i++] = n[o]; else while (n[o] !== t) e[i++] = n[o++]; return e.length = i, e }, grep: function (e, t, n) { var r, i = [], o = 0, a = e.length; for (n = !!n; a > o; o++)r = !!t(e[o], o), n !== r && i.push(e[o]); return i }, map: function (e, t, n) { var r, i = 0, o = e.length, a = M(e), s = []; if (a) for (; o > i; i++)r = t(e[i], i, n), null != r && (s[s.length] = r); else for (i in e) r = t(e[i], i, n), null != r && (s[s.length] = r); return d.apply([], s) }, guid: 1, proxy: function (e, n) { var r, i, o; return "string" == typeof n && (o = e[n], n = e, e = o), x.isFunction(e) ? (r = g.call(arguments, 2), i = function () { return e.apply(n || this, r.concat(g.call(arguments))) }, i.guid = e.guid = e.guid || x.guid++ , i) : t }, access: function (e, n, r, i, o, a, s) { var l = 0, u = e.length, c = null == r; if ("object" === x.type(r)) { o = !0; for (l in r) x.access(e, n, l, r[l], !0, a, s) } else if (i !== t && (o = !0, x.isFunction(i) || (s = !0), c && (s ? (n.call(e, i), n = null) : (c = n, n = function (e, t, n) { return c.call(x(e), n) })), n)) for (; u > l; l++)n(e[l], r, s ? i : i.call(e[l], l, n(e[l], r))); return o ? e : c ? n.call(e) : u ? n(e[0], r) : a }, now: function () { return (new Date).getTime() }, swap: function (e, t, n, r) { var i, o, a = {}; for (o in t) a[o] = e.style[o], e.style[o] = t[o]; i = n.apply(e, r || []); for (o in t) e.style[o] = a[o]; return i } }), x.ready.promise = function (t) { if (!n) if (n = x.Deferred(), "complete" === a.readyState) setTimeout(x.ready); else if (a.addEventListener) a.addEventListener("DOMContentLoaded", q, !1), e.addEventListener("load", q, !1); else { a.attachEvent("onreadystatechange", q), e.attachEvent("onload", q); var r = !1; try { r = null == e.frameElement && a.documentElement } catch (i) { } r && r.doScroll && function o() { if (!x.isReady) { try { r.doScroll("left") } catch (e) { return setTimeout(o, 50) } _(), x.ready() } }() } return n.promise(t) }, x.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), function (e, t) { c["[object " + t + "]"] = t.toLowerCase() }); function M(e) { var t = e.length, n = x.type(e); return x.isWindow(e) ? !1 : 1 === e.nodeType && t ? !0 : "array" === n || "function" !== n && (0 === t || "number" == typeof t && t > 0 && t - 1 in e) } r = x(a), function (e, t) { var n, r, i, o, a, s, l, u, c, p, f, d, h, g, m, y, v, b = "sizzle" + -new Date, w = e.document, T = 0, C = 0, N = st(), k = st(), E = st(), S = !1, A = function (e, t) { return e === t ? (S = !0, 0) : 0 }, j = typeof t, D = 1 << 31, L = {}.hasOwnProperty, H = [], q = H.pop, _ = H.push, M = H.push, O = H.slice, F = H.indexOf || function (e) { var t = 0, n = this.length; for (; n > t; t++)if (this[t] === e) return t; return -1 }, B = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped", P = "[\\x20\\t\\r\\n\\f]", R = "(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+", W = R.replace("w", "w#"), $ = "\\[" + P + "*(" + R + ")" + P + "*(?:([*^$|!~]?=)" + P + "*(?:(['\"])((?:\\\\.|[^\\\\])*?)\\3|(" + W + ")|)|)" + P + "*\\]", I = ":(" + R + ")(?:\\(((['\"])((?:\\\\.|[^\\\\])*?)\\3|((?:\\\\.|[^\\\\()[\\]]|" + $.replace(3, 8) + ")*)|.*)\\)|)", z = RegExp("^" + P + "+|((?:^|[^\\\\])(?:\\\\.)*)" + P + "+$", "g"), X = RegExp("^" + P + "*," + P + "*"), U = RegExp("^" + P + "*([>+~]|" + P + ")" + P + "*"), V = RegExp(P + "*[+~]"), Y = RegExp("=" + P + "*([^\\]'\"]*)" + P + "*\\]", "g"), J = RegExp(I), G = RegExp("^" + W + "$"), Q = { ID: RegExp("^#(" + R + ")"), CLASS: RegExp("^\\.(" + R + ")"), TAG: RegExp("^(" + R.replace("w", "w*") + ")"), ATTR: RegExp("^" + $), PSEUDO: RegExp("^" + I), CHILD: RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + P + "*(even|odd|(([+-]|)(\\d*)n|)" + P + "*(?:([+-]|)" + P + "*(\\d+)|))" + P + "*\\)|)", "i"), bool: RegExp("^(?:" + B + ")$", "i"), needsContext: RegExp("^" + P + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + P + "*((?:-\\d)?\\d*)" + P + "*\\)|)(?=[^-]|$)", "i") }, K = /^[^{]+\{\s*\[native \w/, Z = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/, et = /^(?:input|select|textarea|button)$/i, tt = /^h\d$/i, nt = /'|\\/g, rt = RegExp("\\\\([\\da-f]{1,6}" + P + "?|(" + P + ")|.)", "ig"), it = function (e, t, n) { var r = "0x" + t - 65536; return r !== r || n ? t : 0 > r ? String.fromCharCode(r + 65536) : String.fromCharCode(55296 | r >> 10, 56320 | 1023 & r) }; try { M.apply(H = O.call(w.childNodes), w.childNodes), H[w.childNodes.length].nodeType } catch (ot) { M = { apply: H.length ? function (e, t) { _.apply(e, O.call(t)) } : function (e, t) { var n = e.length, r = 0; while (e[n++] = t[r++]); e.length = n - 1 } } } function at(e, t, n, i) { var o, a, s, l, u, c, d, m, y, x; if ((t ? t.ownerDocument || t : w) !== f && p(t), t = t || f, n = n || [], !e || "string" != typeof e) return n; if (1 !== (l = t.nodeType) && 9 !== l) return []; if (h && !i) { if (o = Z.exec(e)) if (s = o[1]) { if (9 === l) { if (a = t.getElementById(s), !a || !a.parentNode) return n; if (a.id === s) return n.push(a), n } else if (t.ownerDocument && (a = t.ownerDocument.getElementById(s)) && v(t, a) && a.id === s) return n.push(a), n } else { if (o[2]) return M.apply(n, t.getElementsByTagName(e)), n; if ((s = o[3]) && r.getElementsByClassName && t.getElementsByClassName) return M.apply(n, t.getElementsByClassName(s)), n } if (r.qsa && (!g || !g.test(e))) { if (m = d = b, y = t, x = 9 === l && e, 1 === l && "object" !== t.nodeName.toLowerCase()) { c = mt(e), (d = t.getAttribute("id")) ? m = d.replace(nt, "\\$&") : t.setAttribute("id", m), m = "[id='" + m + "'] ", u = c.length; while (u--) c[u] = m + yt(c[u]); y = V.test(e) && t.parentNode || t, x = c.join(",") } if (x) try { return M.apply(n, y.querySelectorAll(x)), n } catch (T) { } finally { d || t.removeAttribute("id") } } } return kt(e.replace(z, "$1"), t, n, i) } function st() { var e = []; function t(n, r) { return e.push(n += " ") > o.cacheLength && delete t[e.shift()], t[n] = r } return t } function lt(e) { return e[b] = !0, e } function ut(e) { var t = f.createElement("div"); try { return !!e(t) } catch (n) { return !1 } finally { t.parentNode && t.parentNode.removeChild(t), t = null } } function ct(e, t) { var n = e.split("|"), r = e.length; while (r--) o.attrHandle[n[r]] = t } function pt(e, t) { var n = t && e, r = n && 1 === e.nodeType && 1 === t.nodeType && (~t.sourceIndex || D) - (~e.sourceIndex || D); if (r) return r; if (n) while (n = n.nextSibling) if (n === t) return -1; return e ? 1 : -1 } function ft(e) { return function (t) { var n = t.nodeName.toLowerCase(); return "input" === n && t.type === e } } function dt(e) { return function (t) { var n = t.nodeName.toLowerCase(); return ("input" === n || "button" === n) && t.type === e } } function ht(e) { return lt(function (t) { return t = +t, lt(function (n, r) { var i, o = e([], n.length, t), a = o.length; while (a--) n[i = o[a]] && (n[i] = !(r[i] = n[i])) }) }) } s = at.isXML = function (e) { var t = e && (e.ownerDocument || e).documentElement; return t ? "HTML" !== t.nodeName : !1 }, r = at.support = {}, p = at.setDocument = function (e) { var n = e ? e.ownerDocument || e : w, i = n.defaultView; return n !== f && 9 === n.nodeType && n.documentElement ? (f = n, d = n.documentElement, h = !s(n), i && i.attachEvent && i !== i.top && i.attachEvent("onbeforeunload", function () { p() }), r.attributes = ut(function (e) { return e.className = "i", !e.getAttribute("className") }), r.getElementsByTagName = ut(function (e) { return e.appendChild(n.createComment("")), !e.getElementsByTagName("*").length }), r.getElementsByClassName = ut(function (e) { return e.innerHTML = "<div class='a'></div><div class='a i'></div>", e.firstChild.className = "i", 2 === e.getElementsByClassName("i").length }), r.getById = ut(function (e) { return d.appendChild(e).id = b, !n.getElementsByName || !n.getElementsByName(b).length }), r.getById ? (o.find.ID = function (e, t) { if (typeof t.getElementById !== j && h) { var n = t.getElementById(e); return n && n.parentNode ? [n] : [] } }, o.filter.ID = function (e) { var t = e.replace(rt, it); return function (e) { return e.getAttribute("id") === t } }) : (delete o.find.ID, o.filter.ID = function (e) { var t = e.replace(rt, it); return function (e) { var n = typeof e.getAttributeNode !== j && e.getAttributeNode("id"); return n && n.value === t } }), o.find.TAG = r.getElementsByTagName ? function (e, n) { return typeof n.getElementsByTagName !== j ? n.getElementsByTagName(e) : t } : function (e, t) { var n, r = [], i = 0, o = t.getElementsByTagName(e); if ("*" === e) { while (n = o[i++]) 1 === n.nodeType && r.push(n); return r } return o }, o.find.CLASS = r.getElementsByClassName && function (e, n) { return typeof n.getElementsByClassName !== j && h ? n.getElementsByClassName(e) : t }, m = [], g = [], (r.qsa = K.test(n.querySelectorAll)) && (ut(function (e) { e.innerHTML = "<select><option selected=''></option></select>", e.querySelectorAll("[selected]").length || g.push("\\[" + P + "*(?:value|" + B + ")"), e.querySelectorAll(":checked").length || g.push(":checked") }), ut(function (e) { var t = n.createElement("input"); t.setAttribute("type", "hidden"), e.appendChild(t).setAttribute("t", ""), e.querySelectorAll("[t^='']").length && g.push("[*^$]=" + P + "*(?:''|\"\")"), e.querySelectorAll(":enabled").length || g.push(":enabled", ":disabled"), e.querySelectorAll("*,:x"), g.push(",.*:") })), (r.matchesSelector = K.test(y = d.webkitMatchesSelector || d.mozMatchesSelector || d.oMatchesSelector || d.msMatchesSelector)) && ut(function (e) { r.disconnectedMatch = y.call(e, "div"), y.call(e, "[s!='']:x"), m.push("!=", I) }), g = g.length && RegExp(g.join("|")), m = m.length && RegExp(m.join("|")), v = K.test(d.contains) || d.compareDocumentPosition ? function (e, t) { var n = 9 === e.nodeType ? e.documentElement : e, r = t && t.parentNode; return e === r || !(!r || 1 !== r.nodeType || !(n.contains ? n.contains(r) : e.compareDocumentPosition && 16 & e.compareDocumentPosition(r))) } : function (e, t) { if (t) while (t = t.parentNode) if (t === e) return !0; return !1 }, A = d.compareDocumentPosition ? function (e, t) { if (e === t) return S = !0, 0; var i = t.compareDocumentPosition && e.compareDocumentPosition && e.compareDocumentPosition(t); return i ? 1 & i || !r.sortDetached && t.compareDocumentPosition(e) === i ? e === n || v(w, e) ? -1 : t === n || v(w, t) ? 1 : c ? F.call(c, e) - F.call(c, t) : 0 : 4 & i ? -1 : 1 : e.compareDocumentPosition ? -1 : 1 } : function (e, t) { var r, i = 0, o = e.parentNode, a = t.parentNode, s = [e], l = [t]; if (e === t) return S = !0, 0; if (!o || !a) return e === n ? -1 : t === n ? 1 : o ? -1 : a ? 1 : c ? F.call(c, e) - F.call(c, t) : 0; if (o === a) return pt(e, t); r = e; while (r = r.parentNode) s.unshift(r); r = t; while (r = r.parentNode) l.unshift(r); while (s[i] === l[i]) i++; return i ? pt(s[i], l[i]) : s[i] === w ? -1 : l[i] === w ? 1 : 0 }, n) : f }, at.matches = function (e, t) { return at(e, null, null, t) }, at.matchesSelector = function (e, t) { if ((e.ownerDocument || e) !== f && p(e), t = t.replace(Y, "='$1']"), !(!r.matchesSelector || !h || m && m.test(t) || g && g.test(t))) try { var n = y.call(e, t); if (n || r.disconnectedMatch || e.document && 11 !== e.document.nodeType) return n } catch (i) { } return at(t, f, null, [e]).length > 0 }, at.contains = function (e, t) { return (e.ownerDocument || e) !== f && p(e), v(e, t) }, at.attr = function (e, n) { (e.ownerDocument || e) !== f && p(e); var i = o.attrHandle[n.toLowerCase()], a = i && L.call(o.attrHandle, n.toLowerCase()) ? i(e, n, !h) : t; return a === t ? r.attributes || !h ? e.getAttribute(n) : (a = e.getAttributeNode(n)) && a.specified ? a.value : null : a }, at.error = function (e) { throw Error("Syntax error, unrecognized expression: " + e) }, at.uniqueSort = function (e) { var t, n = [], i = 0, o = 0; if (S = !r.detectDuplicates, c = !r.sortStable && e.slice(0), e.sort(A), S) { while (t = e[o++]) t === e[o] && (i = n.push(o)); while (i--) e.splice(n[i], 1) } return e }, a = at.getText = function (e) { var t, n = "", r = 0, i = e.nodeType; if (i) { if (1 === i || 9 === i || 11 === i) { if ("string" == typeof e.textContent) return e.textContent; for (e = e.firstChild; e; e = e.nextSibling)n += a(e) } else if (3 === i || 4 === i) return e.nodeValue } else for (; t = e[r]; r++)n += a(t); return n }, o = at.selectors = { cacheLength: 50, createPseudo: lt, match: Q, attrHandle: {}, find: {}, relative: { ">": { dir: "parentNode", first: !0 }, " ": { dir: "parentNode" }, "+": { dir: "previousSibling", first: !0 }, "~": { dir: "previousSibling" } }, preFilter: { ATTR: function (e) { return e[1] = e[1].replace(rt, it), e[3] = (e[4] || e[5] || "").replace(rt, it), "~=" === e[2] && (e[3] = " " + e[3] + " "), e.slice(0, 4) }, CHILD: function (e) { return e[1] = e[1].toLowerCase(), "nth" === e[1].slice(0, 3) ? (e[3] || at.error(e[0]), e[4] = +(e[4] ? e[5] + (e[6] || 1) : 2 * ("even" === e[3] || "odd" === e[3])), e[5] = +(e[7] + e[8] || "odd" === e[3])) : e[3] && at.error(e[0]), e }, PSEUDO: function (e) { var n, r = !e[5] && e[2]; return Q.CHILD.test(e[0]) ? null : (e[3] && e[4] !== t ? e[2] = e[4] : r && J.test(r) && (n = mt(r, !0)) && (n = r.indexOf(")", r.length - n) - r.length) && (e[0] = e[0].slice(0, n), e[2] = r.slice(0, n)), e.slice(0, 3)) } }, filter: { TAG: function (e) { var t = e.replace(rt, it).toLowerCase(); return "*" === e ? function () { return !0 } : function (e) { return e.nodeName && e.nodeName.toLowerCase() === t } }, CLASS: function (e) { var t = N[e + " "]; return t || (t = RegExp("(^|" + P + ")" + e + "(" + P + "|$)")) && N(e, function (e) { return t.test("string" == typeof e.className && e.className || typeof e.getAttribute !== j && e.getAttribute("class") || "") }) }, ATTR: function (e, t, n) { return function (r) { var i = at.attr(r, e); return null == i ? "!=" === t : t ? (i += "", "=" === t ? i === n : "!=" === t ? i !== n : "^=" === t ? n && 0 === i.indexOf(n) : "*=" === t ? n && i.indexOf(n) > -1 : "$=" === t ? n && i.slice(-n.length) === n : "~=" === t ? (" " + i + " ").indexOf(n) > -1 : "|=" === t ? i === n || i.slice(0, n.length + 1) === n + "-" : !1) : !0 } }, CHILD: function (e, t, n, r, i) { var o = "nth" !== e.slice(0, 3), a = "last" !== e.slice(-4), s = "of-type" === t; return 1 === r && 0 === i ? function (e) { return !!e.parentNode } : function (t, n, l) { var u, c, p, f, d, h, g = o !== a ? "nextSibling" : "previousSibling", m = t.parentNode, y = s && t.nodeName.toLowerCase(), v = !l && !s; if (m) { if (o) { while (g) { p = t; while (p = p[g]) if (s ? p.nodeName.toLowerCase() === y : 1 === p.nodeType) return !1; h = g = "only" === e && !h && "nextSibling" } return !0 } if (h = [a ? m.firstChild : m.lastChild], a && v) { c = m[b] || (m[b] = {}), u = c[e] || [], d = u[0] === T && u[1], f = u[0] === T && u[2], p = d && m.childNodes[d]; while (p = ++d && p && p[g] || (f = d = 0) || h.pop()) if (1 === p.nodeType && ++f && p === t) { c[e] = [T, d, f]; break } } else if (v && (u = (t[b] || (t[b] = {}))[e]) && u[0] === T) f = u[1]; else while (p = ++d && p && p[g] || (f = d = 0) || h.pop()) if ((s ? p.nodeName.toLowerCase() === y : 1 === p.nodeType) && ++f && (v && ((p[b] || (p[b] = {}))[e] = [T, f]), p === t)) break; return f -= i, f === r || 0 === f % r && f / r >= 0 } } }, PSEUDO: function (e, t) { var n, r = o.pseudos[e] || o.setFilters[e.toLowerCase()] || at.error("unsupported pseudo: " + e); return r[b] ? r(t) : r.length > 1 ? (n = [e, e, "", t], o.setFilters.hasOwnProperty(e.toLowerCase()) ? lt(function (e, n) { var i, o = r(e, t), a = o.length; while (a--) i = F.call(e, o[a]), e[i] = !(n[i] = o[a]) }) : function (e) { return r(e, 0, n) }) : r } }, pseudos: { not: lt(function (e) { var t = [], n = [], r = l(e.replace(z, "$1")); return r[b] ? lt(function (e, t, n, i) { var o, a = r(e, null, i, []), s = e.length; while (s--) (o = a[s]) && (e[s] = !(t[s] = o)) }) : function (e, i, o) { return t[0] = e, r(t, null, o, n), !n.pop() } }), has: lt(function (e) { return function (t) { return at(e, t).length > 0 } }), contains: lt(function (e) { return function (t) { return (t.textContent || t.innerText || a(t)).indexOf(e) > -1 } }), lang: lt(function (e) { return G.test(e || "") || at.error("unsupported lang: " + e), e = e.replace(rt, it).toLowerCase(), function (t) { var n; do if (n = h ? t.lang : t.getAttribute("xml:lang") || t.getAttribute("lang")) return n = n.toLowerCase(), n === e || 0 === n.indexOf(e + "-"); while ((t = t.parentNode) && 1 === t.nodeType); return !1 } }), target: function (t) { var n = e.location && e.location.hash; return n && n.slice(1) === t.id }, root: function (e) { return e === d }, focus: function (e) { return e === f.activeElement && (!f.hasFocus || f.hasFocus()) && !!(e.type || e.href || ~e.tabIndex) }, enabled: function (e) { return e.disabled === !1 }, disabled: function (e) { return e.disabled === !0 }, checked: function (e) { var t = e.nodeName.toLowerCase(); return "input" === t && !!e.checked || "option" === t && !!e.selected }, selected: function (e) { return e.parentNode && e.parentNode.selectedIndex, e.selected === !0 }, empty: function (e) { for (e = e.firstChild; e; e = e.nextSibling)if (e.nodeName > "@" || 3 === e.nodeType || 4 === e.nodeType) return !1; return !0 }, parent: function (e) { return !o.pseudos.empty(e) }, header: function (e) { return tt.test(e.nodeName) }, input: function (e) { return et.test(e.nodeName) }, button: function (e) { var t = e.nodeName.toLowerCase(); return "input" === t && "button" === e.type || "button" === t }, text: function (e) { var t; return "input" === e.nodeName.toLowerCase() && "text" === e.type && (null == (t = e.getAttribute("type")) || t.toLowerCase() === e.type) }, first: ht(function () { return [0] }), last: ht(function (e, t) { return [t - 1] }), eq: ht(function (e, t, n) { return [0 > n ? n + t : n] }), even: ht(function (e, t) { var n = 0; for (; t > n; n += 2)e.push(n); return e }), odd: ht(function (e, t) { var n = 1; for (; t > n; n += 2)e.push(n); return e }), lt: ht(function (e, t, n) { var r = 0 > n ? n + t : n; for (; --r >= 0;)e.push(r); return e }), gt: ht(function (e, t, n) { var r = 0 > n ? n + t : n; for (; t > ++r;)e.push(r); return e }) } }, o.pseudos.nth = o.pseudos.eq; for (n in { radio: !0, checkbox: !0, file: !0, password: !0, image: !0 }) o.pseudos[n] = ft(n); for (n in { submit: !0, reset: !0 }) o.pseudos[n] = dt(n); function gt() { } gt.prototype = o.filters = o.pseudos, o.setFilters = new gt; function mt(e, t) { var n, r, i, a, s, l, u, c = k[e + " "]; if (c) return t ? 0 : c.slice(0); s = e, l = [], u = o.preFilter; while (s) { (!n || (r = X.exec(s))) && (r && (s = s.slice(r[0].length) || s), l.push(i = [])), n = !1, (r = U.exec(s)) && (n = r.shift(), i.push({ value: n, type: r[0].replace(z, " ") }), s = s.slice(n.length)); for (a in o.filter) !(r = Q[a].exec(s)) || u[a] && !(r = u[a](r)) || (n = r.shift(), i.push({ value: n, type: a, matches: r }), s = s.slice(n.length)); if (!n) break } return t ? s.length : s ? at.error(e) : k(e, l).slice(0) } function yt(e) { var t = 0, n = e.length, r = ""; for (; n > t; t++)r += e[t].value; return r } function vt(e, t, n) { var r = t.dir, o = n && "parentNode" === r, a = C++; return t.first ? function (t, n, i) { while (t = t[r]) if (1 === t.nodeType || o) return e(t, n, i) } : function (t, n, s) { var l, u, c, p = T + " " + a; if (s) { while (t = t[r]) if ((1 === t.nodeType || o) && e(t, n, s)) return !0 } else while (t = t[r]) if (1 === t.nodeType || o) if (c = t[b] || (t[b] = {}), (u = c[r]) && u[0] === p) { if ((l = u[1]) === !0 || l === i) return l === !0 } else if (u = c[r] = [p], u[1] = e(t, n, s) || i, u[1] === !0) return !0 } } function bt(e) { return e.length > 1 ? function (t, n, r) { var i = e.length; while (i--) if (!e[i](t, n, r)) return !1; return !0 } : e[0] } function xt(e, t, n, r, i) { var o, a = [], s = 0, l = e.length, u = null != t; for (; l > s; s++)(o = e[s]) && (!n || n(o, r, i)) && (a.push(o), u && t.push(s)); return a } function wt(e, t, n, r, i, o) { return r && !r[b] && (r = wt(r)), i && !i[b] && (i = wt(i, o)), lt(function (o, a, s, l) { var u, c, p, f = [], d = [], h = a.length, g = o || Nt(t || "*", s.nodeType ? [s] : s, []), m = !e || !o && t ? g : xt(g, f, e, s, l), y = n ? i || (o ? e : h || r) ? [] : a : m; if (n && n(m, y, s, l), r) { u = xt(y, d), r(u, [], s, l), c = u.length; while (c--) (p = u[c]) && (y[d[c]] = !(m[d[c]] = p)) } if (o) { if (i || e) { if (i) { u = [], c = y.length; while (c--) (p = y[c]) && u.push(m[c] = p); i(null, y = [], u, l) } c = y.length; while (c--) (p = y[c]) && (u = i ? F.call(o, p) : f[c]) > -1 && (o[u] = !(a[u] = p)) } } else y = xt(y === a ? y.splice(h, y.length) : y), i ? i(null, a, y, l) : M.apply(a, y) }) } function Tt(e) { var t, n, r, i = e.length, a = o.relative[e[0].type], s = a || o.relative[" "], l = a ? 1 : 0, c = vt(function (e) { return e === t }, s, !0), p = vt(function (e) { return F.call(t, e) > -1 }, s, !0), f = [function (e, n, r) { return !a && (r || n !== u) || ((t = n).nodeType ? c(e, n, r) : p(e, n, r)) }]; for (; i > l; l++)if (n = o.relative[e[l].type]) f = [vt(bt(f), n)]; else { if (n = o.filter[e[l].type].apply(null, e[l].matches), n[b]) { for (r = ++l; i > r; r++)if (o.relative[e[r].type]) break; return wt(l > 1 && bt(f), l > 1 && yt(e.slice(0, l - 1).concat({ value: " " === e[l - 2].type ? "*" : "" })).replace(z, "$1"), n, r > l && Tt(e.slice(l, r)), i > r && Tt(e = e.slice(r)), i > r && yt(e)) } f.push(n) } return bt(f) } function Ct(e, t) { var n = 0, r = t.length > 0, a = e.length > 0, s = function (s, l, c, p, d) { var h, g, m, y = [], v = 0, b = "0", x = s && [], w = null != d, C = u, N = s || a && o.find.TAG("*", d && l.parentNode || l), k = T += null == C ? 1 : Math.random() || .1; for (w && (u = l !== f && l, i = n); null != (h = N[b]); b++) { if (a && h) { g = 0; while (m = e[g++]) if (m(h, l, c)) { p.push(h); break } w && (T = k, i = ++n) } r && ((h = !m && h) && v-- , s && x.push(h)) } if (v += b, r && b !== v) { g = 0; while (m = t[g++]) m(x, y, l, c); if (s) { if (v > 0) while (b--) x[b] || y[b] || (y[b] = q.call(p)); y = xt(y) } M.apply(p, y), w && !s && y.length > 0 && v + t.length > 1 && at.uniqueSort(p) } return w && (T = k, u = C), x }; return r ? lt(s) : s } l = at.compile = function (e, t) { var n, r = [], i = [], o = E[e + " "]; if (!o) { t || (t = mt(e)), n = t.length; while (n--) o = Tt(t[n]), o[b] ? r.push(o) : i.push(o); o = E(e, Ct(i, r)) } return o }; function Nt(e, t, n) { var r = 0, i = t.length; for (; i > r; r++)at(e, t[r], n); return n } function kt(e, t, n, i) { var a, s, u, c, p, f = mt(e); if (!i && 1 === f.length) { if (s = f[0] = f[0].slice(0), s.length > 2 && "ID" === (u = s[0]).type && r.getById && 9 === t.nodeType && h && o.relative[s[1].type]) { if (t = (o.find.ID(u.matches[0].replace(rt, it), t) || [])[0], !t) return n; e = e.slice(s.shift().value.length) } a = Q.needsContext.test(e) ? 0 : s.length; while (a--) { if (u = s[a], o.relative[c = u.type]) break; if ((p = o.find[c]) && (i = p(u.matches[0].replace(rt, it), V.test(s[0].type) && t.parentNode || t))) { if (s.splice(a, 1), e = i.length && yt(s), !e) return M.apply(n, i), n; break } } } return l(e, f)(i, t, !h, n, V.test(e)), n } r.sortStable = b.split("").sort(A).join("") === b, r.detectDuplicates = S, p(), r.sortDetached = ut(function (e) { return 1 & e.compareDocumentPosition(f.createElement("div")) }), ut(function (e) { return e.innerHTML = "<a href='#'></a>", "#" === e.firstChild.getAttribute("href") }) || ct("type|href|height|width", function (e, n, r) { return r ? t : e.getAttribute(n, "type" === n.toLowerCase() ? 1 : 2) }), r.attributes && ut(function (e) { return e.innerHTML = "<input/>", e.firstChild.setAttribute("value", ""), "" === e.firstChild.getAttribute("value") }) || ct("value", function (e, n, r) { return r || "input" !== e.nodeName.toLowerCase() ? t : e.defaultValue }), ut(function (e) { return null == e.getAttribute("disabled") }) || ct(B, function (e, n, r) { var i; return r ? t : (i = e.getAttributeNode(n)) && i.specified ? i.value : e[n] === !0 ? n.toLowerCase() : null }), x.find = at, x.expr = at.selectors, x.expr[":"] = x.expr.pseudos, x.unique = at.uniqueSort, x.text = at.getText, x.isXMLDoc = at.isXML, x.contains = at.contains }(e); var O = {}; function F(e) { var t = O[e] = {}; return x.each(e.match(T) || [], function (e, n) { t[n] = !0 }), t } x.Callbacks = function (e) { e = "string" == typeof e ? O[e] || F(e) : x.extend({}, e); var n, r, i, o, a, s, l = [], u = !e.once && [], c = function (t) { for (r = e.memory && t, i = !0, a = s || 0, s = 0, o = l.length, n = !0; l && o > a; a++)if (l[a].apply(t[0], t[1]) === !1 && e.stopOnFalse) { r = !1; break } n = !1, l && (u ? u.length && c(u.shift()) : r ? l = [] : p.disable()) }, p = { add: function () { if (l) { var t = l.length; (function i(t) { x.each(t, function (t, n) { var r = x.type(n); "function" === r ? e.unique && p.has(n) || l.push(n) : n && n.length && "string" !== r && i(n) }) })(arguments), n ? o = l.length : r && (s = t, c(r)) } return this }, remove: function () { return l && x.each(arguments, function (e, t) { var r; while ((r = x.inArray(t, l, r)) > -1) l.splice(r, 1), n && (o >= r && o-- , a >= r && a--) }), this }, has: function (e) { return e ? x.inArray(e, l) > -1 : !(!l || !l.length) }, empty: function () { return l = [], o = 0, this }, disable: function () { return l = u = r = t, this }, disabled: function () { return !l }, lock: function () { return u = t, r || p.disable(), this }, locked: function () { return !u }, fireWith: function (e, t) { return !l || i && !u || (t = t || [], t = [e, t.slice ? t.slice() : t], n ? u.push(t) : c(t)), this }, fire: function () { return p.fireWith(this, arguments), this }, fired: function () { return !!i } }; return p }, x.extend({ Deferred: function (e) { var t = [["resolve", "done", x.Callbacks("once memory"), "resolved"], ["reject", "fail", x.Callbacks("once memory"), "rejected"], ["notify", "progress", x.Callbacks("memory")]], n = "pending", r = { state: function () { return n }, always: function () { return i.done(arguments).fail(arguments), this }, then: function () { var e = arguments; return x.Deferred(function (n) { x.each(t, function (t, o) { var a = o[0], s = x.isFunction(e[t]) && e[t]; i[o[1]](function () { var e = s && s.apply(this, arguments); e && x.isFunction(e.promise) ? e.promise().done(n.resolve).fail(n.reject).progress(n.notify) : n[a + "With"](this === r ? n.promise() : this, s ? [e] : arguments) }) }), e = null }).promise() }, promise: function (e) { return null != e ? x.extend(e, r) : r } }, i = {}; return r.pipe = r.then, x.each(t, function (e, o) { var a = o[2], s = o[3]; r[o[1]] = a.add, s && a.add(function () { n = s }, t[1 ^ e][2].disable, t[2][2].lock), i[o[0]] = function () { return i[o[0] + "With"](this === i ? r : this, arguments), this }, i[o[0] + "With"] = a.fireWith }), r.promise(i), e && e.call(i, i), i }, when: function (e) { var t = 0, n = g.call(arguments), r = n.length, i = 1 !== r || e && x.isFunction(e.promise) ? r : 0, o = 1 === i ? e : x.Deferred(), a = function (e, t, n) { return function (r) { t[e] = this, n[e] = arguments.length > 1 ? g.call(arguments) : r, n === s ? o.notifyWith(t, n) : --i || o.resolveWith(t, n) } }, s, l, u; if (r > 1) for (s = Array(r), l = Array(r), u = Array(r); r > t; t++)n[t] && x.isFunction(n[t].promise) ? n[t].promise().done(a(t, u, n)).fail(o.reject).progress(a(t, l, s)) : --i; return i || o.resolveWith(u, n), o.promise() } }), x.support = function (t) {
        var n, r, o, s, l, u, c, p, f, d = a.createElement("div"); if (d.setAttribute("className", "t"), d.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>", n = d.getElementsByTagName("*") || [], r = d.getElementsByTagName("a")[0], !r || !r.style || !n.length) return t; s = a.createElement("select"), u = s.appendChild(a.createElement("option")), o = d.getElementsByTagName("input")[0], r.style.cssText = "top:1px;float:left;opacity:.5", t.getSetAttribute = "t" !== d.className, t.leadingWhitespace = 3 === d.firstChild.nodeType, t.tbody = !d.getElementsByTagName("tbody").length, t.htmlSerialize = !!d.getElementsByTagName("link").length, t.style = /top/.test(r.getAttribute("style")), t.hrefNormalized = "/a" === r.getAttribute("href"), t.opacity = /^0.5/.test(r.style.opacity), t.cssFloat = !!r.style.cssFloat, t.checkOn = !!o.value, t.optSelected = u.selected, t.enctype = !!a.createElement("form").enctype, t.html5Clone = "<:nav></:nav>" !== a.createElement("nav").cloneNode(!0).outerHTML, t.inlineBlockNeedsLayout = !1, t.shrinkWrapBlocks = !1, t.pixelPosition = !1, t.deleteExpando = !0, t.noCloneEvent = !0, t.reliableMarginRight = !0, t.boxSizingReliable = !0, o.checked = !0, t.noCloneChecked = o.cloneNode(!0).checked, s.disabled = !0, t.optDisabled = !u.disabled; try { delete d.test } catch (h) { t.deleteExpando = !1 } o = a.createElement("input"), o.setAttribute("value", ""), t.input = "" === o.getAttribute("value"), o.value = "t", o.setAttribute("type", "radio"), t.radioValue = "t" === o.value, o.setAttribute("checked", "t"), o.setAttribute("name", "t"), l = a.createDocumentFragment(), l.appendChild(o), t.appendChecked = o.checked, t.checkClone = l.cloneNode(!0).cloneNode(!0).lastChild.checked, d.attachEvent && (d.attachEvent("onclick", function () { t.noCloneEvent = !1 }), d.cloneNode(!0).click()); for (f in { submit: !0, change: !0, focusin: !0 }) d.setAttribute(c = "on" + f, "t"), t[f + "Bubbles"] = c in e || d.attributes[c].expando === !1; d.style.backgroundClip = "content-box", d.cloneNode(!0).style.backgroundClip = "", t.clearCloneStyle = "content-box" === d.style.backgroundClip; for (f in x(t)) break; return t.ownLast = "0" !== f, x(function () { var n, r, o, s = "padding:0;margin:0;border:0;display:block;box-sizing:content-box;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;", l = a.getElementsByTagName("body")[0]; l && (n = a.createElement("div"), n.style.cssText = "border:0;width:0;height:0;position:absolute;top:0;left:-9999px;margin-top:1px", l.appendChild(n).appendChild(d), d.innerHTML = "<table><tr><td></td><td>t</td></tr></table>", o = d.getElementsByTagName("td"), o[0].style.cssText = "padding:0;margin:0;border:0;display:none", p = 0 === o[0].offsetHeight, o[0].style.display = "", o[1].style.display = "none", t.reliableHiddenOffsets = p && 0 === o[0].offsetHeight, d.innerHTML = "", d.style.cssText = "box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%;", x.swap(l, null != l.style.zoom ? { zoom: 1 } : {}, function () { t.boxSizing = 4 === d.offsetWidth }), e.getComputedStyle && (t.pixelPosition = "1%" !== (e.getComputedStyle(d, null) || {}).top, t.boxSizingReliable = "4px" === (e.getComputedStyle(d, null) || { width: "4px" }).width, r = d.appendChild(a.createElement("div")), r.style.cssText = d.style.cssText = s, r.style.marginRight = r.style.width = "0", d.style.width = "1px", t.reliableMarginRight = !parseFloat((e.getComputedStyle(r, null) || {}).marginRight)), typeof d.style.zoom !== i && (d.innerHTML = "", d.style.cssText = s + "width:1px;padding:1px;display:inline;zoom:1", t.inlineBlockNeedsLayout = 3 === d.offsetWidth, d.style.display = "block", d.innerHTML = "<div></div>", d.firstChild.style.width = "5px", t.shrinkWrapBlocks = 3 !== d.offsetWidth, t.inlineBlockNeedsLayout && (l.style.zoom = 1)), l.removeChild(n), n = d = o = r = null) }), n = s = l = u = r = o = null, t
    }({}); var B = /(?:\{[\s\S]*\}|\[[\s\S]*\])$/, P = /([A-Z])/g; function R(e, n, r, i) { if (x.acceptData(e)) { var o, a, s = x.expando, l = e.nodeType, u = l ? x.cache : e, c = l ? e[s] : e[s] && s; if (c && u[c] && (i || u[c].data) || r !== t || "string" != typeof n) return c || (c = l ? e[s] = p.pop() || x.guid++ : s), u[c] || (u[c] = l ? {} : { toJSON: x.noop }), ("object" == typeof n || "function" == typeof n) && (i ? u[c] = x.extend(u[c], n) : u[c].data = x.extend(u[c].data, n)), a = u[c], i || (a.data || (a.data = {}), a = a.data), r !== t && (a[x.camelCase(n)] = r), "string" == typeof n ? (o = a[n], null == o && (o = a[x.camelCase(n)])) : o = a, o } } function W(e, t, n) { if (x.acceptData(e)) { var r, i, o = e.nodeType, a = o ? x.cache : e, s = o ? e[x.expando] : x.expando; if (a[s]) { if (t && (r = n ? a[s] : a[s].data)) { x.isArray(t) ? t = t.concat(x.map(t, x.camelCase)) : t in r ? t = [t] : (t = x.camelCase(t), t = t in r ? [t] : t.split(" ")), i = t.length; while (i--) delete r[t[i]]; if (n ? !I(r) : !x.isEmptyObject(r)) return } (n || (delete a[s].data, I(a[s]))) && (o ? x.cleanData([e], !0) : x.support.deleteExpando || a != a.window ? delete a[s] : a[s] = null) } } } x.extend({ cache: {}, noData: { applet: !0, embed: !0, object: "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" }, hasData: function (e) { return e = e.nodeType ? x.cache[e[x.expando]] : e[x.expando], !!e && !I(e) }, data: function (e, t, n) { return R(e, t, n) }, removeData: function (e, t) { return W(e, t) }, _data: function (e, t, n) { return R(e, t, n, !0) }, _removeData: function (e, t) { return W(e, t, !0) }, acceptData: function (e) { if (e.nodeType && 1 !== e.nodeType && 9 !== e.nodeType) return !1; var t = e.nodeName && x.noData[e.nodeName.toLowerCase()]; return !t || t !== !0 && e.getAttribute("classid") === t } }), x.fn.extend({ data: function (e, n) { var r, i, o = null, a = 0, s = this[0]; if (e === t) { if (this.length && (o = x.data(s), 1 === s.nodeType && !x._data(s, "parsedAttrs"))) { for (r = s.attributes; r.length > a; a++)i = r[a].name, 0 === i.indexOf("data-") && (i = x.camelCase(i.slice(5)), $(s, i, o[i])); x._data(s, "parsedAttrs", !0) } return o } return "object" == typeof e ? this.each(function () { x.data(this, e) }) : arguments.length > 1 ? this.each(function () { x.data(this, e, n) }) : s ? $(s, e, x.data(s, e)) : null }, removeData: function (e) { return this.each(function () { x.removeData(this, e) }) } }); function $(e, n, r) { if (r === t && 1 === e.nodeType) { var i = "data-" + n.replace(P, "-$1").toLowerCase(); if (r = e.getAttribute(i), "string" == typeof r) { try { r = "true" === r ? !0 : "false" === r ? !1 : "null" === r ? null : +r + "" === r ? +r : B.test(r) ? x.parseJSON(r) : r } catch (o) { } x.data(e, n, r) } else r = t } return r } function I(e) { var t; for (t in e) if (("data" !== t || !x.isEmptyObject(e[t])) && "toJSON" !== t) return !1; return !0 } x.extend({ queue: function (e, n, r) { var i; return e ? (n = (n || "fx") + "queue", i = x._data(e, n), r && (!i || x.isArray(r) ? i = x._data(e, n, x.makeArray(r)) : i.push(r)), i || []) : t }, dequeue: function (e, t) { t = t || "fx"; var n = x.queue(e, t), r = n.length, i = n.shift(), o = x._queueHooks(e, t), a = function () { x.dequeue(e, t) }; "inprogress" === i && (i = n.shift(), r--), i && ("fx" === t && n.unshift("inprogress"), delete o.stop, i.call(e, a, o)), !r && o && o.empty.fire() }, _queueHooks: function (e, t) { var n = t + "queueHooks"; return x._data(e, n) || x._data(e, n, { empty: x.Callbacks("once memory").add(function () { x._removeData(e, t + "queue"), x._removeData(e, n) }) }) } }), x.fn.extend({ queue: function (e, n) { var r = 2; return "string" != typeof e && (n = e, e = "fx", r--), r > arguments.length ? x.queue(this[0], e) : n === t ? this : this.each(function () { var t = x.queue(this, e, n); x._queueHooks(this, e), "fx" === e && "inprogress" !== t[0] && x.dequeue(this, e) }) }, dequeue: function (e) { return this.each(function () { x.dequeue(this, e) }) }, delay: function (e, t) { return e = x.fx ? x.fx.speeds[e] || e : e, t = t || "fx", this.queue(t, function (t, n) { var r = setTimeout(t, e); n.stop = function () { clearTimeout(r) } }) }, clearQueue: function (e) { return this.queue(e || "fx", []) }, promise: function (e, n) { var r, i = 1, o = x.Deferred(), a = this, s = this.length, l = function () { --i || o.resolveWith(a, [a]) }; "string" != typeof e && (n = e, e = t), e = e || "fx"; while (s--) r = x._data(a[s], e + "queueHooks"), r && r.empty && (i++ , r.empty.add(l)); return l(), o.promise(n) } }); var z, X, U = /[\t\r\n\f]/g, V = /\r/g, Y = /^(?:input|select|textarea|button|object)$/i, J = /^(?:a|area)$/i, G = /^(?:checked|selected)$/i, Q = x.support.getSetAttribute, K = x.support.input; x.fn.extend({ attr: function (e, t) { return x.access(this, x.attr, e, t, arguments.length > 1) }, removeAttr: function (e) { return this.each(function () { x.removeAttr(this, e) }) }, prop: function (e, t) { return x.access(this, x.prop, e, t, arguments.length > 1) }, removeProp: function (e) { return e = x.propFix[e] || e, this.each(function () { try { this[e] = t, delete this[e] } catch (n) { } }) }, addClass: function (e) { var t, n, r, i, o, a = 0, s = this.length, l = "string" == typeof e && e; if (x.isFunction(e)) return this.each(function (t) { x(this).addClass(e.call(this, t, this.className)) }); if (l) for (t = (e || "").match(T) || []; s > a; a++)if (n = this[a], r = 1 === n.nodeType && (n.className ? (" " + n.className + " ").replace(U, " ") : " ")) { o = 0; while (i = t[o++]) 0 > r.indexOf(" " + i + " ") && (r += i + " "); n.className = x.trim(r) } return this }, removeClass: function (e) { var t, n, r, i, o, a = 0, s = this.length, l = 0 === arguments.length || "string" == typeof e && e; if (x.isFunction(e)) return this.each(function (t) { x(this).removeClass(e.call(this, t, this.className)) }); if (l) for (t = (e || "").match(T) || []; s > a; a++)if (n = this[a], r = 1 === n.nodeType && (n.className ? (" " + n.className + " ").replace(U, " ") : "")) { o = 0; while (i = t[o++]) while (r.indexOf(" " + i + " ") >= 0) r = r.replace(" " + i + " ", " "); n.className = e ? x.trim(r) : "" } return this }, toggleClass: function (e, t) { var n = typeof e; return "boolean" == typeof t && "string" === n ? t ? this.addClass(e) : this.removeClass(e) : x.isFunction(e) ? this.each(function (n) { x(this).toggleClass(e.call(this, n, this.className, t), t) }) : this.each(function () { if ("string" === n) { var t, r = 0, o = x(this), a = e.match(T) || []; while (t = a[r++]) o.hasClass(t) ? o.removeClass(t) : o.addClass(t) } else (n === i || "boolean" === n) && (this.className && x._data(this, "__className__", this.className), this.className = this.className || e === !1 ? "" : x._data(this, "__className__") || "") }) }, hasClass: function (e) { var t = " " + e + " ", n = 0, r = this.length; for (; r > n; n++)if (1 === this[n].nodeType && (" " + this[n].className + " ").replace(U, " ").indexOf(t) >= 0) return !0; return !1 }, val: function (e) { var n, r, i, o = this[0]; { if (arguments.length) return i = x.isFunction(e), this.each(function (n) { var o; 1 === this.nodeType && (o = i ? e.call(this, n, x(this).val()) : e, null == o ? o = "" : "number" == typeof o ? o += "" : x.isArray(o) && (o = x.map(o, function (e) { return null == e ? "" : e + "" })), r = x.valHooks[this.type] || x.valHooks[this.nodeName.toLowerCase()], r && "set" in r && r.set(this, o, "value") !== t || (this.value = o)) }); if (o) return r = x.valHooks[o.type] || x.valHooks[o.nodeName.toLowerCase()], r && "get" in r && (n = r.get(o, "value")) !== t ? n : (n = o.value, "string" == typeof n ? n.replace(V, "") : null == n ? "" : n) } } }), x.extend({ valHooks: { option: { get: function (e) { var t = x.find.attr(e, "value"); return null != t ? t : e.text } }, select: { get: function (e) { var t, n, r = e.options, i = e.selectedIndex, o = "select-one" === e.type || 0 > i, a = o ? null : [], s = o ? i + 1 : r.length, l = 0 > i ? s : o ? i : 0; for (; s > l; l++)if (n = r[l], !(!n.selected && l !== i || (x.support.optDisabled ? n.disabled : null !== n.getAttribute("disabled")) || n.parentNode.disabled && x.nodeName(n.parentNode, "optgroup"))) { if (t = x(n).val(), o) return t; a.push(t) } return a }, set: function (e, t) { var n, r, i = e.options, o = x.makeArray(t), a = i.length; while (a--) r = i[a], (r.selected = x.inArray(x(r).val(), o) >= 0) && (n = !0); return n || (e.selectedIndex = -1), o } } }, attr: function (e, n, r) { var o, a, s = e.nodeType; if (e && 3 !== s && 8 !== s && 2 !== s) return typeof e.getAttribute === i ? x.prop(e, n, r) : (1 === s && x.isXMLDoc(e) || (n = n.toLowerCase(), o = x.attrHooks[n] || (x.expr.match.bool.test(n) ? X : z)), r === t ? o && "get" in o && null !== (a = o.get(e, n)) ? a : (a = x.find.attr(e, n), null == a ? t : a) : null !== r ? o && "set" in o && (a = o.set(e, r, n)) !== t ? a : (e.setAttribute(n, r + ""), r) : (x.removeAttr(e, n), t)) }, removeAttr: function (e, t) { var n, r, i = 0, o = t && t.match(T); if (o && 1 === e.nodeType) while (n = o[i++]) r = x.propFix[n] || n, x.expr.match.bool.test(n) ? K && Q || !G.test(n) ? e[r] = !1 : e[x.camelCase("default-" + n)] = e[r] = !1 : x.attr(e, n, ""), e.removeAttribute(Q ? n : r) }, attrHooks: { type: { set: function (e, t) { if (!x.support.radioValue && "radio" === t && x.nodeName(e, "input")) { var n = e.value; return e.setAttribute("type", t), n && (e.value = n), t } } } }, propFix: { "for": "htmlFor", "class": "className" }, prop: function (e, n, r) { var i, o, a, s = e.nodeType; if (e && 3 !== s && 8 !== s && 2 !== s) return a = 1 !== s || !x.isXMLDoc(e), a && (n = x.propFix[n] || n, o = x.propHooks[n]), r !== t ? o && "set" in o && (i = o.set(e, r, n)) !== t ? i : e[n] = r : o && "get" in o && null !== (i = o.get(e, n)) ? i : e[n] }, propHooks: { tabIndex: { get: function (e) { var t = x.find.attr(e, "tabindex"); return t ? parseInt(t, 10) : Y.test(e.nodeName) || J.test(e.nodeName) && e.href ? 0 : -1 } } } }), X = { set: function (e, t, n) { return t === !1 ? x.removeAttr(e, n) : K && Q || !G.test(n) ? e.setAttribute(!Q && x.propFix[n] || n, n) : e[x.camelCase("default-" + n)] = e[n] = !0, n } }, x.each(x.expr.match.bool.source.match(/\w+/g), function (e, n) { var r = x.expr.attrHandle[n] || x.find.attr; x.expr.attrHandle[n] = K && Q || !G.test(n) ? function (e, n, i) { var o = x.expr.attrHandle[n], a = i ? t : (x.expr.attrHandle[n] = t) != r(e, n, i) ? n.toLowerCase() : null; return x.expr.attrHandle[n] = o, a } : function (e, n, r) { return r ? t : e[x.camelCase("default-" + n)] ? n.toLowerCase() : null } }), K && Q || (x.attrHooks.value = { set: function (e, n, r) { return x.nodeName(e, "input") ? (e.defaultValue = n, t) : z && z.set(e, n, r) } }), Q || (z = { set: function (e, n, r) { var i = e.getAttributeNode(r); return i || e.setAttributeNode(i = e.ownerDocument.createAttribute(r)), i.value = n += "", "value" === r || n === e.getAttribute(r) ? n : t } }, x.expr.attrHandle.id = x.expr.attrHandle.name = x.expr.attrHandle.coords = function (e, n, r) { var i; return r ? t : (i = e.getAttributeNode(n)) && "" !== i.value ? i.value : null }, x.valHooks.button = { get: function (e, n) { var r = e.getAttributeNode(n); return r && r.specified ? r.value : t }, set: z.set }, x.attrHooks.contenteditable = { set: function (e, t, n) { z.set(e, "" === t ? !1 : t, n) } }, x.each(["width", "height"], function (e, n) { x.attrHooks[n] = { set: function (e, r) { return "" === r ? (e.setAttribute(n, "auto"), r) : t } } })), x.support.hrefNormalized || x.each(["href", "src"], function (e, t) { x.propHooks[t] = { get: function (e) { return e.getAttribute(t, 4) } } }), x.support.style || (x.attrHooks.style = { get: function (e) { return e.style.cssText || t }, set: function (e, t) { return e.style.cssText = t + "" } }), x.support.optSelected || (x.propHooks.selected = { get: function (e) { var t = e.parentNode; return t && (t.selectedIndex, t.parentNode && t.parentNode.selectedIndex), null } }), x.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], function () { x.propFix[this.toLowerCase()] = this }), x.support.enctype || (x.propFix.enctype = "encoding"), x.each(["radio", "checkbox"], function () { x.valHooks[this] = { set: function (e, n) { return x.isArray(n) ? e.checked = x.inArray(x(e).val(), n) >= 0 : t } }, x.support.checkOn || (x.valHooks[this].get = function (e) { return null === e.getAttribute("value") ? "on" : e.value }) }); var Z = /^(?:input|select|textarea)$/i, et = /^key/, tt = /^(?:mouse|contextmenu)|click/, nt = /^(?:focusinfocus|focusoutblur)$/, rt = /^([^.]*)(?:\.(.+)|)$/; function it() { return !0 } function ot() { return !1 } function at() { try { return a.activeElement } catch (e) { } } x.event = { global: {}, add: function (e, n, r, o, a) { var s, l, u, c, p, f, d, h, g, m, y, v = x._data(e); if (v) { r.handler && (c = r, r = c.handler, a = c.selector), r.guid || (r.guid = x.guid++), (l = v.events) || (l = v.events = {}), (f = v.handle) || (f = v.handle = function (e) { return typeof x === i || e && x.event.triggered === e.type ? t : x.event.dispatch.apply(f.elem, arguments) }, f.elem = e), n = (n || "").match(T) || [""], u = n.length; while (u--) s = rt.exec(n[u]) || [], g = y = s[1], m = (s[2] || "").split(".").sort(), g && (p = x.event.special[g] || {}, g = (a ? p.delegateType : p.bindType) || g, p = x.event.special[g] || {}, d = x.extend({ type: g, origType: y, data: o, handler: r, guid: r.guid, selector: a, needsContext: a && x.expr.match.needsContext.test(a), namespace: m.join(".") }, c), (h = l[g]) || (h = l[g] = [], h.delegateCount = 0, p.setup && p.setup.call(e, o, m, f) !== !1 || (e.addEventListener ? e.addEventListener(g, f, !1) : e.attachEvent && e.attachEvent("on" + g, f))), p.add && (p.add.call(e, d), d.handler.guid || (d.handler.guid = r.guid)), a ? h.splice(h.delegateCount++, 0, d) : h.push(d), x.event.global[g] = !0); e = null } }, remove: function (e, t, n, r, i) { var o, a, s, l, u, c, p, f, d, h, g, m = x.hasData(e) && x._data(e); if (m && (c = m.events)) { t = (t || "").match(T) || [""], u = t.length; while (u--) if (s = rt.exec(t[u]) || [], d = g = s[1], h = (s[2] || "").split(".").sort(), d) { p = x.event.special[d] || {}, d = (r ? p.delegateType : p.bindType) || d, f = c[d] || [], s = s[2] && RegExp("(^|\\.)" + h.join("\\.(?:.*\\.|)") + "(\\.|$)"), l = o = f.length; while (o--) a = f[o], !i && g !== a.origType || n && n.guid !== a.guid || s && !s.test(a.namespace) || r && r !== a.selector && ("**" !== r || !a.selector) || (f.splice(o, 1), a.selector && f.delegateCount-- , p.remove && p.remove.call(e, a)); l && !f.length && (p.teardown && p.teardown.call(e, h, m.handle) !== !1 || x.removeEvent(e, d, m.handle), delete c[d]) } else for (d in c) x.event.remove(e, d + t[u], n, r, !0); x.isEmptyObject(c) && (delete m.handle, x._removeData(e, "events")) } }, trigger: function (n, r, i, o) { var s, l, u, c, p, f, d, h = [i || a], g = v.call(n, "type") ? n.type : n, m = v.call(n, "namespace") ? n.namespace.split(".") : []; if (u = f = i = i || a, 3 !== i.nodeType && 8 !== i.nodeType && !nt.test(g + x.event.triggered) && (g.indexOf(".") >= 0 && (m = g.split("."), g = m.shift(), m.sort()), l = 0 > g.indexOf(":") && "on" + g, n = n[x.expando] ? n : new x.Event(g, "object" == typeof n && n), n.isTrigger = o ? 2 : 3, n.namespace = m.join("."), n.namespace_re = n.namespace ? RegExp("(^|\\.)" + m.join("\\.(?:.*\\.|)") + "(\\.|$)") : null, n.result = t, n.target || (n.target = i), r = null == r ? [n] : x.makeArray(r, [n]), p = x.event.special[g] || {}, o || !p.trigger || p.trigger.apply(i, r) !== !1)) { if (!o && !p.noBubble && !x.isWindow(i)) { for (c = p.delegateType || g, nt.test(c + g) || (u = u.parentNode); u; u = u.parentNode)h.push(u), f = u; f === (i.ownerDocument || a) && h.push(f.defaultView || f.parentWindow || e) } d = 0; while ((u = h[d++]) && !n.isPropagationStopped()) n.type = d > 1 ? c : p.bindType || g, s = (x._data(u, "events") || {})[n.type] && x._data(u, "handle"), s && s.apply(u, r), s = l && u[l], s && x.acceptData(u) && s.apply && s.apply(u, r) === !1 && n.preventDefault(); if (n.type = g, !o && !n.isDefaultPrevented() && (!p._default || p._default.apply(h.pop(), r) === !1) && x.acceptData(i) && l && i[g] && !x.isWindow(i)) { f = i[l], f && (i[l] = null), x.event.triggered = g; try { i[g]() } catch (y) { } x.event.triggered = t, f && (i[l] = f) } return n.result } }, dispatch: function (e) { e = x.event.fix(e); var n, r, i, o, a, s = [], l = g.call(arguments), u = (x._data(this, "events") || {})[e.type] || [], c = x.event.special[e.type] || {}; if (l[0] = e, e.delegateTarget = this, !c.preDispatch || c.preDispatch.call(this, e) !== !1) { s = x.event.handlers.call(this, e, u), n = 0; while ((o = s[n++]) && !e.isPropagationStopped()) { e.currentTarget = o.elem, a = 0; while ((i = o.handlers[a++]) && !e.isImmediatePropagationStopped()) (!e.namespace_re || e.namespace_re.test(i.namespace)) && (e.handleObj = i, e.data = i.data, r = ((x.event.special[i.origType] || {}).handle || i.handler).apply(o.elem, l), r !== t && (e.result = r) === !1 && (e.preventDefault(), e.stopPropagation())) } return c.postDispatch && c.postDispatch.call(this, e), e.result } }, handlers: function (e, n) { var r, i, o, a, s = [], l = n.delegateCount, u = e.target; if (l && u.nodeType && (!e.button || "click" !== e.type)) for (; u != this; u = u.parentNode || this)if (1 === u.nodeType && (u.disabled !== !0 || "click" !== e.type)) { for (o = [], a = 0; l > a; a++)i = n[a], r = i.selector + " ", o[r] === t && (o[r] = i.needsContext ? x(r, this).index(u) >= 0 : x.find(r, this, null, [u]).length), o[r] && o.push(i); o.length && s.push({ elem: u, handlers: o }) } return n.length > l && s.push({ elem: this, handlers: n.slice(l) }), s }, fix: function (e) { if (e[x.expando]) return e; var t, n, r, i = e.type, o = e, s = this.fixHooks[i]; s || (this.fixHooks[i] = s = tt.test(i) ? this.mouseHooks : et.test(i) ? this.keyHooks : {}), r = s.props ? this.props.concat(s.props) : this.props, e = new x.Event(o), t = r.length; while (t--) n = r[t], e[n] = o[n]; return e.target || (e.target = o.srcElement || a), 3 === e.target.nodeType && (e.target = e.target.parentNode), e.metaKey = !!e.metaKey, s.filter ? s.filter(e, o) : e }, props: "altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "), fixHooks: {}, keyHooks: { props: "char charCode key keyCode".split(" "), filter: function (e, t) { return null == e.which && (e.which = null != t.charCode ? t.charCode : t.keyCode), e } }, mouseHooks: { props: "button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "), filter: function (e, n) { var r, i, o, s = n.button, l = n.fromElement; return null == e.pageX && null != n.clientX && (i = e.target.ownerDocument || a, o = i.documentElement, r = i.body, e.pageX = n.clientX + (o && o.scrollLeft || r && r.scrollLeft || 0) - (o && o.clientLeft || r && r.clientLeft || 0), e.pageY = n.clientY + (o && o.scrollTop || r && r.scrollTop || 0) - (o && o.clientTop || r && r.clientTop || 0)), !e.relatedTarget && l && (e.relatedTarget = l === e.target ? n.toElement : l), e.which || s === t || (e.which = 1 & s ? 1 : 2 & s ? 3 : 4 & s ? 2 : 0), e } }, special: { load: { noBubble: !0 }, focus: { trigger: function () { if (this !== at() && this.focus) try { return this.focus(), !1 } catch (e) { } }, delegateType: "focusin" }, blur: { trigger: function () { return this === at() && this.blur ? (this.blur(), !1) : t }, delegateType: "focusout" }, click: { trigger: function () { return x.nodeName(this, "input") && "checkbox" === this.type && this.click ? (this.click(), !1) : t }, _default: function (e) { return x.nodeName(e.target, "a") } }, beforeunload: { postDispatch: function (e) { e.result !== t && (e.originalEvent.returnValue = e.result) } } }, simulate: function (e, t, n, r) { var i = x.extend(new x.Event, n, { type: e, isSimulated: !0, originalEvent: {} }); r ? x.event.trigger(i, null, t) : x.event.dispatch.call(t, i), i.isDefaultPrevented() && n.preventDefault() } }, x.removeEvent = a.removeEventListener ? function (e, t, n) { e.removeEventListener && e.removeEventListener(t, n, !1) } : function (e, t, n) { var r = "on" + t; e.detachEvent && (typeof e[r] === i && (e[r] = null), e.detachEvent(r, n)) }, x.Event = function (e, n) { return this instanceof x.Event ? (e && e.type ? (this.originalEvent = e, this.type = e.type, this.isDefaultPrevented = e.defaultPrevented || e.returnValue === !1 || e.getPreventDefault && e.getPreventDefault() ? it : ot) : this.type = e, n && x.extend(this, n), this.timeStamp = e && e.timeStamp || x.now(), this[x.expando] = !0, t) : new x.Event(e, n) }, x.Event.prototype = { isDefaultPrevented: ot, isPropagationStopped: ot, isImmediatePropagationStopped: ot, preventDefault: function () { var e = this.originalEvent; this.isDefaultPrevented = it, e && (e.preventDefault ? e.preventDefault() : e.returnValue = !1) }, stopPropagation: function () { var e = this.originalEvent; this.isPropagationStopped = it, e && (e.stopPropagation && e.stopPropagation(), e.cancelBubble = !0) }, stopImmediatePropagation: function () { this.isImmediatePropagationStopped = it, this.stopPropagation() } }, x.each({ mouseenter: "mouseover", mouseleave: "mouseout" }, function (e, t) { x.event.special[e] = { delegateType: t, bindType: t, handle: function (e) { var n, r = this, i = e.relatedTarget, o = e.handleObj; return (!i || i !== r && !x.contains(r, i)) && (e.type = o.origType, n = o.handler.apply(this, arguments), e.type = t), n } } }), x.support.submitBubbles || (x.event.special.submit = { setup: function () { return x.nodeName(this, "form") ? !1 : (x.event.add(this, "click._submit keypress._submit", function (e) { var n = e.target, r = x.nodeName(n, "input") || x.nodeName(n, "button") ? n.form : t; r && !x._data(r, "submitBubbles") && (x.event.add(r, "submit._submit", function (e) { e._submit_bubble = !0 }), x._data(r, "submitBubbles", !0)) }), t) }, postDispatch: function (e) { e._submit_bubble && (delete e._submit_bubble, this.parentNode && !e.isTrigger && x.event.simulate("submit", this.parentNode, e, !0)) }, teardown: function () { return x.nodeName(this, "form") ? !1 : (x.event.remove(this, "._submit"), t) } }), x.support.changeBubbles || (x.event.special.change = { setup: function () { return Z.test(this.nodeName) ? (("checkbox" === this.type || "radio" === this.type) && (x.event.add(this, "propertychange._change", function (e) { "checked" === e.originalEvent.propertyName && (this._just_changed = !0) }), x.event.add(this, "click._change", function (e) { this._just_changed && !e.isTrigger && (this._just_changed = !1), x.event.simulate("change", this, e, !0) })), !1) : (x.event.add(this, "beforeactivate._change", function (e) { var t = e.target; Z.test(t.nodeName) && !x._data(t, "changeBubbles") && (x.event.add(t, "change._change", function (e) { !this.parentNode || e.isSimulated || e.isTrigger || x.event.simulate("change", this.parentNode, e, !0) }), x._data(t, "changeBubbles", !0)) }), t) }, handle: function (e) { var n = e.target; return this !== n || e.isSimulated || e.isTrigger || "radio" !== n.type && "checkbox" !== n.type ? e.handleObj.handler.apply(this, arguments) : t }, teardown: function () { return x.event.remove(this, "._change"), !Z.test(this.nodeName) } }), x.support.focusinBubbles || x.each({ focus: "focusin", blur: "focusout" }, function (e, t) { var n = 0, r = function (e) { x.event.simulate(t, e.target, x.event.fix(e), !0) }; x.event.special[t] = { setup: function () { 0 === n++ && a.addEventListener(e, r, !0) }, teardown: function () { 0 === --n && a.removeEventListener(e, r, !0) } } }), x.fn.extend({ on: function (e, n, r, i, o) { var a, s; if ("object" == typeof e) { "string" != typeof n && (r = r || n, n = t); for (a in e) this.on(a, n, r, e[a], o); return this } if (null == r && null == i ? (i = n, r = n = t) : null == i && ("string" == typeof n ? (i = r, r = t) : (i = r, r = n, n = t)), i === !1) i = ot; else if (!i) return this; return 1 === o && (s = i, i = function (e) { return x().off(e), s.apply(this, arguments) }, i.guid = s.guid || (s.guid = x.guid++)), this.each(function () { x.event.add(this, e, i, r, n) }) }, one: function (e, t, n, r) { return this.on(e, t, n, r, 1) }, off: function (e, n, r) { var i, o; if (e && e.preventDefault && e.handleObj) return i = e.handleObj, x(e.delegateTarget).off(i.namespace ? i.origType + "." + i.namespace : i.origType, i.selector, i.handler), this; if ("object" == typeof e) { for (o in e) this.off(o, n, e[o]); return this } return (n === !1 || "function" == typeof n) && (r = n, n = t), r === !1 && (r = ot), this.each(function () { x.event.remove(this, e, r, n) }) }, trigger: function (e, t) { return this.each(function () { x.event.trigger(e, t, this) }) }, triggerHandler: function (e, n) { var r = this[0]; return r ? x.event.trigger(e, n, r, !0) : t } }); var st = /^.[^:#\[\.,]*$/, lt = /^(?:parents|prev(?:Until|All))/, ut = x.expr.match.needsContext, ct = { children: !0, contents: !0, next: !0, prev: !0 }; x.fn.extend({ find: function (e) { var t, n = [], r = this, i = r.length; if ("string" != typeof e) return this.pushStack(x(e).filter(function () { for (t = 0; i > t; t++)if (x.contains(r[t], this)) return !0 })); for (t = 0; i > t; t++)x.find(e, r[t], n); return n = this.pushStack(i > 1 ? x.unique(n) : n), n.selector = this.selector ? this.selector + " " + e : e, n }, has: function (e) { var t, n = x(e, this), r = n.length; return this.filter(function () { for (t = 0; r > t; t++)if (x.contains(this, n[t])) return !0 }) }, not: function (e) { return this.pushStack(ft(this, e || [], !0)) }, filter: function (e) { return this.pushStack(ft(this, e || [], !1)) }, is: function (e) { return !!ft(this, "string" == typeof e && ut.test(e) ? x(e) : e || [], !1).length }, closest: function (e, t) { var n, r = 0, i = this.length, o = [], a = ut.test(e) || "string" != typeof e ? x(e, t || this.context) : 0; for (; i > r; r++)for (n = this[r]; n && n !== t; n = n.parentNode)if (11 > n.nodeType && (a ? a.index(n) > -1 : 1 === n.nodeType && x.find.matchesSelector(n, e))) { n = o.push(n); break } return this.pushStack(o.length > 1 ? x.unique(o) : o) }, index: function (e) { return e ? "string" == typeof e ? x.inArray(this[0], x(e)) : x.inArray(e.jquery ? e[0] : e, this) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1 }, add: function (e, t) { var n = "string" == typeof e ? x(e, t) : x.makeArray(e && e.nodeType ? [e] : e), r = x.merge(this.get(), n); return this.pushStack(x.unique(r)) }, addBack: function (e) { return this.add(null == e ? this.prevObject : this.prevObject.filter(e)) } }); function pt(e, t) { do e = e[t]; while (e && 1 !== e.nodeType); return e } x.each({ parent: function (e) { var t = e.parentNode; return t && 11 !== t.nodeType ? t : null }, parents: function (e) { return x.dir(e, "parentNode") }, parentsUntil: function (e, t, n) { return x.dir(e, "parentNode", n) }, next: function (e) { return pt(e, "nextSibling") }, prev: function (e) { return pt(e, "previousSibling") }, nextAll: function (e) { return x.dir(e, "nextSibling") }, prevAll: function (e) { return x.dir(e, "previousSibling") }, nextUntil: function (e, t, n) { return x.dir(e, "nextSibling", n) }, prevUntil: function (e, t, n) { return x.dir(e, "previousSibling", n) }, siblings: function (e) { return x.sibling((e.parentNode || {}).firstChild, e) }, children: function (e) { return x.sibling(e.firstChild) }, contents: function (e) { return x.nodeName(e, "iframe") ? e.contentDocument || e.contentWindow.document : x.merge([], e.childNodes) } }, function (e, t) { x.fn[e] = function (n, r) { var i = x.map(this, t, n); return "Until" !== e.slice(-5) && (r = n), r && "string" == typeof r && (i = x.filter(r, i)), this.length > 1 && (ct[e] || (i = x.unique(i)), lt.test(e) && (i = i.reverse())), this.pushStack(i) } }), x.extend({ filter: function (e, t, n) { var r = t[0]; return n && (e = ":not(" + e + ")"), 1 === t.length && 1 === r.nodeType ? x.find.matchesSelector(r, e) ? [r] : [] : x.find.matches(e, x.grep(t, function (e) { return 1 === e.nodeType })) }, dir: function (e, n, r) { var i = [], o = e[n]; while (o && 9 !== o.nodeType && (r === t || 1 !== o.nodeType || !x(o).is(r))) 1 === o.nodeType && i.push(o), o = o[n]; return i }, sibling: function (e, t) { var n = []; for (; e; e = e.nextSibling)1 === e.nodeType && e !== t && n.push(e); return n } }); function ft(e, t, n) { if (x.isFunction(t)) return x.grep(e, function (e, r) { return !!t.call(e, r, e) !== n }); if (t.nodeType) return x.grep(e, function (e) { return e === t !== n }); if ("string" == typeof t) { if (st.test(t)) return x.filter(t, e, n); t = x.filter(t, e) } return x.grep(e, function (e) { return x.inArray(e, t) >= 0 !== n }) } function dt(e) { var t = ht.split("|"), n = e.createDocumentFragment(); if (n.createElement) while (t.length) n.createElement(t.pop()); return n } var ht = "abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video", gt = / jQuery\d+="(?:null|\d+)"/g, mt = RegExp("<(?:" + ht + ")[\\s/>]", "i"), yt = /^\s+/, vt = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi, bt = /<([\w:]+)/, xt = /<tbody/i, wt = /<|&#?\w+;/, Tt = /<(?:script|style|link)/i, Ct = /^(?:checkbox|radio)$/i, Nt = /checked\s*(?:[^=]|=\s*.checked.)/i, kt = /^$|\/(?:java|ecma)script/i, Et = /^true\/(.*)/, St = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g, At = { option: [1, "<select multiple='multiple'>", "</select>"], legend: [1, "<fieldset>", "</fieldset>"], area: [1, "<map>", "</map>"], param: [1, "<object>", "</object>"], thead: [1, "<table>", "</table>"], tr: [2, "<table><tbody>", "</tbody></table>"], col: [2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"], td: [3, "<table><tbody><tr>", "</tr></tbody></table>"], _default: x.support.htmlSerialize ? [0, "", ""] : [1, "X<div>", "</div>"] }, jt = dt(a), Dt = jt.appendChild(a.createElement("div")); At.optgroup = At.option, At.tbody = At.tfoot = At.colgroup = At.caption = At.thead, At.th = At.td, x.fn.extend({ text: function (e) { return x.access(this, function (e) { return e === t ? x.text(this) : this.empty().append((this[0] && this[0].ownerDocument || a).createTextNode(e)) }, null, e, arguments.length) }, append: function () { return this.domManip(arguments, function (e) { if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) { var t = Lt(this, e); t.appendChild(e) } }) }, prepend: function () { return this.domManip(arguments, function (e) { if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) { var t = Lt(this, e); t.insertBefore(e, t.firstChild) } }) }, before: function () { return this.domManip(arguments, function (e) { this.parentNode && this.parentNode.insertBefore(e, this) }) }, after: function () { return this.domManip(arguments, function (e) { this.parentNode && this.parentNode.insertBefore(e, this.nextSibling) }) }, remove: function (e, t) { var n, r = e ? x.filter(e, this) : this, i = 0; for (; null != (n = r[i]); i++)t || 1 !== n.nodeType || x.cleanData(Ft(n)), n.parentNode && (t && x.contains(n.ownerDocument, n) && _t(Ft(n, "script")), n.parentNode.removeChild(n)); return this }, empty: function () { var e, t = 0; for (; null != (e = this[t]); t++) { 1 === e.nodeType && x.cleanData(Ft(e, !1)); while (e.firstChild) e.removeChild(e.firstChild); e.options && x.nodeName(e, "select") && (e.options.length = 0) } return this }, clone: function (e, t) { return e = null == e ? !1 : e, t = null == t ? e : t, this.map(function () { return x.clone(this, e, t) }) }, html: function (e) { return x.access(this, function (e) { var n = this[0] || {}, r = 0, i = this.length; if (e === t) return 1 === n.nodeType ? n.innerHTML.replace(gt, "") : t; if (!("string" != typeof e || Tt.test(e) || !x.support.htmlSerialize && mt.test(e) || !x.support.leadingWhitespace && yt.test(e) || At[(bt.exec(e) || ["", ""])[1].toLowerCase()])) { e = e.replace(vt, "<$1></$2>"); try { for (; i > r; r++)n = this[r] || {}, 1 === n.nodeType && (x.cleanData(Ft(n, !1)), n.innerHTML = e); n = 0 } catch (o) { } } n && this.empty().append(e) }, null, e, arguments.length) }, replaceWith: function () { var e = x.map(this, function (e) { return [e.nextSibling, e.parentNode] }), t = 0; return this.domManip(arguments, function (n) { var r = e[t++], i = e[t++]; i && (r && r.parentNode !== i && (r = this.nextSibling), x(this).remove(), i.insertBefore(n, r)) }, !0), t ? this : this.remove() }, detach: function (e) { return this.remove(e, !0) }, domManip: function (e, t, n) { e = d.apply([], e); var r, i, o, a, s, l, u = 0, c = this.length, p = this, f = c - 1, h = e[0], g = x.isFunction(h); if (g || !(1 >= c || "string" != typeof h || x.support.checkClone) && Nt.test(h)) return this.each(function (r) { var i = p.eq(r); g && (e[0] = h.call(this, r, i.html())), i.domManip(e, t, n) }); if (c && (l = x.buildFragment(e, this[0].ownerDocument, !1, !n && this), r = l.firstChild, 1 === l.childNodes.length && (l = r), r)) { for (a = x.map(Ft(l, "script"), Ht), o = a.length; c > u; u++)i = l, u !== f && (i = x.clone(i, !0, !0), o && x.merge(a, Ft(i, "script"))), t.call(this[u], i, u); if (o) for (s = a[a.length - 1].ownerDocument, x.map(a, qt), u = 0; o > u; u++)i = a[u], kt.test(i.type || "") && !x._data(i, "globalEval") && x.contains(s, i) && (i.src ? x._evalUrl(i.src) : x.globalEval((i.text || i.textContent || i.innerHTML || "").replace(St, ""))); l = r = null } return this } }); function Lt(e, t) { return x.nodeName(e, "table") && x.nodeName(1 === t.nodeType ? t : t.firstChild, "tr") ? e.getElementsByTagName("tbody")[0] || e.appendChild(e.ownerDocument.createElement("tbody")) : e } function Ht(e) { return e.type = (null !== x.find.attr(e, "type")) + "/" + e.type, e } function qt(e) { var t = Et.exec(e.type); return t ? e.type = t[1] : e.removeAttribute("type"), e } function _t(e, t) { var n, r = 0; for (; null != (n = e[r]); r++)x._data(n, "globalEval", !t || x._data(t[r], "globalEval")) } function Mt(e, t) { if (1 === t.nodeType && x.hasData(e)) { var n, r, i, o = x._data(e), a = x._data(t, o), s = o.events; if (s) { delete a.handle, a.events = {}; for (n in s) for (r = 0, i = s[n].length; i > r; r++)x.event.add(t, n, s[n][r]) } a.data && (a.data = x.extend({}, a.data)) } } function Ot(e, t) { var n, r, i; if (1 === t.nodeType) { if (n = t.nodeName.toLowerCase(), !x.support.noCloneEvent && t[x.expando]) { i = x._data(t); for (r in i.events) x.removeEvent(t, r, i.handle); t.removeAttribute(x.expando) } "script" === n && t.text !== e.text ? (Ht(t).text = e.text, qt(t)) : "object" === n ? (t.parentNode && (t.outerHTML = e.outerHTML), x.support.html5Clone && e.innerHTML && !x.trim(t.innerHTML) && (t.innerHTML = e.innerHTML)) : "input" === n && Ct.test(e.type) ? (t.defaultChecked = t.checked = e.checked, t.value !== e.value && (t.value = e.value)) : "option" === n ? t.defaultSelected = t.selected = e.defaultSelected : ("input" === n || "textarea" === n) && (t.defaultValue = e.defaultValue) } } x.each({ appendTo: "append", prependTo: "prepend", insertBefore: "before", insertAfter: "after", replaceAll: "replaceWith" }, function (e, t) { x.fn[e] = function (e) { var n, r = 0, i = [], o = x(e), a = o.length - 1; for (; a >= r; r++)n = r === a ? this : this.clone(!0), x(o[r])[t](n), h.apply(i, n.get()); return this.pushStack(i) } }); function Ft(e, n) { var r, o, a = 0, s = typeof e.getElementsByTagName !== i ? e.getElementsByTagName(n || "*") : typeof e.querySelectorAll !== i ? e.querySelectorAll(n || "*") : t; if (!s) for (s = [], r = e.childNodes || e; null != (o = r[a]); a++)!n || x.nodeName(o, n) ? s.push(o) : x.merge(s, Ft(o, n)); return n === t || n && x.nodeName(e, n) ? x.merge([e], s) : s } function Bt(e) { Ct.test(e.type) && (e.defaultChecked = e.checked) } x.extend({
        clone: function (e, t, n) { var r, i, o, a, s, l = x.contains(e.ownerDocument, e); if (x.support.html5Clone || x.isXMLDoc(e) || !mt.test("<" + e.nodeName + ">") ? o = e.cloneNode(!0) : (Dt.innerHTML = e.outerHTML, Dt.removeChild(o = Dt.firstChild)), !(x.support.noCloneEvent && x.support.noCloneChecked || 1 !== e.nodeType && 11 !== e.nodeType || x.isXMLDoc(e))) for (r = Ft(o), s = Ft(e), a = 0; null != (i = s[a]); ++a)r[a] && Ot(i, r[a]); if (t) if (n) for (s = s || Ft(e), r = r || Ft(o), a = 0; null != (i = s[a]); a++)Mt(i, r[a]); else Mt(e, o); return r = Ft(o, "script"), r.length > 0 && _t(r, !l && Ft(e, "script")), r = s = i = null, o }, buildFragment: function (e, t, n, r) { var i, o, a, s, l, u, c, p = e.length, f = dt(t), d = [], h = 0; for (; p > h; h++)if (o = e[h], o || 0 === o) if ("object" === x.type(o)) x.merge(d, o.nodeType ? [o] : o); else if (wt.test(o)) { s = s || f.appendChild(t.createElement("div")), l = (bt.exec(o) || ["", ""])[1].toLowerCase(), c = At[l] || At._default, s.innerHTML = c[1] + o.replace(vt, "<$1></$2>") + c[2], i = c[0]; while (i--) s = s.lastChild; if (!x.support.leadingWhitespace && yt.test(o) && d.push(t.createTextNode(yt.exec(o)[0])), !x.support.tbody) { o = "table" !== l || xt.test(o) ? "<table>" !== c[1] || xt.test(o) ? 0 : s : s.firstChild, i = o && o.childNodes.length; while (i--) x.nodeName(u = o.childNodes[i], "tbody") && !u.childNodes.length && o.removeChild(u) } x.merge(d, s.childNodes), s.textContent = ""; while (s.firstChild) s.removeChild(s.firstChild); s = f.lastChild } else d.push(t.createTextNode(o)); s && f.removeChild(s), x.support.appendChecked || x.grep(Ft(d, "input"), Bt), h = 0; while (o = d[h++]) if ((!r || -1 === x.inArray(o, r)) && (a = x.contains(o.ownerDocument, o), s = Ft(f.appendChild(o), "script"), a && _t(s), n)) { i = 0; while (o = s[i++]) kt.test(o.type || "") && n.push(o) } return s = null, f }, cleanData: function (e, t) {
            var n, r, o, a, s = 0, l = x.expando, u = x.cache, c = x.support.deleteExpando, f = x.event.special; for (; null != (n = e[s]); s++)if ((t || x.acceptData(n)) && (o = n[l], a = o && u[o])) {
                if (a.events) for (r in a.events) f[r] ? x.event.remove(n, r) : x.removeEvent(n, r, a.handle);
                u[o] && (delete u[o], c ? delete n[l] : typeof n.removeAttribute !== i ? n.removeAttribute(l) : n[l] = null, p.push(o))
            }
        }, _evalUrl: function (e) { return x.ajax({ url: e, type: "GET", dataType: "script", async: !1, global: !1, "throws": !0 }) }
    }), x.fn.extend({ wrapAll: function (e) { if (x.isFunction(e)) return this.each(function (t) { x(this).wrapAll(e.call(this, t)) }); if (this[0]) { var t = x(e, this[0].ownerDocument).eq(0).clone(!0); this[0].parentNode && t.insertBefore(this[0]), t.map(function () { var e = this; while (e.firstChild && 1 === e.firstChild.nodeType) e = e.firstChild; return e }).append(this) } return this }, wrapInner: function (e) { return x.isFunction(e) ? this.each(function (t) { x(this).wrapInner(e.call(this, t)) }) : this.each(function () { var t = x(this), n = t.contents(); n.length ? n.wrapAll(e) : t.append(e) }) }, wrap: function (e) { var t = x.isFunction(e); return this.each(function (n) { x(this).wrapAll(t ? e.call(this, n) : e) }) }, unwrap: function () { return this.parent().each(function () { x.nodeName(this, "body") || x(this).replaceWith(this.childNodes) }).end() } }); var Pt, Rt, Wt, $t = /alpha\([^)]*\)/i, It = /opacity\s*=\s*([^)]*)/, zt = /^(top|right|bottom|left)$/, Xt = /^(none|table(?!-c[ea]).+)/, Ut = /^margin/, Vt = RegExp("^(" + w + ")(.*)$", "i"), Yt = RegExp("^(" + w + ")(?!px)[a-z%]+$", "i"), Jt = RegExp("^([+-])=(" + w + ")", "i"), Gt = { BODY: "block" }, Qt = { position: "absolute", visibility: "hidden", display: "block" }, Kt = { letterSpacing: 0, fontWeight: 400 }, Zt = ["Top", "Right", "Bottom", "Left"], en = ["Webkit", "O", "Moz", "ms"]; function tn(e, t) { if (t in e) return t; var n = t.charAt(0).toUpperCase() + t.slice(1), r = t, i = en.length; while (i--) if (t = en[i] + n, t in e) return t; return r } function nn(e, t) { return e = t || e, "none" === x.css(e, "display") || !x.contains(e.ownerDocument, e) } function rn(e, t) { var n, r, i, o = [], a = 0, s = e.length; for (; s > a; a++)r = e[a], r.style && (o[a] = x._data(r, "olddisplay"), n = r.style.display, t ? (o[a] || "none" !== n || (r.style.display = ""), "" === r.style.display && nn(r) && (o[a] = x._data(r, "olddisplay", ln(r.nodeName)))) : o[a] || (i = nn(r), (n && "none" !== n || !i) && x._data(r, "olddisplay", i ? n : x.css(r, "display")))); for (a = 0; s > a; a++)r = e[a], r.style && (t && "none" !== r.style.display && "" !== r.style.display || (r.style.display = t ? o[a] || "" : "none")); return e } x.fn.extend({ css: function (e, n) { return x.access(this, function (e, n, r) { var i, o, a = {}, s = 0; if (x.isArray(n)) { for (o = Rt(e), i = n.length; i > s; s++)a[n[s]] = x.css(e, n[s], !1, o); return a } return r !== t ? x.style(e, n, r) : x.css(e, n) }, e, n, arguments.length > 1) }, show: function () { return rn(this, !0) }, hide: function () { return rn(this) }, toggle: function (e) { return "boolean" == typeof e ? e ? this.show() : this.hide() : this.each(function () { nn(this) ? x(this).show() : x(this).hide() }) } }), x.extend({ cssHooks: { opacity: { get: function (e, t) { if (t) { var n = Wt(e, "opacity"); return "" === n ? "1" : n } } } }, cssNumber: { columnCount: !0, fillOpacity: !0, fontWeight: !0, lineHeight: !0, opacity: !0, order: !0, orphans: !0, widows: !0, zIndex: !0, zoom: !0 }, cssProps: { "float": x.support.cssFloat ? "cssFloat" : "styleFloat" }, style: function (e, n, r, i) { if (e && 3 !== e.nodeType && 8 !== e.nodeType && e.style) { var o, a, s, l = x.camelCase(n), u = e.style; if (n = x.cssProps[l] || (x.cssProps[l] = tn(u, l)), s = x.cssHooks[n] || x.cssHooks[l], r === t) return s && "get" in s && (o = s.get(e, !1, i)) !== t ? o : u[n]; if (a = typeof r, "string" === a && (o = Jt.exec(r)) && (r = (o[1] + 1) * o[2] + parseFloat(x.css(e, n)), a = "number"), !(null == r || "number" === a && isNaN(r) || ("number" !== a || x.cssNumber[l] || (r += "px"), x.support.clearCloneStyle || "" !== r || 0 !== n.indexOf("background") || (u[n] = "inherit"), s && "set" in s && (r = s.set(e, r, i)) === t))) try { u[n] = r } catch (c) { } } }, css: function (e, n, r, i) { var o, a, s, l = x.camelCase(n); return n = x.cssProps[l] || (x.cssProps[l] = tn(e.style, l)), s = x.cssHooks[n] || x.cssHooks[l], s && "get" in s && (a = s.get(e, !0, r)), a === t && (a = Wt(e, n, i)), "normal" === a && n in Kt && (a = Kt[n]), "" === r || r ? (o = parseFloat(a), r === !0 || x.isNumeric(o) ? o || 0 : a) : a } }), e.getComputedStyle ? (Rt = function (t) { return e.getComputedStyle(t, null) }, Wt = function (e, n, r) { var i, o, a, s = r || Rt(e), l = s ? s.getPropertyValue(n) || s[n] : t, u = e.style; return s && ("" !== l || x.contains(e.ownerDocument, e) || (l = x.style(e, n)), Yt.test(l) && Ut.test(n) && (i = u.width, o = u.minWidth, a = u.maxWidth, u.minWidth = u.maxWidth = u.width = l, l = s.width, u.width = i, u.minWidth = o, u.maxWidth = a)), l }) : a.documentElement.currentStyle && (Rt = function (e) { return e.currentStyle }, Wt = function (e, n, r) { var i, o, a, s = r || Rt(e), l = s ? s[n] : t, u = e.style; return null == l && u && u[n] && (l = u[n]), Yt.test(l) && !zt.test(n) && (i = u.left, o = e.runtimeStyle, a = o && o.left, a && (o.left = e.currentStyle.left), u.left = "fontSize" === n ? "1em" : l, l = u.pixelLeft + "px", u.left = i, a && (o.left = a)), "" === l ? "auto" : l }); function on(e, t, n) { var r = Vt.exec(t); return r ? Math.max(0, r[1] - (n || 0)) + (r[2] || "px") : t } function an(e, t, n, r, i) { var o = n === (r ? "border" : "content") ? 4 : "width" === t ? 1 : 0, a = 0; for (; 4 > o; o += 2)"margin" === n && (a += x.css(e, n + Zt[o], !0, i)), r ? ("content" === n && (a -= x.css(e, "padding" + Zt[o], !0, i)), "margin" !== n && (a -= x.css(e, "border" + Zt[o] + "Width", !0, i))) : (a += x.css(e, "padding" + Zt[o], !0, i), "padding" !== n && (a += x.css(e, "border" + Zt[o] + "Width", !0, i))); return a } function sn(e, t, n) { var r = !0, i = "width" === t ? e.offsetWidth : e.offsetHeight, o = Rt(e), a = x.support.boxSizing && "border-box" === x.css(e, "boxSizing", !1, o); if (0 >= i || null == i) { if (i = Wt(e, t, o), (0 > i || null == i) && (i = e.style[t]), Yt.test(i)) return i; r = a && (x.support.boxSizingReliable || i === e.style[t]), i = parseFloat(i) || 0 } return i + an(e, t, n || (a ? "border" : "content"), r, o) + "px" } function ln(e) { var t = a, n = Gt[e]; return n || (n = un(e, t), "none" !== n && n || (Pt = (Pt || x("<iframe frameborder='0' width='0' height='0'/>").css("cssText", "display:block !important")).appendTo(t.documentElement), t = (Pt[0].contentWindow || Pt[0].contentDocument).document, t.write("<!doctype html><html><body>"), t.close(), n = un(e, t), Pt.detach()), Gt[e] = n), n } function un(e, t) { var n = x(t.createElement(e)).appendTo(t.body), r = x.css(n[0], "display"); return n.remove(), r } x.each(["height", "width"], function (e, n) { x.cssHooks[n] = { get: function (e, r, i) { return r ? 0 === e.offsetWidth && Xt.test(x.css(e, "display")) ? x.swap(e, Qt, function () { return sn(e, n, i) }) : sn(e, n, i) : t }, set: function (e, t, r) { var i = r && Rt(e); return on(e, t, r ? an(e, n, r, x.support.boxSizing && "border-box" === x.css(e, "boxSizing", !1, i), i) : 0) } } }), x.support.opacity || (x.cssHooks.opacity = { get: function (e, t) { return It.test((t && e.currentStyle ? e.currentStyle.filter : e.style.filter) || "") ? .01 * parseFloat(RegExp.$1) + "" : t ? "1" : "" }, set: function (e, t) { var n = e.style, r = e.currentStyle, i = x.isNumeric(t) ? "alpha(opacity=" + 100 * t + ")" : "", o = r && r.filter || n.filter || ""; n.zoom = 1, (t >= 1 || "" === t) && "" === x.trim(o.replace($t, "")) && n.removeAttribute && (n.removeAttribute("filter"), "" === t || r && !r.filter) || (n.filter = $t.test(o) ? o.replace($t, i) : o + " " + i) } }), x(function () { x.support.reliableMarginRight || (x.cssHooks.marginRight = { get: function (e, n) { return n ? x.swap(e, { display: "inline-block" }, Wt, [e, "marginRight"]) : t } }), !x.support.pixelPosition && x.fn.position && x.each(["top", "left"], function (e, n) { x.cssHooks[n] = { get: function (e, r) { return r ? (r = Wt(e, n), Yt.test(r) ? x(e).position()[n] + "px" : r) : t } } }) }), x.expr && x.expr.filters && (x.expr.filters.hidden = function (e) { return 0 >= e.offsetWidth && 0 >= e.offsetHeight || !x.support.reliableHiddenOffsets && "none" === (e.style && e.style.display || x.css(e, "display")) }, x.expr.filters.visible = function (e) { return !x.expr.filters.hidden(e) }), x.each({ margin: "", padding: "", border: "Width" }, function (e, t) { x.cssHooks[e + t] = { expand: function (n) { var r = 0, i = {}, o = "string" == typeof n ? n.split(" ") : [n]; for (; 4 > r; r++)i[e + Zt[r] + t] = o[r] || o[r - 2] || o[0]; return i } }, Ut.test(e) || (x.cssHooks[e + t].set = on) }); var cn = /%20/g, pn = /\[\]$/, fn = /\r?\n/g, dn = /^(?:submit|button|image|reset|file)$/i, hn = /^(?:input|select|textarea|keygen)/i; x.fn.extend({ serialize: function () { return x.param(this.serializeArray()) }, serializeArray: function () { return this.map(function () { var e = x.prop(this, "elements"); return e ? x.makeArray(e) : this }).filter(function () { var e = this.type; return this.name && !x(this).is(":disabled") && hn.test(this.nodeName) && !dn.test(e) && (this.checked || !Ct.test(e)) }).map(function (e, t) { var n = x(this).val(); return null == n ? null : x.isArray(n) ? x.map(n, function (e) { return { name: t.name, value: e.replace(fn, "\r\n") } }) : { name: t.name, value: n.replace(fn, "\r\n") } }).get() } }), x.param = function (e, n) { var r, i = [], o = function (e, t) { t = x.isFunction(t) ? t() : null == t ? "" : t, i[i.length] = encodeURIComponent(e) + "=" + encodeURIComponent(t) }; if (n === t && (n = x.ajaxSettings && x.ajaxSettings.traditional), x.isArray(e) || e.jquery && !x.isPlainObject(e)) x.each(e, function () { o(this.name, this.value) }); else for (r in e) gn(r, e[r], n, o); return i.join("&").replace(cn, "+") }; function gn(e, t, n, r) { var i; if (x.isArray(t)) x.each(t, function (t, i) { n || pn.test(e) ? r(e, i) : gn(e + "[" + ("object" == typeof i ? t : "") + "]", i, n, r) }); else if (n || "object" !== x.type(t)) r(e, t); else for (i in t) gn(e + "[" + i + "]", t[i], n, r) } x.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "), function (e, t) { x.fn[t] = function (e, n) { return arguments.length > 0 ? this.on(t, null, e, n) : this.trigger(t) } }), x.fn.extend({ hover: function (e, t) { return this.mouseenter(e).mouseleave(t || e) }, bind: function (e, t, n) { return this.on(e, null, t, n) }, unbind: function (e, t) { return this.off(e, null, t) }, delegate: function (e, t, n, r) { return this.on(t, e, n, r) }, undelegate: function (e, t, n) { return 1 === arguments.length ? this.off(e, "**") : this.off(t, e || "**", n) } }); var mn, yn, vn = x.now(), bn = /\?/, xn = /#.*$/, wn = /([?&])_=[^&]*/, Tn = /^(.*?):[ \t]*([^\r\n]*)\r?$/gm, Cn = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/, Nn = /^(?:GET|HEAD)$/, kn = /^\/\//, En = /^([\w.+-]+:)(?:\/\/([^\/?#:]*)(?::(\d+)|)|)/, Sn = x.fn.load, An = {}, jn = {}, Dn = "*/".concat("*"); try { yn = o.href } catch (Ln) { yn = a.createElement("a"), yn.href = "", yn = yn.href } mn = En.exec(yn.toLowerCase()) || []; function Hn(e) { return function (t, n) { "string" != typeof t && (n = t, t = "*"); var r, i = 0, o = t.toLowerCase().match(T) || []; if (x.isFunction(n)) while (r = o[i++]) "+" === r[0] ? (r = r.slice(1) || "*", (e[r] = e[r] || []).unshift(n)) : (e[r] = e[r] || []).push(n) } } function qn(e, n, r, i) { var o = {}, a = e === jn; function s(l) { var u; return o[l] = !0, x.each(e[l] || [], function (e, l) { var c = l(n, r, i); return "string" != typeof c || a || o[c] ? a ? !(u = c) : t : (n.dataTypes.unshift(c), s(c), !1) }), u } return s(n.dataTypes[0]) || !o["*"] && s("*") } function _n(e, n) { var r, i, o = x.ajaxSettings.flatOptions || {}; for (i in n) n[i] !== t && ((o[i] ? e : r || (r = {}))[i] = n[i]); return r && x.extend(!0, e, r), e } x.fn.load = function (e, n, r) { if ("string" != typeof e && Sn) return Sn.apply(this, arguments); var i, o, a, s = this, l = e.indexOf(" "); return l >= 0 && (i = e.slice(l, e.length), e = e.slice(0, l)), x.isFunction(n) ? (r = n, n = t) : n && "object" == typeof n && (a = "POST"), s.length > 0 && x.ajax({ url: e, type: a, dataType: "html", data: n }).done(function (e) { o = arguments, s.html(i ? x("<div>").append(x.parseHTML(e)).find(i) : e) }).complete(r && function (e, t) { s.each(r, o || [e.responseText, t, e]) }), this }, x.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], function (e, t) { x.fn[t] = function (e) { return this.on(t, e) } }), x.extend({ active: 0, lastModified: {}, etag: {}, ajaxSettings: { url: yn, type: "GET", isLocal: Cn.test(mn[1]), global: !0, processData: !0, async: !0, contentType: "application/x-www-form-urlencoded; charset=UTF-8", accepts: { "*": Dn, text: "text/plain", html: "text/html", xml: "application/xml, text/xml", json: "application/json, text/javascript" }, contents: { xml: /xml/, html: /html/, json: /json/ }, responseFields: { xml: "responseXML", text: "responseText", json: "responseJSON" }, converters: { "* text": String, "text html": !0, "text json": x.parseJSON, "text xml": x.parseXML }, flatOptions: { url: !0, context: !0 } }, ajaxSetup: function (e, t) { return t ? _n(_n(e, x.ajaxSettings), t) : _n(x.ajaxSettings, e) }, ajaxPrefilter: Hn(An), ajaxTransport: Hn(jn), ajax: function (e, n) { "object" == typeof e && (n = e, e = t), n = n || {}; var r, i, o, a, s, l, u, c, p = x.ajaxSetup({}, n), f = p.context || p, d = p.context && (f.nodeType || f.jquery) ? x(f) : x.event, h = x.Deferred(), g = x.Callbacks("once memory"), m = p.statusCode || {}, y = {}, v = {}, b = 0, w = "canceled", C = { readyState: 0, getResponseHeader: function (e) { var t; if (2 === b) { if (!c) { c = {}; while (t = Tn.exec(a)) c[t[1].toLowerCase()] = t[2] } t = c[e.toLowerCase()] } return null == t ? null : t }, getAllResponseHeaders: function () { return 2 === b ? a : null }, setRequestHeader: function (e, t) { var n = e.toLowerCase(); return b || (e = v[n] = v[n] || e, y[e] = t), this }, overrideMimeType: function (e) { return b || (p.mimeType = e), this }, statusCode: function (e) { var t; if (e) if (2 > b) for (t in e) m[t] = [m[t], e[t]]; else C.always(e[C.status]); return this }, abort: function (e) { var t = e || w; return u && u.abort(t), k(0, t), this } }; if (h.promise(C).complete = g.add, C.success = C.done, C.error = C.fail, p.url = ((e || p.url || yn) + "").replace(xn, "").replace(kn, mn[1] + "//"), p.type = n.method || n.type || p.method || p.type, p.dataTypes = x.trim(p.dataType || "*").toLowerCase().match(T) || [""], null == p.crossDomain && (r = En.exec(p.url.toLowerCase()), p.crossDomain = !(!r || r[1] === mn[1] && r[2] === mn[2] && (r[3] || ("http:" === r[1] ? "80" : "443")) === (mn[3] || ("http:" === mn[1] ? "80" : "443")))), p.data && p.processData && "string" != typeof p.data && (p.data = x.param(p.data, p.traditional)), qn(An, p, n, C), 2 === b) return C; l = p.global, l && 0 === x.active++ && x.event.trigger("ajaxStart"), p.type = p.type.toUpperCase(), p.hasContent = !Nn.test(p.type), o = p.url, p.hasContent || (p.data && (o = p.url += (bn.test(o) ? "&" : "?") + p.data, delete p.data), p.cache === !1 && (p.url = wn.test(o) ? o.replace(wn, "$1_=" + vn++) : o + (bn.test(o) ? "&" : "?") + "_=" + vn++)), p.ifModified && (x.lastModified[o] && C.setRequestHeader("If-Modified-Since", x.lastModified[o]), x.etag[o] && C.setRequestHeader("If-None-Match", x.etag[o])), (p.data && p.hasContent && p.contentType !== !1 || n.contentType) && C.setRequestHeader("Content-Type", p.contentType), C.setRequestHeader("Accept", p.dataTypes[0] && p.accepts[p.dataTypes[0]] ? p.accepts[p.dataTypes[0]] + ("*" !== p.dataTypes[0] ? ", " + Dn + "; q=0.01" : "") : p.accepts["*"]); for (i in p.headers) C.setRequestHeader(i, p.headers[i]); if (p.beforeSend && (p.beforeSend.call(f, C, p) === !1 || 2 === b)) return C.abort(); w = "abort"; for (i in { success: 1, error: 1, complete: 1 }) C[i](p[i]); if (u = qn(jn, p, n, C)) { C.readyState = 1, l && d.trigger("ajaxSend", [C, p]), p.async && p.timeout > 0 && (s = setTimeout(function () { C.abort("timeout") }, p.timeout)); try { b = 1, u.send(y, k) } catch (N) { if (!(2 > b)) throw N; k(-1, N) } } else k(-1, "No Transport"); function k(e, n, r, i) { var c, y, v, w, T, N = n; 2 !== b && (b = 2, s && clearTimeout(s), u = t, a = i || "", C.readyState = e > 0 ? 4 : 0, c = e >= 200 && 300 > e || 304 === e, r && (w = Mn(p, C, r)), w = On(p, w, C, c), c ? (p.ifModified && (T = C.getResponseHeader("Last-Modified"), T && (x.lastModified[o] = T), T = C.getResponseHeader("etag"), T && (x.etag[o] = T)), 204 === e || "HEAD" === p.type ? N = "nocontent" : 304 === e ? N = "notmodified" : (N = w.state, y = w.data, v = w.error, c = !v)) : (v = N, (e || !N) && (N = "error", 0 > e && (e = 0))), C.status = e, C.statusText = (n || N) + "", c ? h.resolveWith(f, [y, N, C]) : h.rejectWith(f, [C, N, v]), C.statusCode(m), m = t, l && d.trigger(c ? "ajaxSuccess" : "ajaxError", [C, p, c ? y : v]), g.fireWith(f, [C, N]), l && (d.trigger("ajaxComplete", [C, p]), --x.active || x.event.trigger("ajaxStop"))) } return C }, getJSON: function (e, t, n) { return x.get(e, t, n, "json") }, getScript: function (e, n) { return x.get(e, t, n, "script") } }), x.each(["get", "post"], function (e, n) { x[n] = function (e, r, i, o) { return x.isFunction(r) && (o = o || i, i = r, r = t), x.ajax({ url: e, type: n, dataType: o, data: r, success: i }) } }); function Mn(e, n, r) { var i, o, a, s, l = e.contents, u = e.dataTypes; while ("*" === u[0]) u.shift(), o === t && (o = e.mimeType || n.getResponseHeader("Content-Type")); if (o) for (s in l) if (l[s] && l[s].test(o)) { u.unshift(s); break } if (u[0] in r) a = u[0]; else { for (s in r) { if (!u[0] || e.converters[s + " " + u[0]]) { a = s; break } i || (i = s) } a = a || i } return a ? (a !== u[0] && u.unshift(a), r[a]) : t } function On(e, t, n, r) { var i, o, a, s, l, u = {}, c = e.dataTypes.slice(); if (c[1]) for (a in e.converters) u[a.toLowerCase()] = e.converters[a]; o = c.shift(); while (o) if (e.responseFields[o] && (n[e.responseFields[o]] = t), !l && r && e.dataFilter && (t = e.dataFilter(t, e.dataType)), l = o, o = c.shift()) if ("*" === o) o = l; else if ("*" !== l && l !== o) { if (a = u[l + " " + o] || u["* " + o], !a) for (i in u) if (s = i.split(" "), s[1] === o && (a = u[l + " " + s[0]] || u["* " + s[0]])) { a === !0 ? a = u[i] : u[i] !== !0 && (o = s[0], c.unshift(s[1])); break } if (a !== !0) if (a && e["throws"]) t = a(t); else try { t = a(t) } catch (p) { return { state: "parsererror", error: a ? p : "No conversion from " + l + " to " + o } } } return { state: "success", data: t } } x.ajaxSetup({ accepts: { script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript" }, contents: { script: /(?:java|ecma)script/ }, converters: { "text script": function (e) { return x.globalEval(e), e } } }), x.ajaxPrefilter("script", function (e) { e.cache === t && (e.cache = !1), e.crossDomain && (e.type = "GET", e.global = !1) }), x.ajaxTransport("script", function (e) { if (e.crossDomain) { var n, r = a.head || x("head")[0] || a.documentElement; return { send: function (t, i) { n = a.createElement("script"), n.async = !0, e.scriptCharset && (n.charset = e.scriptCharset), n.src = e.url, n.onload = n.onreadystatechange = function (e, t) { (t || !n.readyState || /loaded|complete/.test(n.readyState)) && (n.onload = n.onreadystatechange = null, n.parentNode && n.parentNode.removeChild(n), n = null, t || i(200, "success")) }, r.insertBefore(n, r.firstChild) }, abort: function () { n && n.onload(t, !0) } } } }); var Fn = [], Bn = /(=)\?(?=&|$)|\?\?/; x.ajaxSetup({ jsonp: "callback", jsonpCallback: function () { var e = Fn.pop() || x.expando + "_" + vn++; return this[e] = !0, e } }), x.ajaxPrefilter("json jsonp", function (n, r, i) { var o, a, s, l = n.jsonp !== !1 && (Bn.test(n.url) ? "url" : "string" == typeof n.data && !(n.contentType || "").indexOf("application/x-www-form-urlencoded") && Bn.test(n.data) && "data"); return l || "jsonp" === n.dataTypes[0] ? (o = n.jsonpCallback = x.isFunction(n.jsonpCallback) ? n.jsonpCallback() : n.jsonpCallback, l ? n[l] = n[l].replace(Bn, "$1" + o) : n.jsonp !== !1 && (n.url += (bn.test(n.url) ? "&" : "?") + n.jsonp + "=" + o), n.converters["script json"] = function () { return s || x.error(o + " was not called"), s[0] }, n.dataTypes[0] = "json", a = e[o], e[o] = function () { s = arguments }, i.always(function () { e[o] = a, n[o] && (n.jsonpCallback = r.jsonpCallback, Fn.push(o)), s && x.isFunction(a) && a(s[0]), s = a = t }), "script") : t }); var Pn, Rn, Wn = 0, $n = e.ActiveXObject && function () { var e; for (e in Pn) Pn[e](t, !0) }; function In() { try { return new e.XMLHttpRequest } catch (t) { } } function zn() { try { return new e.ActiveXObject("Microsoft.XMLHTTP") } catch (t) { } } x.ajaxSettings.xhr = e.ActiveXObject ? function () { return !this.isLocal && In() || zn() } : In, Rn = x.ajaxSettings.xhr(), x.support.cors = !!Rn && "withCredentials" in Rn, Rn = x.support.ajax = !!Rn, Rn && x.ajaxTransport(function (n) { if (!n.crossDomain || x.support.cors) { var r; return { send: function (i, o) { var a, s, l = n.xhr(); if (n.username ? l.open(n.type, n.url, n.async, n.username, n.password) : l.open(n.type, n.url, n.async), n.xhrFields) for (s in n.xhrFields) l[s] = n.xhrFields[s]; n.mimeType && l.overrideMimeType && l.overrideMimeType(n.mimeType), n.crossDomain || i["X-Requested-With"] || (i["X-Requested-With"] = "XMLHttpRequest"); try { for (s in i) l.setRequestHeader(s, i[s]) } catch (u) { } l.send(n.hasContent && n.data || null), r = function (e, i) { var s, u, c, p; try { if (r && (i || 4 === l.readyState)) if (r = t, a && (l.onreadystatechange = x.noop, $n && delete Pn[a]), i) 4 !== l.readyState && l.abort(); else { p = {}, s = l.status, u = l.getAllResponseHeaders(), "string" == typeof l.responseText && (p.text = l.responseText); try { c = l.statusText } catch (f) { c = "" } s || !n.isLocal || n.crossDomain ? 1223 === s && (s = 204) : s = p.text ? 200 : 404 } } catch (d) { i || o(-1, d) } p && o(s, c, p, u) }, n.async ? 4 === l.readyState ? setTimeout(r) : (a = ++Wn, $n && (Pn || (Pn = {}, x(e).unload($n)), Pn[a] = r), l.onreadystatechange = r) : r() }, abort: function () { r && r(t, !0) } } } }); var Xn, Un, Vn = /^(?:toggle|show|hide)$/, Yn = RegExp("^(?:([+-])=|)(" + w + ")([a-z%]*)$", "i"), Jn = /queueHooks$/, Gn = [nr], Qn = { "*": [function (e, t) { var n = this.createTween(e, t), r = n.cur(), i = Yn.exec(t), o = i && i[3] || (x.cssNumber[e] ? "" : "px"), a = (x.cssNumber[e] || "px" !== o && +r) && Yn.exec(x.css(n.elem, e)), s = 1, l = 20; if (a && a[3] !== o) { o = o || a[3], i = i || [], a = +r || 1; do s = s || ".5", a /= s, x.style(n.elem, e, a + o); while (s !== (s = n.cur() / r) && 1 !== s && --l) } return i && (a = n.start = +a || +r || 0, n.unit = o, n.end = i[1] ? a + (i[1] + 1) * i[2] : +i[2]), n }] }; function Kn() { return setTimeout(function () { Xn = t }), Xn = x.now() } function Zn(e, t, n) { var r, i = (Qn[t] || []).concat(Qn["*"]), o = 0, a = i.length; for (; a > o; o++)if (r = i[o].call(n, t, e)) return r } function er(e, t, n) { var r, i, o = 0, a = Gn.length, s = x.Deferred().always(function () { delete l.elem }), l = function () { if (i) return !1; var t = Xn || Kn(), n = Math.max(0, u.startTime + u.duration - t), r = n / u.duration || 0, o = 1 - r, a = 0, l = u.tweens.length; for (; l > a; a++)u.tweens[a].run(o); return s.notifyWith(e, [u, o, n]), 1 > o && l ? n : (s.resolveWith(e, [u]), !1) }, u = s.promise({ elem: e, props: x.extend({}, t), opts: x.extend(!0, { specialEasing: {} }, n), originalProperties: t, originalOptions: n, startTime: Xn || Kn(), duration: n.duration, tweens: [], createTween: function (t, n) { var r = x.Tween(e, u.opts, t, n, u.opts.specialEasing[t] || u.opts.easing); return u.tweens.push(r), r }, stop: function (t) { var n = 0, r = t ? u.tweens.length : 0; if (i) return this; for (i = !0; r > n; n++)u.tweens[n].run(1); return t ? s.resolveWith(e, [u, t]) : s.rejectWith(e, [u, t]), this } }), c = u.props; for (tr(c, u.opts.specialEasing); a > o; o++)if (r = Gn[o].call(u, e, c, u.opts)) return r; return x.map(c, Zn, u), x.isFunction(u.opts.start) && u.opts.start.call(e, u), x.fx.timer(x.extend(l, { elem: e, anim: u, queue: u.opts.queue })), u.progress(u.opts.progress).done(u.opts.done, u.opts.complete).fail(u.opts.fail).always(u.opts.always) } function tr(e, t) { var n, r, i, o, a; for (n in e) if (r = x.camelCase(n), i = t[r], o = e[n], x.isArray(o) && (i = o[1], o = e[n] = o[0]), n !== r && (e[r] = o, delete e[n]), a = x.cssHooks[r], a && "expand" in a) { o = a.expand(o), delete e[r]; for (n in o) n in e || (e[n] = o[n], t[n] = i) } else t[r] = i } x.Animation = x.extend(er, { tweener: function (e, t) { x.isFunction(e) ? (t = e, e = ["*"]) : e = e.split(" "); var n, r = 0, i = e.length; for (; i > r; r++)n = e[r], Qn[n] = Qn[n] || [], Qn[n].unshift(t) }, prefilter: function (e, t) { t ? Gn.unshift(e) : Gn.push(e) } }); function nr(e, t, n) { var r, i, o, a, s, l, u = this, c = {}, p = e.style, f = e.nodeType && nn(e), d = x._data(e, "fxshow"); n.queue || (s = x._queueHooks(e, "fx"), null == s.unqueued && (s.unqueued = 0, l = s.empty.fire, s.empty.fire = function () { s.unqueued || l() }), s.unqueued++ , u.always(function () { u.always(function () { s.unqueued-- , x.queue(e, "fx").length || s.empty.fire() }) })), 1 === e.nodeType && ("height" in t || "width" in t) && (n.overflow = [p.overflow, p.overflowX, p.overflowY], "inline" === x.css(e, "display") && "none" === x.css(e, "float") && (x.support.inlineBlockNeedsLayout && "inline" !== ln(e.nodeName) ? p.zoom = 1 : p.display = "inline-block")), n.overflow && (p.overflow = "hidden", x.support.shrinkWrapBlocks || u.always(function () { p.overflow = n.overflow[0], p.overflowX = n.overflow[1], p.overflowY = n.overflow[2] })); for (r in t) if (i = t[r], Vn.exec(i)) { if (delete t[r], o = o || "toggle" === i, i === (f ? "hide" : "show")) continue; c[r] = d && d[r] || x.style(e, r) } if (!x.isEmptyObject(c)) { d ? "hidden" in d && (f = d.hidden) : d = x._data(e, "fxshow", {}), o && (d.hidden = !f), f ? x(e).show() : u.done(function () { x(e).hide() }), u.done(function () { var t; x._removeData(e, "fxshow"); for (t in c) x.style(e, t, c[t]) }); for (r in c) a = Zn(f ? d[r] : 0, r, u), r in d || (d[r] = a.start, f && (a.end = a.start, a.start = "width" === r || "height" === r ? 1 : 0)) } } function rr(e, t, n, r, i) { return new rr.prototype.init(e, t, n, r, i) } x.Tween = rr, rr.prototype = { constructor: rr, init: function (e, t, n, r, i, o) { this.elem = e, this.prop = n, this.easing = i || "swing", this.options = t, this.start = this.now = this.cur(), this.end = r, this.unit = o || (x.cssNumber[n] ? "" : "px") }, cur: function () { var e = rr.propHooks[this.prop]; return e && e.get ? e.get(this) : rr.propHooks._default.get(this) }, run: function (e) { var t, n = rr.propHooks[this.prop]; return this.pos = t = this.options.duration ? x.easing[this.easing](e, this.options.duration * e, 0, 1, this.options.duration) : e, this.now = (this.end - this.start) * t + this.start, this.options.step && this.options.step.call(this.elem, this.now, this), n && n.set ? n.set(this) : rr.propHooks._default.set(this), this } }, rr.prototype.init.prototype = rr.prototype, rr.propHooks = { _default: { get: function (e) { var t; return null == e.elem[e.prop] || e.elem.style && null != e.elem.style[e.prop] ? (t = x.css(e.elem, e.prop, ""), t && "auto" !== t ? t : 0) : e.elem[e.prop] }, set: function (e) { x.fx.step[e.prop] ? x.fx.step[e.prop](e) : e.elem.style && (null != e.elem.style[x.cssProps[e.prop]] || x.cssHooks[e.prop]) ? x.style(e.elem, e.prop, e.now + e.unit) : e.elem[e.prop] = e.now } } }, rr.propHooks.scrollTop = rr.propHooks.scrollLeft = { set: function (e) { e.elem.nodeType && e.elem.parentNode && (e.elem[e.prop] = e.now) } }, x.each(["toggle", "show", "hide"], function (e, t) { var n = x.fn[t]; x.fn[t] = function (e, r, i) { return null == e || "boolean" == typeof e ? n.apply(this, arguments) : this.animate(ir(t, !0), e, r, i) } }), x.fn.extend({ fadeTo: function (e, t, n, r) { return this.filter(nn).css("opacity", 0).show().end().animate({ opacity: t }, e, n, r) }, animate: function (e, t, n, r) { var i = x.isEmptyObject(e), o = x.speed(t, n, r), a = function () { var t = er(this, x.extend({}, e), o); (i || x._data(this, "finish")) && t.stop(!0) }; return a.finish = a, i || o.queue === !1 ? this.each(a) : this.queue(o.queue, a) }, stop: function (e, n, r) { var i = function (e) { var t = e.stop; delete e.stop, t(r) }; return "string" != typeof e && (r = n, n = e, e = t), n && e !== !1 && this.queue(e || "fx", []), this.each(function () { var t = !0, n = null != e && e + "queueHooks", o = x.timers, a = x._data(this); if (n) a[n] && a[n].stop && i(a[n]); else for (n in a) a[n] && a[n].stop && Jn.test(n) && i(a[n]); for (n = o.length; n--;)o[n].elem !== this || null != e && o[n].queue !== e || (o[n].anim.stop(r), t = !1, o.splice(n, 1)); (t || !r) && x.dequeue(this, e) }) }, finish: function (e) { return e !== !1 && (e = e || "fx"), this.each(function () { var t, n = x._data(this), r = n[e + "queue"], i = n[e + "queueHooks"], o = x.timers, a = r ? r.length : 0; for (n.finish = !0, x.queue(this, e, []), i && i.stop && i.stop.call(this, !0), t = o.length; t--;)o[t].elem === this && o[t].queue === e && (o[t].anim.stop(!0), o.splice(t, 1)); for (t = 0; a > t; t++)r[t] && r[t].finish && r[t].finish.call(this); delete n.finish }) } }); function ir(e, t) { var n, r = { height: e }, i = 0; for (t = t ? 1 : 0; 4 > i; i += 2 - t)n = Zt[i], r["margin" + n] = r["padding" + n] = e; return t && (r.opacity = r.width = e), r } x.each({ slideDown: ir("show"), slideUp: ir("hide"), slideToggle: ir("toggle"), fadeIn: { opacity: "show" }, fadeOut: { opacity: "hide" }, fadeToggle: { opacity: "toggle" } }, function (e, t) { x.fn[e] = function (e, n, r) { return this.animate(t, e, n, r) } }), x.speed = function (e, t, n) { var r = e && "object" == typeof e ? x.extend({}, e) : { complete: n || !n && t || x.isFunction(e) && e, duration: e, easing: n && t || t && !x.isFunction(t) && t }; return r.duration = x.fx.off ? 0 : "number" == typeof r.duration ? r.duration : r.duration in x.fx.speeds ? x.fx.speeds[r.duration] : x.fx.speeds._default, (null == r.queue || r.queue === !0) && (r.queue = "fx"), r.old = r.complete, r.complete = function () { x.isFunction(r.old) && r.old.call(this), r.queue && x.dequeue(this, r.queue) }, r }, x.easing = { linear: function (e) { return e }, swing: function (e) { return .5 - Math.cos(e * Math.PI) / 2 } }, x.timers = [], x.fx = rr.prototype.init, x.fx.tick = function () { var e, n = x.timers, r = 0; for (Xn = x.now(); n.length > r; r++)e = n[r], e() || n[r] !== e || n.splice(r--, 1); n.length || x.fx.stop(), Xn = t }, x.fx.timer = function (e) { e() && x.timers.push(e) && x.fx.start() }, x.fx.interval = 13, x.fx.start = function () { Un || (Un = setInterval(x.fx.tick, x.fx.interval)) }, x.fx.stop = function () { clearInterval(Un), Un = null }, x.fx.speeds = { slow: 600, fast: 200, _default: 400 }, x.fx.step = {}, x.expr && x.expr.filters && (x.expr.filters.animated = function (e) { return x.grep(x.timers, function (t) { return e === t.elem }).length }), x.fn.offset = function (e) { if (arguments.length) return e === t ? this : this.each(function (t) { x.offset.setOffset(this, e, t) }); var n, r, o = { top: 0, left: 0 }, a = this[0], s = a && a.ownerDocument; if (s) return n = s.documentElement, x.contains(n, a) ? (typeof a.getBoundingClientRect !== i && (o = a.getBoundingClientRect()), r = or(s), { top: o.top + (r.pageYOffset || n.scrollTop) - (n.clientTop || 0), left: o.left + (r.pageXOffset || n.scrollLeft) - (n.clientLeft || 0) }) : o }, x.offset = { setOffset: function (e, t, n) { var r = x.css(e, "position"); "static" === r && (e.style.position = "relative"); var i = x(e), o = i.offset(), a = x.css(e, "top"), s = x.css(e, "left"), l = ("absolute" === r || "fixed" === r) && x.inArray("auto", [a, s]) > -1, u = {}, c = {}, p, f; l ? (c = i.position(), p = c.top, f = c.left) : (p = parseFloat(a) || 0, f = parseFloat(s) || 0), x.isFunction(t) && (t = t.call(e, n, o)), null != t.top && (u.top = t.top - o.top + p), null != t.left && (u.left = t.left - o.left + f), "using" in t ? t.using.call(e, u) : i.css(u) } }, x.fn.extend({ position: function () { if (this[0]) { var e, t, n = { top: 0, left: 0 }, r = this[0]; return "fixed" === x.css(r, "position") ? t = r.getBoundingClientRect() : (e = this.offsetParent(), t = this.offset(), x.nodeName(e[0], "html") || (n = e.offset()), n.top += x.css(e[0], "borderTopWidth", !0), n.left += x.css(e[0], "borderLeftWidth", !0)), { top: t.top - n.top - x.css(r, "marginTop", !0), left: t.left - n.left - x.css(r, "marginLeft", !0) } } }, offsetParent: function () { return this.map(function () { var e = this.offsetParent || s; while (e && !x.nodeName(e, "html") && "static" === x.css(e, "position")) e = e.offsetParent; return e || s }) } }), x.each({ scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function (e, n) { var r = /Y/.test(n); x.fn[e] = function (i) { return x.access(this, function (e, i, o) { var a = or(e); return o === t ? a ? n in a ? a[n] : a.document.documentElement[i] : e[i] : (a ? a.scrollTo(r ? x(a).scrollLeft() : o, r ? o : x(a).scrollTop()) : e[i] = o, t) }, e, i, arguments.length, null) } }); function or(e) { return x.isWindow(e) ? e : 9 === e.nodeType ? e.defaultView || e.parentWindow : !1 } x.each({ Height: "height", Width: "width" }, function (e, n) { x.each({ padding: "inner" + e, content: n, "": "outer" + e }, function (r, i) { x.fn[i] = function (i, o) { var a = arguments.length && (r || "boolean" != typeof i), s = r || (i === !0 || o === !0 ? "margin" : "border"); return x.access(this, function (n, r, i) { var o; return x.isWindow(n) ? n.document.documentElement["client" + e] : 9 === n.nodeType ? (o = n.documentElement, Math.max(n.body["scroll" + e], o["scroll" + e], n.body["offset" + e], o["offset" + e], o["client" + e])) : i === t ? x.css(n, r, s) : x.style(n, r, i, s) }, n, a ? i : t, a, null) } }) }), x.fn.size = function () { return this.length }, x.fn.andSelf = x.fn.addBack, "object" == typeof module && module && "object" == typeof module.exports ? module.exports = x : (e.jQuery = e.$ = x, "function" == typeof define && define.amd && define("jquery", [], function () { return x }))
})(window);


/*!
 * Bootstrap v3.3.6 (http://getbootstrap.com)
 * Copyright 2011-2015 Twitter, Inc.
 * Licensed under the MIT license
 */
if ("undefined" == typeof jQuery) throw new Error("Bootstrap's JavaScript requires jQuery"); +function (a) { "use strict"; var b = a.fn.jquery.split(" ")[0].split("."); if (b[0] < 2 && b[1] < 9 || 1 == b[0] && 9 == b[1] && b[2] < 1 || b[0] > 2) throw new Error("Bootstrap's JavaScript requires jQuery version 1.9.1 or higher, but lower than version 3") }(jQuery), +function (a) { "use strict"; function b() { var a = document.createElement("bootstrap"), b = { WebkitTransition: "webkitTransitionEnd", MozTransition: "transitionend", OTransition: "oTransitionEnd otransitionend", transition: "transitionend" }; for (var c in b) if (void 0 !== a.style[c]) return { end: b[c] }; return !1 } a.fn.emulateTransitionEnd = function (b) { var c = !1, d = this; a(this).one("bsTransitionEnd", function () { c = !0 }); var e = function () { c || a(d).trigger(a.support.transition.end) }; return setTimeout(e, b), this }, a(function () { a.support.transition = b(), a.support.transition && (a.event.special.bsTransitionEnd = { bindType: a.support.transition.end, delegateType: a.support.transition.end, handle: function (b) { return a(b.target).is(this) ? b.handleObj.handler.apply(this, arguments) : void 0 } }) }) }(jQuery), +function (a) { "use strict"; function b(b) { return this.each(function () { var c = a(this), e = c.data("bs.alert"); e || c.data("bs.alert", e = new d(this)), "string" == typeof b && e[b].call(c) }) } var c = '[data-dismiss="alert"]', d = function (b) { a(b).on("click", c, this.close) }; d.VERSION = "3.3.6", d.TRANSITION_DURATION = 150, d.prototype.close = function (b) { function c() { g.detach().trigger("closed.bs.alert").remove() } var e = a(this), f = e.attr("data-target"); f || (f = e.attr("href"), f = f && f.replace(/.*(?=#[^\s]*$)/, "")); var g = a(f); b && b.preventDefault(), g.length || (g = e.closest(".alert")), g.trigger(b = a.Event("close.bs.alert")), b.isDefaultPrevented() || (g.removeClass("in"), a.support.transition && g.hasClass("fade") ? g.one("bsTransitionEnd", c).emulateTransitionEnd(d.TRANSITION_DURATION) : c()) }; var e = a.fn.alert; a.fn.alert = b, a.fn.alert.Constructor = d, a.fn.alert.noConflict = function () { return a.fn.alert = e, this }, a(document).on("click.bs.alert.data-api", c, d.prototype.close) }(jQuery), +function (a) { "use strict"; function b(b) { return this.each(function () { var d = a(this), e = d.data("bs.button"), f = "object" == typeof b && b; e || d.data("bs.button", e = new c(this, f)), "toggle" == b ? e.toggle() : b && e.setState(b) }) } var c = function (b, d) { this.$element = a(b), this.options = a.extend({}, c.DEFAULTS, d), this.isLoading = !1 }; c.VERSION = "3.3.6", c.DEFAULTS = { loadingText: "loading..." }, c.prototype.setState = function (b) { var c = "disabled", d = this.$element, e = d.is("input") ? "val" : "html", f = d.data(); b += "Text", null == f.resetText && d.data("resetText", d[e]()), setTimeout(a.proxy(function () { d[e](null == f[b] ? this.options[b] : f[b]), "loadingText" == b ? (this.isLoading = !0, d.addClass(c).attr(c, c)) : this.isLoading && (this.isLoading = !1, d.removeClass(c).removeAttr(c)) }, this), 0) }, c.prototype.toggle = function () { var a = !0, b = this.$element.closest('[data-toggle="buttons"]'); if (b.length) { var c = this.$element.find("input"); "radio" == c.prop("type") ? (c.prop("checked") && (a = !1), b.find(".active").removeClass("active"), this.$element.addClass("active")) : "checkbox" == c.prop("type") && (c.prop("checked") !== this.$element.hasClass("active") && (a = !1), this.$element.toggleClass("active")), c.prop("checked", this.$element.hasClass("active")), a && c.trigger("change") } else this.$element.attr("aria-pressed", !this.$element.hasClass("active")), this.$element.toggleClass("active") }; var d = a.fn.button; a.fn.button = b, a.fn.button.Constructor = c, a.fn.button.noConflict = function () { return a.fn.button = d, this }, a(document).on("click.bs.button.data-api", '[data-toggle^="button"]', function (c) { var d = a(c.target); d.hasClass("btn") || (d = d.closest(".btn")), b.call(d, "toggle"), a(c.target).is('input[type="radio"]') || a(c.target).is('input[type="checkbox"]') || c.preventDefault() }).on("focus.bs.button.data-api blur.bs.button.data-api", '[data-toggle^="button"]', function (b) { a(b.target).closest(".btn").toggleClass("focus", /^focus(in)?$/.test(b.type)) }) }(jQuery), +function (a) { "use strict"; function b(b) { return this.each(function () { var d = a(this), e = d.data("bs.carousel"), f = a.extend({}, c.DEFAULTS, d.data(), "object" == typeof b && b), g = "string" == typeof b ? b : f.slide; e || d.data("bs.carousel", e = new c(this, f)), "number" == typeof b ? e.to(b) : g ? e[g]() : f.interval && e.pause().cycle() }) } var c = function (b, c) { this.$element = a(b), this.$indicators = this.$element.find(".carousel-indicators"), this.options = c, this.paused = null, this.sliding = null, this.interval = null, this.$active = null, this.$items = null, this.options.keyboard && this.$element.on("keydown.bs.carousel", a.proxy(this.keydown, this)), "hover" == this.options.pause && !("ontouchstart" in document.documentElement) && this.$element.on("mouseenter.bs.carousel", a.proxy(this.pause, this)).on("mouseleave.bs.carousel", a.proxy(this.cycle, this)) }; c.VERSION = "3.3.6", c.TRANSITION_DURATION = 600, c.DEFAULTS = { interval: 5e3, pause: "hover", wrap: !0, keyboard: !0 }, c.prototype.keydown = function (a) { if (!/input|textarea/i.test(a.target.tagName)) { switch (a.which) { case 37: this.prev(); break; case 39: this.next(); break; default: return }a.preventDefault() } }, c.prototype.cycle = function (b) { return b || (this.paused = !1), this.interval && clearInterval(this.interval), this.options.interval && !this.paused && (this.interval = setInterval(a.proxy(this.next, this), this.options.interval)), this }, c.prototype.getItemIndex = function (a) { return this.$items = a.parent().children(".item"), this.$items.index(a || this.$active) }, c.prototype.getItemForDirection = function (a, b) { var c = this.getItemIndex(b), d = "prev" == a && 0 === c || "next" == a && c == this.$items.length - 1; if (d && !this.options.wrap) return b; var e = "prev" == a ? -1 : 1, f = (c + e) % this.$items.length; return this.$items.eq(f) }, c.prototype.to = function (a) { var b = this, c = this.getItemIndex(this.$active = this.$element.find(".item.active")); return a > this.$items.length - 1 || 0 > a ? void 0 : this.sliding ? this.$element.one("slid.bs.carousel", function () { b.to(a) }) : c == a ? this.pause().cycle() : this.slide(a > c ? "next" : "prev", this.$items.eq(a)) }, c.prototype.pause = function (b) { return b || (this.paused = !0), this.$element.find(".next, .prev").length && a.support.transition && (this.$element.trigger(a.support.transition.end), this.cycle(!0)), this.interval = clearInterval(this.interval), this }, c.prototype.next = function () { return this.sliding ? void 0 : this.slide("next") }, c.prototype.prev = function () { return this.sliding ? void 0 : this.slide("prev") }, c.prototype.slide = function (b, d) { var e = this.$element.find(".item.active"), f = d || this.getItemForDirection(b, e), g = this.interval, h = "next" == b ? "left" : "right", i = this; if (f.hasClass("active")) return this.sliding = !1; var j = f[0], k = a.Event("slide.bs.carousel", { relatedTarget: j, direction: h }); if (this.$element.trigger(k), !k.isDefaultPrevented()) { if (this.sliding = !0, g && this.pause(), this.$indicators.length) { this.$indicators.find(".active").removeClass("active"); var l = a(this.$indicators.children()[this.getItemIndex(f)]); l && l.addClass("active") } var m = a.Event("slid.bs.carousel", { relatedTarget: j, direction: h }); return a.support.transition && this.$element.hasClass("slide") ? (f.addClass(b), f[0].offsetWidth, e.addClass(h), f.addClass(h), e.one("bsTransitionEnd", function () { f.removeClass([b, h].join(" ")).addClass("active"), e.removeClass(["active", h].join(" ")), i.sliding = !1, setTimeout(function () { i.$element.trigger(m) }, 0) }).emulateTransitionEnd(c.TRANSITION_DURATION)) : (e.removeClass("active"), f.addClass("active"), this.sliding = !1, this.$element.trigger(m)), g && this.cycle(), this } }; var d = a.fn.carousel; a.fn.carousel = b, a.fn.carousel.Constructor = c, a.fn.carousel.noConflict = function () { return a.fn.carousel = d, this }; var e = function (c) { var d, e = a(this), f = a(e.attr("data-target") || (d = e.attr("href")) && d.replace(/.*(?=#[^\s]+$)/, "")); if (f.hasClass("carousel")) { var g = a.extend({}, f.data(), e.data()), h = e.attr("data-slide-to"); h && (g.interval = !1), b.call(f, g), h && f.data("bs.carousel").to(h), c.preventDefault() } }; a(document).on("click.bs.carousel.data-api", "[data-slide]", e).on("click.bs.carousel.data-api", "[data-slide-to]", e), a(window).on("load", function () { a('[data-ride="carousel"]').each(function () { var c = a(this); b.call(c, c.data()) }) }) }(jQuery), +function (a) { "use strict"; function b(b) { var c, d = b.attr("data-target") || (c = b.attr("href")) && c.replace(/.*(?=#[^\s]+$)/, ""); return a(d) } function c(b) { return this.each(function () { var c = a(this), e = c.data("bs.collapse"), f = a.extend({}, d.DEFAULTS, c.data(), "object" == typeof b && b); !e && f.toggle && /show|hide/.test(b) && (f.toggle = !1), e || c.data("bs.collapse", e = new d(this, f)), "string" == typeof b && e[b]() }) } var d = function (b, c) { this.$element = a(b), this.options = a.extend({}, d.DEFAULTS, c), this.$trigger = a('[data-toggle="collapse"][href="#' + b.id + '"],[data-toggle="collapse"][data-target="#' + b.id + '"]'), this.transitioning = null, this.options.parent ? this.$parent = this.getParent() : this.addAriaAndCollapsedClass(this.$element, this.$trigger), this.options.toggle && this.toggle() }; d.VERSION = "3.3.6", d.TRANSITION_DURATION = 350, d.DEFAULTS = { toggle: !0 }, d.prototype.dimension = function () { var a = this.$element.hasClass("width"); return a ? "width" : "height" }, d.prototype.show = function () { if (!this.transitioning && !this.$element.hasClass("in")) { var b, e = this.$parent && this.$parent.children(".panel").children(".in, .collapsing"); if (!(e && e.length && (b = e.data("bs.collapse"), b && b.transitioning))) { var f = a.Event("show.bs.collapse"); if (this.$element.trigger(f), !f.isDefaultPrevented()) { e && e.length && (c.call(e, "hide"), b || e.data("bs.collapse", null)); var g = this.dimension(); this.$element.removeClass("collapse").addClass("collapsing")[g](0).attr("aria-expanded", !0), this.$trigger.removeClass("collapsed").attr("aria-expanded", !0), this.transitioning = 1; var h = function () { this.$element.removeClass("collapsing").addClass("collapse in")[g](""), this.transitioning = 0, this.$element.trigger("shown.bs.collapse") }; if (!a.support.transition) return h.call(this); var i = a.camelCase(["scroll", g].join("-")); this.$element.one("bsTransitionEnd", a.proxy(h, this)).emulateTransitionEnd(d.TRANSITION_DURATION)[g](this.$element[0][i]) } } } }, d.prototype.hide = function () { if (!this.transitioning && this.$element.hasClass("in")) { var b = a.Event("hide.bs.collapse"); if (this.$element.trigger(b), !b.isDefaultPrevented()) { var c = this.dimension(); this.$element[c](this.$element[c]())[0].offsetHeight, this.$element.addClass("collapsing").removeClass("collapse in").attr("aria-expanded", !1), this.$trigger.addClass("collapsed").attr("aria-expanded", !1), this.transitioning = 1; var e = function () { this.transitioning = 0, this.$element.removeClass("collapsing").addClass("collapse").trigger("hidden.bs.collapse") }; return a.support.transition ? void this.$element[c](0).one("bsTransitionEnd", a.proxy(e, this)).emulateTransitionEnd(d.TRANSITION_DURATION) : e.call(this) } } }, d.prototype.toggle = function () { this[this.$element.hasClass("in") ? "hide" : "show"]() }, d.prototype.getParent = function () { return a(this.options.parent).find('[data-toggle="collapse"][data-parent="' + this.options.parent + '"]').each(a.proxy(function (c, d) { var e = a(d); this.addAriaAndCollapsedClass(b(e), e) }, this)).end() }, d.prototype.addAriaAndCollapsedClass = function (a, b) { var c = a.hasClass("in"); a.attr("aria-expanded", c), b.toggleClass("collapsed", !c).attr("aria-expanded", c) }; var e = a.fn.collapse; a.fn.collapse = c, a.fn.collapse.Constructor = d, a.fn.collapse.noConflict = function () { return a.fn.collapse = e, this }, a(document).on("click.bs.collapse.data-api", '[data-toggle="collapse"]', function (d) { var e = a(this); e.attr("data-target") || d.preventDefault(); var f = b(e), g = f.data("bs.collapse"), h = g ? "toggle" : e.data(); c.call(f, h) }) }(jQuery), +function (a) { "use strict"; function b(b) { var c = b.attr("data-target"); c || (c = b.attr("href"), c = c && /#[A-Za-z]/.test(c) && c.replace(/.*(?=#[^\s]*$)/, "")); var d = c && a(c); return d && d.length ? d : b.parent() } function c(c) { c && 3 === c.which || (a(e).remove(), a(f).each(function () { var d = a(this), e = b(d), f = { relatedTarget: this }; e.hasClass("open") && (c && "click" == c.type && /input|textarea/i.test(c.target.tagName) && a.contains(e[0], c.target) || (e.trigger(c = a.Event("hide.bs.dropdown", f)), c.isDefaultPrevented() || (d.attr("aria-expanded", "false"), e.removeClass("open").trigger(a.Event("hidden.bs.dropdown", f))))) })) } function d(b) { return this.each(function () { var c = a(this), d = c.data("bs.dropdown"); d || c.data("bs.dropdown", d = new g(this)), "string" == typeof b && d[b].call(c) }) } var e = ".dropdown-backdrop", f = '[data-toggle="dropdown"]', g = function (b) { a(b).on("click.bs.dropdown", this.toggle) }; g.VERSION = "3.3.6", g.prototype.toggle = function (d) { var e = a(this); if (!e.is(".disabled, :disabled")) { var f = b(e), g = f.hasClass("open"); if (c(), !g) { "ontouchstart" in document.documentElement && !f.closest(".navbar-nav").length && a(document.createElement("div")).addClass("dropdown-backdrop").insertAfter(a(this)).on("click", c); var h = { relatedTarget: this }; if (f.trigger(d = a.Event("show.bs.dropdown", h)), d.isDefaultPrevented()) return; e.trigger("focus").attr("aria-expanded", "true"), f.toggleClass("open").trigger(a.Event("shown.bs.dropdown", h)) } return !1 } }, g.prototype.keydown = function (c) { if (/(38|40|27|32)/.test(c.which) && !/input|textarea/i.test(c.target.tagName)) { var d = a(this); if (c.preventDefault(), c.stopPropagation(), !d.is(".disabled, :disabled")) { var e = b(d), g = e.hasClass("open"); if (!g && 27 != c.which || g && 27 == c.which) return 27 == c.which && e.find(f).trigger("focus"), d.trigger("click"); var h = " li:not(.disabled):visible a", i = e.find(".dropdown-menu" + h); if (i.length) { var j = i.index(c.target); 38 == c.which && j > 0 && j-- , 40 == c.which && j < i.length - 1 && j++ , ~j || (j = 0), i.eq(j).trigger("focus") } } } }; var h = a.fn.dropdown; a.fn.dropdown = d, a.fn.dropdown.Constructor = g, a.fn.dropdown.noConflict = function () { return a.fn.dropdown = h, this }, a(document).on("click.bs.dropdown.data-api", c).on("click.bs.dropdown.data-api", ".dropdown form", function (a) { a.stopPropagation() }).on("click.bs.dropdown.data-api", f, g.prototype.toggle).on("keydown.bs.dropdown.data-api", f, g.prototype.keydown).on("keydown.bs.dropdown.data-api", ".dropdown-menu", g.prototype.keydown) }(jQuery), +function (a) { "use strict"; function b(b, d) { return this.each(function () { var e = a(this), f = e.data("bs.modal"), g = a.extend({}, c.DEFAULTS, e.data(), "object" == typeof b && b); f || e.data("bs.modal", f = new c(this, g)), "string" == typeof b ? f[b](d) : g.show && f.show(d) }) } var c = function (b, c) { this.options = c, this.$body = a(document.body), this.$element = a(b), this.$dialog = this.$element.find(".modal-dialog"), this.$backdrop = null, this.isShown = null, this.originalBodyPad = null, this.scrollbarWidth = 0, this.ignoreBackdropClick = !1, this.options.remote && this.$element.find(".modal-content").load(this.options.remote, a.proxy(function () { this.$element.trigger("loaded.bs.modal") }, this)) }; c.VERSION = "3.3.6", c.TRANSITION_DURATION = 300, c.BACKDROP_TRANSITION_DURATION = 150, c.DEFAULTS = { backdrop: !0, keyboard: !0, show: !0 }, c.prototype.toggle = function (a) { return this.isShown ? this.hide() : this.show(a) }, c.prototype.show = function (b) { var d = this, e = a.Event("show.bs.modal", { relatedTarget: b }); this.$element.trigger(e), this.isShown || e.isDefaultPrevented() || (this.isShown = !0, this.checkScrollbar(), this.setScrollbar(), this.$body.addClass("modal-open"), this.escape(), this.resize(), this.$element.on("click.dismiss.bs.modal", '[data-dismiss="modal"]', a.proxy(this.hide, this)), this.$dialog.on("mousedown.dismiss.bs.modal", function () { d.$element.one("mouseup.dismiss.bs.modal", function (b) { a(b.target).is(d.$element) && (d.ignoreBackdropClick = !0) }) }), this.backdrop(function () { var e = a.support.transition && d.$element.hasClass("fade"); d.$element.parent().length || d.$element.appendTo(d.$body), d.$element.show().scrollTop(0), d.adjustDialog(), e && d.$element[0].offsetWidth, d.$element.addClass("in"), d.enforceFocus(); var f = a.Event("shown.bs.modal", { relatedTarget: b }); e ? d.$dialog.one("bsTransitionEnd", function () { d.$element.trigger("focus").trigger(f) }).emulateTransitionEnd(c.TRANSITION_DURATION) : d.$element.trigger("focus").trigger(f) })) }, c.prototype.hide = function (b) { b && b.preventDefault(), b = a.Event("hide.bs.modal"), this.$element.trigger(b), this.isShown && !b.isDefaultPrevented() && (this.isShown = !1, this.escape(), this.resize(), a(document).off("focusin.bs.modal"), this.$element.removeClass("in").off("click.dismiss.bs.modal").off("mouseup.dismiss.bs.modal"), this.$dialog.off("mousedown.dismiss.bs.modal"), a.support.transition && this.$element.hasClass("fade") ? this.$element.one("bsTransitionEnd", a.proxy(this.hideModal, this)).emulateTransitionEnd(c.TRANSITION_DURATION) : this.hideModal()) }, c.prototype.enforceFocus = function () { a(document).off("focusin.bs.modal").on("focusin.bs.modal", a.proxy(function (a) { this.$element[0] === a.target || this.$element.has(a.target).length || this.$element.trigger("focus") }, this)) }, c.prototype.escape = function () { this.isShown && this.options.keyboard ? this.$element.on("keydown.dismiss.bs.modal", a.proxy(function (a) { 27 == a.which && this.hide() }, this)) : this.isShown || this.$element.off("keydown.dismiss.bs.modal") }, c.prototype.resize = function () { this.isShown ? a(window).on("resize.bs.modal", a.proxy(this.handleUpdate, this)) : a(window).off("resize.bs.modal") }, c.prototype.hideModal = function () { var a = this; this.$element.hide(), this.backdrop(function () { a.$body.removeClass("modal-open"), a.resetAdjustments(), a.resetScrollbar(), a.$element.trigger("hidden.bs.modal") }) }, c.prototype.removeBackdrop = function () { this.$backdrop && this.$backdrop.remove(), this.$backdrop = null }, c.prototype.backdrop = function (b) { var d = this, e = this.$element.hasClass("fade") ? "fade" : ""; if (this.isShown && this.options.backdrop) { var f = a.support.transition && e; if (this.$backdrop = a(document.createElement("div")).addClass("modal-backdrop " + e).appendTo(this.$body), this.$element.on("click.dismiss.bs.modal", a.proxy(function (a) { return this.ignoreBackdropClick ? void (this.ignoreBackdropClick = !1) : void (a.target === a.currentTarget && ("static" == this.options.backdrop ? this.$element[0].focus() : this.hide())) }, this)), f && this.$backdrop[0].offsetWidth, this.$backdrop.addClass("in"), !b) return; f ? this.$backdrop.one("bsTransitionEnd", b).emulateTransitionEnd(c.BACKDROP_TRANSITION_DURATION) : b() } else if (!this.isShown && this.$backdrop) { this.$backdrop.removeClass("in"); var g = function () { d.removeBackdrop(), b && b() }; a.support.transition && this.$element.hasClass("fade") ? this.$backdrop.one("bsTransitionEnd", g).emulateTransitionEnd(c.BACKDROP_TRANSITION_DURATION) : g() } else b && b() }, c.prototype.handleUpdate = function () { this.adjustDialog() }, c.prototype.adjustDialog = function () { var a = this.$element[0].scrollHeight > document.documentElement.clientHeight; this.$element.css({ paddingLeft: !this.bodyIsOverflowing && a ? this.scrollbarWidth : "", paddingRight: this.bodyIsOverflowing && !a ? this.scrollbarWidth : "" }) }, c.prototype.resetAdjustments = function () { this.$element.css({ paddingLeft: "", paddingRight: "" }) }, c.prototype.checkScrollbar = function () { var a = window.innerWidth; if (!a) { var b = document.documentElement.getBoundingClientRect(); a = b.right - Math.abs(b.left) } this.bodyIsOverflowing = document.body.clientWidth < a, this.scrollbarWidth = this.measureScrollbar() }, c.prototype.setScrollbar = function () { var a = parseInt(this.$body.css("padding-right") || 0, 10); this.originalBodyPad = document.body.style.paddingRight || "", this.bodyIsOverflowing && this.$body.css("padding-right", a + this.scrollbarWidth) }, c.prototype.resetScrollbar = function () { this.$body.css("padding-right", this.originalBodyPad) }, c.prototype.measureScrollbar = function () { var a = document.createElement("div"); a.className = "modal-scrollbar-measure", this.$body.append(a); var b = a.offsetWidth - a.clientWidth; return this.$body[0].removeChild(a), b }; var d = a.fn.modal; a.fn.modal = b, a.fn.modal.Constructor = c, a.fn.modal.noConflict = function () { return a.fn.modal = d, this }, a(document).on("click.bs.modal.data-api", '[data-toggle="modal"]', function (c) { var d = a(this), e = d.attr("href"), f = a(d.attr("data-target") || e && e.replace(/.*(?=#[^\s]+$)/, "")), g = f.data("bs.modal") ? "toggle" : a.extend({ remote: !/#/.test(e) && e }, f.data(), d.data()); d.is("a") && c.preventDefault(), f.one("show.bs.modal", function (a) { a.isDefaultPrevented() || f.one("hidden.bs.modal", function () { d.is(":visible") && d.trigger("focus") }) }), b.call(f, g, this) }) }(jQuery), +function (a) { "use strict"; function b(b) { return this.each(function () { var d = a(this), e = d.data("bs.tooltip"), f = "object" == typeof b && b; (e || !/destroy|hide/.test(b)) && (e || d.data("bs.tooltip", e = new c(this, f)), "string" == typeof b && e[b]()) }) } var c = function (a, b) { this.type = null, this.options = null, this.enabled = null, this.timeout = null, this.hoverState = null, this.$element = null, this.inState = null, this.init("tooltip", a, b) }; c.VERSION = "3.3.6", c.TRANSITION_DURATION = 150, c.DEFAULTS = { animation: !0, placement: "top", selector: !1, template: '<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>', trigger: "hover focus", title: "", delay: 0, html: !1, container: !1, viewport: { selector: "body", padding: 0 } }, c.prototype.init = function (b, c, d) { if (this.enabled = !0, this.type = b, this.$element = a(c), this.options = this.getOptions(d), this.$viewport = this.options.viewport && a(a.isFunction(this.options.viewport) ? this.options.viewport.call(this, this.$element) : this.options.viewport.selector || this.options.viewport), this.inState = { click: !1, hover: !1, focus: !1 }, this.$element[0] instanceof document.constructor && !this.options.selector) throw new Error("`selector` option must be specified when initializing " + this.type + " on the window.document object!"); for (var e = this.options.trigger.split(" "), f = e.length; f--;) { var g = e[f]; if ("click" == g) this.$element.on("click." + this.type, this.options.selector, a.proxy(this.toggle, this)); else if ("manual" != g) { var h = "hover" == g ? "mouseenter" : "focusin", i = "hover" == g ? "mouseleave" : "focusout"; this.$element.on(h + "." + this.type, this.options.selector, a.proxy(this.enter, this)), this.$element.on(i + "." + this.type, this.options.selector, a.proxy(this.leave, this)) } } this.options.selector ? this._options = a.extend({}, this.options, { trigger: "manual", selector: "" }) : this.fixTitle() }, c.prototype.getDefaults = function () { return c.DEFAULTS }, c.prototype.getOptions = function (b) { return b = a.extend({}, this.getDefaults(), this.$element.data(), b), b.delay && "number" == typeof b.delay && (b.delay = { show: b.delay, hide: b.delay }), b }, c.prototype.getDelegateOptions = function () { var b = {}, c = this.getDefaults(); return this._options && a.each(this._options, function (a, d) { c[a] != d && (b[a] = d) }), b }, c.prototype.enter = function (b) { var c = b instanceof this.constructor ? b : a(b.currentTarget).data("bs." + this.type); return c || (c = new this.constructor(b.currentTarget, this.getDelegateOptions()), a(b.currentTarget).data("bs." + this.type, c)), b instanceof a.Event && (c.inState["focusin" == b.type ? "focus" : "hover"] = !0), c.tip().hasClass("in") || "in" == c.hoverState ? void (c.hoverState = "in") : (clearTimeout(c.timeout), c.hoverState = "in", c.options.delay && c.options.delay.show ? void (c.timeout = setTimeout(function () { "in" == c.hoverState && c.show() }, c.options.delay.show)) : c.show()) }, c.prototype.isInStateTrue = function () { for (var a in this.inState) if (this.inState[a]) return !0; return !1 }, c.prototype.leave = function (b) { var c = b instanceof this.constructor ? b : a(b.currentTarget).data("bs." + this.type); return c || (c = new this.constructor(b.currentTarget, this.getDelegateOptions()), a(b.currentTarget).data("bs." + this.type, c)), b instanceof a.Event && (c.inState["focusout" == b.type ? "focus" : "hover"] = !1), c.isInStateTrue() ? void 0 : (clearTimeout(c.timeout), c.hoverState = "out", c.options.delay && c.options.delay.hide ? void (c.timeout = setTimeout(function () { "out" == c.hoverState && c.hide() }, c.options.delay.hide)) : c.hide()) }, c.prototype.show = function () { var b = a.Event("show.bs." + this.type); if (this.hasContent() && this.enabled) { this.$element.trigger(b); var d = a.contains(this.$element[0].ownerDocument.documentElement, this.$element[0]); if (b.isDefaultPrevented() || !d) return; var e = this, f = this.tip(), g = this.getUID(this.type); this.setContent(), f.attr("id", g), this.$element.attr("aria-describedby", g), this.options.animation && f.addClass("fade"); var h = "function" == typeof this.options.placement ? this.options.placement.call(this, f[0], this.$element[0]) : this.options.placement, i = /\s?auto?\s?/i, j = i.test(h); j && (h = h.replace(i, "") || "top"), f.detach().css({ top: 0, left: 0, display: "block" }).addClass(h).data("bs." + this.type, this), this.options.container ? f.appendTo(this.options.container) : f.insertAfter(this.$element), this.$element.trigger("inserted.bs." + this.type); var k = this.getPosition(), l = f[0].offsetWidth, m = f[0].offsetHeight; if (j) { var n = h, o = this.getPosition(this.$viewport); h = "bottom" == h && k.bottom + m > o.bottom ? "top" : "top" == h && k.top - m < o.top ? "bottom" : "right" == h && k.right + l > o.width ? "left" : "left" == h && k.left - l < o.left ? "right" : h, f.removeClass(n).addClass(h) } var p = this.getCalculatedOffset(h, k, l, m); this.applyPlacement(p, h); var q = function () { var a = e.hoverState; e.$element.trigger("shown.bs." + e.type), e.hoverState = null, "out" == a && e.leave(e) }; a.support.transition && this.$tip.hasClass("fade") ? f.one("bsTransitionEnd", q).emulateTransitionEnd(c.TRANSITION_DURATION) : q() } }, c.prototype.applyPlacement = function (b, c) { var d = this.tip(), e = d[0].offsetWidth, f = d[0].offsetHeight, g = parseInt(d.css("margin-top"), 10), h = parseInt(d.css("margin-left"), 10); isNaN(g) && (g = 0), isNaN(h) && (h = 0), b.top += g, b.left += h, a.offset.setOffset(d[0], a.extend({ using: function (a) { d.css({ top: Math.round(a.top), left: Math.round(a.left) }) } }, b), 0), d.addClass("in"); var i = d[0].offsetWidth, j = d[0].offsetHeight; "top" == c && j != f && (b.top = b.top + f - j); var k = this.getViewportAdjustedDelta(c, b, i, j); k.left ? b.left += k.left : b.top += k.top; var l = /top|bottom/.test(c), m = l ? 2 * k.left - e + i : 2 * k.top - f + j, n = l ? "offsetWidth" : "offsetHeight"; d.offset(b), this.replaceArrow(m, d[0][n], l) }, c.prototype.replaceArrow = function (a, b, c) { this.arrow().css(c ? "left" : "top", 50 * (1 - a / b) + "%").css(c ? "top" : "left", "") }, c.prototype.setContent = function () { var a = this.tip(), b = this.getTitle(); a.find(".tooltip-inner")[this.options.html ? "html" : "text"](b), a.removeClass("fade in top bottom left right") }, c.prototype.hide = function (b) { function d() { "in" != e.hoverState && f.detach(), e.$element.removeAttr("aria-describedby").trigger("hidden.bs." + e.type), b && b() } var e = this, f = a(this.$tip), g = a.Event("hide.bs." + this.type); return this.$element.trigger(g), g.isDefaultPrevented() ? void 0 : (f.removeClass("in"), a.support.transition && f.hasClass("fade") ? f.one("bsTransitionEnd", d).emulateTransitionEnd(c.TRANSITION_DURATION) : d(), this.hoverState = null, this) }, c.prototype.fixTitle = function () { var a = this.$element; (a.attr("title") || "string" != typeof a.attr("data-original-title")) && a.attr("data-original-title", a.attr("title") || "").attr("title", "") }, c.prototype.hasContent = function () { return this.getTitle() }, c.prototype.getPosition = function (b) { b = b || this.$element; var c = b[0], d = "BODY" == c.tagName, e = c.getBoundingClientRect(); null == e.width && (e = a.extend({}, e, { width: e.right - e.left, height: e.bottom - e.top })); var f = d ? { top: 0, left: 0 } : b.offset(), g = { scroll: d ? document.documentElement.scrollTop || document.body.scrollTop : b.scrollTop() }, h = d ? { width: a(window).width(), height: a(window).height() } : null; return a.extend({}, e, g, h, f) }, c.prototype.getCalculatedOffset = function (a, b, c, d) { return "bottom" == a ? { top: b.top + b.height, left: b.left + b.width / 2 - c / 2 } : "top" == a ? { top: b.top - d, left: b.left + b.width / 2 - c / 2 } : "left" == a ? { top: b.top + b.height / 2 - d / 2, left: b.left - c } : { top: b.top + b.height / 2 - d / 2, left: b.left + b.width } }, c.prototype.getViewportAdjustedDelta = function (a, b, c, d) { var e = { top: 0, left: 0 }; if (!this.$viewport) return e; var f = this.options.viewport && this.options.viewport.padding || 0, g = this.getPosition(this.$viewport); if (/right|left/.test(a)) { var h = b.top - f - g.scroll, i = b.top + f - g.scroll + d; h < g.top ? e.top = g.top - h : i > g.top + g.height && (e.top = g.top + g.height - i) } else { var j = b.left - f, k = b.left + f + c; j < g.left ? e.left = g.left - j : k > g.right && (e.left = g.left + g.width - k) } return e }, c.prototype.getTitle = function () { var a, b = this.$element, c = this.options; return a = b.attr("data-original-title") || ("function" == typeof c.title ? c.title.call(b[0]) : c.title) }, c.prototype.getUID = function (a) { do a += ~~(1e6 * Math.random()); while (document.getElementById(a)); return a }, c.prototype.tip = function () { if (!this.$tip && (this.$tip = a(this.options.template), 1 != this.$tip.length)) throw new Error(this.type + " `template` option must consist of exactly 1 top-level element!"); return this.$tip }, c.prototype.arrow = function () { return this.$arrow = this.$arrow || this.tip().find(".tooltip-arrow") }, c.prototype.enable = function () { this.enabled = !0 }, c.prototype.disable = function () { this.enabled = !1 }, c.prototype.toggleEnabled = function () { this.enabled = !this.enabled }, c.prototype.toggle = function (b) { var c = this; b && (c = a(b.currentTarget).data("bs." + this.type), c || (c = new this.constructor(b.currentTarget, this.getDelegateOptions()), a(b.currentTarget).data("bs." + this.type, c))), b ? (c.inState.click = !c.inState.click, c.isInStateTrue() ? c.enter(c) : c.leave(c)) : c.tip().hasClass("in") ? c.leave(c) : c.enter(c) }, c.prototype.destroy = function () { var a = this; clearTimeout(this.timeout), this.hide(function () { a.$element.off("." + a.type).removeData("bs." + a.type), a.$tip && a.$tip.detach(), a.$tip = null, a.$arrow = null, a.$viewport = null }) }; var d = a.fn.tooltip; a.fn.tooltip = b, a.fn.tooltip.Constructor = c, a.fn.tooltip.noConflict = function () { return a.fn.tooltip = d, this } }(jQuery), +function (a) { "use strict"; function b(b) { return this.each(function () { var d = a(this), e = d.data("bs.popover"), f = "object" == typeof b && b; (e || !/destroy|hide/.test(b)) && (e || d.data("bs.popover", e = new c(this, f)), "string" == typeof b && e[b]()) }) } var c = function (a, b) { this.init("popover", a, b) }; if (!a.fn.tooltip) throw new Error("Popover requires tooltip.js"); c.VERSION = "3.3.6", c.DEFAULTS = a.extend({}, a.fn.tooltip.Constructor.DEFAULTS, { placement: "right", trigger: "click", content: "", template: '<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>' }), c.prototype = a.extend({}, a.fn.tooltip.Constructor.prototype), c.prototype.constructor = c, c.prototype.getDefaults = function () { return c.DEFAULTS }, c.prototype.setContent = function () { var a = this.tip(), b = this.getTitle(), c = this.getContent(); a.find(".popover-title")[this.options.html ? "html" : "text"](b), a.find(".popover-content").children().detach().end()[this.options.html ? "string" == typeof c ? "html" : "append" : "text"](c), a.removeClass("fade top bottom left right in"), a.find(".popover-title").html() || a.find(".popover-title").hide() }, c.prototype.hasContent = function () { return this.getTitle() || this.getContent() }, c.prototype.getContent = function () { var a = this.$element, b = this.options; return a.attr("data-content") || ("function" == typeof b.content ? b.content.call(a[0]) : b.content) }, c.prototype.arrow = function () { return this.$arrow = this.$arrow || this.tip().find(".arrow") }; var d = a.fn.popover; a.fn.popover = b, a.fn.popover.Constructor = c, a.fn.popover.noConflict = function () { return a.fn.popover = d, this } }(jQuery), +function (a) {
    "use strict"; function b(c, d) { this.$body = a(document.body), this.$scrollElement = a(a(c).is(document.body) ? window : c), this.options = a.extend({}, b.DEFAULTS, d), this.selector = (this.options.target || "") + " .nav li > a", this.offsets = [], this.targets = [], this.activeTarget = null, this.scrollHeight = 0, this.$scrollElement.on("scroll.bs.scrollspy", a.proxy(this.process, this)), this.refresh(), this.process() } function c(c) { return this.each(function () { var d = a(this), e = d.data("bs.scrollspy"), f = "object" == typeof c && c; e || d.data("bs.scrollspy", e = new b(this, f)), "string" == typeof c && e[c]() }) } b.VERSION = "3.3.6", b.DEFAULTS = { offset: 10 }, b.prototype.getScrollHeight = function () { return this.$scrollElement[0].scrollHeight || Math.max(this.$body[0].scrollHeight, document.documentElement.scrollHeight) }, b.prototype.refresh = function () { var b = this, c = "offset", d = 0; this.offsets = [], this.targets = [], this.scrollHeight = this.getScrollHeight(), a.isWindow(this.$scrollElement[0]) || (c = "position", d = this.$scrollElement.scrollTop()), this.$body.find(this.selector).map(function () { var b = a(this), e = b.data("target") || b.attr("href"), f = /^#./.test(e) && a(e); return f && f.length && f.is(":visible") && [[f[c]().top + d, e]] || null }).sort(function (a, b) { return a[0] - b[0] }).each(function () { b.offsets.push(this[0]), b.targets.push(this[1]) }) }, b.prototype.process = function () { var a, b = this.$scrollElement.scrollTop() + this.options.offset, c = this.getScrollHeight(), d = this.options.offset + c - this.$scrollElement.height(), e = this.offsets, f = this.targets, g = this.activeTarget; if (this.scrollHeight != c && this.refresh(), b >= d) return g != (a = f[f.length - 1]) && this.activate(a); if (g && b < e[0]) return this.activeTarget = null, this.clear(); for (a = e.length; a--;)g != f[a] && b >= e[a] && (void 0 === e[a + 1] || b < e[a + 1]) && this.activate(f[a]) }, b.prototype.activate = function (b) {
    this.activeTarget = b, this.clear(); var c = this.selector + '[data-target="' + b + '"],' + this.selector + '[href="' + b + '"]', d = a(c).parents("li").addClass("active");
        d.parent(".dropdown-menu").length && (d = d.closest("li.dropdown").addClass("active")), d.trigger("activate.bs.scrollspy")
    }, b.prototype.clear = function () { a(this.selector).parentsUntil(this.options.target, ".active").removeClass("active") }; var d = a.fn.scrollspy; a.fn.scrollspy = c, a.fn.scrollspy.Constructor = b, a.fn.scrollspy.noConflict = function () { return a.fn.scrollspy = d, this }, a(window).on("load.bs.scrollspy.data-api", function () { a('[data-spy="scroll"]').each(function () { var b = a(this); c.call(b, b.data()) }) })
}(jQuery), +function (a) { "use strict"; function b(b) { return this.each(function () { var d = a(this), e = d.data("bs.tab"); e || d.data("bs.tab", e = new c(this)), "string" == typeof b && e[b]() }) } var c = function (b) { this.element = a(b) }; c.VERSION = "3.3.6", c.TRANSITION_DURATION = 150, c.prototype.show = function () { var b = this.element, c = b.closest("ul:not(.dropdown-menu)"), d = b.data("target"); if (d || (d = b.attr("href"), d = d && d.replace(/.*(?=#[^\s]*$)/, "")), !b.parent("li").hasClass("active")) { var e = c.find(".active:last a"), f = a.Event("hide.bs.tab", { relatedTarget: b[0] }), g = a.Event("show.bs.tab", { relatedTarget: e[0] }); if (e.trigger(f), b.trigger(g), !g.isDefaultPrevented() && !f.isDefaultPrevented()) { var h = a(d); this.activate(b.closest("li"), c), this.activate(h, h.parent(), function () { e.trigger({ type: "hidden.bs.tab", relatedTarget: b[0] }), b.trigger({ type: "shown.bs.tab", relatedTarget: e[0] }) }) } } }, c.prototype.activate = function (b, d, e) { function f() { g.removeClass("active").find("> .dropdown-menu > .active").removeClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded", !1), b.addClass("active").find('[data-toggle="tab"]').attr("aria-expanded", !0), h ? (b[0].offsetWidth, b.addClass("in")) : b.removeClass("fade"), b.parent(".dropdown-menu").length && b.closest("li.dropdown").addClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded", !0), e && e() } var g = d.find("> .active"), h = e && a.support.transition && (g.length && g.hasClass("fade") || !!d.find("> .fade").length); g.length && h ? g.one("bsTransitionEnd", f).emulateTransitionEnd(c.TRANSITION_DURATION) : f(), g.removeClass("in") }; var d = a.fn.tab; a.fn.tab = b, a.fn.tab.Constructor = c, a.fn.tab.noConflict = function () { return a.fn.tab = d, this }; var e = function (c) { c.preventDefault(), b.call(a(this), "show") }; a(document).on("click.bs.tab.data-api", '[data-toggle="tab"]', e).on("click.bs.tab.data-api", '[data-toggle="pill"]', e) }(jQuery), +function (a) { "use strict"; function b(b) { return this.each(function () { var d = a(this), e = d.data("bs.affix"), f = "object" == typeof b && b; e || d.data("bs.affix", e = new c(this, f)), "string" == typeof b && e[b]() }) } var c = function (b, d) { this.options = a.extend({}, c.DEFAULTS, d), this.$target = a(this.options.target).on("scroll.bs.affix.data-api", a.proxy(this.checkPosition, this)).on("click.bs.affix.data-api", a.proxy(this.checkPositionWithEventLoop, this)), this.$element = a(b), this.affixed = null, this.unpin = null, this.pinnedOffset = null, this.checkPosition() }; c.VERSION = "3.3.6", c.RESET = "affix affix-top affix-bottom", c.DEFAULTS = { offset: 0, target: window }, c.prototype.getState = function (a, b, c, d) { var e = this.$target.scrollTop(), f = this.$element.offset(), g = this.$target.height(); if (null != c && "top" == this.affixed) return c > e ? "top" : !1; if ("bottom" == this.affixed) return null != c ? e + this.unpin <= f.top ? !1 : "bottom" : a - d >= e + g ? !1 : "bottom"; var h = null == this.affixed, i = h ? e : f.top, j = h ? g : b; return null != c && c >= e ? "top" : null != d && i + j >= a - d ? "bottom" : !1 }, c.prototype.getPinnedOffset = function () { if (this.pinnedOffset) return this.pinnedOffset; this.$element.removeClass(c.RESET).addClass("affix"); var a = this.$target.scrollTop(), b = this.$element.offset(); return this.pinnedOffset = b.top - a }, c.prototype.checkPositionWithEventLoop = function () { setTimeout(a.proxy(this.checkPosition, this), 1) }, c.prototype.checkPosition = function () { if (this.$element.is(":visible")) { var b = this.$element.height(), d = this.options.offset, e = d.top, f = d.bottom, g = Math.max(a(document).height(), a(document.body).height()); "object" != typeof d && (f = e = d), "function" == typeof e && (e = d.top(this.$element)), "function" == typeof f && (f = d.bottom(this.$element)); var h = this.getState(g, b, e, f); if (this.affixed != h) { null != this.unpin && this.$element.css("top", ""); var i = "affix" + (h ? "-" + h : ""), j = a.Event(i + ".bs.affix"); if (this.$element.trigger(j), j.isDefaultPrevented()) return; this.affixed = h, this.unpin = "bottom" == h ? this.getPinnedOffset() : null, this.$element.removeClass(c.RESET).addClass(i).trigger(i.replace("affix", "affixed") + ".bs.affix") } "bottom" == h && this.$element.offset({ top: g - b - f }) } }; var d = a.fn.affix; a.fn.affix = b, a.fn.affix.Constructor = c, a.fn.affix.noConflict = function () { return a.fn.affix = d, this }, a(window).on("load", function () { a('[data-spy="affix"]').each(function () { var c = a(this), d = c.data(); d.offset = d.offset || {}, null != d.offsetBottom && (d.offset.bottom = d.offsetBottom), null != d.offsetTop && (d.offset.top = d.offsetTop), b.call(c, d) }) }) }(jQuery);

/*
 AngularJS v1.3.14
 (c) 2010-2014 Google, Inc. http://angularjs.org
 License: MIT
*/
(function (P, X, u) {
    'use strict'; function M(b) { return function () { var a = arguments[0], c; c = "[" + (b ? b + ":" : "") + a + "] http://errors.angularjs.org/1.3.14/" + (b ? b + "/" : "") + a; for (a = 1; a < arguments.length; a++) { c = c + (1 == a ? "?" : "&") + "p" + (a - 1) + "="; var d = encodeURIComponent, e; e = arguments[a]; e = "function" == typeof e ? e.toString().replace(/ \{[\s\S]*$/, "") : "undefined" == typeof e ? "undefined" : "string" != typeof e ? JSON.stringify(e) : e; c += d(e) } return Error(c) } } function Ta(b) {
        if (null == b || Ua(b)) return !1; var a = b.length; return b.nodeType ===
            na && a ? !0 : x(b) || E(b) || 0 === a || "number" === typeof a && 0 < a && a - 1 in b
    } function s(b, a, c) { var d, e; if (b) if (G(b)) for (d in b) "prototype" == d || "length" == d || "name" == d || b.hasOwnProperty && !b.hasOwnProperty(d) || a.call(c, b[d], d, b); else if (E(b) || Ta(b)) { var f = "object" !== typeof b; d = 0; for (e = b.length; d < e; d++)(f || d in b) && a.call(c, b[d], d, b) } else if (b.forEach && b.forEach !== s) b.forEach(a, c, b); else for (d in b) b.hasOwnProperty(d) && a.call(c, b[d], d, b); return b } function Ed(b, a, c) {
        for (var d = Object.keys(b).sort(), e = 0; e < d.length; e++)a.call(c,
            b[d[e]], d[e]); return d
    } function lc(b) { return function (a, c) { b(c, a) } } function Fd() { return ++ob } function mc(b, a) { a ? b.$$hashKey = a : delete b.$$hashKey } function w(b) { for (var a = b.$$hashKey, c = 1, d = arguments.length; c < d; c++) { var e = arguments[c]; if (e) for (var f = Object.keys(e), g = 0, h = f.length; g < h; g++) { var l = f[g]; b[l] = e[l] } } mc(b, a); return b } function $(b) { return parseInt(b, 10) } function Pb(b, a) { return w(Object.create(b), a) } function B() { } function oa(b) { return b } function da(b) { return function () { return b } } function z(b) {
        return "undefined" ===
            typeof b
    } function y(b) { return "undefined" !== typeof b } function J(b) { return null !== b && "object" === typeof b } function x(b) { return "string" === typeof b } function V(b) { return "number" === typeof b } function pa(b) { return "[object Date]" === Da.call(b) } function G(b) { return "function" === typeof b } function pb(b) { return "[object RegExp]" === Da.call(b) } function Ua(b) { return b && b.window === b } function Va(b) { return b && b.$evalAsync && b.$watch } function Wa(b) { return "boolean" === typeof b } function nc(b) {
        return !(!b || !(b.nodeName || b.prop &&
            b.attr && b.find))
    } function Gd(b) { var a = {}; b = b.split(","); var c; for (c = 0; c < b.length; c++)a[b[c]] = !0; return a } function ta(b) { return R(b.nodeName || b[0] && b[0].nodeName) } function Xa(b, a) { var c = b.indexOf(a); 0 <= c && b.splice(c, 1); return a } function Ea(b, a, c, d) {
        if (Ua(b) || Va(b)) throw Ka("cpws"); if (a) {
            if (b === a) throw Ka("cpi"); c = c || []; d = d || []; if (J(b)) { var e = c.indexOf(b); if (-1 !== e) return d[e]; c.push(b); d.push(a) } if (E(b)) for (var f = a.length = 0; f < b.length; f++)e = Ea(b[f], null, c, d), J(b[f]) && (c.push(b[f]), d.push(e)), a.push(e);
            else { var g = a.$$hashKey; E(a) ? a.length = 0 : s(a, function (b, c) { delete a[c] }); for (f in b) b.hasOwnProperty(f) && (e = Ea(b[f], null, c, d), J(b[f]) && (c.push(b[f]), d.push(e)), a[f] = e); mc(a, g) }
        } else if (a = b) E(b) ? a = Ea(b, [], c, d) : pa(b) ? a = new Date(b.getTime()) : pb(b) ? (a = new RegExp(b.source, b.toString().match(/[^\/]*$/)[0]), a.lastIndex = b.lastIndex) : J(b) && (e = Object.create(Object.getPrototypeOf(b)), a = Ea(b, e, c, d)); return a
    } function qa(b, a) {
        if (E(b)) { a = a || []; for (var c = 0, d = b.length; c < d; c++)a[c] = b[c] } else if (J(b)) for (c in a = a || {},
            b) if ("$" !== c.charAt(0) || "$" !== c.charAt(1)) a[c] = b[c]; return a || b
    } function ea(b, a) {
        if (b === a) return !0; if (null === b || null === a) return !1; if (b !== b && a !== a) return !0; var c = typeof b, d; if (c == typeof a && "object" == c) if (E(b)) { if (!E(a)) return !1; if ((c = b.length) == a.length) { for (d = 0; d < c; d++)if (!ea(b[d], a[d])) return !1; return !0 } } else {
            if (pa(b)) return pa(a) ? ea(b.getTime(), a.getTime()) : !1; if (pb(b) && pb(a)) return b.toString() == a.toString(); if (Va(b) || Va(a) || Ua(b) || Ua(a) || E(a)) return !1; c = {}; for (d in b) if ("$" !== d.charAt(0) && !G(b[d])) {
                if (!ea(b[d],
                    a[d])) return !1; c[d] = !0
            } for (d in a) if (!c.hasOwnProperty(d) && "$" !== d.charAt(0) && a[d] !== u && !G(a[d])) return !1; return !0
        } return !1
    } function Ya(b, a, c) { return b.concat(Za.call(a, c)) } function oc(b, a) { var c = 2 < arguments.length ? Za.call(arguments, 2) : []; return !G(a) || a instanceof RegExp ? a : c.length ? function () { return arguments.length ? a.apply(b, Ya(c, arguments, 0)) : a.apply(b, c) } : function () { return arguments.length ? a.apply(b, arguments) : a.call(b) } } function Hd(b, a) {
        var c = a; "string" === typeof b && "$" === b.charAt(0) && "$" === b.charAt(1) ?
            c = u : Ua(a) ? c = "$WINDOW" : a && X === a ? c = "$DOCUMENT" : Va(a) && (c = "$SCOPE"); return c
    } function $a(b, a) { if ("undefined" === typeof b) return u; V(a) || (a = a ? 2 : null); return JSON.stringify(b, Hd, a) } function pc(b) { return x(b) ? JSON.parse(b) : b } function ua(b) { b = C(b).clone(); try { b.empty() } catch (a) { } var c = C("<div>").append(b).html(); try { return b[0].nodeType === qb ? R(c) : c.match(/^(<[^>]+>)/)[1].replace(/^<([\w\-]+)/, function (a, b) { return "<" + R(b) }) } catch (d) { return R(c) } } function qc(b) { try { return decodeURIComponent(b) } catch (a) { } } function rc(b) {
        var a =
            {}, c, d; s((b || "").split("&"), function (b) { b && (c = b.replace(/\+/g, "%20").split("="), d = qc(c[0]), y(d) && (b = y(c[1]) ? qc(c[1]) : !0, sc.call(a, d) ? E(a[d]) ? a[d].push(b) : a[d] = [a[d], b] : a[d] = b)) }); return a
    } function Qb(b) { var a = []; s(b, function (b, d) { E(b) ? s(b, function (b) { a.push(Fa(d, !0) + (!0 === b ? "" : "=" + Fa(b, !0))) }) : a.push(Fa(d, !0) + (!0 === b ? "" : "=" + Fa(b, !0))) }); return a.length ? a.join("&") : "" } function rb(b) { return Fa(b, !0).replace(/%26/gi, "&").replace(/%3D/gi, "=").replace(/%2B/gi, "+") } function Fa(b, a) {
        return encodeURIComponent(b).replace(/%40/gi,
            "@").replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%3B/gi, ";").replace(/%20/g, a ? "%20" : "+")
    } function Id(b, a) { var c, d, e = sb.length; b = C(b); for (d = 0; d < e; ++d)if (c = sb[d] + a, x(c = b.attr(c))) return c; return null } function Jd(b, a) {
        var c, d, e = {}; s(sb, function (a) { a += "app"; !c && b.hasAttribute && b.hasAttribute(a) && (c = b, d = b.getAttribute(a)) }); s(sb, function (a) { a += "app"; var e; !c && (e = b.querySelector("[" + a.replace(":", "\\:") + "]")) && (c = e, d = e.getAttribute(a)) }); c && (e.strictDi = null !== Id(c, "strict-di"),
            a(c, d ? [d] : [], e))
    } function tc(b, a, c) {
    J(c) || (c = {}); c = w({ strictDi: !1 }, c); var d = function () {
        b = C(b); if (b.injector()) { var d = b[0] === X ? "document" : ua(b); throw Ka("btstrpd", d.replace(/</, "&lt;").replace(/>/, "&gt;")); } a = a || []; a.unshift(["$provide", function (a) { a.value("$rootElement", b) }]); c.debugInfoEnabled && a.push(["$compileProvider", function (a) { a.debugInfoEnabled(!0) }]); a.unshift("ng"); d = ab(a, c.strictDi); d.invoke(["$rootScope", "$rootElement", "$compile", "$injector", function (a, b, c, d) {
            a.$apply(function () {
                b.data("$injector",
                    d); c(b)(a)
            })
        }]); return d
    }, e = /^NG_ENABLE_DEBUG_INFO!/, f = /^NG_DEFER_BOOTSTRAP!/; P && e.test(P.name) && (c.debugInfoEnabled = !0, P.name = P.name.replace(e, "")); if (P && !f.test(P.name)) return d(); P.name = P.name.replace(f, ""); aa.resumeBootstrap = function (b) { s(b, function (b) { a.push(b) }); return d() }; G(aa.resumeDeferredBootstrap) && aa.resumeDeferredBootstrap()
    } function Kd() { P.name = "NG_ENABLE_DEBUG_INFO!" + P.name; P.location.reload() } function Ld(b) { b = aa.element(b).injector(); if (!b) throw Ka("test"); return b.get("$$testability") }
    function uc(b, a) { a = a || "_"; return b.replace(Md, function (b, d) { return (d ? a : "") + b.toLowerCase() }) } function Nd() { var b; vc || ((ra = P.jQuery) && ra.fn.on ? (C = ra, w(ra.fn, { scope: La.scope, isolateScope: La.isolateScope, controller: La.controller, injector: La.injector, inheritedData: La.inheritedData }), b = ra.cleanData, ra.cleanData = function (a) { var c; if (Rb) Rb = !1; else for (var d = 0, e; null != (e = a[d]); d++)(c = ra._data(e, "events")) && c.$destroy && ra(e).triggerHandler("$destroy"); b(a) }) : C = Q, aa.element = C, vc = !0) } function Sb(b, a, c) {
        if (!b) throw Ka("areq",
            a || "?", c || "required"); return b
    } function tb(b, a, c) { c && E(b) && (b = b[b.length - 1]); Sb(G(b), a, "not a function, got " + (b && "object" === typeof b ? b.constructor.name || "Object" : typeof b)); return b } function Ma(b, a) { if ("hasOwnProperty" === b) throw Ka("badname", a); } function wc(b, a, c) { if (!a) return b; a = a.split("."); for (var d, e = b, f = a.length, g = 0; g < f; g++)d = a[g], b && (b = (e = b)[d]); return !c && G(b) ? oc(e, b) : b } function ub(b) { var a = b[0]; b = b[b.length - 1]; var c = [a]; do { a = a.nextSibling; if (!a) break; c.push(a) } while (a !== b); return C(c) } function fa() { return Object.create(null) }
    function Od(b) {
        function a(a, b, c) { return a[b] || (a[b] = c()) } var c = M("$injector"), d = M("ng"); b = a(b, "angular", Object); b.$$minErr = b.$$minErr || M; return a(b, "module", function () {
            var b = {}; return function (f, g, h) {
                if ("hasOwnProperty" === f) throw d("badname", "module"); g && b.hasOwnProperty(f) && (b[f] = null); return a(b, f, function () {
                    function a(c, d, e, f) { f || (f = b); return function () { f[e || "push"]([c, d, arguments]); return t } } if (!g) throw c("nomod", f); var b = [], d = [], e = [], q = a("$injector", "invoke", "push", d), t = {
                        _invokeQueue: b, _configBlocks: d,
                        _runBlocks: e, requires: g, name: f, provider: a("$provide", "provider"), factory: a("$provide", "factory"), service: a("$provide", "service"), value: a("$provide", "value"), constant: a("$provide", "constant", "unshift"), animation: a("$animateProvider", "register"), filter: a("$filterProvider", "register"), controller: a("$controllerProvider", "register"), directive: a("$compileProvider", "directive"), config: q, run: function (a) { e.push(a); return this }
                    }; h && q(h); return t
                })
            }
        })
    } function Pd(b) {
        w(b, {
            bootstrap: tc, copy: Ea, extend: w, equals: ea,
            element: C, forEach: s, injector: ab, noop: B, bind: oc, toJson: $a, fromJson: pc, identity: oa, isUndefined: z, isDefined: y, isString: x, isFunction: G, isObject: J, isNumber: V, isElement: nc, isArray: E, version: Qd, isDate: pa, lowercase: R, uppercase: vb, callbacks: { counter: 0 }, getTestability: Ld, $$minErr: M, $$csp: bb, reloadWithDebugInfo: Kd
        }); cb = Od(P); try { cb("ngLocale") } catch (a) { cb("ngLocale", []).provider("$locale", Rd) } cb("ng", ["ngLocale"], ["$provide", function (a) {
            a.provider({ $$sanitizeUri: Sd }); a.provider("$compile", xc).directive({
                a: Td,
                input: yc, textarea: yc, form: Ud, script: Vd, select: Wd, style: Xd, option: Yd, ngBind: Zd, ngBindHtml: $d, ngBindTemplate: ae, ngClass: be, ngClassEven: ce, ngClassOdd: de, ngCloak: ee, ngController: fe, ngForm: ge, ngHide: he, ngIf: ie, ngInclude: je, ngInit: ke, ngNonBindable: le, ngPluralize: me, ngRepeat: ne, ngShow: oe, ngStyle: pe, ngSwitch: qe, ngSwitchWhen: re, ngSwitchDefault: se, ngOptions: te, ngTransclude: ue, ngModel: ve, ngList: we, ngChange: xe, pattern: zc, ngPattern: zc, required: Ac, ngRequired: Ac, minlength: Bc, ngMinlength: Bc, maxlength: Cc, ngMaxlength: Cc,
                ngValue: ye, ngModelOptions: ze
            }).directive({ ngInclude: Ae }).directive(wb).directive(Dc); a.provider({ $anchorScroll: Be, $animate: Ce, $browser: De, $cacheFactory: Ee, $controller: Fe, $document: Ge, $exceptionHandler: He, $filter: Ec, $interpolate: Ie, $interval: Je, $http: Ke, $httpBackend: Le, $location: Me, $log: Ne, $parse: Oe, $rootScope: Pe, $q: Qe, $$q: Re, $sce: Se, $sceDelegate: Te, $sniffer: Ue, $templateCache: Ve, $templateRequest: We, $$testability: Xe, $timeout: Ye, $window: Ze, $$rAF: $e, $$asyncCallback: af, $$jqLite: bf })
        }])
    } function db(b) {
        return b.replace(cf,
            function (a, b, d, e) { return e ? d.toUpperCase() : d }).replace(df, "Moz$1")
    } function Fc(b) { b = b.nodeType; return b === na || !b || 9 === b } function Gc(b, a) {
        var c, d, e = a.createDocumentFragment(), f = []; if (Tb.test(b)) { c = c || e.appendChild(a.createElement("div")); d = (ef.exec(b) || ["", ""])[1].toLowerCase(); d = ga[d] || ga._default; c.innerHTML = d[1] + b.replace(ff, "<$1></$2>") + d[2]; for (d = d[0]; d--;)c = c.lastChild; f = Ya(f, c.childNodes); c = e.firstChild; c.textContent = "" } else f.push(a.createTextNode(b)); e.textContent = ""; e.innerHTML = ""; s(f, function (a) { e.appendChild(a) });
        return e
    } function Q(b) { if (b instanceof Q) return b; var a; x(b) && (b = T(b), a = !0); if (!(this instanceof Q)) { if (a && "<" != b.charAt(0)) throw Ub("nosel"); return new Q(b) } if (a) { a = X; var c; b = (c = gf.exec(b)) ? [a.createElement(c[1])] : (c = Gc(b, a)) ? c.childNodes : [] } Hc(this, b) } function Vb(b) { return b.cloneNode(!0) } function xb(b, a) { a || yb(b); if (b.querySelectorAll) for (var c = b.querySelectorAll("*"), d = 0, e = c.length; d < e; d++)yb(c[d]) } function Ic(b, a, c, d) {
        if (y(d)) throw Ub("offargs"); var e = (d = zb(b)) && d.events, f = d && d.handle; if (f) if (a) s(a.split(" "),
            function (a) { if (y(c)) { var d = e[a]; Xa(d || [], c); if (d && 0 < d.length) return } b.removeEventListener(a, f, !1); delete e[a] }); else for (a in e) "$destroy" !== a && b.removeEventListener(a, f, !1), delete e[a]
    } function yb(b, a) { var c = b.ng339, d = c && Ab[c]; d && (a ? delete d.data[a] : (d.handle && (d.events.$destroy && d.handle({}, "$destroy"), Ic(b)), delete Ab[c], b.ng339 = u)) } function zb(b, a) { var c = b.ng339, c = c && Ab[c]; a && !c && (b.ng339 = c = ++hf, c = Ab[c] = { events: {}, data: {}, handle: u }); return c } function Wb(b, a, c) {
        if (Fc(b)) {
            var d = y(c), e = !d && a && !J(a),
            f = !a; b = (b = zb(b, !e)) && b.data; if (d) b[a] = c; else { if (f) return b; if (e) return b && b[a]; w(b, a) }
        }
    } function Bb(b, a) { return b.getAttribute ? -1 < (" " + (b.getAttribute("class") || "") + " ").replace(/[\n\t]/g, " ").indexOf(" " + a + " ") : !1 } function Cb(b, a) { a && b.setAttribute && s(a.split(" "), function (a) { b.setAttribute("class", T((" " + (b.getAttribute("class") || "") + " ").replace(/[\n\t]/g, " ").replace(" " + T(a) + " ", " "))) }) } function Db(b, a) {
        if (a && b.setAttribute) {
            var c = (" " + (b.getAttribute("class") || "") + " ").replace(/[\n\t]/g, " ");
            s(a.split(" "), function (a) { a = T(a); -1 === c.indexOf(" " + a + " ") && (c += a + " ") }); b.setAttribute("class", T(c))
        }
    } function Hc(b, a) { if (a) if (a.nodeType) b[b.length++] = a; else { var c = a.length; if ("number" === typeof c && a.window !== a) { if (c) for (var d = 0; d < c; d++)b[b.length++] = a[d] } else b[b.length++] = a } } function Jc(b, a) { return Eb(b, "$" + (a || "ngController") + "Controller") } function Eb(b, a, c) {
    9 == b.nodeType && (b = b.documentElement); for (a = E(a) ? a : [a]; b;) {
        for (var d = 0, e = a.length; d < e; d++)if ((c = C.data(b, a[d])) !== u) return c; b = b.parentNode ||
            11 === b.nodeType && b.host
    }
    } function Kc(b) { for (xb(b, !0); b.firstChild;)b.removeChild(b.firstChild) } function Lc(b, a) { a || xb(b); var c = b.parentNode; c && c.removeChild(b) } function jf(b, a) { a = a || P; if ("complete" === a.document.readyState) a.setTimeout(b); else C(a).on("load", b) } function Mc(b, a) { var c = Fb[a.toLowerCase()]; return c && Nc[ta(b)] && c } function kf(b, a) { var c = b.nodeName; return ("INPUT" === c || "TEXTAREA" === c) && Oc[a] } function lf(b, a) {
        var c = function (c, e) {
        c.isDefaultPrevented = function () { return c.defaultPrevented }; var f =
            a[e || c.type], g = f ? f.length : 0; if (g) { if (z(c.immediatePropagationStopped)) { var h = c.stopImmediatePropagation; c.stopImmediatePropagation = function () { c.immediatePropagationStopped = !0; c.stopPropagation && c.stopPropagation(); h && h.call(c) } } c.isImmediatePropagationStopped = function () { return !0 === c.immediatePropagationStopped }; 1 < g && (f = qa(f)); for (var l = 0; l < g; l++)c.isImmediatePropagationStopped() || f[l].call(b, c) }
        }; c.elem = b; return c
    } function bf() {
    this.$get = function () {
        return w(Q, {
            hasClass: function (b, a) {
            b.attr && (b = b[0]);
                return Bb(b, a)
            }, addClass: function (b, a) { b.attr && (b = b[0]); return Db(b, a) }, removeClass: function (b, a) { b.attr && (b = b[0]); return Cb(b, a) }
        })
    }
    } function Na(b, a) { var c = b && b.$$hashKey; if (c) return "function" === typeof c && (c = b.$$hashKey()), c; c = typeof b; return c = "function" == c || "object" == c && null !== b ? b.$$hashKey = c + ":" + (a || Fd)() : c + ":" + b } function eb(b, a) { if (a) { var c = 0; this.nextUid = function () { return ++c } } s(b, this.put, this) } function mf(b) {
        return (b = b.toString().replace(Pc, "").match(Qc)) ? "function(" + (b[1] || "").replace(/[\s\r\n]+/,
            " ") + ")" : "fn"
    } function ab(b, a) {
        function c(a) { return function (b, c) { if (J(b)) s(b, lc(a)); else return a(b, c) } } function d(a, b) { Ma(a, "service"); if (G(b) || E(b)) b = q.instantiate(b); if (!b.$get) throw Ga("pget", a); return p[a + "Provider"] = b } function e(a, b) { return function () { var c = r.invoke(b, this); if (z(c)) throw Ga("undef", a); return c } } function f(a, b, c) { return d(a, { $get: !1 !== c ? e(a, b) : b }) } function g(a) {
            var b = [], c; s(a, function (a) {
                function d(a) {
                    var b, c; b = 0; for (c = a.length; b < c; b++) {
                        var e = a[b], f = q.get(e[0]); f[e[1]].apply(f,
                            e[2])
                    }
                } if (!m.get(a)) { m.put(a, !0); try { x(a) ? (c = cb(a), b = b.concat(g(c.requires)).concat(c._runBlocks), d(c._invokeQueue), d(c._configBlocks)) : G(a) ? b.push(q.invoke(a)) : E(a) ? b.push(q.invoke(a)) : tb(a, "module") } catch (e) { throw E(a) && (a = a[a.length - 1]), e.message && e.stack && -1 == e.stack.indexOf(e.message) && (e = e.message + "\n" + e.stack), Ga("modulerr", a, e.stack || e.message || e); } }
            }); return b
        } function h(b, c) {
            function d(a, e) {
                if (b.hasOwnProperty(a)) { if (b[a] === l) throw Ga("cdep", a + " <- " + k.join(" <- ")); return b[a] } try {
                    return k.unshift(a),
                        b[a] = l, b[a] = c(a, e)
                } catch (f) { throw b[a] === l && delete b[a], f; } finally { k.shift() }
            } function e(b, c, f, g) { "string" === typeof f && (g = f, f = null); var h = [], k = ab.$$annotate(b, a, g), l, q, p; q = 0; for (l = k.length; q < l; q++) { p = k[q]; if ("string" !== typeof p) throw Ga("itkn", p); h.push(f && f.hasOwnProperty(p) ? f[p] : d(p, g)) } E(b) && (b = b[l]); return b.apply(c, h) } return {
                invoke: e, instantiate: function (a, b, c) { var d = Object.create((E(a) ? a[a.length - 1] : a).prototype || null); a = e(a, d, b, c); return J(a) || G(a) ? a : d }, get: d, annotate: ab.$$annotate, has: function (a) {
                    return p.hasOwnProperty(a +
                        "Provider") || b.hasOwnProperty(a)
                }
            }
        } a = !0 === a; var l = {}, k = [], m = new eb([], !0), p = { $provide: { provider: c(d), factory: c(f), service: c(function (a, b) { return f(a, ["$injector", function (a) { return a.instantiate(b) }]) }), value: c(function (a, b) { return f(a, da(b), !1) }), constant: c(function (a, b) { Ma(a, "constant"); p[a] = b; t[a] = b }), decorator: function (a, b) { var c = q.get(a + "Provider"), d = c.$get; c.$get = function () { var a = r.invoke(d, c); return r.invoke(b, null, { $delegate: a }) } } } }, q = p.$injector = h(p, function (a, b) {
            aa.isString(b) && k.push(b);
            throw Ga("unpr", k.join(" <- "));
        }), t = {}, r = t.$injector = h(t, function (a, b) { var c = q.get(a + "Provider", b); return r.invoke(c.$get, c, u, a) }); s(g(b), function (a) { r.invoke(a || B) }); return r
    } function Be() {
        var b = !0; this.disableAutoScrolling = function () { b = !1 }; this.$get = ["$window", "$location", "$rootScope", function (a, c, d) {
            function e(a) { var b = null; Array.prototype.some.call(a, function (a) { if ("a" === ta(a)) return b = a, !0 }); return b } function f(b) {
                if (b) {
                    b.scrollIntoView(); var c; c = g.yOffset; G(c) ? c = c() : nc(c) ? (c = c[0], c = "fixed" !==
                        a.getComputedStyle(c).position ? 0 : c.getBoundingClientRect().bottom) : V(c) || (c = 0); c && (b = b.getBoundingClientRect().top, a.scrollBy(0, b - c))
                } else a.scrollTo(0, 0)
            } function g() { var a = c.hash(), b; a ? (b = h.getElementById(a)) ? f(b) : (b = e(h.getElementsByName(a))) ? f(b) : "top" === a && f(null) : f(null) } var h = a.document; b && d.$watch(function () { return c.hash() }, function (a, b) { a === b && "" === a || jf(function () { d.$evalAsync(g) }) }); return g
        }]
    } function af() {
    this.$get = ["$$rAF", "$timeout", function (b, a) {
        return b.supported ? function (a) { return b(a) } :
            function (b) { return a(b, 0, !1) }
    }]
    } function nf(b, a, c, d) {
        function e(a) { try { a.apply(null, Za.call(arguments, 1)) } finally { if (n-- , 0 === n) for (; D.length;)try { D.pop()() } catch (b) { c.error(b) } } } function f(a, b) { (function ca() { s(H, function (a) { a() }); v = b(ca, a) })() } function g() { h(); l() } function h() { A = b.history.state; A = z(A) ? null : A; ea(A, O) && (A = O); O = A } function l() { if (F !== m.url() || N !== A) F = m.url(), N = A, s(W, function (a) { a(m.url(), A) }) } function k(a) { try { return decodeURIComponent(a) } catch (b) { return a } } var m = this, p = a[0], q = b.location,
            t = b.history, r = b.setTimeout, S = b.clearTimeout, K = {}; m.isMock = !1; var n = 0, D = []; m.$$completeOutstandingRequest = e; m.$$incOutstandingRequestCount = function () { n++ }; m.notifyWhenNoOutstandingRequests = function (a) { s(H, function (a) { a() }); 0 === n ? a() : D.push(a) }; var H = [], v; m.addPollFn = function (a) { z(v) && f(100, r); H.push(a); return a }; var A, N, F = q.href, ba = a.find("base"), I = null; h(); N = A; m.url = function (a, c, e) {
            z(e) && (e = null); q !== b.location && (q = b.location); t !== b.history && (t = b.history); if (a) {
                var f = N === e; if (F === a && (!d.history ||
                    f)) return m; var g = F && Ha(F) === Ha(a); F = a; N = e; !d.history || g && f ? (g || (I = a), c ? q.replace(a) : g ? (c = q, e = a.indexOf("#"), a = -1 === e ? "" : a.substr(e + 1), c.hash = a) : q.href = a) : (t[c ? "replaceState" : "pushState"](e, "", a), h(), N = A); return m
            } return I || q.href.replace(/%27/g, "'")
            }; m.state = function () { return A }; var W = [], va = !1, O = null; m.onUrlChange = function (a) { if (!va) { if (d.history) C(b).on("popstate", g); C(b).on("hashchange", g); va = !0 } W.push(a); return a }; m.$$checkUrlChange = l; m.baseHref = function () {
                var a = ba.attr("href"); return a ? a.replace(/^(https?\:)?\/\/[^\/]*/,
                    "") : ""
            }; var wa = {}, y = "", ha = m.baseHref(); m.cookies = function (a, b) {
                var d, e, f, g; if (a) b === u ? p.cookie = encodeURIComponent(a) + "=;path=" + ha + ";expires=Thu, 01 Jan 1970 00:00:00 GMT" : x(b) && (d = (p.cookie = encodeURIComponent(a) + "=" + encodeURIComponent(b) + ";path=" + ha).length + 1, 4096 < d && c.warn("Cookie '" + a + "' possibly not set or overflowed because it was too large (" + d + " > 4096 bytes)!")); else {
                    if (p.cookie !== y) for (y = p.cookie, d = y.split("; "), wa = {}, f = 0; f < d.length; f++)e = d[f], g = e.indexOf("="), 0 < g && (a = k(e.substring(0, g)),
                        wa[a] === u && (wa[a] = k(e.substring(g + 1)))); return wa
                }
            }; m.defer = function (a, b) { var c; n++; c = r(function () { delete K[c]; e(a) }, b || 0); K[c] = !0; return c }; m.defer.cancel = function (a) { return K[a] ? (delete K[a], S(a), e(B), !0) : !1 }
    } function De() { this.$get = ["$window", "$log", "$sniffer", "$document", function (b, a, c, d) { return new nf(b, d, a, c) }] } function Ee() {
    this.$get = function () {
        function b(b, d) {
            function e(a) { a != p && (q ? q == a && (q = a.n) : q = a, f(a.n, a.p), f(a, p), p = a, p.n = null) } function f(a, b) { a != b && (a && (a.p = b), b && (b.n = a)) } if (b in a) throw M("$cacheFactory")("iid",
                b); var g = 0, h = w({}, d, { id: b }), l = {}, k = d && d.capacity || Number.MAX_VALUE, m = {}, p = null, q = null; return a[b] = {
                    put: function (a, b) { if (k < Number.MAX_VALUE) { var c = m[a] || (m[a] = { key: a }); e(c) } if (!z(b)) return a in l || g++ , l[a] = b, g > k && this.remove(q.key), b }, get: function (a) { if (k < Number.MAX_VALUE) { var b = m[a]; if (!b) return; e(b) } return l[a] }, remove: function (a) { if (k < Number.MAX_VALUE) { var b = m[a]; if (!b) return; b == p && (p = b.p); b == q && (q = b.n); f(b.n, b.p); delete m[a] } delete l[a]; g-- }, removeAll: function () { l = {}; g = 0; m = {}; p = q = null }, destroy: function () {
                        m =
                        h = l = null; delete a[b]
                    }, info: function () { return w({}, h, { size: g }) }
                }
        } var a = {}; b.info = function () { var b = {}; s(a, function (a, e) { b[e] = a.info() }); return b }; b.get = function (b) { return a[b] }; return b
    }
    } function Ve() { this.$get = ["$cacheFactory", function (b) { return b("templates") }] } function xc(b, a) {
        function c(a, b) { var c = /^\s*([@&]|=(\*?))(\??)\s*(\w*)\s*$/, d = {}; s(a, function (a, e) { var f = a.match(c); if (!f) throw ia("iscp", b, e, a); d[e] = { mode: f[1][0], collection: "*" === f[2], optional: "?" === f[3], attrName: f[4] || e } }); return d } var d =
            {}, e = /^\s*directive\:\s*([\w\-]+)\s+(.*)$/, f = /(([\w\-]+)(?:\:([^;]+))?;?)/, g = Gd("ngSrc,ngSrcset,src,srcset"), h = /^(?:(\^\^?)?(\?)?(\^\^?)?)?/, l = /^(on[a-z]+|formaction)$/; this.directive = function p(a, e) {
                Ma(a, "directive"); x(a) ? (Sb(e, "directiveFactory"), d.hasOwnProperty(a) || (d[a] = [], b.factory(a + "Directive", ["$injector", "$exceptionHandler", function (b, e) {
                    var f = []; s(d[a], function (d, g) {
                        try {
                            var h = b.invoke(d); G(h) ? h = { compile: da(h) } : !h.compile && h.link && (h.compile = da(h.link)); h.priority = h.priority || 0; h.index =
                                g; h.name = h.name || a; h.require = h.require || h.controller && h.name; h.restrict = h.restrict || "EA"; J(h.scope) && (h.$$isolateBindings = c(h.scope, h.name)); f.push(h)
                        } catch (l) { e(l) }
                    }); return f
                }])), d[a].push(e)) : s(a, lc(p)); return this
            }; this.aHrefSanitizationWhitelist = function (b) { return y(b) ? (a.aHrefSanitizationWhitelist(b), this) : a.aHrefSanitizationWhitelist() }; this.imgSrcSanitizationWhitelist = function (b) { return y(b) ? (a.imgSrcSanitizationWhitelist(b), this) : a.imgSrcSanitizationWhitelist() }; var k = !0; this.debugInfoEnabled =
                function (a) { return y(a) ? (k = a, this) : k }; this.$get = ["$injector", "$interpolate", "$exceptionHandler", "$templateRequest", "$parse", "$controller", "$rootScope", "$document", "$sce", "$animate", "$$sanitizeUri", function (a, b, c, r, S, K, n, D, H, v, A) {
                    function N(a, b) { try { a.addClass(b) } catch (c) { } } function F(a, b, c, d, e) {
                    a instanceof C || (a = C(a)); s(a, function (b, c) { b.nodeType == qb && b.nodeValue.match(/\S+/) && (a[c] = C(b).wrap("<span></span>").parent()[0]) }); var f = ba(a, b, a, c, d, e); F.$$addScopeClass(a); var g = null; return function (b,
                        c, d) { Sb(b, "scope"); d = d || {}; var e = d.parentBoundTranscludeFn, h = d.transcludeControllers; d = d.futureParentElement; e && e.$$boundTransclude && (e = e.$$boundTransclude); g || (g = (d = d && d[0]) ? "foreignobject" !== ta(d) && d.toString().match(/SVG/) ? "svg" : "html" : "html"); d = "html" !== g ? C(Xb(g, C("<div>").append(a).html())) : c ? La.clone.call(a) : a; if (h) for (var l in h) d.data("$" + l + "Controller", h[l].instance); F.$$addScopeInfo(d, b); c && c(d, b); f && f(b, d, d, e); return d }
                    } function ba(a, b, c, d, e, f) {
                        function g(a, c, d, e) {
                            var f, l, k, q, p, r, D; if (n) for (D =
                                Array(c.length), q = 0; q < h.length; q += 3)f = h[q], D[f] = c[f]; else D = c; q = 0; for (p = h.length; q < p;)l = D[h[q++]], c = h[q++], f = h[q++], c ? (c.scope ? (k = a.$new(), F.$$addScopeInfo(C(l), k)) : k = a, r = c.transcludeOnThisElement ? I(a, c.transclude, e, c.elementTranscludeOnThisElement) : !c.templateOnThisElement && e ? e : !e && b ? I(a, b) : null, c(f, k, l, d, r)) : f && f(a, l.childNodes, u, e)
                        } for (var h = [], l, k, q, p, n, r = 0; r < a.length; r++) {
                            l = new Yb; k = W(a[r], [], l, 0 === r ? d : u, e); (f = k.length ? y(k, a[r], l, b, c, null, [], [], f) : null) && f.scope && F.$$addScopeClass(l.$$element);
                            l = f && f.terminal || !(q = a[r].childNodes) || !q.length ? null : ba(q, f ? (f.transcludeOnThisElement || !f.templateOnThisElement) && f.transclude : b); if (f || l) h.push(r, f, l), p = !0, n = n || f; f = null
                        } return p ? g : null
                    } function I(a, b, c, d) { return function (d, e, f, g, h) { d || (d = a.$new(!1, h), d.$$transcluded = !0); return b(d, e, { parentBoundTranscludeFn: c, transcludeControllers: f, futureParentElement: g }) } } function W(a, b, c, d, g) {
                        var h = c.$attr, l; switch (a.nodeType) {
                            case na: ha(b, ya(ta(a)), "E", d, g); for (var k, q, p, n = a.attributes, r = 0, D = n && n.length; r <
                                D; r++) { var S = !1, t = !1; k = n[r]; l = k.name; q = T(k.value); k = ya(l); if (p = Pa.test(k)) l = l.replace(Sc, "").substr(8).replace(/_(.)/g, function (a, b) { return b.toUpperCase() }); var A = k.replace(/(Start|End)$/, ""); fb(A) && k === A + "Start" && (S = l, t = l.substr(0, l.length - 5) + "end", l = l.substr(0, l.length - 6)); k = ya(l.toLowerCase()); h[k] = l; if (p || !c.hasOwnProperty(k)) c[k] = q, Mc(a, k) && (c[k] = !0); Aa(a, b, q, k, p); ha(b, k, "A", d, g, S, t) } a = a.className; J(a) && (a = a.animVal); if (x(a) && "" !== a) for (; l = f.exec(a);)k = ya(l[2]), ha(b, k, "C", d, g) && (c[k] = T(l[3])),
                                    a = a.substr(l.index + l[0].length); break; case qb: P(b, a.nodeValue); break; case 8: try { if (l = e.exec(a.nodeValue)) k = ya(l[1]), ha(b, k, "M", d, g) && (c[k] = T(l[2])) } catch (v) { }
                        }b.sort(ca); return b
                    } function va(a, b, c) { var d = [], e = 0; if (b && a.hasAttribute && a.hasAttribute(b)) { do { if (!a) throw ia("uterdir", b, c); a.nodeType == na && (a.hasAttribute(b) && e++ , a.hasAttribute(c) && e--); d.push(a); a = a.nextSibling } while (0 < e) } else d.push(a); return C(d) } function O(a, b, c) { return function (d, e, f, g, h) { e = va(e[0], b, c); return a(d, e, f, g, h) } } function y(a,
                        d, e, f, g, l, k, p, n) {
                            function r(a, b, c, d) { if (a) { c && (a = O(a, c, d)); a.require = L.require; a.directiveName = ca; if (I === L || L.$$isolateScope) a = Y(a, { isolateScope: !0 }); k.push(a) } if (b) { c && (b = O(b, c, d)); b.require = L.require; b.directiveName = ca; if (I === L || L.$$isolateScope) b = Y(b, { isolateScope: !0 }); p.push(b) } } function D(a, b, c, d) {
                                var e, f = "data", g = !1, l = c, k; if (x(b)) {
                                    k = b.match(h); b = b.substring(k[0].length); k[3] && (k[1] ? k[3] = null : k[1] = k[3]); "^" === k[1] ? f = "inheritedData" : "^^" === k[1] && (f = "inheritedData", l = c.parent()); "?" === k[2] && (g =
                                        !0); e = null; d && "data" === f && (e = d[b]) && (e = e.instance); e = e || l[f]("$" + b + "Controller"); if (!e && !g) throw ia("ctreq", b, a); return e || null
                                } E(b) && (e = [], s(b, function (b) { e.push(D(a, b, c, d)) })); return e
                            } function A(a, c, f, g, h) {
                                function l(a, b, c) { var d; Va(a) || (c = b, b = a, a = u); B && (d = N); c || (c = B ? W.parent() : W); return h(a, b, d, c, va) } var n, r, t, v, N, gb, W, O; d === f ? (O = e, W = e.$$element) : (W = C(f), O = new Yb(W, e)); I && (v = c.$new(!0)); h && (gb = l, gb.$$boundTransclude = h); H && (ba = {}, N = {}, s(H, function (a) {
                                    var b = {
                                        $scope: a === I || a.$$isolateScope ? v : c, $element: W,
                                        $attrs: O, $transclude: gb
                                    }; t = a.controller; "@" == t && (t = O[a.name]); b = K(t, b, !0, a.controllerAs); N[a.name] = b; B || W.data("$" + a.name + "Controller", b.instance); ba[a.name] = b
                                })); if (I) {
                                    F.$$addScopeInfo(W, v, !0, !(ja && (ja === I || ja === I.$$originalDirective))); F.$$addScopeClass(W, !0); g = ba && ba[I.name]; var xa = v; g && g.identifier && !0 === I.bindToController && (xa = g.instance); s(v.$$isolateBindings = I.$$isolateBindings, function (a, d) {
                                        var e = a.attrName, f = a.optional, g, h, l, k; switch (a.mode) {
                                            case "@": O.$observe(e, function (a) { xa[d] = a }); O.$$observers[e].$$scope =
                                                c; O[e] && (xa[d] = b(O[e])(c)); break; case "=": if (f && !O[e]) break; h = S(O[e]); k = h.literal ? ea : function (a, b) { return a === b || a !== a && b !== b }; l = h.assign || function () { g = xa[d] = h(c); throw ia("nonassign", O[e], I.name); }; g = xa[d] = h(c); f = function (a) { k(a, xa[d]) || (k(a, g) ? l(c, a = xa[d]) : xa[d] = a); return g = a }; f.$stateful = !0; f = a.collection ? c.$watchCollection(O[e], f) : c.$watch(S(O[e], f), null, h.literal); v.$on("$destroy", f); break; case "&": h = S(O[e]), xa[d] = function (a) { return h(c, a) }
                                        }
                                    })
                                } ba && (s(ba, function (a) { a() }), ba = null); g = 0; for (n = k.length; g <
                                    n; g++)r = k[g], Z(r, r.isolateScope ? v : c, W, O, r.require && D(r.directiveName, r.require, W, N), gb); var va = c; I && (I.template || null === I.templateUrl) && (va = v); a && a(va, f.childNodes, u, h); for (g = p.length - 1; 0 <= g; g--)r = p[g], Z(r, r.isolateScope ? v : c, W, O, r.require && D(r.directiveName, r.require, W, N), gb)
                            } n = n || {}; for (var v = -Number.MAX_VALUE, N, H = n.controllerDirectives, ba, I = n.newIsolateScopeDirective, ja = n.templateDirective, wa = n.nonTlbTranscludeDirective, ha = !1, fb = !1, B = n.hasElementTranscludeDirective, w = e.$$element = C(d), L, ca, U, R = f,
                                P, Q = 0, Aa = a.length; Q < Aa; Q++) {
                                    L = a[Q]; var Pa = L.$$start, $ = L.$$end; Pa && (w = va(d, Pa, $)); U = u; if (v > L.priority) break; if (U = L.scope) L.templateUrl || (J(U) ? (Oa("new/isolated scope", I || N, L, w), I = L) : Oa("new/isolated scope", I, L, w)), N = N || L; ca = L.name; !L.templateUrl && L.controller && (U = L.controller, H = H || {}, Oa("'" + ca + "' controller", H[ca], L, w), H[ca] = L); if (U = L.transclude) ha = !0, L.$$tlb || (Oa("transclusion", wa, L, w), wa = L), "element" == U ? (B = !0, v = L.priority, U = w, w = e.$$element = C(X.createComment(" " + ca + ": " + e[ca] + " ")), d = w[0], V(g, Za.call(U,
                                        0), d), R = F(U, f, v, l && l.name, { nonTlbTranscludeDirective: wa })) : (U = C(Vb(d)).contents(), w.empty(), R = F(U, f)); if (L.template) if (fb = !0, Oa("template", ja, L, w), ja = L, U = G(L.template) ? L.template(w, e) : L.template, U = Tc(U), L.replace) { l = L; U = Tb.test(U) ? Uc(Xb(L.templateNamespace, T(U))) : []; d = U[0]; if (1 != U.length || d.nodeType !== na) throw ia("tplrt", ca, ""); V(g, w, d); Aa = { $attr: {} }; U = W(d, [], Aa); var of = a.splice(Q + 1, a.length - (Q + 1)); I && z(U); a = a.concat(U).concat(of); Rc(e, Aa); Aa = a.length } else w.html(U); if (L.templateUrl) fb = !0, Oa("template",
                                            ja, L, w), ja = L, L.replace && (l = L), A = M(a.splice(Q, a.length - Q), w, e, g, ha && R, k, p, { controllerDirectives: H, newIsolateScopeDirective: I, templateDirective: ja, nonTlbTranscludeDirective: wa }), Aa = a.length; else if (L.compile) try { P = L.compile(w, e, R), G(P) ? r(null, P, Pa, $) : P && r(P.pre, P.post, Pa, $) } catch (aa) { c(aa, ua(w)) } L.terminal && (A.terminal = !0, v = Math.max(v, L.priority))
                        } A.scope = N && !0 === N.scope; A.transcludeOnThisElement = ha; A.elementTranscludeOnThisElement = B; A.templateOnThisElement = fb; A.transclude = R; n.hasElementTranscludeDirective =
                            B; return A
                    } function z(a) { for (var b = 0, c = a.length; b < c; b++)a[b] = Pb(a[b], { $$isolateScope: !0 }) } function ha(b, e, f, g, h, l, k) { if (e === h) return null; h = null; if (d.hasOwnProperty(e)) { var q; e = a.get(e + "Directive"); for (var n = 0, r = e.length; n < r; n++)try { q = e[n], (g === u || g > q.priority) && -1 != q.restrict.indexOf(f) && (l && (q = Pb(q, { $$start: l, $$end: k })), b.push(q), h = q) } catch (D) { c(D) } } return h } function fb(b) { if (d.hasOwnProperty(b)) for (var c = a.get(b + "Directive"), e = 0, f = c.length; e < f; e++)if (b = c[e], b.multiElement) return !0; return !1 } function Rc(a,
                        b) { var c = b.$attr, d = a.$attr, e = a.$$element; s(a, function (d, e) { "$" != e.charAt(0) && (b[e] && b[e] !== d && (d += ("style" === e ? ";" : " ") + b[e]), a.$set(e, d, !0, c[e])) }); s(b, function (b, f) { "class" == f ? (N(e, b), a["class"] = (a["class"] ? a["class"] + " " : "") + b) : "style" == f ? (e.attr("style", e.attr("style") + ";" + b), a.style = (a.style ? a.style + ";" : "") + b) : "$" == f.charAt(0) || a.hasOwnProperty(f) || (a[f] = b, d[f] = c[f]) }) } function M(a, b, c, d, e, f, g, h) {
                            var l = [], k, q, p = b[0], n = a.shift(), D = Pb(n, { templateUrl: null, transclude: null, replace: null, $$originalDirective: n }),
                            S = G(n.templateUrl) ? n.templateUrl(b, c) : n.templateUrl, t = n.templateNamespace; b.empty(); r(H.getTrustedResourceUrl(S)).then(function (r) {
                                var A, v; r = Tc(r); if (n.replace) { r = Tb.test(r) ? Uc(Xb(t, T(r))) : []; A = r[0]; if (1 != r.length || A.nodeType !== na) throw ia("tplrt", n.name, S); r = { $attr: {} }; V(d, b, A); var H = W(A, [], r); J(n.scope) && z(H); a = H.concat(a); Rc(c, r) } else A = p, b.html(r); a.unshift(D); k = y(a, A, c, e, b, n, f, g, h); s(d, function (a, c) { a == A && (d[c] = b[0]) }); for (q = ba(b[0].childNodes, e); l.length;) {
                                    r = l.shift(); v = l.shift(); var F = l.shift(),
                                        K = l.shift(), H = b[0]; if (!r.$$destroyed) { if (v !== p) { var O = v.className; h.hasElementTranscludeDirective && n.replace || (H = Vb(A)); V(F, C(v), H); N(C(H), O) } v = k.transcludeOnThisElement ? I(r, k.transclude, K) : K; k(q, r, H, d, v) }
                                } l = null
                            }); return function (a, b, c, d, e) { a = e; b.$$destroyed || (l ? l.push(b, c, d, a) : (k.transcludeOnThisElement && (a = I(b, k.transclude, e)), k(q, b, c, d, a))) }
                        } function ca(a, b) { var c = b.priority - a.priority; return 0 !== c ? c : a.name !== b.name ? a.name < b.name ? -1 : 1 : a.index - b.index } function Oa(a, b, c, d) {
                            if (b) throw ia("multidir",
                                b.name, c.name, a, ua(d));
                        } function P(a, c) { var d = b(c, !0); d && a.push({ priority: 0, compile: function (a) { a = a.parent(); var b = !!a.length; b && F.$$addBindingClass(a); return function (a, c) { var e = c.parent(); b || F.$$addBindingClass(e); F.$$addBindingInfo(e, d.expressions); a.$watch(d, function (a) { c[0].nodeValue = a }) } } }) } function Xb(a, b) { a = R(a || "html"); switch (a) { case "svg": case "math": var c = X.createElement("div"); c.innerHTML = "<" + a + ">" + b + "</" + a + ">"; return c.childNodes[0].childNodes; default: return b } } function Q(a, b) {
                            if ("srcdoc" ==
                                b) return H.HTML; var c = ta(a); if ("xlinkHref" == b || "form" == c && "action" == b || "img" != c && ("src" == b || "ngSrc" == b)) return H.RESOURCE_URL
                        } function Aa(a, c, d, e, f) {
                            var h = Q(a, e); f = g[e] || f; var k = b(d, !0, h, f); if (k) {
                                if ("multiple" === e && "select" === ta(a)) throw ia("selmulti", ua(a)); c.push({
                                    priority: 100, compile: function () {
                                        return {
                                            pre: function (a, c, g) {
                                                c = g.$$observers || (g.$$observers = {}); if (l.test(e)) throw ia("nodomevents"); var n = g[e]; n !== d && (k = n && b(n, !0, h, f), d = n); k && (g[e] = k(a), (c[e] || (c[e] = [])).$$inter = !0, (g.$$observers && g.$$observers[e].$$scope ||
                                                    a).$watch(k, function (a, b) { "class" === e && a != b ? g.$updateClass(a, b) : g.$set(e, a) }))
                                            }
                                        }
                                    }
                                })
                            }
                        } function V(a, b, c) {
                            var d = b[0], e = b.length, f = d.parentNode, g, h; if (a) for (g = 0, h = a.length; g < h; g++)if (a[g] == d) { a[g++] = c; h = g + e - 1; for (var l = a.length; g < l; g++ , h++)h < l ? a[g] = a[h] : delete a[g]; a.length -= e - 1; a.context === d && (a.context = c); break } f && f.replaceChild(c, d); a = X.createDocumentFragment(); a.appendChild(d); C(c).data(C(d).data()); ra ? (Rb = !0, ra.cleanData([d])) : delete C.cache[d[C.expando]]; d = 1; for (e = b.length; d < e; d++)f = b[d], C(f).remove(),
                                a.appendChild(f), delete b[d]; b[0] = c; b.length = 1
                        } function Y(a, b) { return w(function () { return a.apply(null, arguments) }, a, b) } function Z(a, b, d, e, f, g) { try { a(b, d, e, f, g) } catch (h) { c(h, ua(d)) } } var Yb = function (a, b) { if (b) { var c = Object.keys(b), d, e, f; d = 0; for (e = c.length; d < e; d++)f = c[d], this[f] = b[f] } else this.$attr = {}; this.$$element = a }; Yb.prototype = {
                            $normalize: ya, $addClass: function (a) { a && 0 < a.length && v.addClass(this.$$element, a) }, $removeClass: function (a) { a && 0 < a.length && v.removeClass(this.$$element, a) }, $updateClass: function (a,
                                b) { var c = Vc(a, b); c && c.length && v.addClass(this.$$element, c); (c = Vc(b, a)) && c.length && v.removeClass(this.$$element, c) }, $set: function (a, b, d, e) {
                                    var f = this.$$element[0], g = Mc(f, a), h = kf(f, a), f = a; g ? (this.$$element.prop(a, b), e = g) : h && (this[h] = b, f = h); this[a] = b; e ? this.$attr[a] = e : (e = this.$attr[a]) || (this.$attr[a] = e = uc(a, "-")); g = ta(this.$$element); if ("a" === g && "href" === a || "img" === g && "src" === a) this[a] = b = A(b, "src" === a); else if ("img" === g && "srcset" === a) {
                                        for (var g = "", h = T(b), l = /(\s+\d+x\s*,|\s+\d+w\s*,|\s+,|,\s+)/, l = /\s/.test(h) ?
                                            l : /(,)/, h = h.split(l), l = Math.floor(h.length / 2), k = 0; k < l; k++)var q = 2 * k, g = g + A(T(h[q]), !0), g = g + (" " + T(h[q + 1])); h = T(h[2 * k]).split(/\s/); g += A(T(h[0]), !0); 2 === h.length && (g += " " + T(h[1])); this[a] = b = g
                                    } !1 !== d && (null === b || b === u ? this.$$element.removeAttr(e) : this.$$element.attr(e, b)); (a = this.$$observers) && s(a[f], function (a) { try { a(b) } catch (d) { c(d) } })
                                }, $observe: function (a, b) {
                                    var c = this, d = c.$$observers || (c.$$observers = fa()), e = d[a] || (d[a] = []); e.push(b); n.$evalAsync(function () { !e.$$inter && c.hasOwnProperty(a) && b(c[a]) });
                                    return function () { Xa(e, b) }
                                }
                        }; var U = b.startSymbol(), ja = b.endSymbol(), Tc = "{{" == U || "}}" == ja ? oa : function (a) { return a.replace(/\{\{/g, U).replace(/}}/g, ja) }, Pa = /^ngAttr[A-Z]/; F.$$addBindingInfo = k ? function (a, b) { var c = a.data("$binding") || []; E(b) ? c = c.concat(b) : c.push(b); a.data("$binding", c) } : B; F.$$addBindingClass = k ? function (a) { N(a, "ng-binding") } : B; F.$$addScopeInfo = k ? function (a, b, c, d) { a.data(c ? d ? "$isolateScopeNoTemplate" : "$isolateScope" : "$scope", b) } : B; F.$$addScopeClass = k ? function (a, b) {
                            N(a, b ? "ng-isolate-scope" :
                                "ng-scope")
                        } : B; return F
                }]
    } function ya(b) { return db(b.replace(Sc, "")) } function Vc(b, a) { var c = "", d = b.split(/\s+/), e = a.split(/\s+/), f = 0; a: for (; f < d.length; f++) { for (var g = d[f], h = 0; h < e.length; h++)if (g == e[h]) continue a; c += (0 < c.length ? " " : "") + g } return c } function Uc(b) { b = C(b); var a = b.length; if (1 >= a) return b; for (; a--;)8 === b[a].nodeType && pf.call(b, a, 1); return b } function Fe() {
        var b = {}, a = !1, c = /^(\S+)(\s+as\s+(\w+))?$/; this.register = function (a, c) { Ma(a, "controller"); J(a) ? w(b, a) : b[a] = c }; this.allowGlobals = function () {
            a =
            !0
        }; this.$get = ["$injector", "$window", function (d, e) {
            function f(a, b, c, d) { if (!a || !J(a.$scope)) throw M("$controller")("noscp", d, b); a.$scope[b] = c } return function (g, h, l, k) {
                var m, p, q; l = !0 === l; k && x(k) && (q = k); if (x(g)) { k = g.match(c); if (!k) throw qf("ctrlfmt", g); p = k[1]; q = q || k[3]; g = b.hasOwnProperty(p) ? b[p] : wc(h.$scope, p, !0) || (a ? wc(e, p, !0) : u); tb(g, p, !0) } if (l) return l = (E(g) ? g[g.length - 1] : g).prototype, m = Object.create(l || null), q && f(h, q, m, p || g.name), w(function () { d.invoke(g, m, h, p); return m }, { instance: m, identifier: q });
                m = d.instantiate(g, h, p); q && f(h, q, m, p || g.name); return m
            }
        }]
    } function Ge() { this.$get = ["$window", function (b) { return C(b.document) }] } function He() { this.$get = ["$log", function (b) { return function (a, c) { b.error.apply(b, arguments) } }] } function Zb(b, a) { if (x(b)) { var c = b.replace(rf, "").trim(); if (c) { var d = a("Content-Type"); (d = d && 0 === d.indexOf(Wc)) || (d = (d = c.match(sf)) && tf[d[0]].test(c)); d && (b = pc(c)) } } return b } function Xc(b) {
        var a = fa(), c, d, e; if (!b) return a; s(b.split("\n"), function (b) {
            e = b.indexOf(":"); c = R(T(b.substr(0,
                e))); d = T(b.substr(e + 1)); c && (a[c] = a[c] ? a[c] + ", " + d : d)
        }); return a
    } function Yc(b) { var a = J(b) ? b : u; return function (c) { a || (a = Xc(b)); return c ? (c = a[R(c)], void 0 === c && (c = null), c) : a } } function Zc(b, a, c, d) { if (G(d)) return d(b, a, c); s(d, function (d) { b = d(b, a, c) }); return b } function Ke() {
        var b = this.defaults = {
            transformResponse: [Zb], transformRequest: [function (a) { return J(a) && "[object File]" !== Da.call(a) && "[object Blob]" !== Da.call(a) && "[object FormData]" !== Da.call(a) ? $a(a) : a }], headers: {
                common: { Accept: "application/json, text/plain, */*" },
                post: qa($b), put: qa($b), patch: qa($b)
            }, xsrfCookieName: "XSRF-TOKEN", xsrfHeaderName: "X-XSRF-TOKEN"
        }, a = !1; this.useApplyAsync = function (b) { return y(b) ? (a = !!b, this) : a }; var c = this.interceptors = []; this.$get = ["$httpBackend", "$browser", "$cacheFactory", "$rootScope", "$q", "$injector", function (d, e, f, g, h, l) {
            function k(a) {
                function c(a) { var b = w({}, a); b.data = a.data ? Zc(a.data, a.headers, a.status, e.transformResponse) : a.data; a = a.status; return 200 <= a && 300 > a ? b : h.reject(b) } function d(a) {
                    var b, c = {}; s(a, function (a, d) {
                        G(a) ? (b =
                            a(), null != b && (c[d] = b)) : c[d] = a
                    }); return c
                } if (!aa.isObject(a)) throw M("$http")("badreq", a); var e = w({ method: "get", transformRequest: b.transformRequest, transformResponse: b.transformResponse }, a); e.headers = function (a) { var c = b.headers, e = w({}, a.headers), f, g, c = w({}, c.common, c[R(a.method)]); a: for (f in c) { a = R(f); for (g in e) if (R(g) === a) continue a; e[f] = c[f] } return d(e) }(a); e.method = vb(e.method); var f = [function (a) {
                    var d = a.headers, e = Zc(a.data, Yc(d), u, a.transformRequest); z(e) && s(d, function (a, b) {
                    "content-type" === R(b) &&
                        delete d[b]
                    }); z(a.withCredentials) && !z(b.withCredentials) && (a.withCredentials = b.withCredentials); return m(a, e).then(c, c)
                }, u], g = h.when(e); for (s(t, function (a) { (a.request || a.requestError) && f.unshift(a.request, a.requestError); (a.response || a.responseError) && f.push(a.response, a.responseError) }); f.length;) { a = f.shift(); var l = f.shift(), g = g.then(a, l) } g.success = function (a) { g.then(function (b) { a(b.data, b.status, b.headers, e) }); return g }; g.error = function (a) {
                    g.then(null, function (b) { a(b.data, b.status, b.headers, e) });
                    return g
                }; return g
            } function m(c, f) {
                function l(b, c, d, e) { function f() { n(c, b, d, e) } N && (200 <= b && 300 > b ? N.put(I, [b, c, Xc(d), e]) : N.remove(I)); a ? g.$applyAsync(f) : (f(), g.$$phase || g.$apply()) } function n(a, b, d, e) { b = Math.max(b, 0); (200 <= b && 300 > b ? v.resolve : v.reject)({ data: a, status: b, headers: Yc(d), config: c, statusText: e }) } function m(a) { n(a.data, a.status, qa(a.headers()), a.statusText) } function t() { var a = k.pendingRequests.indexOf(c); -1 !== a && k.pendingRequests.splice(a, 1) } var v = h.defer(), A = v.promise, N, F, s = c.headers, I = p(c.url,
                    c.params); k.pendingRequests.push(c); A.then(t, t); !c.cache && !b.cache || !1 === c.cache || "GET" !== c.method && "JSONP" !== c.method || (N = J(c.cache) ? c.cache : J(b.cache) ? b.cache : q); N && (F = N.get(I), y(F) ? F && G(F.then) ? F.then(m, m) : E(F) ? n(F[1], F[0], qa(F[2]), F[3]) : n(F, 200, {}, "OK") : N.put(I, A)); z(F) && ((F = $c(c.url) ? e.cookies()[c.xsrfCookieName || b.xsrfCookieName] : u) && (s[c.xsrfHeaderName || b.xsrfHeaderName] = F), d(c.method, I, f, l, s, c.timeout, c.withCredentials, c.responseType)); return A
            } function p(a, b) {
                if (!b) return a; var c = []; Ed(b,
                    function (a, b) { null === a || z(a) || (E(a) || (a = [a]), s(a, function (a) { J(a) && (a = pa(a) ? a.toISOString() : $a(a)); c.push(Fa(b) + "=" + Fa(a)) })) }); 0 < c.length && (a += (-1 == a.indexOf("?") ? "?" : "&") + c.join("&")); return a
            } var q = f("$http"), t = []; s(c, function (a) { t.unshift(x(a) ? l.get(a) : l.invoke(a)) }); k.pendingRequests = []; (function (a) { s(arguments, function (a) { k[a] = function (b, c) { return k(w(c || {}, { method: a, url: b })) } }) })("get", "delete", "head", "jsonp"); (function (a) {
                s(arguments, function (a) {
                k[a] = function (b, c, d) {
                    return k(w(d || {}, {
                        method: a,
                        url: b, data: c
                    }))
                }
                })
            })("post", "put", "patch"); k.defaults = b; return k
        }]
    } function uf() { return new P.XMLHttpRequest } function Le() { this.$get = ["$browser", "$window", "$document", function (b, a, c) { return vf(b, uf, b.defer, a.angular.callbacks, c[0]) }] } function vf(b, a, c, d, e) {
        function f(a, b, c) {
            var f = e.createElement("script"), m = null; f.type = "text/javascript"; f.src = a; f.async = !0; m = function (a) {
                f.removeEventListener("load", m, !1); f.removeEventListener("error", m, !1); e.body.removeChild(f); f = null; var g = -1, t = "unknown"; a && ("load" !==
                    a.type || d[b].called || (a = { type: "error" }), t = a.type, g = "error" === a.type ? 404 : 200); c && c(g, t)
            }; f.addEventListener("load", m, !1); f.addEventListener("error", m, !1); e.body.appendChild(f); return m
        } return function (e, h, l, k, m, p, q, t) {
            function r() { n && n(); D && D.abort() } function S(a, d, e, f, g) { v !== u && c.cancel(v); n = D = null; a(d, e, f, g); b.$$completeOutstandingRequest(B) } b.$$incOutstandingRequestCount(); h = h || b.url(); if ("jsonp" == R(e)) {
                var K = "_" + (d.counter++).toString(36); d[K] = function (a) { d[K].data = a; d[K].called = !0 }; var n = f(h.replace("JSON_CALLBACK",
                    "angular.callbacks." + K), K, function (a, b) { S(k, a, d[K].data, "", b); d[K] = B })
            } else {
                var D = a(); D.open(e, h, !0); s(m, function (a, b) { y(a) && D.setRequestHeader(b, a) }); D.onload = function () { var a = D.statusText || "", b = "response" in D ? D.response : D.responseText, c = 1223 === D.status ? 204 : D.status; 0 === c && (c = b ? 200 : "file" == Ba(h).protocol ? 404 : 0); S(k, c, b, D.getAllResponseHeaders(), a) }; e = function () { S(k, -1, null, null, "") }; D.onerror = e; D.onabort = e; q && (D.withCredentials = !0); if (t) try { D.responseType = t } catch (H) { if ("json" !== t) throw H; } D.send(l ||
                    null)
            } if (0 < p) var v = c(r, p); else p && G(p.then) && p.then(r)
        }
    } function Ie() {
        var b = "{{", a = "}}"; this.startSymbol = function (a) { return a ? (b = a, this) : b }; this.endSymbol = function (b) { return b ? (a = b, this) : a }; this.$get = ["$parse", "$exceptionHandler", "$sce", function (c, d, e) {
            function f(a) { return "\\\\\\" + a } function g(f, g, t, r) {
                function S(c) { return c.replace(k, b).replace(m, a) } function K(a) {
                    try {
                        var b = a; a = t ? e.getTrusted(t, b) : e.valueOf(b); var c; if (r && !y(a)) c = a; else if (null == a) c = ""; else {
                            switch (typeof a) {
                                case "string": break; case "number": a =
                                    "" + a; break; default: a = $a(a)
                            }c = a
                        } return c
                    } catch (g) { c = ac("interr", f, g.toString()), d(c) }
                } r = !!r; for (var n, D, H = 0, v = [], A = [], N = f.length, F = [], s = []; H < N;)if (-1 != (n = f.indexOf(b, H)) && -1 != (D = f.indexOf(a, n + h))) H !== n && F.push(S(f.substring(H, n))), H = f.substring(n + h, D), v.push(H), A.push(c(H, K)), H = D + l, s.push(F.length), F.push(""); else { H !== N && F.push(S(f.substring(H))); break } if (t && 1 < F.length) throw ac("noconcat", f); if (!g || v.length) {
                    var I = function (a) { for (var b = 0, c = v.length; b < c; b++) { if (r && z(a[b])) return; F[s[b]] = a[b] } return F.join("") };
                    return w(function (a) { var b = 0, c = v.length, e = Array(c); try { for (; b < c; b++)e[b] = A[b](a); return I(e) } catch (g) { a = ac("interr", f, g.toString()), d(a) } }, { exp: f, expressions: v, $$watchDelegate: function (a, b, c) { var d; return a.$watchGroup(A, function (c, e) { var f = I(c); G(b) && b.call(this, f, c !== e ? d : f, a); d = f }, c) } })
                }
            } var h = b.length, l = a.length, k = new RegExp(b.replace(/./g, f), "g"), m = new RegExp(a.replace(/./g, f), "g"); g.startSymbol = function () { return b }; g.endSymbol = function () { return a }; return g
        }]
    } function Je() {
    this.$get = ["$rootScope",
        "$window", "$q", "$$q", function (b, a, c, d) { function e(e, h, l, k) { var m = a.setInterval, p = a.clearInterval, q = 0, t = y(k) && !k, r = (t ? d : c).defer(), S = r.promise; l = y(l) ? l : 0; S.then(null, null, e); S.$$intervalId = m(function () { r.notify(q++); 0 < l && q >= l && (r.resolve(q), p(S.$$intervalId), delete f[S.$$intervalId]); t || b.$apply() }, h); f[S.$$intervalId] = r; return S } var f = {}; e.cancel = function (b) { return b && b.$$intervalId in f ? (f[b.$$intervalId].reject("canceled"), a.clearInterval(b.$$intervalId), delete f[b.$$intervalId], !0) : !1 }; return e }]
    }
    function Rd() {
    this.$get = function () {
        return {
            id: "en-us", NUMBER_FORMATS: { DECIMAL_SEP: ".", GROUP_SEP: ",", PATTERNS: [{ minInt: 1, minFrac: 0, maxFrac: 3, posPre: "", posSuf: "", negPre: "-", negSuf: "", gSize: 3, lgSize: 3 }, { minInt: 1, minFrac: 2, maxFrac: 2, posPre: "\u00a4", posSuf: "", negPre: "(\u00a4", negSuf: ")", gSize: 3, lgSize: 3 }], CURRENCY_SYM: "$" }, DATETIME_FORMATS: {
                MONTH: "January February March April May June July August September October November December".split(" "), SHORTMONTH: "Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec".split(" "),
                DAY: "Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "), SHORTDAY: "Sun Mon Tue Wed Thu Fri Sat".split(" "), AMPMS: ["AM", "PM"], medium: "MMM d, y h:mm:ss a", "short": "M/d/yy h:mm a", fullDate: "EEEE, MMMM d, y", longDate: "MMMM d, y", mediumDate: "MMM d, y", shortDate: "M/d/yy", mediumTime: "h:mm:ss a", shortTime: "h:mm a"
            }, pluralCat: function (b) { return 1 === b ? "one" : "other" }
        }
    }
    } function bc(b) { b = b.split("/"); for (var a = b.length; a--;)b[a] = rb(b[a]); return b.join("/") } function ad(b, a) {
        var c = Ba(b); a.$$protocol =
            c.protocol; a.$$host = c.hostname; a.$$port = $(c.port) || wf[c.protocol] || null
    } function bd(b, a) { var c = "/" !== b.charAt(0); c && (b = "/" + b); var d = Ba(b); a.$$path = decodeURIComponent(c && "/" === d.pathname.charAt(0) ? d.pathname.substring(1) : d.pathname); a.$$search = rc(d.search); a.$$hash = decodeURIComponent(d.hash); a.$$path && "/" != a.$$path.charAt(0) && (a.$$path = "/" + a.$$path) } function za(b, a) { if (0 === a.indexOf(b)) return a.substr(b.length) } function Ha(b) { var a = b.indexOf("#"); return -1 == a ? b : b.substr(0, a) } function Gb(b) {
        return b.replace(/(#.+)|#$/,
            "$1")
    } function cc(b) { return b.substr(0, Ha(b).lastIndexOf("/") + 1) } function dc(b, a) {
    this.$$html5 = !0; a = a || ""; var c = cc(b); ad(b, this); this.$$parse = function (a) { var b = za(c, a); if (!x(b)) throw Hb("ipthprfx", a, c); bd(b, this); this.$$path || (this.$$path = "/"); this.$$compose() }; this.$$compose = function () { var a = Qb(this.$$search), b = this.$$hash ? "#" + rb(this.$$hash) : ""; this.$$url = bc(this.$$path) + (a ? "?" + a : "") + b; this.$$absUrl = c + this.$$url.substr(1) }; this.$$parseLinkUrl = function (d, e) {
        if (e && "#" === e[0]) return this.hash(e.slice(1)),
            !0; var f, g; (f = za(b, d)) !== u ? (g = f, g = (f = za(a, f)) !== u ? c + (za("/", f) || f) : b + g) : (f = za(c, d)) !== u ? g = c + f : c == d + "/" && (g = c); g && this.$$parse(g); return !!g
    }
    } function ec(b, a) {
        var c = cc(b); ad(b, this); this.$$parse = function (d) { d = za(b, d) || za(c, d); var e; "#" === d.charAt(0) ? (e = za(a, d), z(e) && (e = d)) : e = this.$$html5 ? d : ""; bd(e, this); d = this.$$path; var f = /^\/[A-Z]:(\/.*)/; 0 === e.indexOf(b) && (e = e.replace(b, "")); f.exec(e) || (d = (e = f.exec(d)) ? e[1] : d); this.$$path = d; this.$$compose() }; this.$$compose = function () {
            var c = Qb(this.$$search), e = this.$$hash ?
                "#" + rb(this.$$hash) : ""; this.$$url = bc(this.$$path) + (c ? "?" + c : "") + e; this.$$absUrl = b + (this.$$url ? a + this.$$url : "")
        }; this.$$parseLinkUrl = function (a, c) { return Ha(b) == Ha(a) ? (this.$$parse(a), !0) : !1 }
    } function cd(b, a) {
    this.$$html5 = !0; ec.apply(this, arguments); var c = cc(b); this.$$parseLinkUrl = function (d, e) { if (e && "#" === e[0]) return this.hash(e.slice(1)), !0; var f, g; b == Ha(d) ? f = d : (g = za(c, d)) ? f = b + a + g : c === d + "/" && (f = c); f && this.$$parse(f); return !!f }; this.$$compose = function () {
        var c = Qb(this.$$search), e = this.$$hash ? "#" + rb(this.$$hash) :
            ""; this.$$url = bc(this.$$path) + (c ? "?" + c : "") + e; this.$$absUrl = b + a + this.$$url
    }
    } function Ib(b) { return function () { return this[b] } } function dd(b, a) { return function (c) { if (z(c)) return this[b]; this[b] = a(c); this.$$compose(); return this } } function Me() {
        var b = "", a = { enabled: !1, requireBase: !0, rewriteLinks: !0 }; this.hashPrefix = function (a) { return y(a) ? (b = a, this) : b }; this.html5Mode = function (b) {
            return Wa(b) ? (a.enabled = b, this) : J(b) ? (Wa(b.enabled) && (a.enabled = b.enabled), Wa(b.requireBase) && (a.requireBase = b.requireBase), Wa(b.rewriteLinks) &&
                (a.rewriteLinks = b.rewriteLinks), this) : a
        }; this.$get = ["$rootScope", "$browser", "$sniffer", "$rootElement", "$window", function (c, d, e, f, g) {
            function h(a, b, c) { var e = k.url(), f = k.$$state; try { d.url(a, b, c), k.$$state = d.state() } catch (g) { throw k.url(e), k.$$state = f, g; } } function l(a, b) { c.$broadcast("$locationChangeSuccess", k.absUrl(), a, k.$$state, b) } var k, m; m = d.baseHref(); var p = d.url(), q; if (a.enabled) { if (!m && a.requireBase) throw Hb("nobase"); q = p.substring(0, p.indexOf("/", p.indexOf("//") + 2)) + (m || "/"); m = e.history ? dc : cd } else q =
                Ha(p), m = ec; k = new m(q, "#" + b); k.$$parseLinkUrl(p, p); k.$$state = d.state(); var t = /^\s*(javascript|mailto):/i; f.on("click", function (b) {
                    if (a.rewriteLinks && !b.ctrlKey && !b.metaKey && !b.shiftKey && 2 != b.which && 2 != b.button) {
                        for (var e = C(b.target); "a" !== ta(e[0]);)if (e[0] === f[0] || !(e = e.parent())[0]) return; var h = e.prop("href"), l = e.attr("href") || e.attr("xlink:href"); J(h) && "[object SVGAnimatedString]" === h.toString() && (h = Ba(h.animVal).href); t.test(h) || !h || e.attr("target") || b.isDefaultPrevented() || !k.$$parseLinkUrl(h,
                            l) || (b.preventDefault(), k.absUrl() != d.url() && (c.$apply(), g.angular["ff-684208-preventDefault"] = !0))
                    }
                }); Gb(k.absUrl()) != Gb(p) && d.url(k.absUrl(), !0); var r = !0; d.onUrlChange(function (a, b) { c.$evalAsync(function () { var d = k.absUrl(), e = k.$$state, f; k.$$parse(a); k.$$state = b; f = c.$broadcast("$locationChangeStart", a, d, b, e).defaultPrevented; k.absUrl() === a && (f ? (k.$$parse(d), k.$$state = e, h(d, !1, e)) : (r = !1, l(d, e))) }); c.$$phase || c.$digest() }); c.$watch(function () {
                    var a = Gb(d.url()), b = Gb(k.absUrl()), f = d.state(), g = k.$$replace,
                    q = a !== b || k.$$html5 && e.history && f !== k.$$state; if (r || q) r = !1, c.$evalAsync(function () { var b = k.absUrl(), d = c.$broadcast("$locationChangeStart", b, a, k.$$state, f).defaultPrevented; k.absUrl() === b && (d ? (k.$$parse(a), k.$$state = f) : (q && h(b, g, f === k.$$state ? null : k.$$state), l(a, f))) }); k.$$replace = !1
                }); return k
        }]
    } function Ne() {
        var b = !0, a = this; this.debugEnabled = function (a) { return y(a) ? (b = a, this) : b }; this.$get = ["$window", function (c) {
            function d(a) {
            a instanceof Error && (a.stack ? a = a.message && -1 === a.stack.indexOf(a.message) ?
                "Error: " + a.message + "\n" + a.stack : a.stack : a.sourceURL && (a = a.message + "\n" + a.sourceURL + ":" + a.line)); return a
            } function e(a) { var b = c.console || {}, e = b[a] || b.log || B; a = !1; try { a = !!e.apply } catch (l) { } return a ? function () { var a = []; s(arguments, function (b) { a.push(d(b)) }); return e.apply(b, a) } : function (a, b) { e(a, null == b ? "" : b) } } return { log: e("log"), info: e("info"), warn: e("warn"), error: e("error"), debug: function () { var c = e("debug"); return function () { b && c.apply(a, arguments) } }() }
        }]
    } function sa(b, a) {
        if ("__defineGetter__" ===
            b || "__defineSetter__" === b || "__lookupGetter__" === b || "__lookupSetter__" === b || "__proto__" === b) throw ka("isecfld", a); return b
    } function la(b, a) { if (b) { if (b.constructor === b) throw ka("isecfn", a); if (b.window === b) throw ka("isecwindow", a); if (b.children && (b.nodeName || b.prop && b.attr && b.find)) throw ka("isecdom", a); if (b === Object) throw ka("isecobj", a); } return b } function fc(b) { return b.constant } function hb(b, a, c, d, e) {
        la(b, e); la(a, e); c = c.split("."); for (var f, g = 0; 1 < c.length; g++) {
            f = sa(c.shift(), e); var h = 0 === g && a && a[f] ||
                b[f]; h || (h = {}, b[f] = h); b = la(h, e)
        } f = sa(c.shift(), e); la(b[f], e); return b[f] = d
    } function Qa(b) { return "constructor" == b } function ed(b, a, c, d, e, f, g) {
        sa(b, f); sa(a, f); sa(c, f); sa(d, f); sa(e, f); var h = function (a) { return la(a, f) }, l = g || Qa(b) ? h : oa, k = g || Qa(a) ? h : oa, m = g || Qa(c) ? h : oa, p = g || Qa(d) ? h : oa, q = g || Qa(e) ? h : oa; return function (f, g) {
            var h = g && g.hasOwnProperty(b) ? g : f; if (null == h) return h; h = l(h[b]); if (!a) return h; if (null == h) return u; h = k(h[a]); if (!c) return h; if (null == h) return u; h = m(h[c]); if (!d) return h; if (null == h) return u;
            h = p(h[d]); return e ? null == h ? u : h = q(h[e]) : h
        }
    } function xf(b, a) { return function (c, d) { return b(c, d, la, a) } } function yf(b, a, c) {
        var d = a.expensiveChecks, e = d ? zf : Af, f = e[b]; if (f) return f; var g = b.split("."), h = g.length; if (a.csp) f = 6 > h ? ed(g[0], g[1], g[2], g[3], g[4], c, d) : function (a, b) { var e = 0, f; do f = ed(g[e++], g[e++], g[e++], g[e++], g[e++], c, d)(a, b), b = u, a = f; while (e < h); return f }; else {
            var l = ""; d && (l += "s = eso(s, fe);\nl = eso(l, fe);\n"); var k = d; s(g, function (a, b) {
                sa(a, c); var e = (b ? "s" : '((l&&l.hasOwnProperty("' + a + '"))?l:s)') +
                    "." + a; if (d || Qa(a)) e = "eso(" + e + ", fe)", k = !0; l += "if(s == null) return undefined;\ns=" + e + ";\n"
            }); l += "return s;"; a = new Function("s", "l", "eso", "fe", l); a.toString = da(l); k && (a = xf(a, c)); f = a
        } f.sharedGetter = !0; f.assign = function (a, c, d) { return hb(a, d, b, c, b) }; return e[b] = f
    } function gc(b) { return G(b.valueOf) ? b.valueOf() : Bf.call(b) } function Oe() {
        var b = fa(), a = fa(); this.$get = ["$filter", "$sniffer", function (c, d) {
            function e(a) {
                var b = a; a.sharedGetter && (b = function (b, c) { return a(b, c) }, b.literal = a.literal, b.constant = a.constant,
                    b.assign = a.assign); return b
            } function f(a, b) { for (var c = 0, d = a.length; c < d; c++) { var e = a[c]; e.constant || (e.inputs ? f(e.inputs, b) : -1 === b.indexOf(e) && b.push(e)) } return b } function g(a, b) { return null == a || null == b ? a === b : "object" === typeof a && (a = gc(a), "object" === typeof a) ? !1 : a === b || a !== a && b !== b } function h(a, b, c, d) {
                var e = d.$$inputs || (d.$$inputs = f(d.inputs, [])), h; if (1 === e.length) { var l = g, e = e[0]; return a.$watch(function (a) { var b = e(a); g(b, l) || (h = d(a), l = b && gc(b)); return h }, b, c) } for (var k = [], q = 0, p = e.length; q < p; q++)k[q] =
                    g; return a.$watch(function (a) { for (var b = !1, c = 0, f = e.length; c < f; c++) { var l = e[c](a); if (b || (b = !g(l, k[c]))) k[c] = l && gc(l) } b && (h = d(a)); return h }, b, c)
            } function l(a, b, c, d) { var e, f; return e = a.$watch(function (a) { return d(a) }, function (a, c, d) { f = a; G(b) && b.apply(this, arguments); y(a) && d.$$postDigest(function () { y(f) && e() }) }, c) } function k(a, b, c, d) {
                function e(a) { var b = !0; s(a, function (a) { y(a) || (b = !1) }); return b } var f, g; return f = a.$watch(function (a) { return d(a) }, function (a, c, d) {
                    g = a; G(b) && b.call(this, a, c, d); e(a) && d.$$postDigest(function () {
                    e(g) &&
                        f()
                    })
                }, c)
            } function m(a, b, c, d) { var e; return e = a.$watch(function (a) { return d(a) }, function (a, c, d) { G(b) && b.apply(this, arguments); e() }, c) } function p(a, b) { if (!b) return a; var c = a.$$watchDelegate, c = c !== k && c !== l ? function (c, d) { var e = a(c, d); return b(e, c, d) } : function (c, d) { var e = a(c, d), f = b(e, c, d); return y(e) ? f : e }; a.$$watchDelegate && a.$$watchDelegate !== h ? c.$$watchDelegate = a.$$watchDelegate : b.$stateful || (c.$$watchDelegate = h, c.inputs = [a]); return c } var q = { csp: d.csp, expensiveChecks: !1 }, t = { csp: d.csp, expensiveChecks: !0 };
            return function (d, f, g) { var n, D, H; switch (typeof d) { case "string": H = d = d.trim(); var v = g ? a : b; n = v[H]; n || (":" === d.charAt(0) && ":" === d.charAt(1) && (D = !0, d = d.substring(2)), g = g ? t : q, n = new hc(g), n = (new ib(n, c, g)).parse(d), n.constant ? n.$$watchDelegate = m : D ? (n = e(n), n.$$watchDelegate = n.literal ? k : l) : n.inputs && (n.$$watchDelegate = h), v[H] = n); return p(n, f); case "function": return p(d, f); default: return p(B, f) } }
        }]
    } function Qe() {
    this.$get = ["$rootScope", "$exceptionHandler", function (b, a) {
        return fd(function (a) { b.$evalAsync(a) },
            a)
    }]
    } function Re() { this.$get = ["$browser", "$exceptionHandler", function (b, a) { return fd(function (a) { b.defer(a) }, a) }] } function fd(b, a) {
        function c(a, b, c) { function d(b) { return function (c) { e || (e = !0, b.call(a, c)) } } var e = !1; return [d(b), d(c)] } function d() { this.$$state = { status: 0 } } function e(a, b) { return function (c) { b.call(a, c) } } function f(c) {
        !c.processScheduled && c.pending && (c.processScheduled = !0, b(function () {
            var b, d, e; e = c.pending; c.processScheduled = !1; c.pending = u; for (var f = 0, g = e.length; f < g; ++f) {
                d = e[f][0]; b = e[f][c.status];
                try { G(b) ? d.resolve(b(c.value)) : 1 === c.status ? d.resolve(c.value) : d.reject(c.value) } catch (h) { d.reject(h), a(h) }
            }
        }))
        } function g() { this.promise = new d; this.resolve = e(this, this.resolve); this.reject = e(this, this.reject); this.notify = e(this, this.notify) } var h = M("$q", TypeError); d.prototype = {
            then: function (a, b, c) { var d = new g; this.$$state.pending = this.$$state.pending || []; this.$$state.pending.push([d, a, b, c]); 0 < this.$$state.status && f(this.$$state); return d.promise }, "catch": function (a) { return this.then(null, a) }, "finally": function (a,
                b) { return this.then(function (b) { return k(b, !0, a) }, function (b) { return k(b, !1, a) }, b) }
        }; g.prototype = {
            resolve: function (a) { this.promise.$$state.status || (a === this.promise ? this.$$reject(h("qcycle", a)) : this.$$resolve(a)) }, $$resolve: function (b) { var d, e; e = c(this, this.$$resolve, this.$$reject); try { if (J(b) || G(b)) d = b && b.then; G(d) ? (this.promise.$$state.status = -1, d.call(b, e[0], e[1], this.notify)) : (this.promise.$$state.value = b, this.promise.$$state.status = 1, f(this.promise.$$state)) } catch (g) { e[1](g), a(g) } }, reject: function (a) {
                this.promise.$$state.status ||
                this.$$reject(a)
            }, $$reject: function (a) { this.promise.$$state.value = a; this.promise.$$state.status = 2; f(this.promise.$$state) }, notify: function (c) { var d = this.promise.$$state.pending; 0 >= this.promise.$$state.status && d && d.length && b(function () { for (var b, e, f = 0, g = d.length; f < g; f++) { e = d[f][0]; b = d[f][3]; try { e.notify(G(b) ? b(c) : c) } catch (h) { a(h) } } }) }
        }; var l = function (a, b) { var c = new g; b ? c.resolve(a) : c.reject(a); return c.promise }, k = function (a, b, c) {
            var d = null; try { G(c) && (d = c()) } catch (e) { return l(e, !1) } return d && G(d.then) ?
                d.then(function () { return l(a, b) }, function (a) { return l(a, !1) }) : l(a, b)
        }, m = function (a, b, c, d) { var e = new g; e.resolve(a); return e.promise.then(b, c, d) }, p = function t(a) { if (!G(a)) throw h("norslvr", a); if (!(this instanceof t)) return new t(a); var b = new g; a(function (a) { b.resolve(a) }, function (a) { b.reject(a) }); return b.promise }; p.defer = function () { return new g }; p.reject = function (a) { var b = new g; b.reject(a); return b.promise }; p.when = m; p.all = function (a) {
            var b = new g, c = 0, d = E(a) ? [] : {}; s(a, function (a, e) {
                c++; m(a).then(function (a) {
                    d.hasOwnProperty(e) ||
                    (d[e] = a, --c || b.resolve(d))
                }, function (a) { d.hasOwnProperty(e) || b.reject(a) })
            }); 0 === c && b.resolve(d); return b.promise
        }; return p
    } function $e() { this.$get = ["$window", "$timeout", function (b, a) { var c = b.requestAnimationFrame || b.webkitRequestAnimationFrame, d = b.cancelAnimationFrame || b.webkitCancelAnimationFrame || b.webkitCancelRequestAnimationFrame, e = !!c, f = e ? function (a) { var b = c(a); return function () { d(b) } } : function (b) { var c = a(b, 16.66, !1); return function () { a.cancel(c) } }; f.supported = e; return f }] } function Pe() {
        var b =
            10, a = M("$rootScope"), c = null, d = null; this.digestTtl = function (a) { arguments.length && (b = a); return b }; this.$get = ["$injector", "$exceptionHandler", "$parse", "$browser", function (e, f, g, h) {
                function l() { this.$id = ++ob; this.$$phase = this.$parent = this.$$watchers = this.$$nextSibling = this.$$prevSibling = this.$$childHead = this.$$childTail = null; this.$root = this; this.$$destroyed = !1; this.$$listeners = {}; this.$$listenerCount = {}; this.$$isolateBindings = null } function k(b) { if (r.$$phase) throw a("inprog", r.$$phase); r.$$phase = b } function m(a,
                    b, c) { do a.$$listenerCount[c] -= b, 0 === a.$$listenerCount[c] && delete a.$$listenerCount[c]; while (a = a.$parent) } function p() { } function q() { for (; n.length;)try { n.shift()() } catch (a) { f(a) } d = null } function t() { null === d && (d = h.defer(function () { r.$apply(q) })) } l.prototype = {
                        constructor: l, $new: function (a, b) {
                            function c() { d.$$destroyed = !0 } var d; b = b || this; a ? (d = new l, d.$root = this.$root) : (this.$$ChildScope || (this.$$ChildScope = function () {
                            this.$$watchers = this.$$nextSibling = this.$$childHead = this.$$childTail = null; this.$$listeners =
                                {}; this.$$listenerCount = {}; this.$id = ++ob; this.$$ChildScope = null
                            }, this.$$ChildScope.prototype = this), d = new this.$$ChildScope); d.$parent = b; d.$$prevSibling = b.$$childTail; b.$$childHead ? (b.$$childTail.$$nextSibling = d, b.$$childTail = d) : b.$$childHead = b.$$childTail = d; (a || b != this) && d.$on("$destroy", c); return d
                        }, $watch: function (a, b, d) {
                            var e = g(a); if (e.$$watchDelegate) return e.$$watchDelegate(this, b, d, e); var f = this.$$watchers, h = { fn: b, last: p, get: e, exp: a, eq: !!d }; c = null; G(b) || (h.fn = B); f || (f = this.$$watchers = []); f.unshift(h);
                            return function () { Xa(f, h); c = null }
                        }, $watchGroup: function (a, b) { function c() { h = !1; l ? (l = !1, b(e, e, g)) : b(e, d, g) } var d = Array(a.length), e = Array(a.length), f = [], g = this, h = !1, l = !0; if (!a.length) { var k = !0; g.$evalAsync(function () { k && b(e, e, g) }); return function () { k = !1 } } if (1 === a.length) return this.$watch(a[0], function (a, c, f) { e[0] = a; d[0] = c; b(e, a === c ? e : d, f) }); s(a, function (a, b) { var l = g.$watch(a, function (a, f) { e[b] = a; d[b] = f; h || (h = !0, g.$evalAsync(c)) }); f.push(l) }); return function () { for (; f.length;)f.shift()() } }, $watchCollection: function (a,
                            b) {
                                function c(a) { e = a; var b, d, g, h; if (!z(e)) { if (J(e)) if (Ta(e)) for (f !== q && (f = q, t = f.length = 0, k++), a = e.length, t !== a && (k++ , f.length = t = a), b = 0; b < a; b++)h = f[b], g = e[b], d = h !== h && g !== g, d || h === g || (k++ , f[b] = g); else { f !== m && (f = m = {}, t = 0, k++); a = 0; for (b in e) e.hasOwnProperty(b) && (a++ , g = e[b], h = f[b], b in f ? (d = h !== h && g !== g, d || h === g || (k++ , f[b] = g)) : (t++ , f[b] = g, k++)); if (t > a) for (b in k++ , f) e.hasOwnProperty(b) || (t-- , delete f[b]) } else f !== e && (f = e, k++); return k } } c.$stateful = !0; var d = this, e, f, h, l = 1 < b.length, k = 0, p = g(a, c), q = [], m =
                                    {}, n = !0, t = 0; return this.$watch(p, function () { n ? (n = !1, b(e, e, d)) : b(e, h, d); if (l) if (J(e)) if (Ta(e)) { h = Array(e.length); for (var a = 0; a < e.length; a++)h[a] = e[a] } else for (a in h = {}, e) sc.call(e, a) && (h[a] = e[a]); else h = e })
                        }, $digest: function () {
                            var e, g, l, m, n, t, s = b, I, W = [], y, O; k("$digest"); h.$$checkUrlChange(); this === r && null !== d && (h.defer.cancel(d), q()); c = null; do {
                                t = !1; for (I = this; S.length;) { try { O = S.shift(), O.scope.$eval(O.expression, O.locals) } catch (w) { f(w) } c = null } a: do {
                                    if (m = I.$$watchers) for (n = m.length; n--;)try {
                                        if (e = m[n]) if ((g =
                                            e.get(I)) !== (l = e.last) && !(e.eq ? ea(g, l) : "number" === typeof g && "number" === typeof l && isNaN(g) && isNaN(l))) t = !0, c = e, e.last = e.eq ? Ea(g, null) : g, e.fn(g, l === p ? g : l, I), 5 > s && (y = 4 - s, W[y] || (W[y] = []), W[y].push({ msg: G(e.exp) ? "fn: " + (e.exp.name || e.exp.toString()) : e.exp, newVal: g, oldVal: l })); else if (e === c) { t = !1; break a }
                                    } catch (C) { f(C) } if (!(m = I.$$childHead || I !== this && I.$$nextSibling)) for (; I !== this && !(m = I.$$nextSibling);)I = I.$parent
                                } while (I = m); if ((t || S.length) && !s--) throw r.$$phase = null, a("infdig", b, W);
                            } while (t || S.length);
                            for (r.$$phase = null; u.length;)try { u.shift()() } catch (B) { f(B) }
                        }, $destroy: function () {
                            if (!this.$$destroyed) {
                                var a = this.$parent; this.$broadcast("$destroy"); this.$$destroyed = !0; if (this !== r) {
                                    for (var b in this.$$listenerCount) m(this, this.$$listenerCount[b], b); a.$$childHead == this && (a.$$childHead = this.$$nextSibling); a.$$childTail == this && (a.$$childTail = this.$$prevSibling); this.$$prevSibling && (this.$$prevSibling.$$nextSibling = this.$$nextSibling); this.$$nextSibling && (this.$$nextSibling.$$prevSibling = this.$$prevSibling);
                                    this.$destroy = this.$digest = this.$apply = this.$evalAsync = this.$applyAsync = B; this.$on = this.$watch = this.$watchGroup = function () { return B }; this.$$listeners = {}; this.$parent = this.$$nextSibling = this.$$prevSibling = this.$$childHead = this.$$childTail = this.$root = this.$$watchers = null
                                }
                            }
                        }, $eval: function (a, b) { return g(a)(this, b) }, $evalAsync: function (a, b) { r.$$phase || S.length || h.defer(function () { S.length && r.$digest() }); S.push({ scope: this, expression: a, locals: b }) }, $$postDigest: function (a) { u.push(a) }, $apply: function (a) {
                            try {
                                return k("$apply"),
                                    this.$eval(a)
                            } catch (b) { f(b) } finally { r.$$phase = null; try { r.$digest() } catch (c) { throw f(c), c; } }
                        }, $applyAsync: function (a) { function b() { c.$eval(a) } var c = this; a && n.push(b); t() }, $on: function (a, b) { var c = this.$$listeners[a]; c || (this.$$listeners[a] = c = []); c.push(b); var d = this; do d.$$listenerCount[a] || (d.$$listenerCount[a] = 0), d.$$listenerCount[a]++; while (d = d.$parent); var e = this; return function () { var d = c.indexOf(b); -1 !== d && (c[d] = null, m(e, 1, a)) } }, $emit: function (a, b) {
                            var c = [], d, e = this, g = !1, h = {
                                name: a, targetScope: e,
                                stopPropagation: function () { g = !0 }, preventDefault: function () { h.defaultPrevented = !0 }, defaultPrevented: !1
                            }, l = Ya([h], arguments, 1), k, m; do { d = e.$$listeners[a] || c; h.currentScope = e; k = 0; for (m = d.length; k < m; k++)if (d[k]) try { d[k].apply(null, l) } catch (p) { f(p) } else d.splice(k, 1), k-- , m--; if (g) return h.currentScope = null, h; e = e.$parent } while (e); h.currentScope = null; return h
                        }, $broadcast: function (a, b) {
                            var c = this, d = this, e = { name: a, targetScope: this, preventDefault: function () { e.defaultPrevented = !0 }, defaultPrevented: !1 }; if (!this.$$listenerCount[a]) return e;
                            for (var g = Ya([e], arguments, 1), h, l; c = d;) { e.currentScope = c; d = c.$$listeners[a] || []; h = 0; for (l = d.length; h < l; h++)if (d[h]) try { d[h].apply(null, g) } catch (k) { f(k) } else d.splice(h, 1), h-- , l--; if (!(d = c.$$listenerCount[a] && c.$$childHead || c !== this && c.$$nextSibling)) for (; c !== this && !(d = c.$$nextSibling);)c = c.$parent } e.currentScope = null; return e
                        }
                    }; var r = new l, S = r.$$asyncQueue = [], u = r.$$postDigestQueue = [], n = r.$$applyAsyncQueue = []; return r
            }]
    } function Sd() {
        var b = /^\s*(https?|ftp|mailto|tel|file):/, a = /^\s*((https?|ftp|file|blob):|data:image\/)/;
        this.aHrefSanitizationWhitelist = function (a) { return y(a) ? (b = a, this) : b }; this.imgSrcSanitizationWhitelist = function (b) { return y(b) ? (a = b, this) : a }; this.$get = function () { return function (c, d) { var e = d ? a : b, f; f = Ba(c).href; return "" === f || f.match(e) ? c : "unsafe:" + f } }
    } function Cf(b) { if ("self" === b) return b; if (x(b)) { if (-1 < b.indexOf("***")) throw Ca("iwcard", b); b = gd(b).replace("\\*\\*", ".*").replace("\\*", "[^:/.?&;]*"); return new RegExp("^" + b + "$") } if (pb(b)) return new RegExp("^" + b.source + "$"); throw Ca("imatcher"); } function hd(b) {
        var a =
            []; y(b) && s(b, function (b) { a.push(Cf(b)) }); return a
    } function Te() {
    this.SCE_CONTEXTS = ma; var b = ["self"], a = []; this.resourceUrlWhitelist = function (a) { arguments.length && (b = hd(a)); return b }; this.resourceUrlBlacklist = function (b) { arguments.length && (a = hd(b)); return a }; this.$get = ["$injector", function (c) {
        function d(a, b) { return "self" === a ? $c(b) : !!a.exec(b.href) } function e(a) {
            var b = function (a) { this.$$unwrapTrustedValue = function () { return a } }; a && (b.prototype = new a); b.prototype.valueOf = function () { return this.$$unwrapTrustedValue() };
            b.prototype.toString = function () { return this.$$unwrapTrustedValue().toString() }; return b
        } var f = function (a) { throw Ca("unsafe"); }; c.has("$sanitize") && (f = c.get("$sanitize")); var g = e(), h = {}; h[ma.HTML] = e(g); h[ma.CSS] = e(g); h[ma.URL] = e(g); h[ma.JS] = e(g); h[ma.RESOURCE_URL] = e(h[ma.URL]); return {
            trustAs: function (a, b) { var c = h.hasOwnProperty(a) ? h[a] : null; if (!c) throw Ca("icontext", a, b); if (null === b || b === u || "" === b) return b; if ("string" !== typeof b) throw Ca("itype", a); return new c(b) }, getTrusted: function (c, e) {
                if (null ===
                    e || e === u || "" === e) return e; var g = h.hasOwnProperty(c) ? h[c] : null; if (g && e instanceof g) return e.$$unwrapTrustedValue(); if (c === ma.RESOURCE_URL) { var g = Ba(e.toString()), p, q, t = !1; p = 0; for (q = b.length; p < q; p++)if (d(b[p], g)) { t = !0; break } if (t) for (p = 0, q = a.length; p < q; p++)if (d(a[p], g)) { t = !1; break } if (t) return e; throw Ca("insecurl", e.toString()); } if (c === ma.HTML) return f(e); throw Ca("unsafe");
            }, valueOf: function (a) { return a instanceof g ? a.$$unwrapTrustedValue() : a }
        }
    }]
    } function Se() {
        var b = !0; this.enabled = function (a) {
        arguments.length &&
            (b = !!a); return b
        }; this.$get = ["$parse", "$sceDelegate", function (a, c) {
            if (b && 8 > Ra) throw Ca("iequirks"); var d = qa(ma); d.isEnabled = function () { return b }; d.trustAs = c.trustAs; d.getTrusted = c.getTrusted; d.valueOf = c.valueOf; b || (d.trustAs = d.getTrusted = function (a, b) { return b }, d.valueOf = oa); d.parseAs = function (b, c) { var e = a(c); return e.literal && e.constant ? e : a(c, function (a) { return d.getTrusted(b, a) }) }; var e = d.parseAs, f = d.getTrusted, g = d.trustAs; s(ma, function (a, b) {
                var c = R(b); d[db("parse_as_" + c)] = function (b) {
                    return e(a,
                        b)
                }; d[db("get_trusted_" + c)] = function (b) { return f(a, b) }; d[db("trust_as_" + c)] = function (b) { return g(a, b) }
            }); return d
        }]
    } function Ue() {
    this.$get = ["$window", "$document", function (b, a) {
        var c = {}, d = $((/android (\d+)/.exec(R((b.navigator || {}).userAgent)) || [])[1]), e = /Boxee/i.test((b.navigator || {}).userAgent), f = a[0] || {}, g, h = /^(Moz|webkit|ms)(?=[A-Z])/, l = f.body && f.body.style, k = !1, m = !1; if (l) {
            for (var p in l) if (k = h.exec(p)) { g = k[0]; g = g.substr(0, 1).toUpperCase() + g.substr(1); break } g || (g = "WebkitOpacity" in l && "webkit");
            k = !!("transition" in l || g + "Transition" in l); m = !!("animation" in l || g + "Animation" in l); !d || k && m || (k = x(f.body.style.webkitTransition), m = x(f.body.style.webkitAnimation))
        } return { history: !(!b.history || !b.history.pushState || 4 > d || e), hasEvent: function (a) { if ("input" === a && 11 >= Ra) return !1; if (z(c[a])) { var b = f.createElement("div"); c[a] = "on" + a in b } return c[a] }, csp: bb(), vendorPrefix: g, transitions: k, animations: m, android: d }
    }]
    } function We() {
    this.$get = ["$templateCache", "$http", "$q", function (b, a, c) {
        function d(e, f) {
        d.totalPendingRequests++;
            var g = a.defaults && a.defaults.transformResponse; E(g) ? g = g.filter(function (a) { return a !== Zb }) : g === Zb && (g = null); return a.get(e, { cache: b, transformResponse: g }).finally(function () { d.totalPendingRequests-- }).then(function (a) { return a.data }, function (a) { if (!f) throw ia("tpload", e); return c.reject(a) })
        } d.totalPendingRequests = 0; return d
    }]
    } function Xe() {
    this.$get = ["$rootScope", "$browser", "$location", function (b, a, c) {
        return {
            findBindings: function (a, b, c) {
                a = a.getElementsByClassName("ng-binding"); var g = []; s(a, function (a) {
                    var d =
                        aa.element(a).data("$binding"); d && s(d, function (d) { c ? (new RegExp("(^|\\s)" + gd(b) + "(\\s|\\||$)")).test(d) && g.push(a) : -1 != d.indexOf(b) && g.push(a) })
                }); return g
            }, findModels: function (a, b, c) { for (var g = ["ng-", "data-ng-", "ng\\:"], h = 0; h < g.length; ++h) { var l = a.querySelectorAll("[" + g[h] + "model" + (c ? "=" : "*=") + '"' + b + '"]'); if (l.length) return l } }, getLocation: function () { return c.url() }, setLocation: function (a) { a !== c.url() && (c.url(a), b.$digest()) }, whenStable: function (b) { a.notifyWhenNoOutstandingRequests(b) }
        }
    }]
    } function Ye() {
    this.$get =
        ["$rootScope", "$browser", "$q", "$$q", "$exceptionHandler", function (b, a, c, d, e) { function f(f, l, k) { var m = y(k) && !k, p = (m ? d : c).defer(), q = p.promise; l = a.defer(function () { try { p.resolve(f()) } catch (a) { p.reject(a), e(a) } finally { delete g[q.$$timeoutId] } m || b.$apply() }, l); q.$$timeoutId = l; g[l] = p; return q } var g = {}; f.cancel = function (b) { return b && b.$$timeoutId in g ? (g[b.$$timeoutId].reject("canceled"), delete g[b.$$timeoutId], a.defer.cancel(b.$$timeoutId)) : !1 }; return f }]
    } function Ba(b) {
        Ra && (Y.setAttribute("href", b), b = Y.href);
        Y.setAttribute("href", b); return { href: Y.href, protocol: Y.protocol ? Y.protocol.replace(/:$/, "") : "", host: Y.host, search: Y.search ? Y.search.replace(/^\?/, "") : "", hash: Y.hash ? Y.hash.replace(/^#/, "") : "", hostname: Y.hostname, port: Y.port, pathname: "/" === Y.pathname.charAt(0) ? Y.pathname : "/" + Y.pathname }
    } function $c(b) { b = x(b) ? Ba(b) : b; return b.protocol === id.protocol && b.host === id.host } function Ze() { this.$get = da(P) } function Ec(b) {
        function a(c, d) {
            if (J(c)) { var e = {}; s(c, function (b, c) { e[c] = a(c, b) }); return e } return b.factory(c +
                "Filter", d)
        } this.register = a; this.$get = ["$injector", function (a) { return function (b) { return a.get(b + "Filter") } }]; a("currency", jd); a("date", kd); a("filter", Df); a("json", Ef); a("limitTo", Ff); a("lowercase", Gf); a("number", ld); a("orderBy", md); a("uppercase", Hf)
    } function Df() { return function (b, a, c) { if (!E(b)) return b; var d; switch (typeof a) { case "function": break; case "boolean": case "number": case "string": d = !0; case "object": a = If(a, c, d); break; default: return b }return b.filter(a) } } function If(b, a, c) {
        var d = J(b) && "$" in
            b; !0 === a ? a = ea : G(a) || (a = function (a, b) { if (J(a) || J(b)) return !1; a = R("" + a); b = R("" + b); return -1 !== a.indexOf(b) }); return function (e) { return d && !J(e) ? Ia(e, b.$, a, !1) : Ia(e, b, a, c) }
    } function Ia(b, a, c, d, e) {
        var f = typeof b, g = typeof a; if ("string" === g && "!" === a.charAt(0)) return !Ia(b, a.substring(1), c, d); if (E(b)) return b.some(function (b) { return Ia(b, a, c, d) }); switch (f) {
            case "object": var h; if (d) { for (h in b) if ("$" !== h.charAt(0) && Ia(b[h], a, c, !0)) return !0; return e ? !1 : Ia(b, a, c, !1) } if ("object" === g) {
                for (h in a) if (e = a[h], !G(e) &&
                    (f = "$" === h, !Ia(f ? b : b[h], e, c, f, f))) return !1; return !0
            } return c(b, a); case "function": return !1; default: return c(b, a)
        }
    } function jd(b) { var a = b.NUMBER_FORMATS; return function (b, d, e) { z(d) && (d = a.CURRENCY_SYM); z(e) && (e = a.PATTERNS[1].maxFrac); return null == b ? b : nd(b, a.PATTERNS[1], a.GROUP_SEP, a.DECIMAL_SEP, e).replace(/\u00A4/g, d) } } function ld(b) { var a = b.NUMBER_FORMATS; return function (b, d) { return null == b ? b : nd(b, a.PATTERNS[0], a.GROUP_SEP, a.DECIMAL_SEP, d) } } function nd(b, a, c, d, e) {
        if (!isFinite(b) || J(b)) return ""; var f =
            0 > b; b = Math.abs(b); var g = b + "", h = "", l = [], k = !1; if (-1 !== g.indexOf("e")) { var m = g.match(/([\d\.]+)e(-?)(\d+)/); m && "-" == m[2] && m[3] > e + 1 ? b = 0 : (h = g, k = !0) } if (k) 0 < e && 1 > b && (h = b.toFixed(e), b = parseFloat(h)); else {
                g = (g.split(od)[1] || "").length; z(e) && (e = Math.min(Math.max(a.minFrac, g), a.maxFrac)); b = +(Math.round(+(b.toString() + "e" + e)).toString() + "e" + -e); var g = ("" + b).split(od), k = g[0], g = g[1] || "", p = 0, q = a.lgSize, t = a.gSize; if (k.length >= q + t) for (p = k.length - q, m = 0; m < p; m++)0 === (p - m) % t && 0 !== m && (h += c), h += k.charAt(m); for (m = p; m < k.length; m++)0 ===
                    (k.length - m) % q && 0 !== m && (h += c), h += k.charAt(m); for (; g.length < e;)g += "0"; e && "0" !== e && (h += d + g.substr(0, e))
            } 0 === b && (f = !1); l.push(f ? a.negPre : a.posPre, h, f ? a.negSuf : a.posSuf); return l.join("")
    } function Jb(b, a, c) { var d = ""; 0 > b && (d = "-", b = -b); for (b = "" + b; b.length < a;)b = "0" + b; c && (b = b.substr(b.length - a)); return d + b } function Z(b, a, c, d) { c = c || 0; return function (e) { e = e["get" + b](); if (0 < c || e > -c) e += c; 0 === e && -12 == c && (e = 12); return Jb(e, a, d) } } function Kb(b, a) { return function (c, d) { var e = c["get" + b](), f = vb(a ? "SHORT" + b : b); return d[f][e] } }
    function pd(b) { var a = (new Date(b, 0, 1)).getDay(); return new Date(b, 0, (4 >= a ? 5 : 12) - a) } function qd(b) { return function (a) { var c = pd(a.getFullYear()); a = +new Date(a.getFullYear(), a.getMonth(), a.getDate() + (4 - a.getDay())) - +c; a = 1 + Math.round(a / 6048E5); return Jb(a, b) } } function kd(b) {
        function a(a) {
            var b; if (b = a.match(c)) {
                a = new Date(0); var f = 0, g = 0, h = b[8] ? a.setUTCFullYear : a.setFullYear, l = b[8] ? a.setUTCHours : a.setHours; b[9] && (f = $(b[9] + b[10]), g = $(b[9] + b[11])); h.call(a, $(b[1]), $(b[2]) - 1, $(b[3])); f = $(b[4] || 0) - f; g = $(b[5] ||
                    0) - g; h = $(b[6] || 0); b = Math.round(1E3 * parseFloat("0." + (b[7] || 0))); l.call(a, f, g, h, b)
            } return a
        } var c = /^(\d{4})-?(\d\d)-?(\d\d)(?:T(\d\d)(?::?(\d\d)(?::?(\d\d)(?:\.(\d+))?)?)?(Z|([+-])(\d\d):?(\d\d))?)?$/; return function (c, e, f) {
            var g = "", h = [], l, k; e = e || "mediumDate"; e = b.DATETIME_FORMATS[e] || e; x(c) && (c = Jf.test(c) ? $(c) : a(c)); V(c) && (c = new Date(c)); if (!pa(c)) return c; for (; e;)(k = Kf.exec(e)) ? (h = Ya(h, k, 1), e = h.pop()) : (h.push(e), e = null); f && "UTC" === f && (c = new Date(c.getTime()), c.setMinutes(c.getMinutes() + c.getTimezoneOffset()));
            s(h, function (a) { l = Lf[a]; g += l ? l(c, b.DATETIME_FORMATS) : a.replace(/(^'|'$)/g, "").replace(/''/g, "'") }); return g
        }
    } function Ef() { return function (b, a) { z(a) && (a = 2); return $a(b, a) } } function Ff() { return function (b, a) { V(b) && (b = b.toString()); return E(b) || x(b) ? (a = Infinity === Math.abs(Number(a)) ? Number(a) : $(a)) ? 0 < a ? b.slice(0, a) : b.slice(a) : x(b) ? "" : [] : b } } function md(b) {
        return function (a, c, d) {
            function e(a, b) { return b ? function (b, c) { return a(c, b) } : a } function f(a) {
                switch (typeof a) {
                    case "number": case "boolean": case "string": return !0;
                    default: return !1
                }
            } function g(a) { return null === a ? "null" : "function" === typeof a.valueOf && (a = a.valueOf(), f(a)) || "function" === typeof a.toString && (a = a.toString(), f(a)) ? a : "" } function h(a, b) { var c = typeof a, d = typeof b; c === d && "object" === c && (a = g(a), b = g(b)); return c === d ? ("string" === c && (a = a.toLowerCase(), b = b.toLowerCase()), a === b ? 0 : a < b ? -1 : 1) : c < d ? -1 : 1 } if (!Ta(a)) return a; c = E(c) ? c : [c]; 0 === c.length && (c = ["+"]); c = c.map(function (a) {
                var c = !1, d = a || oa; if (x(a)) {
                    if ("+" == a.charAt(0) || "-" == a.charAt(0)) c = "-" == a.charAt(0), a = a.substring(1);
                    if ("" === a) return e(h, c); d = b(a); if (d.constant) { var f = d(); return e(function (a, b) { return h(a[f], b[f]) }, c) }
                } return e(function (a, b) { return h(d(a), d(b)) }, c)
            }); return Za.call(a).sort(e(function (a, b) { for (var d = 0; d < c.length; d++) { var e = c[d](a, b); if (0 !== e) return e } return 0 }, d))
        }
    } function Ja(b) { G(b) && (b = { link: b }); b.restrict = b.restrict || "AC"; return da(b) } function rd(b, a, c, d, e) {
        var f = this, g = [], h = f.$$parentForm = b.parent().controller("form") || Lb; f.$error = {}; f.$$success = {}; f.$pending = u; f.$name = e(a.name || a.ngForm ||
            "")(c); f.$dirty = !1; f.$pristine = !0; f.$valid = !0; f.$invalid = !1; f.$submitted = !1; h.$addControl(f); f.$rollbackViewValue = function () { s(g, function (a) { a.$rollbackViewValue() }) }; f.$commitViewValue = function () { s(g, function (a) { a.$commitViewValue() }) }; f.$addControl = function (a) { Ma(a.$name, "input"); g.push(a); a.$name && (f[a.$name] = a) }; f.$$renameControl = function (a, b) { var c = a.$name; f[c] === a && delete f[c]; f[b] = a; a.$name = b }; f.$removeControl = function (a) {
            a.$name && f[a.$name] === a && delete f[a.$name]; s(f.$pending, function (b, c) {
                f.$setValidity(c,
                    null, a)
            }); s(f.$error, function (b, c) { f.$setValidity(c, null, a) }); s(f.$$success, function (b, c) { f.$setValidity(c, null, a) }); Xa(g, a)
            }; sd({ ctrl: this, $element: b, set: function (a, b, c) { var d = a[b]; d ? -1 === d.indexOf(c) && d.push(c) : a[b] = [c] }, unset: function (a, b, c) { var d = a[b]; d && (Xa(d, c), 0 === d.length && delete a[b]) }, parentForm: h, $animate: d }); f.$setDirty = function () { d.removeClass(b, Sa); d.addClass(b, Mb); f.$dirty = !0; f.$pristine = !1; h.$setDirty() }; f.$setPristine = function () {
                d.setClass(b, Sa, Mb + " ng-submitted"); f.$dirty = !1; f.$pristine =
                    !0; f.$submitted = !1; s(g, function (a) { a.$setPristine() })
            }; f.$setUntouched = function () { s(g, function (a) { a.$setUntouched() }) }; f.$setSubmitted = function () { d.addClass(b, "ng-submitted"); f.$submitted = !0; h.$setSubmitted() }
    } function ic(b) { b.$formatters.push(function (a) { return b.$isEmpty(a) ? a : a.toString() }) } function jb(b, a, c, d, e, f) {
        var g = R(a[0].type); if (!e.android) { var h = !1; a.on("compositionstart", function (a) { h = !0 }); a.on("compositionend", function () { h = !1; l() }) } var l = function (b) {
            k && (f.defer.cancel(k), k = null); if (!h) {
                var e =
                    a.val(); b = b && b.type; "password" === g || c.ngTrim && "false" === c.ngTrim || (e = T(e)); (d.$viewValue !== e || "" === e && d.$$hasNativeValidators) && d.$setViewValue(e, b)
            }
        }; if (e.hasEvent("input")) a.on("input", l); else { var k, m = function (a, b, c) { k || (k = f.defer(function () { k = null; b && b.value === c || l(a) })) }; a.on("keydown", function (a) { var b = a.keyCode; 91 === b || 15 < b && 19 > b || 37 <= b && 40 >= b || m(a, this, this.value) }); if (e.hasEvent("paste")) a.on("paste cut", m) } a.on("change", l); d.$render = function () { a.val(d.$isEmpty(d.$viewValue) ? "" : d.$viewValue) }
    }
    function Nb(b, a) {
        return function (c, d) {
            var e, f; if (pa(c)) return c; if (x(c)) {
            '"' == c.charAt(0) && '"' == c.charAt(c.length - 1) && (c = c.substring(1, c.length - 1)); if (Mf.test(c)) return new Date(c); b.lastIndex = 0; if (e = b.exec(c)) return e.shift(), f = d ? { yyyy: d.getFullYear(), MM: d.getMonth() + 1, dd: d.getDate(), HH: d.getHours(), mm: d.getMinutes(), ss: d.getSeconds(), sss: d.getMilliseconds() / 1E3 } : { yyyy: 1970, MM: 1, dd: 1, HH: 0, mm: 0, ss: 0, sss: 0 }, s(e, function (b, c) { c < a.length && (f[a[c]] = +b) }), new Date(f.yyyy, f.MM - 1, f.dd, f.HH, f.mm, f.ss || 0,
                1E3 * f.sss || 0)
            } return NaN
        }
    } function kb(b, a, c, d) {
        return function (e, f, g, h, l, k, m) {
            function p(a) { return a && !(a.getTime && a.getTime() !== a.getTime()) } function q(a) { return y(a) ? pa(a) ? a : c(a) : u } td(e, f, g, h); jb(e, f, g, h, l, k); var t = h && h.$options && h.$options.timezone, r; h.$$parserName = b; h.$parsers.push(function (b) { return h.$isEmpty(b) ? null : a.test(b) ? (b = c(b, r), "UTC" === t && b.setMinutes(b.getMinutes() - b.getTimezoneOffset()), b) : u }); h.$formatters.push(function (a) {
                if (a && !pa(a)) throw Ob("datefmt", a); if (p(a)) {
                    if ((r = a) && "UTC" ===
                        t) { var b = 6E4 * r.getTimezoneOffset(); r = new Date(r.getTime() + b) } return m("date")(a, d, t)
                } r = null; return ""
            }); if (y(g.min) || g.ngMin) { var s; h.$validators.min = function (a) { return !p(a) || z(s) || c(a) >= s }; g.$observe("min", function (a) { s = q(a); h.$validate() }) } if (y(g.max) || g.ngMax) { var K; h.$validators.max = function (a) { return !p(a) || z(K) || c(a) <= K }; g.$observe("max", function (a) { K = q(a); h.$validate() }) }
        }
    } function td(b, a, c, d) {
    (d.$$hasNativeValidators = J(a[0].validity)) && d.$parsers.push(function (b) {
        var c = a.prop("validity") || {};
        return c.badInput && !c.typeMismatch ? u : b
    })
    } function ud(b, a, c, d, e) { if (y(d)) { b = b(d); if (!b.constant) throw M("ngModel")("constexpr", c, d); return b(a) } return e } function jc(b, a) {
        b = "ngClass" + b; return ["$animate", function (c) {
            function d(a, b) { var c = [], d = 0; a: for (; d < a.length; d++) { for (var e = a[d], m = 0; m < b.length; m++)if (e == b[m]) continue a; c.push(e) } return c } function e(a) { if (!E(a)) { if (x(a)) return a.split(" "); if (J(a)) { var b = []; s(a, function (a, c) { a && (b = b.concat(c.split(" "))) }); return b } } return a } return {
                restrict: "AC", link: function (f,
                    g, h) {
                        function l(a, b) { var c = g.data("$classCounts") || {}, d = []; s(a, function (a) { if (0 < b || c[a]) c[a] = (c[a] || 0) + b, c[a] === +(0 < b) && d.push(a) }); g.data("$classCounts", c); return d.join(" ") } function k(b) { if (!0 === a || f.$index % 2 === a) { var k = e(b || []); if (!m) { var t = l(k, 1); h.$addClass(t) } else if (!ea(b, m)) { var r = e(m), t = d(k, r), k = d(r, k), t = l(t, 1), k = l(k, -1); t && t.length && c.addClass(g, t); k && k.length && c.removeClass(g, k) } } m = qa(b) } var m; f.$watch(h[b], k, !0); h.$observe("class", function (a) { k(f.$eval(h[b])) }); "ngClass" !== b && f.$watch("$index",
                            function (c, d) { var g = c & 1; if (g !== (d & 1)) { var k = e(f.$eval(h[b])); g === a ? (g = l(k, 1), h.$addClass(g)) : (g = l(k, -1), h.$removeClass(g)) } })
                }
            }
        }]
    } function sd(b) {
        function a(a, b) { b && !f[a] ? (k.addClass(e, a), f[a] = !0) : !b && f[a] && (k.removeClass(e, a), f[a] = !1) } function c(b, c) { b = b ? "-" + uc(b, "-") : ""; a(lb + b, !0 === c); a(vd + b, !1 === c) } var d = b.ctrl, e = b.$element, f = {}, g = b.set, h = b.unset, l = b.parentForm, k = b.$animate; f[vd] = !(f[lb] = e.hasClass(lb)); d.$setValidity = function (b, e, f) {
            e === u ? (d.$pending || (d.$pending = {}), g(d.$pending, b, f)) : (d.$pending &&
                h(d.$pending, b, f), wd(d.$pending) && (d.$pending = u)); Wa(e) ? e ? (h(d.$error, b, f), g(d.$$success, b, f)) : (g(d.$error, b, f), h(d.$$success, b, f)) : (h(d.$error, b, f), h(d.$$success, b, f)); d.$pending ? (a(xd, !0), d.$valid = d.$invalid = u, c("", null)) : (a(xd, !1), d.$valid = wd(d.$error), d.$invalid = !d.$valid, c("", d.$valid)); e = d.$pending && d.$pending[b] ? u : d.$error[b] ? !1 : d.$$success[b] ? !0 : null; c(b, e); l.$setValidity(b, e, d)
        }
    } function wd(b) { if (b) for (var a in b) return !1; return !0 } var Nf = /^\/(.+)\/([a-z]*)$/, R = function (b) {
        return x(b) ? b.toLowerCase() :
            b
    }, sc = Object.prototype.hasOwnProperty, vb = function (b) { return x(b) ? b.toUpperCase() : b }, Ra, C, ra, Za = [].slice, pf = [].splice, Of = [].push, Da = Object.prototype.toString, Ka = M("ng"), aa = P.angular || (P.angular = {}), cb, ob = 0; Ra = X.documentMode; B.$inject = []; oa.$inject = []; var E = Array.isArray, T = function (b) { return x(b) ? b.trim() : b }, gd = function (b) { return b.replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08") }, bb = function () {
        if (y(bb.isActive_)) return bb.isActive_; var b = !(!X.querySelector("[ng-csp]") && !X.querySelector("[data-ng-csp]"));
        if (!b) try { new Function("") } catch (a) { b = !0 } return bb.isActive_ = b
    }, sb = ["ng-", "data-ng-", "ng:", "x-ng-"], Md = /[A-Z]/g, vc = !1, Rb, na = 1, qb = 3, Qd = { full: "1.3.14", major: 1, minor: 3, dot: 14, codeName: "instantaneous-browserification" }; Q.expando = "ng339"; var Ab = Q.cache = {}, hf = 1; Q._data = function (b) { return this.cache[b[this.expando]] || {} }; var cf = /([\:\-\_]+(.))/g, df = /^moz([A-Z])/, Pf = { mouseleave: "mouseout", mouseenter: "mouseover" }, Ub = M("jqLite"), gf = /^<(\w+)\s*\/?>(?:<\/\1>|)$/, Tb = /<|&#?\w+;/, ef = /<([\w:]+)/, ff = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,
        ga = { option: [1, '<select multiple="multiple">', "</select>"], thead: [1, "<table>", "</table>"], col: [2, "<table><colgroup>", "</colgroup></table>"], tr: [2, "<table><tbody>", "</tbody></table>"], td: [3, "<table><tbody><tr>", "</tr></tbody></table>"], _default: [0, "", ""] }; ga.optgroup = ga.option; ga.tbody = ga.tfoot = ga.colgroup = ga.caption = ga.thead; ga.th = ga.td; var La = Q.prototype = {
            ready: function (b) { function a() { c || (c = !0, b()) } var c = !1; "complete" === X.readyState ? setTimeout(a) : (this.on("DOMContentLoaded", a), Q(P).on("load", a)) },
            toString: function () { var b = []; s(this, function (a) { b.push("" + a) }); return "[" + b.join(", ") + "]" }, eq: function (b) { return 0 <= b ? C(this[b]) : C(this[this.length + b]) }, length: 0, push: Of, sort: [].sort, splice: [].splice
        }, Fb = {}; s("multiple selected checked disabled readOnly required open".split(" "), function (b) { Fb[R(b)] = b }); var Nc = {}; s("input select option textarea button form details".split(" "), function (b) { Nc[b] = !0 }); var Oc = { ngMinlength: "minlength", ngMaxlength: "maxlength", ngMin: "min", ngMax: "max", ngPattern: "pattern" };
    s({ data: Wb, removeData: yb }, function (b, a) { Q[a] = b }); s({
        data: Wb, inheritedData: Eb, scope: function (b) { return C.data(b, "$scope") || Eb(b.parentNode || b, ["$isolateScope", "$scope"]) }, isolateScope: function (b) { return C.data(b, "$isolateScope") || C.data(b, "$isolateScopeNoTemplate") }, controller: Jc, injector: function (b) { return Eb(b, "$injector") }, removeAttr: function (b, a) { b.removeAttribute(a) }, hasClass: Bb, css: function (b, a, c) { a = db(a); if (y(c)) b.style[a] = c; else return b.style[a] }, attr: function (b, a, c) {
            var d = R(a); if (Fb[d]) if (y(c)) c ?
                (b[a] = !0, b.setAttribute(a, d)) : (b[a] = !1, b.removeAttribute(d)); else return b[a] || (b.attributes.getNamedItem(a) || B).specified ? d : u; else if (y(c)) b.setAttribute(a, c); else if (b.getAttribute) return b = b.getAttribute(a, 2), null === b ? u : b
        }, prop: function (b, a, c) { if (y(c)) b[a] = c; else return b[a] }, text: function () { function b(a, b) { if (z(b)) { var d = a.nodeType; return d === na || d === qb ? a.textContent : "" } a.textContent = b } b.$dv = ""; return b }(), val: function (b, a) {
            if (z(a)) {
                if (b.multiple && "select" === ta(b)) {
                    var c = []; s(b.options, function (a) {
                    a.selected &&
                        c.push(a.value || a.text)
                    }); return 0 === c.length ? null : c
                } return b.value
            } b.value = a
        }, html: function (b, a) { if (z(a)) return b.innerHTML; xb(b, !0); b.innerHTML = a }, empty: Kc
    }, function (b, a) { Q.prototype[a] = function (a, d) { var e, f, g = this.length; if (b !== Kc && (2 == b.length && b !== Bb && b !== Jc ? a : d) === u) { if (J(a)) { for (e = 0; e < g; e++)if (b === Wb) b(this[e], a); else for (f in a) b(this[e], f, a[f]); return this } e = b.$dv; g = e === u ? Math.min(g, 1) : g; for (f = 0; f < g; f++) { var h = b(this[f], a, d); e = e ? e + h : h } return e } for (e = 0; e < g; e++)b(this[e], a, d); return this } });
    s({
        removeData: yb, on: function a(c, d, e, f) { if (y(f)) throw Ub("onargs"); if (Fc(c)) { var g = zb(c, !0); f = g.events; var h = g.handle; h || (h = g.handle = lf(c, f)); for (var g = 0 <= d.indexOf(" ") ? d.split(" ") : [d], l = g.length; l--;) { d = g[l]; var k = f[d]; k || (f[d] = [], "mouseenter" === d || "mouseleave" === d ? a(c, Pf[d], function (a) { var c = a.relatedTarget; c && (c === this || this.contains(c)) || h(a, d) }) : "$destroy" !== d && c.addEventListener(d, h, !1), k = f[d]); k.push(e) } } }, off: Ic, one: function (a, c, d) {
            a = C(a); a.on(c, function f() { a.off(c, d); a.off(c, f) }); a.on(c,
                d)
        }, replaceWith: function (a, c) { var d, e = a.parentNode; xb(a); s(new Q(c), function (c) { d ? e.insertBefore(c, d.nextSibling) : e.replaceChild(c, a); d = c }) }, children: function (a) { var c = []; s(a.childNodes, function (a) { a.nodeType === na && c.push(a) }); return c }, contents: function (a) { return a.contentDocument || a.childNodes || [] }, append: function (a, c) { var d = a.nodeType; if (d === na || 11 === d) { c = new Q(c); for (var d = 0, e = c.length; d < e; d++)a.appendChild(c[d]) } }, prepend: function (a, c) {
            if (a.nodeType === na) {
                var d = a.firstChild; s(new Q(c), function (c) {
                    a.insertBefore(c,
                        d)
                })
            }
        }, wrap: function (a, c) { c = C(c).eq(0).clone()[0]; var d = a.parentNode; d && d.replaceChild(c, a); c.appendChild(a) }, remove: Lc, detach: function (a) { Lc(a, !0) }, after: function (a, c) { var d = a, e = a.parentNode; c = new Q(c); for (var f = 0, g = c.length; f < g; f++) { var h = c[f]; e.insertBefore(h, d.nextSibling); d = h } }, addClass: Db, removeClass: Cb, toggleClass: function (a, c, d) { c && s(c.split(" "), function (c) { var f = d; z(f) && (f = !Bb(a, c)); (f ? Db : Cb)(a, c) }) }, parent: function (a) { return (a = a.parentNode) && 11 !== a.nodeType ? a : null }, next: function (a) { return a.nextElementSibling },
        find: function (a, c) { return a.getElementsByTagName ? a.getElementsByTagName(c) : [] }, clone: Vb, triggerHandler: function (a, c, d) {
            var e, f, g = c.type || c, h = zb(a); if (h = (h = h && h.events) && h[g]) e = { preventDefault: function () { this.defaultPrevented = !0 }, isDefaultPrevented: function () { return !0 === this.defaultPrevented }, stopImmediatePropagation: function () { this.immediatePropagationStopped = !0 }, isImmediatePropagationStopped: function () { return !0 === this.immediatePropagationStopped }, stopPropagation: B, type: g, target: a }, c.type && (e = w(e,
                c)), c = qa(h), f = d ? [e].concat(d) : [e], s(c, function (c) { e.isImmediatePropagationStopped() || c.apply(a, f) })
        }
    }, function (a, c) { Q.prototype[c] = function (c, e, f) { for (var g, h = 0, l = this.length; h < l; h++)z(g) ? (g = a(this[h], c, e, f), y(g) && (g = C(g))) : Hc(g, a(this[h], c, e, f)); return y(g) ? g : this }; Q.prototype.bind = Q.prototype.on; Q.prototype.unbind = Q.prototype.off }); eb.prototype = {
        put: function (a, c) { this[Na(a, this.nextUid)] = c }, get: function (a) { return this[Na(a, this.nextUid)] }, remove: function (a) {
            var c = this[a = Na(a, this.nextUid)]; delete this[a];
            return c
        }
    }; var Qc = /^function\s*[^\(]*\(\s*([^\)]*)\)/m, Qf = /,/, Rf = /^\s*(_?)(\S+?)\1\s*$/, Pc = /((\/\/.*$)|(\/\*[\s\S]*?\*\/))/mg, Ga = M("$injector"); ab.$$annotate = function (a, c, d) { var e; if ("function" === typeof a) { if (!(e = a.$inject)) { e = []; if (a.length) { if (c) throw x(d) && d || (d = a.name || mf(a)), Ga("strictdi", d); c = a.toString().replace(Pc, ""); c = c.match(Qc); s(c[1].split(Qf), function (a) { a.replace(Rf, function (a, c, d) { e.push(d) }) }) } a.$inject = e } } else E(a) ? (c = a.length - 1, tb(a[c], "fn"), e = a.slice(0, c)) : tb(a, "fn", !0); return e };
    var Sf = M("$animate"), Ce = ["$provide", function (a) {
    this.$$selectors = {}; this.register = function (c, d) { var e = c + "-animation"; if (c && "." != c.charAt(0)) throw Sf("notcsel", c); this.$$selectors[c.substr(1)] = e; a.factory(e, d) }; this.classNameFilter = function (a) { 1 === arguments.length && (this.$$classNameFilter = a instanceof RegExp ? a : null); return this.$$classNameFilter }; this.$get = ["$$q", "$$asyncCallback", "$rootScope", function (a, d, e) {
        function f(d) {
            var f, g = a.defer(); g.promise.$$cancelFn = function () { f && f() }; e.$$postDigest(function () {
                f =
                d(function () { g.resolve() })
            }); return g.promise
        } function g(a, c) { var d = [], e = [], f = fa(); s((a.attr("class") || "").split(/\s+/), function (a) { f[a] = !0 }); s(c, function (a, c) { var g = f[c]; !1 === a && g ? e.push(c) : !0 !== a || g || d.push(c) }); return 0 < d.length + e.length && [d.length ? d : null, e.length ? e : null] } function h(a, c, d) { for (var e = 0, f = c.length; e < f; ++e)a[c[e]] = d } function l() { m || (m = a.defer(), d(function () { m.resolve(); m = null })); return m.promise } function k(a, c) { if (aa.isObject(c)) { var d = w(c.from || {}, c.to || {}); a.css(d) } } var m; return {
            animate: function (a,
                c, d) { k(a, { from: c, to: d }); return l() }, enter: function (a, c, d, e) { k(a, e); d ? d.after(a) : c.prepend(a); return l() }, leave: function (a, c) { a.remove(); return l() }, move: function (a, c, d, e) { return this.enter(a, c, d, e) }, addClass: function (a, c, d) { return this.setClass(a, c, [], d) }, $$addClassImmediately: function (a, c, d) { a = C(a); c = x(c) ? c : E(c) ? c.join(" ") : ""; s(a, function (a) { Db(a, c) }); k(a, d); return l() }, removeClass: function (a, c, d) { return this.setClass(a, [], c, d) }, $$removeClassImmediately: function (a, c, d) {
                    a = C(a); c = x(c) ? c : E(c) ? c.join(" ") :
                        ""; s(a, function (a) { Cb(a, c) }); k(a, d); return l()
                }, setClass: function (a, c, d, e) {
                    var k = this, l = !1; a = C(a); var m = a.data("$$animateClasses"); m ? e && m.options && (m.options = aa.extend(m.options || {}, e)) : (m = { classes: {}, options: e }, l = !0); e = m.classes; c = E(c) ? c : c.split(" "); d = E(d) ? d : d.split(" "); h(e, c, !0); h(e, d, !1); l && (m.promise = f(function (c) { var d = a.data("$$animateClasses"); a.removeData("$$animateClasses"); if (d) { var e = g(a, d.classes); e && k.$$setClassImmediately(a, e[0], e[1], d.options) } c() }), a.data("$$animateClasses", m));
                    return m.promise
                }, $$setClassImmediately: function (a, c, d, e) { c && this.$$addClassImmediately(a, c); d && this.$$removeClassImmediately(a, d); k(a, e); return l() }, enabled: B, cancel: B
        }
    }]
    }], ia = M("$compile"); xc.$inject = ["$provide", "$$sanitizeUriProvider"]; var Sc = /^((?:x|data)[\:\-_])/i, qf = M("$controller"), Wc = "application/json", $b = { "Content-Type": Wc + ";charset=utf-8" }, sf = /^\[|^\{(?!\{)/, tf = { "[": /]$/, "{": /}$/ }, rf = /^\)\]\}',?\n/, ac = M("$interpolate"), Tf = /^([^\?#]*)(\?([^#]*))?(#(.*))?$/, wf = { http: 80, https: 443, ftp: 21 }, Hb =
        M("$location"), Uf = {
            $$html5: !1, $$replace: !1, absUrl: Ib("$$absUrl"), url: function (a) { if (z(a)) return this.$$url; var c = Tf.exec(a); (c[1] || "" === a) && this.path(decodeURIComponent(c[1])); (c[2] || c[1] || "" === a) && this.search(c[3] || ""); this.hash(c[5] || ""); return this }, protocol: Ib("$$protocol"), host: Ib("$$host"), port: Ib("$$port"), path: dd("$$path", function (a) { a = null !== a ? a.toString() : ""; return "/" == a.charAt(0) ? a : "/" + a }), search: function (a, c) {
                switch (arguments.length) {
                    case 0: return this.$$search; case 1: if (x(a) || V(a)) a =
                        a.toString(), this.$$search = rc(a); else if (J(a)) a = Ea(a, {}), s(a, function (c, e) { null == c && delete a[e] }), this.$$search = a; else throw Hb("isrcharg"); break; default: z(c) || null === c ? delete this.$$search[a] : this.$$search[a] = c
                }this.$$compose(); return this
            }, hash: dd("$$hash", function (a) { return null !== a ? a.toString() : "" }), replace: function () { this.$$replace = !0; return this }
        }; s([cd, ec, dc], function (a) {
        a.prototype = Object.create(Uf); a.prototype.state = function (c) {
            if (!arguments.length) return this.$$state; if (a !== dc || !this.$$html5) throw Hb("nostate");
            this.$$state = z(c) ? null : c; return this
        }
        }); var ka = M("$parse"), Vf = Function.prototype.call, Wf = Function.prototype.apply, Xf = Function.prototype.bind, mb = fa(); s({ "null": function () { return null }, "true": function () { return !0 }, "false": function () { return !1 }, undefined: function () { } }, function (a, c) { a.constant = a.literal = a.sharedGetter = !0; mb[c] = a }); mb["this"] = function (a) { return a }; mb["this"].sharedGetter = !0; var nb = w(fa(), {
            "+": function (a, c, d, e) { d = d(a, c); e = e(a, c); return y(d) ? y(e) ? d + e : d : y(e) ? e : u }, "-": function (a, c, d, e) {
                d = d(a,
                    c); e = e(a, c); return (y(d) ? d : 0) - (y(e) ? e : 0)
            }, "*": function (a, c, d, e) { return d(a, c) * e(a, c) }, "/": function (a, c, d, e) { return d(a, c) / e(a, c) }, "%": function (a, c, d, e) { return d(a, c) % e(a, c) }, "===": function (a, c, d, e) { return d(a, c) === e(a, c) }, "!==": function (a, c, d, e) { return d(a, c) !== e(a, c) }, "==": function (a, c, d, e) { return d(a, c) == e(a, c) }, "!=": function (a, c, d, e) { return d(a, c) != e(a, c) }, "<": function (a, c, d, e) { return d(a, c) < e(a, c) }, ">": function (a, c, d, e) { return d(a, c) > e(a, c) }, "<=": function (a, c, d, e) { return d(a, c) <= e(a, c) }, ">=": function (a,
                c, d, e) { return d(a, c) >= e(a, c) }, "&&": function (a, c, d, e) { return d(a, c) && e(a, c) }, "||": function (a, c, d, e) { return d(a, c) || e(a, c) }, "!": function (a, c, d) { return !d(a, c) }, "=": !0, "|": !0
        }), Yf = { n: "\n", f: "\f", r: "\r", t: "\t", v: "\v", "'": "'", '"': '"' }, hc = function (a) { this.options = a }; hc.prototype = {
            constructor: hc, lex: function (a) {
            this.text = a; this.index = 0; for (this.tokens = []; this.index < this.text.length;)if (a = this.text.charAt(this.index), '"' === a || "'" === a) this.readString(a); else if (this.isNumber(a) || "." === a && this.isNumber(this.peek())) this.readNumber();
            else if (this.isIdent(a)) this.readIdent(); else if (this.is(a, "(){}[].,;:?")) this.tokens.push({ index: this.index, text: a }), this.index++; else if (this.isWhitespace(a)) this.index++; else { var c = a + this.peek(), d = c + this.peek(2), e = nb[c], f = nb[d]; nb[a] || e || f ? (a = f ? d : e ? c : a, this.tokens.push({ index: this.index, text: a, operator: !0 }), this.index += a.length) : this.throwError("Unexpected next character ", this.index, this.index + 1) } return this.tokens
            }, is: function (a, c) { return -1 !== c.indexOf(a) }, peek: function (a) {
                a = a || 1; return this.index +
                    a < this.text.length ? this.text.charAt(this.index + a) : !1
            }, isNumber: function (a) { return "0" <= a && "9" >= a && "string" === typeof a }, isWhitespace: function (a) { return " " === a || "\r" === a || "\t" === a || "\n" === a || "\v" === a || "\u00a0" === a }, isIdent: function (a) { return "a" <= a && "z" >= a || "A" <= a && "Z" >= a || "_" === a || "$" === a }, isExpOperator: function (a) { return "-" === a || "+" === a || this.isNumber(a) }, throwError: function (a, c, d) {
                d = d || this.index; c = y(c) ? "s " + c + "-" + this.index + " [" + this.text.substring(c, d) + "]" : " " + d; throw ka("lexerr", a, c, this.text);
            }, readNumber: function () { for (var a = "", c = this.index; this.index < this.text.length;) { var d = R(this.text.charAt(this.index)); if ("." == d || this.isNumber(d)) a += d; else { var e = this.peek(); if ("e" == d && this.isExpOperator(e)) a += d; else if (this.isExpOperator(d) && e && this.isNumber(e) && "e" == a.charAt(a.length - 1)) a += d; else if (!this.isExpOperator(d) || e && this.isNumber(e) || "e" != a.charAt(a.length - 1)) break; else this.throwError("Invalid exponent") } this.index++ } this.tokens.push({ index: c, text: a, constant: !0, value: Number(a) }) }, readIdent: function () {
                for (var a =
                    this.index; this.index < this.text.length;) { var c = this.text.charAt(this.index); if (!this.isIdent(c) && !this.isNumber(c)) break; this.index++ } this.tokens.push({ index: a, text: this.text.slice(a, this.index), identifier: !0 })
            }, readString: function (a) {
                var c = this.index; this.index++; for (var d = "", e = a, f = !1; this.index < this.text.length;) {
                    var g = this.text.charAt(this.index), e = e + g; if (f) "u" === g ? (f = this.text.substring(this.index + 1, this.index + 5), f.match(/[\da-f]{4}/i) || this.throwError("Invalid unicode escape [\\u" + f + "]"), this.index +=
                        4, d += String.fromCharCode(parseInt(f, 16))) : d += Yf[g] || g, f = !1; else if ("\\" === g) f = !0; else { if (g === a) { this.index++; this.tokens.push({ index: c, text: e, constant: !0, value: d }); return } d += g } this.index++
                } this.throwError("Unterminated quote", c)
            }
        }; var ib = function (a, c, d) { this.lexer = a; this.$filter = c; this.options = d }; ib.ZERO = w(function () { return 0 }, { sharedGetter: !0, constant: !0 }); ib.prototype = {
            constructor: ib, parse: function (a) {
            this.text = a; this.tokens = this.lexer.lex(a); a = this.statements(); 0 !== this.tokens.length && this.throwError("is an unexpected token",
                this.tokens[0]); a.literal = !!a.literal; a.constant = !!a.constant; return a
            }, primary: function () {
                var a; this.expect("(") ? (a = this.filterChain(), this.consume(")")) : this.expect("[") ? a = this.arrayDeclaration() : this.expect("{") ? a = this.object() : this.peek().identifier && this.peek().text in mb ? a = mb[this.consume().text] : this.peek().identifier ? a = this.identifier() : this.peek().constant ? a = this.constant() : this.throwError("not a primary expression", this.peek()); for (var c, d; c = this.expect("(", "[", ".");)"(" === c.text ? (a = this.functionCall(a,
                    d), d = null) : "[" === c.text ? (d = a, a = this.objectIndex(a)) : "." === c.text ? (d = a, a = this.fieldAccess(a)) : this.throwError("IMPOSSIBLE"); return a
            }, throwError: function (a, c) { throw ka("syntax", c.text, a, c.index + 1, this.text, this.text.substring(c.index)); }, peekToken: function () { if (0 === this.tokens.length) throw ka("ueoe", this.text); return this.tokens[0] }, peek: function (a, c, d, e) { return this.peekAhead(0, a, c, d, e) }, peekAhead: function (a, c, d, e, f) {
                if (this.tokens.length > a) {
                    a = this.tokens[a]; var g = a.text; if (g === c || g === d || g === e || g ===
                        f || !(c || d || e || f)) return a
                } return !1
            }, expect: function (a, c, d, e) { return (a = this.peek(a, c, d, e)) ? (this.tokens.shift(), a) : !1 }, consume: function (a) { if (0 === this.tokens.length) throw ka("ueoe", this.text); var c = this.expect(a); c || this.throwError("is unexpected, expecting [" + a + "]", this.peek()); return c }, unaryFn: function (a, c) { var d = nb[a]; return w(function (a, f) { return d(a, f, c) }, { constant: c.constant, inputs: [c] }) }, binaryFn: function (a, c, d, e) {
                var f = nb[c]; return w(function (c, e) { return f(c, e, a, d) }, {
                    constant: a.constant &&
                        d.constant, inputs: !e && [a, d]
                })
            }, identifier: function () { for (var a = this.consume().text; this.peek(".") && this.peekAhead(1).identifier && !this.peekAhead(2, "(");)a += this.consume().text + this.consume().text; return yf(a, this.options, this.text) }, constant: function () { var a = this.consume().value; return w(function () { return a }, { constant: !0, literal: !0 }) }, statements: function () {
                for (var a = []; ;)if (0 < this.tokens.length && !this.peek("}", ")", ";", "]") && a.push(this.filterChain()), !this.expect(";")) return 1 === a.length ? a[0] : function (c,
                    d) { for (var e, f = 0, g = a.length; f < g; f++)e = a[f](c, d); return e }
            }, filterChain: function () { for (var a = this.expression(); this.expect("|");)a = this.filter(a); return a }, filter: function (a) { var c = this.$filter(this.consume().text), d, e; if (this.peek(":")) for (d = [], e = []; this.expect(":");)d.push(this.expression()); var f = [a].concat(d || []); return w(function (f, h) { var l = a(f, h); if (e) { e[0] = l; for (l = d.length; l--;)e[l + 1] = d[l](f, h); return c.apply(u, e) } return c(l) }, { constant: !c.$stateful && f.every(fc), inputs: !c.$stateful && f }) }, expression: function () { return this.assignment() },
            assignment: function () { var a = this.ternary(), c, d; return (d = this.expect("=")) ? (a.assign || this.throwError("implies assignment but [" + this.text.substring(0, d.index) + "] can not be assigned to", d), c = this.ternary(), w(function (d, f) { return a.assign(d, c(d, f), f) }, { inputs: [a, c] })) : a }, ternary: function () { var a = this.logicalOR(), c; if (this.expect("?") && (c = this.assignment(), this.consume(":"))) { var d = this.assignment(); return w(function (e, f) { return a(e, f) ? c(e, f) : d(e, f) }, { constant: a.constant && c.constant && d.constant }) } return a },
            logicalOR: function () { for (var a = this.logicalAND(), c; c = this.expect("||");)a = this.binaryFn(a, c.text, this.logicalAND(), !0); return a }, logicalAND: function () { for (var a = this.equality(), c; c = this.expect("&&");)a = this.binaryFn(a, c.text, this.equality(), !0); return a }, equality: function () { for (var a = this.relational(), c; c = this.expect("==", "!=", "===", "!==");)a = this.binaryFn(a, c.text, this.relational()); return a }, relational: function () {
                for (var a = this.additive(), c; c = this.expect("<", ">", "<=", ">=");)a = this.binaryFn(a, c.text,
                    this.additive()); return a
            }, additive: function () { for (var a = this.multiplicative(), c; c = this.expect("+", "-");)a = this.binaryFn(a, c.text, this.multiplicative()); return a }, multiplicative: function () { for (var a = this.unary(), c; c = this.expect("*", "/", "%");)a = this.binaryFn(a, c.text, this.unary()); return a }, unary: function () { var a; return this.expect("+") ? this.primary() : (a = this.expect("-")) ? this.binaryFn(ib.ZERO, a.text, this.unary()) : (a = this.expect("!")) ? this.unaryFn(a.text, this.unary()) : this.primary() }, fieldAccess: function (a) {
                var c =
                    this.identifier(); return w(function (d, e, f) { d = f || a(d, e); return null == d ? u : c(d) }, { assign: function (d, e, f) { var g = a(d, f); g || a.assign(d, g = {}, f); return c.assign(g, e) } })
            }, objectIndex: function (a) { var c = this.text, d = this.expression(); this.consume("]"); return w(function (e, f) { var g = a(e, f), h = d(e, f); sa(h, c); return g ? la(g[h], c) : u }, { assign: function (e, f, g) { var h = sa(d(e, g), c), l = la(a(e, g), c); l || a.assign(e, l = {}, g); return l[h] = f } }) }, functionCall: function (a, c) {
                var d = []; if (")" !== this.peekToken().text) {
                    do d.push(this.expression());
                    while (this.expect(","))
                } this.consume(")"); var e = this.text, f = d.length ? [] : null; return function (g, h) { var l = c ? c(g, h) : y(c) ? u : g, k = a(g, h, l) || B; if (f) for (var m = d.length; m--;)f[m] = la(d[m](g, h), e); la(l, e); if (k) { if (k.constructor === k) throw ka("isecfn", e); if (k === Vf || k === Wf || k === Xf) throw ka("isecff", e); } l = k.apply ? k.apply(l, f) : k(f[0], f[1], f[2], f[3], f[4]); f && (f.length = 0); return la(l, e) }
            }, arrayDeclaration: function () {
                var a = []; if ("]" !== this.peekToken().text) {
                    do { if (this.peek("]")) break; a.push(this.expression()) } while (this.expect(","))
                } this.consume("]"); return w(function (c, d) { for (var e = [], f = 0, g = a.length; f < g; f++)e.push(a[f](c, d)); return e }, { literal: !0, constant: a.every(fc), inputs: a })
            }, object: function () {
                var a = [], c = []; if ("}" !== this.peekToken().text) { do { if (this.peek("}")) break; var d = this.consume(); d.constant ? a.push(d.value) : d.identifier ? a.push(d.text) : this.throwError("invalid key", d); this.consume(":"); c.push(this.expression()) } while (this.expect(",")) } this.consume("}"); return w(function (d, f) {
                    for (var g = {}, h = 0, l = c.length; h < l; h++)g[a[h]] =
                        c[h](d, f); return g
                }, { literal: !0, constant: c.every(fc), inputs: c })
            }
        }; var Af = fa(), zf = fa(), Bf = Object.prototype.valueOf, Ca = M("$sce"), ma = { HTML: "html", CSS: "css", URL: "url", RESOURCE_URL: "resourceUrl", JS: "js" }, ia = M("$compile"), Y = X.createElement("a"), id = Ba(P.location.href); Ec.$inject = ["$provide"]; jd.$inject = ["$locale"]; ld.$inject = ["$locale"]; var od = ".", Lf = {
            yyyy: Z("FullYear", 4), yy: Z("FullYear", 2, 0, !0), y: Z("FullYear", 1), MMMM: Kb("Month"), MMM: Kb("Month", !0), MM: Z("Month", 2, 1), M: Z("Month", 1, 1), dd: Z("Date", 2), d: Z("Date",
                1), HH: Z("Hours", 2), H: Z("Hours", 1), hh: Z("Hours", 2, -12), h: Z("Hours", 1, -12), mm: Z("Minutes", 2), m: Z("Minutes", 1), ss: Z("Seconds", 2), s: Z("Seconds", 1), sss: Z("Milliseconds", 3), EEEE: Kb("Day"), EEE: Kb("Day", !0), a: function (a, c) { return 12 > a.getHours() ? c.AMPMS[0] : c.AMPMS[1] }, Z: function (a) { a = -1 * a.getTimezoneOffset(); return a = (0 <= a ? "+" : "") + (Jb(Math[0 < a ? "floor" : "ceil"](a / 60), 2) + Jb(Math.abs(a % 60), 2)) }, ww: qd(2), w: qd(1)
        }, Kf = /((?:[^yMdHhmsaZEw']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|d+|H+|h+|m+|s+|a|Z|w+))(.*)/, Jf = /^\-?\d+$/;
    kd.$inject = ["$locale"]; var Gf = da(R), Hf = da(vb); md.$inject = ["$parse"]; var Td = da({ restrict: "E", compile: function (a, c) { if (!c.href && !c.xlinkHref && !c.name) return function (a, c) { if ("a" === c[0].nodeName.toLowerCase()) { var f = "[object SVGAnimatedString]" === Da.call(c.prop("href")) ? "xlink:href" : "href"; c.on("click", function (a) { c.attr(f) || a.preventDefault() }) } } } }), wb = {}; s(Fb, function (a, c) {
        if ("multiple" != a) {
            var d = ya("ng-" + c); wb[d] = function () {
                return {
                    restrict: "A", priority: 100, link: function (a, f, g) {
                        a.$watch(g[d], function (a) {
                            g.$set(c,
                                !!a)
                        })
                    }
                }
            }
        }
    }); s(Oc, function (a, c) { wb[c] = function () { return { priority: 100, link: function (a, e, f) { if ("ngPattern" === c && "/" == f.ngPattern.charAt(0) && (e = f.ngPattern.match(Nf))) { f.$set("ngPattern", new RegExp(e[1], e[2])); return } a.$watch(f[c], function (a) { f.$set(c, a) }) } } } }); s(["src", "srcset", "href"], function (a) {
        var c = ya("ng-" + a); wb[c] = function () {
            return {
                priority: 99, link: function (d, e, f) {
                    var g = a, h = a; "href" === a && "[object SVGAnimatedString]" === Da.call(e.prop("href")) && (h = "xlinkHref", f.$attr[h] = "xlink:href", g = null); f.$observe(c,
                        function (c) { c ? (f.$set(h, c), Ra && g && e.prop(g, f[h])) : "href" === a && f.$set(h, null) })
                }
            }
        }
    }); var Lb = { $addControl: B, $$renameControl: function (a, c) { a.$name = c }, $removeControl: B, $setValidity: B, $setDirty: B, $setPristine: B, $setSubmitted: B }; rd.$inject = ["$element", "$attrs", "$scope", "$animate", "$interpolate"]; var yd = function (a) {
        return ["$timeout", function (c) {
            return {
                name: "form", restrict: a ? "EAC" : "E", controller: rd, compile: function (a) {
                    a.addClass(Sa).addClass(lb); return {
                        pre: function (a, d, g, h) {
                            if (!("action" in g)) {
                                var l = function (c) {
                                    a.$apply(function () {
                                        h.$commitViewValue();
                                        h.$setSubmitted()
                                    }); c.preventDefault()
                                }; d[0].addEventListener("submit", l, !1); d.on("$destroy", function () { c(function () { d[0].removeEventListener("submit", l, !1) }, 0, !1) })
                            } var k = h.$$parentForm, m = h.$name; m && (hb(a, null, m, h, m), g.$observe(g.name ? "name" : "ngForm", function (c) { m !== c && (hb(a, null, m, u, m), m = c, hb(a, null, m, h, m), k.$$renameControl(h, m)) })); d.on("$destroy", function () { k.$removeControl(h); m && hb(a, null, m, u, m); w(h, Lb) })
                        }
                    }
                }
            }
        }]
    }, Ud = yd(), ge = yd(!0), Mf = /\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d+([+-][0-2]\d:[0-5]\d|Z)/,
        Zf = /^(ftp|http|https):\/\/(\w+:{0,1}\w*@)?(\S+)(:[0-9]+)?(\/|\/([\w#!:.?+=&%@!\-\/]))?$/, $f = /^[a-z0-9!#$%&'*+\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i, ag = /^\s*(\-|\+)?(\d+|(\d*(\.\d*)))\s*$/, zd = /^(\d{4})-(\d{2})-(\d{2})$/, Ad = /^(\d{4})-(\d\d)-(\d\d)T(\d\d):(\d\d)(?::(\d\d)(\.\d{1,3})?)?$/, kc = /^(\d{4})-W(\d\d)$/, Bd = /^(\d{4})-(\d\d)$/, Cd = /^(\d\d):(\d\d)(?::(\d\d)(\.\d{1,3})?)?$/, Dd = {
            text: function (a, c, d, e, f, g) { jb(a, c, d, e, f, g); ic(e) }, date: kb("date", zd, Nb(zd, ["yyyy",
                "MM", "dd"]), "yyyy-MM-dd"), "datetime-local": kb("datetimelocal", Ad, Nb(Ad, "yyyy MM dd HH mm ss sss".split(" ")), "yyyy-MM-ddTHH:mm:ss.sss"), time: kb("time", Cd, Nb(Cd, ["HH", "mm", "ss", "sss"]), "HH:mm:ss.sss"), week: kb("week", kc, function (a, c) { if (pa(a)) return a; if (x(a)) { kc.lastIndex = 0; var d = kc.exec(a); if (d) { var e = +d[1], f = +d[2], g = d = 0, h = 0, l = 0, k = pd(e), f = 7 * (f - 1); c && (d = c.getHours(), g = c.getMinutes(), h = c.getSeconds(), l = c.getMilliseconds()); return new Date(e, 0, k.getDate() + f, d, g, h, l) } } return NaN }, "yyyy-Www"), month: kb("month",
                    Bd, Nb(Bd, ["yyyy", "MM"]), "yyyy-MM"), number: function (a, c, d, e, f, g) {
                        td(a, c, d, e); jb(a, c, d, e, f, g); e.$$parserName = "number"; e.$parsers.push(function (a) { return e.$isEmpty(a) ? null : ag.test(a) ? parseFloat(a) : u }); e.$formatters.push(function (a) { if (!e.$isEmpty(a)) { if (!V(a)) throw Ob("numfmt", a); a = a.toString() } return a }); if (y(d.min) || d.ngMin) { var h; e.$validators.min = function (a) { return e.$isEmpty(a) || z(h) || a >= h }; d.$observe("min", function (a) { y(a) && !V(a) && (a = parseFloat(a, 10)); h = V(a) && !isNaN(a) ? a : u; e.$validate() }) } if (y(d.max) ||
                            d.ngMax) { var l; e.$validators.max = function (a) { return e.$isEmpty(a) || z(l) || a <= l }; d.$observe("max", function (a) { y(a) && !V(a) && (a = parseFloat(a, 10)); l = V(a) && !isNaN(a) ? a : u; e.$validate() }) }
                    }, url: function (a, c, d, e, f, g) { jb(a, c, d, e, f, g); ic(e); e.$$parserName = "url"; e.$validators.url = function (a, c) { var d = a || c; return e.$isEmpty(d) || Zf.test(d) } }, email: function (a, c, d, e, f, g) { jb(a, c, d, e, f, g); ic(e); e.$$parserName = "email"; e.$validators.email = function (a, c) { var d = a || c; return e.$isEmpty(d) || $f.test(d) } }, radio: function (a, c,
                        d, e) { z(d.name) && c.attr("name", ++ob); c.on("click", function (a) { c[0].checked && e.$setViewValue(d.value, a && a.type) }); e.$render = function () { c[0].checked = d.value == e.$viewValue }; d.$observe("value", e.$render) }, checkbox: function (a, c, d, e, f, g, h, l) {
                            var k = ud(l, a, "ngTrueValue", d.ngTrueValue, !0), m = ud(l, a, "ngFalseValue", d.ngFalseValue, !1); c.on("click", function (a) { e.$setViewValue(c[0].checked, a && a.type) }); e.$render = function () { c[0].checked = e.$viewValue }; e.$isEmpty = function (a) { return !1 === a }; e.$formatters.push(function (a) {
                                return ea(a,
                                    k)
                            }); e.$parsers.push(function (a) { return a ? k : m })
                        }, hidden: B, button: B, submit: B, reset: B, file: B
        }, yc = ["$browser", "$sniffer", "$filter", "$parse", function (a, c, d, e) { return { restrict: "E", require: ["?ngModel"], link: { pre: function (f, g, h, l) { l[0] && (Dd[R(h.type)] || Dd.text)(f, g, h, l[0], c, a, d, e) } } } }], bg = /^(true|false|\d+)$/, ye = function () {
            return {
                restrict: "A", priority: 100, compile: function (a, c) {
                    return bg.test(c.ngValue) ? function (a, c, f) { f.$set("value", a.$eval(f.ngValue)) } : function (a, c, f) {
                        a.$watch(f.ngValue, function (a) {
                            f.$set("value",
                                a)
                        })
                    }
                }
            }
        }, Zd = ["$compile", function (a) { return { restrict: "AC", compile: function (c) { a.$$addBindingClass(c); return function (c, e, f) { a.$$addBindingInfo(e, f.ngBind); e = e[0]; c.$watch(f.ngBind, function (a) { e.textContent = a === u ? "" : a }) } } } }], ae = ["$interpolate", "$compile", function (a, c) { return { compile: function (d) { c.$$addBindingClass(d); return function (d, f, g) { d = a(f.attr(g.$attr.ngBindTemplate)); c.$$addBindingInfo(f, d.expressions); f = f[0]; g.$observe("ngBindTemplate", function (a) { f.textContent = a === u ? "" : a }) } } } }], $d = ["$sce",
            "$parse", "$compile", function (a, c, d) { return { restrict: "A", compile: function (e, f) { var g = c(f.ngBindHtml), h = c(f.ngBindHtml, function (a) { return (a || "").toString() }); d.$$addBindingClass(e); return function (c, e, f) { d.$$addBindingInfo(e, f.ngBindHtml); c.$watch(h, function () { e.html(a.getTrustedHtml(g(c)) || "") }) } } } }], xe = da({ restrict: "A", require: "ngModel", link: function (a, c, d, e) { e.$viewChangeListeners.push(function () { a.$eval(d.ngChange) }) } }), be = jc("", !0), de = jc("Odd", 0), ce = jc("Even", 1), ee = Ja({
                compile: function (a, c) {
                    c.$set("ngCloak",
                        u); a.removeClass("ng-cloak")
                }
            }), fe = [function () { return { restrict: "A", scope: !0, controller: "@", priority: 500 } }], Dc = {}, cg = { blur: !0, focus: !0 }; s("click dblclick mousedown mouseup mouseover mouseout mousemove mouseenter mouseleave keydown keyup keypress submit focus blur copy cut paste".split(" "), function (a) {
                var c = ya("ng-" + a); Dc[c] = ["$parse", "$rootScope", function (d, e) {
                    return {
                        restrict: "A", compile: function (f, g) {
                            var h = d(g[c], null, !0); return function (c, d) {
                                d.on(a, function (d) {
                                    var f = function () { h(c, { $event: d }) };
                                    cg[a] && e.$$phase ? c.$evalAsync(f) : c.$apply(f)
                                })
                            }
                        }
                    }
                }]
            }); var ie = ["$animate", function (a) { return { multiElement: !0, transclude: "element", priority: 600, terminal: !0, restrict: "A", $$tlb: !0, link: function (c, d, e, f, g) { var h, l, k; c.$watch(e.ngIf, function (c) { c ? l || g(function (c, f) { l = f; c[c.length++] = X.createComment(" end ngIf: " + e.ngIf + " "); h = { clone: c }; a.enter(c, d.parent(), d) }) : (k && (k.remove(), k = null), l && (l.$destroy(), l = null), h && (k = ub(h.clone), a.leave(k).then(function () { k = null }), h = null)) }) } } }], je = ["$templateRequest", "$anchorScroll",
                "$animate", "$sce", function (a, c, d, e) {
                    return {
                        restrict: "ECA", priority: 400, terminal: !0, transclude: "element", controller: aa.noop, compile: function (f, g) {
                            var h = g.ngInclude || g.src, l = g.onload || "", k = g.autoscroll; return function (f, g, q, s, r) {
                                var u = 0, w, n, D, H = function () { n && (n.remove(), n = null); w && (w.$destroy(), w = null); D && (d.leave(D).then(function () { n = null }), n = D, D = null) }; f.$watch(e.parseAsResourceUrl(h), function (e) {
                                    var h = function () { !y(k) || k && !f.$eval(k) || c() }, n = ++u; e ? (a(e, !0).then(function (a) {
                                        if (n === u) {
                                            var c = f.$new();
                                            s.template = a; a = r(c, function (a) { H(); d.enter(a, null, g).then(h) }); w = c; D = a; w.$emit("$includeContentLoaded", e); f.$eval(l)
                                        }
                                    }, function () { n === u && (H(), f.$emit("$includeContentError", e)) }), f.$emit("$includeContentRequested", e)) : (H(), s.template = null)
                                })
                            }
                        }
                    }
                }], Ae = ["$compile", function (a) { return { restrict: "ECA", priority: -400, require: "ngInclude", link: function (c, d, e, f) { /SVG/.test(d[0].toString()) ? (d.empty(), a(Gc(f.template, X).childNodes)(c, function (a) { d.append(a) }, { futureParentElement: d })) : (d.html(f.template), a(d.contents())(c)) } } }],
                ke = Ja({ priority: 450, compile: function () { return { pre: function (a, c, d) { a.$eval(d.ngInit) } } } }), we = function () { return { restrict: "A", priority: 100, require: "ngModel", link: function (a, c, d, e) { var f = c.attr(d.$attr.ngList) || ", ", g = "false" !== d.ngTrim, h = g ? T(f) : f; e.$parsers.push(function (a) { if (!z(a)) { var c = []; a && s(a.split(h), function (a) { a && c.push(g ? T(a) : a) }); return c } }); e.$formatters.push(function (a) { return E(a) ? a.join(f) : u }); e.$isEmpty = function (a) { return !a || !a.length } } } }, lb = "ng-valid", vd = "ng-invalid", Sa = "ng-pristine",
                Mb = "ng-dirty", xd = "ng-pending", Ob = new M("ngModel"), dg = ["$scope", "$exceptionHandler", "$attrs", "$element", "$parse", "$animate", "$timeout", "$rootScope", "$q", "$interpolate", function (a, c, d, e, f, g, h, l, k, m) {
                this.$modelValue = this.$viewValue = Number.NaN; this.$$rawModelValue = u; this.$validators = {}; this.$asyncValidators = {}; this.$parsers = []; this.$formatters = []; this.$viewChangeListeners = []; this.$untouched = !0; this.$touched = !1; this.$pristine = !0; this.$dirty = !1; this.$valid = !0; this.$invalid = !1; this.$error = {}; this.$$success =
                    {}; this.$pending = u; this.$name = m(d.name || "", !1)(a); var p = f(d.ngModel), q = p.assign, t = p, r = q, w = null, C, n = this; this.$$setOptions = function (a) { if ((n.$options = a) && a.getterSetter) { var c = f(d.ngModel + "()"), g = f(d.ngModel + "($$$p)"); t = function (a) { var d = p(a); G(d) && (d = c(a)); return d }; r = function (a, c) { G(p(a)) ? g(a, { $$$p: n.$modelValue }) : q(a, n.$modelValue) } } else if (!p.assign) throw Ob("nonassign", d.ngModel, ua(e)); }; this.$render = B; this.$isEmpty = function (a) { return z(a) || "" === a || null === a || a !== a }; var D = e.inheritedData("$formController") ||
                        Lb, H = 0; sd({ ctrl: this, $element: e, set: function (a, c) { a[c] = !0 }, unset: function (a, c) { delete a[c] }, parentForm: D, $animate: g }); this.$setPristine = function () { n.$dirty = !1; n.$pristine = !0; g.removeClass(e, Mb); g.addClass(e, Sa) }; this.$setDirty = function () { n.$dirty = !0; n.$pristine = !1; g.removeClass(e, Sa); g.addClass(e, Mb); D.$setDirty() }; this.$setUntouched = function () { n.$touched = !1; n.$untouched = !0; g.setClass(e, "ng-untouched", "ng-touched") }; this.$setTouched = function () {
                        n.$touched = !0; n.$untouched = !1; g.setClass(e, "ng-touched",
                            "ng-untouched")
                        }; this.$rollbackViewValue = function () { h.cancel(w); n.$viewValue = n.$$lastCommittedViewValue; n.$render() }; this.$validate = function () { if (!V(n.$modelValue) || !isNaN(n.$modelValue)) { var a = n.$$rawModelValue, c = n.$valid, d = n.$modelValue, e = n.$options && n.$options.allowInvalid; n.$$runValidators(a, n.$$lastCommittedViewValue, function (f) { e || c === f || (n.$modelValue = f ? a : u, n.$modelValue !== d && n.$$writeModelToScope()) }) } }; this.$$runValidators = function (a, c, d) {
                            function e() {
                                var d = !0; s(n.$validators, function (e,
                                    f) { var h = e(a, c); d = d && h; g(f, h) }); return d ? !0 : (s(n.$asyncValidators, function (a, c) { g(c, null) }), !1)
                            } function f() { var d = [], e = !0; s(n.$asyncValidators, function (f, h) { var k = f(a, c); if (!k || !G(k.then)) throw Ob("$asyncValidators", k); g(h, u); d.push(k.then(function () { g(h, !0) }, function (a) { e = !1; g(h, !1) })) }); d.length ? k.all(d).then(function () { h(e) }, B) : h(!0) } function g(a, c) { l === H && n.$setValidity(a, c) } function h(a) { l === H && d(a) } H++; var l = H; (function () {
                                var a = n.$$parserName || "parse"; if (C === u) g(a, null); else return C || (s(n.$validators,
                                    function (a, c) { g(c, null) }), s(n.$asyncValidators, function (a, c) { g(c, null) })), g(a, C), C; return !0
                            })() ? e() ? f() : h(!1) : h(!1)
                        }; this.$commitViewValue = function () { var a = n.$viewValue; h.cancel(w); if (n.$$lastCommittedViewValue !== a || "" === a && n.$$hasNativeValidators) n.$$lastCommittedViewValue = a, n.$pristine && this.$setDirty(), this.$$parseAndValidate() }; this.$$parseAndValidate = function () {
                            var c = n.$$lastCommittedViewValue; if (C = z(c) ? u : !0) for (var d = 0; d < n.$parsers.length; d++)if (c = n.$parsers[d](c), z(c)) { C = !1; break } V(n.$modelValue) &&
                                isNaN(n.$modelValue) && (n.$modelValue = t(a)); var e = n.$modelValue, f = n.$options && n.$options.allowInvalid; n.$$rawModelValue = c; f && (n.$modelValue = c, n.$modelValue !== e && n.$$writeModelToScope()); n.$$runValidators(c, n.$$lastCommittedViewValue, function (a) { f || (n.$modelValue = a ? c : u, n.$modelValue !== e && n.$$writeModelToScope()) })
                        }; this.$$writeModelToScope = function () { r(a, n.$modelValue); s(n.$viewChangeListeners, function (a) { try { a() } catch (d) { c(d) } }) }; this.$setViewValue = function (a, c) {
                        n.$viewValue = a; n.$options && !n.$options.updateOnDefault ||
                            n.$$debounceViewValueCommit(c)
                        }; this.$$debounceViewValueCommit = function (c) { var d = 0, e = n.$options; e && y(e.debounce) && (e = e.debounce, V(e) ? d = e : V(e[c]) ? d = e[c] : V(e["default"]) && (d = e["default"])); h.cancel(w); d ? w = h(function () { n.$commitViewValue() }, d) : l.$$phase ? n.$commitViewValue() : a.$apply(function () { n.$commitViewValue() }) }; a.$watch(function () {
                            var c = t(a); if (c !== n.$modelValue) {
                            n.$modelValue = n.$$rawModelValue = c; C = u; for (var d = n.$formatters, e = d.length, f = c; e--;)f = d[e](f); n.$viewValue !== f && (n.$viewValue = n.$$lastCommittedViewValue =
                                f, n.$render(), n.$$runValidators(c, f, B))
                            } return c
                        })
                }], ve = ["$rootScope", function (a) {
                    return {
                        restrict: "A", require: ["ngModel", "^?form", "^?ngModelOptions"], controller: dg, priority: 1, compile: function (c) {
                            c.addClass(Sa).addClass("ng-untouched").addClass(lb); return {
                                pre: function (a, c, f, g) { var h = g[0], l = g[1] || Lb; h.$$setOptions(g[2] && g[2].$options); l.$addControl(h); f.$observe("name", function (a) { h.$name !== a && l.$$renameControl(h, a) }); a.$on("$destroy", function () { l.$removeControl(h) }) }, post: function (c, e, f, g) {
                                    var h = g[0];
                                    if (h.$options && h.$options.updateOn) e.on(h.$options.updateOn, function (a) { h.$$debounceViewValueCommit(a && a.type) }); e.on("blur", function (e) { h.$touched || (a.$$phase ? c.$evalAsync(h.$setTouched) : c.$apply(h.$setTouched)) })
                                }
                            }
                        }
                    }
                }], eg = /(\s+|^)default(\s+|$)/, ze = function () {
                    return {
                        restrict: "A", controller: ["$scope", "$attrs", function (a, c) {
                            var d = this; this.$options = a.$eval(c.ngModelOptions); this.$options.updateOn !== u ? (this.$options.updateOnDefault = !1, this.$options.updateOn = T(this.$options.updateOn.replace(eg, function () {
                                d.$options.updateOnDefault =
                                !0; return " "
                            }))) : this.$options.updateOnDefault = !0
                        }]
                    }
                }, le = Ja({ terminal: !0, priority: 1E3 }), me = ["$locale", "$interpolate", function (a, c) {
                    var d = /{}/g, e = /^when(Minus)?(.+)$/; return {
                        restrict: "EA", link: function (f, g, h) {
                            function l(a) { g.text(a || "") } var k = h.count, m = h.$attr.when && g.attr(h.$attr.when), p = h.offset || 0, q = f.$eval(m) || {}, t = {}, m = c.startSymbol(), r = c.endSymbol(), u = m + k + "-" + p + r, w = aa.noop, n; s(h, function (a, c) { var d = e.exec(c); d && (d = (d[1] ? "-" : "") + R(d[2]), q[d] = g.attr(h.$attr[c])) }); s(q, function (a, e) {
                            t[e] = c(a.replace(d,
                                u))
                            }); f.$watch(k, function (c) { c = parseFloat(c); var d = isNaN(c); d || c in q || (c = a.pluralCat(c - p)); c === n || d && isNaN(n) || (w(), w = f.$watch(t[c], l), n = c) })
                        }
                    }
                }], ne = ["$parse", "$animate", function (a, c) {
                    var d = M("ngRepeat"), e = function (a, c, d, e, k, m, p) { a[d] = e; k && (a[k] = m); a.$index = c; a.$first = 0 === c; a.$last = c === p - 1; a.$middle = !(a.$first || a.$last); a.$odd = !(a.$even = 0 === (c & 1)) }; return {
                        restrict: "A", multiElement: !0, transclude: "element", priority: 1E3, terminal: !0, $$tlb: !0, compile: function (f, g) {
                            var h = g.ngRepeat, l = X.createComment(" end ngRepeat: " +
                                h + " "), k = h.match(/^\s*([\s\S]+?)\s+in\s+([\s\S]+?)(?:\s+as\s+([\s\S]+?))?(?:\s+track\s+by\s+([\s\S]+?))?\s*$/); if (!k) throw d("iexp", h); var m = k[1], p = k[2], q = k[3], t = k[4], k = m.match(/^(?:(\s*[\$\w]+)|\(\s*([\$\w]+)\s*,\s*([\$\w]+)\s*\))$/); if (!k) throw d("iidexp", m); var r = k[3] || k[1], w = k[2]; if (q && (!/^[$a-zA-Z_][$a-zA-Z0-9_]*$/.test(q) || /^(null|undefined|this|\$index|\$first|\$middle|\$last|\$even|\$odd|\$parent|\$root|\$id)$/.test(q))) throw d("badident", q); var y, n, D, H, v = { $id: Na }; t ? y = a(t) : (D = function (a, c) { return Na(c) },
                                    H = function (a) { return a }); return function (a, f, g, k, m) {
                                        y && (n = function (c, d, e) { w && (v[w] = c); v[r] = d; v.$index = e; return y(a, v) }); var t = fa(); a.$watchCollection(p, function (g) {
                                            var k, p, y = f[0], F, v = fa(), B, z, G, E, J, x, K; q && (a[q] = g); if (Ta(g)) J = g, p = n || D; else { p = n || H; J = []; for (K in g) g.hasOwnProperty(K) && "$" != K.charAt(0) && J.push(K); J.sort() } B = J.length; K = Array(B); for (k = 0; k < B; k++)if (z = g === J ? k : J[k], G = g[z], E = p(z, G, k), t[E]) x = t[E], delete t[E], v[E] = x, K[k] = x; else {
                                                if (v[E]) throw s(K, function (a) { a && a.scope && (t[a.id] = a) }), d("dupes",
                                                    h, E, G); K[k] = { id: E, scope: u, clone: u }; v[E] = !0
                                            } for (F in t) { x = t[F]; E = ub(x.clone); c.leave(E); if (E[0].parentNode) for (k = 0, p = E.length; k < p; k++)E[k].$$NG_REMOVED = !0; x.scope.$destroy() } for (k = 0; k < B; k++)if (z = g === J ? k : J[k], G = g[z], x = K[k], x.scope) { F = y; do F = F.nextSibling; while (F && F.$$NG_REMOVED); x.clone[0] != F && c.move(ub(x.clone), null, C(y)); y = x.clone[x.clone.length - 1]; e(x.scope, k, r, G, w, z, B) } else m(function (a, d) {
                                            x.scope = d; var f = l.cloneNode(!1); a[a.length++] = f; c.enter(a, null, C(y)); y = f; x.clone = a; v[x.id] = x; e(x.scope, k, r,
                                                G, w, z, B)
                                            }); t = v
                                        })
                                    }
                        }
                    }
                }], oe = ["$animate", function (a) { return { restrict: "A", multiElement: !0, link: function (c, d, e) { c.$watch(e.ngShow, function (c) { a[c ? "removeClass" : "addClass"](d, "ng-hide", { tempClasses: "ng-hide-animate" }) }) } } }], he = ["$animate", function (a) { return { restrict: "A", multiElement: !0, link: function (c, d, e) { c.$watch(e.ngHide, function (c) { a[c ? "addClass" : "removeClass"](d, "ng-hide", { tempClasses: "ng-hide-animate" }) }) } } }], pe = Ja(function (a, c, d) {
                    a.$watchCollection(d.ngStyle, function (a, d) {
                    d && a !== d && s(d, function (a,
                        d) { c.css(d, "") }); a && c.css(a)
                    })
                }), qe = ["$animate", function (a) {
                    return {
                        restrict: "EA", require: "ngSwitch", controller: ["$scope", function () { this.cases = {} }], link: function (c, d, e, f) {
                            var g = [], h = [], l = [], k = [], m = function (a, c) { return function () { a.splice(c, 1) } }; c.$watch(e.ngSwitch || e.on, function (c) {
                                var d, e; d = 0; for (e = l.length; d < e; ++d)a.cancel(l[d]); d = l.length = 0; for (e = k.length; d < e; ++d) { var r = ub(h[d].clone); k[d].$destroy(); (l[d] = a.leave(r)).then(m(l, d)) } h.length = 0; k.length = 0; (g = f.cases["!" + c] || f.cases["?"]) && s(g, function (c) {
                                    c.transclude(function (d,
                                        e) { k.push(e); var f = c.element; d[d.length++] = X.createComment(" end ngSwitchWhen: "); h.push({ clone: d }); a.enter(d, f.parent(), f) })
                                })
                            })
                        }
                    }
                }], re = Ja({ transclude: "element", priority: 1200, require: "^ngSwitch", multiElement: !0, link: function (a, c, d, e, f) { e.cases["!" + d.ngSwitchWhen] = e.cases["!" + d.ngSwitchWhen] || []; e.cases["!" + d.ngSwitchWhen].push({ transclude: f, element: c }) } }), se = Ja({
                    transclude: "element", priority: 1200, require: "^ngSwitch", multiElement: !0, link: function (a, c, d, e, f) {
                    e.cases["?"] = e.cases["?"] || []; e.cases["?"].push({
                        transclude: f,
                        element: c
                    })
                    }
                }), ue = Ja({ restrict: "EAC", link: function (a, c, d, e, f) { if (!f) throw M("ngTransclude")("orphan", ua(c)); f(function (a) { c.empty(); c.append(a) }) } }), Vd = ["$templateCache", function (a) { return { restrict: "E", terminal: !0, compile: function (c, d) { "text/ng-template" == d.type && a.put(d.id, c[0].text) } } }], fg = M("ngOptions"), te = da({ restrict: "A", terminal: !0 }), Wd = ["$compile", "$parse", function (a, c) {
                    var d = /^\s*([\s\S]+?)(?:\s+as\s+([\s\S]+?))?(?:\s+group\s+by\s+([\s\S]+?))?\s+for\s+(?:([\$\w][\$\w]*)|(?:\(\s*([\$\w][\$\w]*)\s*,\s*([\$\w][\$\w]*)\s*\)))\s+in\s+([\s\S]+?)(?:\s+track\s+by\s+([\s\S]+?))?$/,
                    e = { $setViewValue: B }; return {
                        restrict: "E", require: ["select", "?ngModel"], controller: ["$element", "$scope", "$attrs", function (a, c, d) {
                            var l = this, k = {}, m = e, p; l.databound = d.ngModel; l.init = function (a, c, d) { m = a; p = d }; l.addOption = function (c, d) { Ma(c, '"option value"'); k[c] = !0; m.$viewValue == c && (a.val(c), p.parent() && p.remove()); d && d[0].hasAttribute("selected") && (d[0].selected = !0) }; l.removeOption = function (a) { this.hasOption(a) && (delete k[a], m.$viewValue === a && this.renderUnknownOption(a)) }; l.renderUnknownOption = function (c) {
                                c =
                                "? " + Na(c) + " ?"; p.val(c); a.prepend(p); a.val(c); p.prop("selected", !0)
                            }; l.hasOption = function (a) { return k.hasOwnProperty(a) }; c.$on("$destroy", function () { l.renderUnknownOption = B })
                        }], link: function (e, g, h, l) {
                            function k(a, c, d, e) { d.$render = function () { var a = d.$viewValue; e.hasOption(a) ? (v.parent() && v.remove(), c.val(a), "" === a && B.prop("selected", !0)) : z(a) && B ? c.val("") : e.renderUnknownOption(a) }; c.on("change", function () { a.$apply(function () { v.parent() && v.remove(); d.$setViewValue(c.val()) }) }) } function m(a, c, d) {
                                var e;
                                d.$render = function () { var a = new eb(d.$viewValue); s(c.find("option"), function (c) { c.selected = y(a.get(c.value)) }) }; a.$watch(function () { ea(e, d.$viewValue) || (e = qa(d.$viewValue), d.$render()) }); c.on("change", function () { a.$apply(function () { var a = []; s(c.find("option"), function (c) { c.selected && a.push(c.value) }); d.$setViewValue(a) }) })
                            } function p(e, f, g) {
                                function h(a, c, d) { R[B] = d; G && (R[G] = c); return a(e, R) } function k(a) {
                                    var c; if (t) if (K && E(a)) { c = new eb([]); for (var d = 0; d < a.length; d++)c.put(h(K, null, a[d]), !0) } else c =
                                        new eb(a); else K && (a = h(K, null, a)); return function (d, e) { var f; f = K ? K : z ? z : A; return t ? y(c.remove(h(f, d, e))) : a === h(f, d, e) }
                                } function l() { n || (e.$$postDigest(p), n = !0) } function m(a, c, d) { a[c] = a[c] || 0; a[c] += d ? 1 : -1 } function p() {
                                    n = !1; var a = { "": [] }, c = [""], d, l, r, u, v; r = g.$viewValue; u = N(e) || []; var B = G ? Object.keys(u).sort() : u, x, z, E, A, O = {}; v = k(r); var M = !1, T, V; Q = {}; for (A = 0; E = B.length, A < E; A++) {
                                        x = A; if (G && (x = B[A], "$" === x.charAt(0))) continue; z = u[x]; d = h(J, x, z) || ""; (l = a[d]) || (l = a[d] = [], c.push(d)); d = v(x, z); M = M || d; z = h(C, x, z);
                                        z = y(z) ? z : ""; V = K ? K(e, R) : G ? B[A] : A; K && (Q[V] = x); l.push({ id: V, label: z, selected: d })
                                    } t || (w || null === r ? a[""].unshift({ id: "", label: "", selected: !M }) : M || a[""].unshift({ id: "?", label: "", selected: !0 })); x = 0; for (B = c.length; x < B; x++) {
                                        d = c[x]; l = a[d]; P.length <= x ? (r = { element: H.clone().attr("label", d), label: l.label }, u = [r], P.push(u), f.append(r.element)) : (u = P[x], r = u[0], r.label != d && r.element.attr("label", r.label = d)); M = null; A = 0; for (E = l.length; A < E; A++)d = l[A], (v = u[A + 1]) ? (M = v.element, v.label !== d.label && (m(O, v.label, !1), m(O, d.label,
                                            !0), M.text(v.label = d.label), M.prop("label", v.label)), v.id !== d.id && M.val(v.id = d.id), M[0].selected !== d.selected && (M.prop("selected", v.selected = d.selected), Ra && M.prop("selected", v.selected))) : ("" === d.id && w ? T = w : (T = D.clone()).val(d.id).prop("selected", d.selected).attr("selected", d.selected).prop("label", d.label).text(d.label), u.push(v = { element: T, label: d.label, id: d.id, selected: d.selected }), m(O, d.label, !0), M ? M.after(T) : r.element.append(T), M = T); for (A++; u.length > A;)d = u.pop(), m(O, d.label, !1), d.element.remove()
                                    } for (; P.length >
                                        x;) { l = P.pop(); for (A = 1; A < l.length; ++A)m(O, l[A].label, !1); l[0].element.remove() } s(O, function (a, c) { 0 < a ? q.addOption(c) : 0 > a && q.removeOption(c) })
                                } var v; if (!(v = r.match(d))) throw fg("iexp", r, ua(f)); var C = c(v[2] || v[1]), B = v[4] || v[6], x = / as /.test(v[0]) && v[1], z = x ? c(x) : null, G = v[5], J = c(v[3] || ""), A = c(v[2] ? v[1] : B), N = c(v[7]), K = v[8] ? c(v[8]) : null, Q = {}, P = [[{ element: f, label: "" }]], R = {}; w && (a(w)(e), w.removeClass("ng-scope"), w.remove()); f.empty(); f.on("change", function () {
                                    e.$apply(function () {
                                        var a = N(e) || [], c; if (t) c = [], s(f.val(),
                                            function (d) { d = K ? Q[d] : d; c.push("?" === d ? u : "" === d ? null : h(z ? z : A, d, a[d])) }); else { var d = K ? Q[f.val()] : f.val(); c = "?" === d ? u : "" === d ? null : h(z ? z : A, d, a[d]) } g.$setViewValue(c); p()
                                    })
                                }); g.$render = p; e.$watchCollection(N, l); e.$watchCollection(function () { var a = N(e), c; if (a && E(a)) { c = Array(a.length); for (var d = 0, f = a.length; d < f; d++)c[d] = h(C, d, a[d]) } else if (a) for (d in c = {}, a) a.hasOwnProperty(d) && (c[d] = h(C, d, a[d])); return c }, l); t && e.$watchCollection(function () { return g.$modelValue }, l)
                            } if (l[1]) {
                                var q = l[0]; l = l[1]; var t = h.multiple,
                                    r = h.ngOptions, w = !1, B, n = !1, D = C(X.createElement("option")), H = C(X.createElement("optgroup")), v = D.clone(); h = 0; for (var x = g.children(), G = x.length; h < G; h++)if ("" === x[h].value) { B = w = x.eq(h); break } q.init(l, w, v); t && (l.$isEmpty = function (a) { return !a || 0 === a.length }); r ? p(e, g, l) : t ? m(e, g, l) : k(e, g, l, q)
                            }
                        }
                    }
                }], Yd = ["$interpolate", function (a) {
                    var c = { addOption: B, removeOption: B }; return {
                        restrict: "E", priority: 100, compile: function (d, e) {
                            if (z(e.value)) { var f = a(d.text(), !0); f || e.$set("value", d.text()) } return function (a, d, e) {
                                var k =
                                    d.parent(), m = k.data("$selectController") || k.parent().data("$selectController"); m && m.databound || (m = c); f ? a.$watch(f, function (a, c) { e.$set("value", a); c !== a && m.removeOption(c); m.addOption(a, d) }) : m.addOption(e.value, d); d.on("$destroy", function () { m.removeOption(e.value) })
                            }
                        }
                    }
                }], Xd = da({ restrict: "E", terminal: !1 }), Ac = function () { return { restrict: "A", require: "?ngModel", link: function (a, c, d, e) { e && (d.required = !0, e.$validators.required = function (a, c) { return !d.required || !e.$isEmpty(c) }, d.$observe("required", function () { e.$validate() })) } } },
                zc = function () { return { restrict: "A", require: "?ngModel", link: function (a, c, d, e) { if (e) { var f, g = d.ngPattern || d.pattern; d.$observe("pattern", function (a) { x(a) && 0 < a.length && (a = new RegExp("^" + a + "$")); if (a && !a.test) throw M("ngPattern")("noregexp", g, a, ua(c)); f = a || u; e.$validate() }); e.$validators.pattern = function (a) { return e.$isEmpty(a) || z(f) || f.test(a) } } } } }, Cc = function () {
                    return {
                        restrict: "A", require: "?ngModel", link: function (a, c, d, e) {
                            if (e) {
                                var f = -1; d.$observe("maxlength", function (a) { a = $(a); f = isNaN(a) ? -1 : a; e.$validate() });
                                e.$validators.maxlength = function (a, c) { return 0 > f || e.$isEmpty(c) || c.length <= f }
                            }
                        }
                    }
                }, Bc = function () { return { restrict: "A", require: "?ngModel", link: function (a, c, d, e) { if (e) { var f = 0; d.$observe("minlength", function (a) { f = $(a) || 0; e.$validate() }); e.$validators.minlength = function (a, c) { return e.$isEmpty(c) || c.length >= f } } } } }; P.angular.bootstrap ? console.log("WARNING: Tried to load angular more than once.") : (Nd(), Pd(aa), C(X).ready(function () { Jd(X, tc) }))
})(window, document); !window.angular.$$csp() && window.angular.element(document).find("head").prepend('<style type="text/css">@charset "UTF-8";[ng\\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide:not(.ng-hide-animate){display:none !important;}ng\\:form{display:block;}</style>');
//# sourceMappingURL=angular.min.js.map


/*
 AngularJS v1.4.0-beta.5
 (c) 2010-2015 Google, Inc. http://angularjs.org
 License: MIT
*/
(function (N, f, W) {
    'use strict'; f.module("ngAnimate", ["ng"]).directive("ngAnimateChildren", function () { return function (X, C, g) { g = g.ngAnimateChildren; f.isString(g) && 0 === g.length ? C.data("$$ngAnimateChildren", !0) : X.$watch(g, function (f) { C.data("$$ngAnimateChildren", !!f) }) } }).factory("$$animateReflow", ["$$rAF", "$document", function (f, C) { return function (g) { return f(function () { g() }) } }]).config(["$provide", "$animateProvider", function (X, C) {
        function g(f) { for (var n = 0; n < f.length; n++) { var g = f[n]; if (1 == g.nodeType) return g } }
        function ba(f, n) { return g(f) == g(n) } var t = f.noop, n = f.forEach, da = C.$$selectors, aa = f.isArray, ea = f.isString, ga = f.isObject, r = { running: !0 }, u; X.decorator("$animate", ["$delegate", "$$q", "$injector", "$sniffer", "$rootElement", "$$asyncCallback", "$rootScope", "$document", "$templateRequest", "$$jqLite", function (O, N, M, Y, y, H, P, W, Z, Q) {
            function R(a, c) { var b = a.data("$$ngAnimateState") || {}; c && (b.running = !0, b.structural = !0, a.data("$$ngAnimateState", b)); return b.disabled || b.running && b.structural } function D(a) {
                var c, b = N.defer();
                b.promise.$$cancelFn = function () { c && c() }; P.$$postDigest(function () { c = a(function () { b.resolve() }) }); return b.promise
            } function I(a) { if (ga(a)) return a.tempClasses && ea(a.tempClasses) && (a.tempClasses = a.tempClasses.split(/\s+/)), a } function S(a, c, b) {
                b = b || {}; var d = {}; n(b, function (e, a) { n(a.split(" "), function (a) { d[a] = e }) }); var h = Object.create(null); n((a.attr("class") || "").split(/\s+/), function (e) { h[e] = !0 }); var f = [], l = []; n(c && c.classes || [], function (e, a) {
                    var b = h[a], c = d[a] || {}; !1 === e ? (b || "addClass" == c.event) &&
                        l.push(a) : !0 === e && (b && "removeClass" != c.event || f.push(a))
                }); return 0 < f.length + l.length && [f.join(" "), l.join(" ")]
            } function T(a) { if (a) { var c = [], b = {}; a = a.substr(1).split("."); (Y.transitions || Y.animations) && c.push(M.get(da[""])); for (var d = 0; d < a.length; d++) { var f = a[d], k = da[f]; k && !b[f] && (c.push(M.get(k)), b[f] = !0) } return c } } function U(a, c, b, d) {
                function h(e, a) {
                    var b = e[a], c = e["before" + a.charAt(0).toUpperCase() + a.substr(1)]; if (b || c) return "leave" == a && (c = b, b = null), u.push({ event: a, fn: b }), J.push({ event: a, fn: c }),
                        !0
                } function k(c, l, w) { var E = []; n(c, function (a) { a.fn && E.push(a) }); var m = 0; n(E, function (c, f) { var p = function () { a: { if (l) { (l[f] || t)(); if (++m < E.length) break a; l = null } w() } }; switch (c.event) { case "setClass": l.push(c.fn(a, e, A, p, d)); break; case "animate": l.push(c.fn(a, b, d.from, d.to, p)); break; case "addClass": l.push(c.fn(a, e || b, p, d)); break; case "removeClass": l.push(c.fn(a, A || b, p, d)); break; default: l.push(c.fn(a, p, d)) } }); l && 0 === l.length && w() } var l = a[0]; if (l) {
                    d && (d.to = d.to || {}, d.from = d.from || {}); var e, A; aa(b) && (e =
                        b[0], A = b[1], e ? A ? b = e + " " + A : (b = e, c = "addClass") : (b = A, c = "removeClass")); var w = "setClass" == c, E = w || "addClass" == c || "removeClass" == c || "animate" == c, p = a.attr("class") + " " + b; if (x(p)) {
                            var ca = t, m = [], J = [], g = t, s = [], u = [], p = (" " + p).replace(/\s+/g, "."); n(T(p), function (a) { !h(a, c) && w && (h(a, "addClass"), h(a, "removeClass")) }); return {
                                node: l, event: c, className: b, isClassBased: E, isSetClassOperation: w, applyStyles: function () { d && a.css(f.extend(d.from || {}, d.to || {})) }, before: function (a) { ca = a; k(J, m, function () { ca = t; a() }) }, after: function (a) {
                                    g =
                                    a; k(u, s, function () { g = t; a() })
                                }, cancel: function () { m && (n(m, function (a) { (a || t)(!0) }), ca(!0)); s && (n(s, function (a) { (a || t)(!0) }), g(!0)) }
                            }
                        }
                }
            } function G(a, c, b, d, h, k, l, e) {
                function A(e) { var l = "$animate:" + e; J && J[l] && 0 < J[l].length && H(function () { b.triggerHandler(l, { event: a, className: c }) }) } function w() { A("before") } function E() { A("after") } function p() { p.hasBeenRun || (p.hasBeenRun = !0, k()) } function g() {
                    if (!g.hasBeenRun) {
                        m && m.applyStyles(); g.hasBeenRun = !0; l && l.tempClasses && n(l.tempClasses, function (a) {
                            u.removeClass(b,
                                a)
                        }); var w = b.data("$$ngAnimateState"); w && (m && m.isClassBased ? B(b, c) : (H(function () { var e = b.data("$$ngAnimateState") || {}; fa == e.index && B(b, c, a) }), b.data("$$ngAnimateState", w))); A("close"); e()
                    }
                } var m = U(b, a, c, l); if (!m) return p(), w(), E(), g(), t; a = m.event; c = m.className; var J = f.element._data(m.node), J = J && J.events; d || (d = h ? h.parent() : b.parent()); if (z(b, d)) return p(), w(), E(), g(), t; d = b.data("$$ngAnimateState") || {}; var L = d.active || {}, s = d.totalActive || 0, q = d.last; h = !1; if (0 < s) {
                    s = []; if (m.isClassBased) "setClass" == q.event ?
                        (s.push(q), B(b, c)) : L[c] && (v = L[c], v.event == a ? h = !0 : (s.push(v), B(b, c))); else if ("leave" == a && L["ng-leave"]) h = !0; else { for (var v in L) s.push(L[v]); d = {}; B(b, !0) } 0 < s.length && n(s, function (a) { a.cancel() })
                } !m.isClassBased || m.isSetClassOperation || "animate" == a || h || (h = "addClass" == a == b.hasClass(c)); if (h) return p(), w(), E(), A("close"), e(), t; L = d.active || {}; s = d.totalActive || 0; if ("leave" == a) b.one("$destroy", function (a) { a = f.element(this); var e = a.data("$$ngAnimateState"); e && (e = e.active["ng-leave"]) && (e.cancel(), B(a, "ng-leave")) });
                u.addClass(b, "ng-animate"); l && l.tempClasses && n(l.tempClasses, function (a) { u.addClass(b, a) }); var fa = K++; s++; L[c] = m; b.data("$$ngAnimateState", { last: m, active: L, index: fa, totalActive: s }); w(); m.before(function (e) { var l = b.data("$$ngAnimateState"); e = e || !l || !l.active[c] || m.isClassBased && l.active[c].event != a; p(); !0 === e ? g() : (E(), m.after(g)) }); return m.cancel
            } function q(a) {
                if (a = g(a)) a = f.isFunction(a.getElementsByClassName) ? a.getElementsByClassName("ng-animate") : a.querySelectorAll(".ng-animate"), n(a, function (a) {
                    a =
                    f.element(a); (a = a.data("$$ngAnimateState")) && a.active && n(a.active, function (a) { a.cancel() })
                })
            } function B(a, c) { if (ba(a, y)) r.disabled || (r.running = !1, r.structural = !1); else if (c) { var b = a.data("$$ngAnimateState") || {}, d = !0 === c; !d && b.active && b.active[c] && (b.totalActive-- , delete b.active[c]); if (d || !b.totalActive) u.removeClass(a, "ng-animate"), a.removeData("$$ngAnimateState") } } function z(a, c) {
                if (r.disabled) return !0; if (ba(a, y)) return r.running; var b, d, g; do {
                    if (0 === c.length) break; var k = ba(c, y), l = k ? r : c.data("$$ngAnimateState") ||
                        {}; if (l.disabled) return !0; k && (g = !0); !1 !== b && (k = c.data("$$ngAnimateChildren"), f.isDefined(k) && (b = k)); d = d || l.running || l.last && !l.last.isClassBased
                } while (c = c.parent()); return !g || !b && d
            } u = Q; y.data("$$ngAnimateState", r); var $ = P.$watch(function () { return Z.totalPendingRequests }, function (a, c) { 0 === a && ($(), P.$$postDigest(function () { P.$$postDigest(function () { r.running = !1 }) })) }), K = 0, V = C.classNameFilter(), x = V ? function (a) { return V.test(a) } : function () { return !0 }; return {
                animate: function (a, c, b, d, h) {
                    d = d || "ng-inline-animate";
                    h = I(h) || {}; h.from = b ? c : null; h.to = b ? b : c; return D(function (b) { return G("animate", d, f.element(g(a)), null, null, t, h, b) })
                }, enter: function (a, c, b, d) { d = I(d); a = f.element(a); c = c && f.element(c); b = b && f.element(b); R(a, !0); O.enter(a, c, b); return D(function (h) { return G("enter", "ng-enter", f.element(g(a)), c, b, t, d, h) }) }, leave: function (a, c) { c = I(c); a = f.element(a); q(a); R(a, !0); return D(function (b) { return G("leave", "ng-leave", f.element(g(a)), null, null, function () { O.leave(a) }, c, b) }) }, move: function (a, c, b, d) {
                    d = I(d); a = f.element(a);
                    c = c && f.element(c); b = b && f.element(b); q(a); R(a, !0); O.move(a, c, b); return D(function (h) { return G("move", "ng-move", f.element(g(a)), c, b, t, d, h) })
                }, addClass: function (a, c, b) { return this.setClass(a, c, [], b) }, removeClass: function (a, c, b) { return this.setClass(a, [], c, b) }, setClass: function (a, c, b, d) {
                    d = I(d); a = f.element(a); a = f.element(g(a)); if (R(a)) return O.$$setClassImmediately(a, c, b, d); var h, k = a.data("$$animateClasses"), l = !!k; k || (k = { classes: {} }); h = k.classes; c = aa(c) ? c : c.split(" "); n(c, function (a) {
                    a && a.length && (h[a] =
                        !0)
                    }); b = aa(b) ? b : b.split(" "); n(b, function (a) { a && a.length && (h[a] = !1) }); if (l) return d && k.options && (k.options = f.extend(k.options || {}, d)), k.promise; a.data("$$animateClasses", k = { classes: h, options: d }); return k.promise = D(function (e) {
                        var l = a.parent(), b = g(a), c = b.parentNode; if (!c || c.$$NG_REMOVED || b.$$NG_REMOVED) e(); else {
                            b = a.data("$$animateClasses"); a.removeData("$$animateClasses"); var c = a.data("$$ngAnimateState") || {}, d = S(a, b, c.active); return d ? G("setClass", d, a, l, null, function () {
                            d[0] && O.$$addClassImmediately(a,
                                d[0]); d[1] && O.$$removeClassImmediately(a, d[1])
                            }, b.options, e) : e()
                        }
                    })
                }, cancel: function (a) { a.$$cancelFn() }, enabled: function (a, c) { switch (arguments.length) { case 2: if (a) B(c); else { var b = c.data("$$ngAnimateState") || {}; b.disabled = !0; c.data("$$ngAnimateState", b) } break; case 1: r.disabled = !a; break; default: a = !r.disabled }return !!a }
            }
        }]); C.register("", ["$window", "$sniffer", "$timeout", "$$animateReflow", function (r, C, M, Y) {
            function y() { b || (b = Y(function () { c = []; b = null; x = {} })) } function H(a, e) {
                b && b(); c.push(e); b = Y(function () {
                    n(c,
                        function (a) { a() }); c = []; b = null; x = {}
                })
            } function P(a, e) { var b = g(a); a = f.element(b); k.push(a); b = Date.now() + e; b <= h || (M.cancel(d), h = b, d = M(function () { X(k); k = [] }, e, !1)) } function X(a) { n(a, function (a) { (a = a.data("$$ngAnimateCSS3Data")) && n(a.closeAnimationFns, function (a) { a() }) }) } function Z(a, e) {
                var b = e ? x[e] : null; if (!b) {
                    var c = 0, d = 0, f = 0, g = 0; n(a, function (a) {
                        if (1 == a.nodeType) {
                            a = r.getComputedStyle(a) || {}; c = Math.max(Q(a[z + "Duration"]), c); d = Math.max(Q(a[z + "Delay"]), d); g = Math.max(Q(a[K + "Delay"]), g); var e = Q(a[K + "Duration"]);
                            0 < e && (e *= parseInt(a[K + "IterationCount"], 10) || 1); f = Math.max(e, f)
                        }
                    }); b = { total: 0, transitionDelay: d, transitionDuration: c, animationDelay: g, animationDuration: f }; e && (x[e] = b)
                } return b
            } function Q(a) { var e = 0; a = ea(a) ? a.split(/\s*,\s*/) : []; n(a, function (a) { e = Math.max(parseFloat(a) || 0, e) }); return e } function R(b, e, c, d) {
                b = 0 <= ["ng-enter", "ng-leave", "ng-move"].indexOf(c); var f, p = e.parent(), h = p.data("$$ngAnimateKey"); h || (p.data("$$ngAnimateKey", ++a), h = a); f = h + "-" + g(e).getAttribute("class"); var p = f + " " + c, h = x[p] ? ++x[p].total :
                    0, m = {}; if (0 < h) { var n = c + "-stagger", m = f + " " + n; (f = !x[m]) && u.addClass(e, n); m = Z(e, m); f && u.removeClass(e, n) } u.addClass(e, c); var n = e.data("$$ngAnimateCSS3Data") || {}, k = Z(e, p); f = k.transitionDuration; k = k.animationDuration; if (b && 0 === f && 0 === k) return u.removeClass(e, c), !1; c = d || b && 0 < f; b = 0 < k && 0 < m.animationDelay && 0 === m.animationDuration; e.data("$$ngAnimateCSS3Data", { stagger: m, cacheKey: p, running: n.running || 0, itemIndex: h, blockTransition: c, closeAnimationFns: n.closeAnimationFns || [] }); p = g(e); c && (I(p, !0), d && e.css(d));
                b && (p.style[K + "PlayState"] = "paused"); return !0
            } function D(a, e, b, c, d) {
                function f() { e.off(D, h); u.removeClass(e, k); u.removeClass(e, t); z && M.cancel(z); G(e, b); var a = g(e), c; for (c in s) a.style.removeProperty(s[c]) } function h(a) { a.stopPropagation(); var b = a.originalEvent || a; a = b.$manualTimeStamp || b.timeStamp || Date.now(); b = parseFloat(b.elapsedTime.toFixed(3)); Math.max(a - H, 0) >= C && b >= x && c() } var m = g(e); a = e.data("$$ngAnimateCSS3Data"); if (-1 != m.getAttribute("class").indexOf(b) && a) {
                    var k = "", t = ""; n(b.split(" "), function (a,
                        b) { var e = (0 < b ? " " : "") + a; k += e + "-active"; t += e + "-pending" }); var s = [], q = a.itemIndex, v = a.stagger, r = 0; if (0 < q) { r = 0; 0 < v.transitionDelay && 0 === v.transitionDuration && (r = v.transitionDelay * q); var y = 0; 0 < v.animationDelay && 0 === v.animationDuration && (y = v.animationDelay * q, s.push(B + "animation-play-state")); r = Math.round(100 * Math.max(r, y)) / 100 } r || (u.addClass(e, k), a.blockTransition && I(m, !1)); var F = Z(e, a.cacheKey + " " + k), x = Math.max(F.transitionDuration, F.animationDuration); if (0 === x) u.removeClass(e, k), G(e, b), c(); else {
                        !r &&
                            d && 0 < Object.keys(d).length && (F.transitionDuration || (e.css("transition", F.animationDuration + "s linear all"), s.push("transition")), e.css(d)); var q = Math.max(F.transitionDelay, F.animationDelay), C = 1E3 * q; 0 < s.length && (v = m.getAttribute("style") || "", ";" !== v.charAt(v.length - 1) && (v += ";"), m.setAttribute("style", v + " ")); var H = Date.now(), D = V + " " + $, q = 1E3 * (r + 1.5 * (q + x)), z; 0 < r && (u.addClass(e, t), z = M(function () {
                                z = null; 0 < F.transitionDuration && I(m, !1); 0 < F.animationDuration && (m.style[K + "PlayState"] = ""); u.addClass(e, k);
                                u.removeClass(e, t); d && (0 === F.transitionDuration && e.css("transition", F.animationDuration + "s linear all"), e.css(d), s.push("transition"))
                            }, 1E3 * r, !1)); e.on(D, h); a.closeAnimationFns.push(function () { f(); c() }); a.running++; P(e, q); return f
                        }
                } else c()
            } function I(a, b) { a.style[z + "Property"] = b ? "none" : "" } function S(a, b, c, d) { if (R(a, b, c, d)) return function (a) { a && G(b, c) } } function T(a, b, c, d, f) { if (b.data("$$ngAnimateCSS3Data")) return D(a, b, c, d, f); G(b, c); d() } function U(a, b, c, d, f) {
                var g = S(a, b, c, f.from); if (g) {
                    var h = g; H(b,
                        function () { h = T(a, b, c, d, f.to) }); return function (a) { (h || t)(a) }
                } y(); d()
            } function G(a, b) { u.removeClass(a, b); var c = a.data("$$ngAnimateCSS3Data"); c && (c.running && c.running-- , c.running && 0 !== c.running || a.removeData("$$ngAnimateCSS3Data")) } function q(a, b) { var c = ""; a = aa(a) ? a : a.split(/\s+/); n(a, function (a, d) { a && 0 < a.length && (c += (0 < d ? " " : "") + a + b) }); return c } var B = "", z, $, K, V; N.ontransitionend === W && N.onwebkittransitionend !== W ? (B = "-webkit-", z = "WebkitTransition", $ = "webkitTransitionEnd transitionend") : (z = "transition",
                $ = "transitionend"); N.onanimationend === W && N.onwebkitanimationend !== W ? (B = "-webkit-", K = "WebkitAnimation", V = "webkitAnimationEnd animationend") : (K = "animation", V = "animationend"); var x = {}, a = 0, c = [], b, d = null, h = 0, k = []; return {
                    animate: function (a, b, c, d, f, g) { g = g || {}; g.from = c; g.to = d; return U("animate", a, b, f, g) }, enter: function (a, b, c) { c = c || {}; return U("enter", a, "ng-enter", b, c) }, leave: function (a, b, c) { c = c || {}; return U("leave", a, "ng-leave", b, c) }, move: function (a, b, c) { c = c || {}; return U("move", a, "ng-move", b, c) }, beforeSetClass: function (a,
                        b, c, d, f) { f = f || {}; b = q(c, "-remove") + " " + q(b, "-add"); if (f = S("setClass", a, b, f.from)) return H(a, d), f; y(); d() }, beforeAddClass: function (a, b, c, d) { d = d || {}; if (b = S("addClass", a, q(b, "-add"), d.from)) return H(a, c), b; y(); c() }, beforeRemoveClass: function (a, b, c, d) { d = d || {}; if (b = S("removeClass", a, q(b, "-remove"), d.from)) return H(a, c), b; y(); c() }, setClass: function (a, b, c, d, f) { f = f || {}; c = q(c, "-remove"); b = q(b, "-add"); return T("setClass", a, c + " " + b, d, f.to) }, addClass: function (a, b, c, d) {
                            d = d || {}; return T("addClass", a, q(b, "-add"),
                                c, d.to)
                        }, removeClass: function (a, b, c, d) { d = d || {}; return T("removeClass", a, q(b, "-remove"), c, d.to) }
                }
        }])
    }])
})(window, window.angular);
//# sourceMappingURL=angular-animate.min.js.map



/*
 AngularJS v1.5.3
 (c) 2010-2016 Google, Inc. http://angularjs.org
 License: MIT
*/
(function (s, q, t) {
    'use strict'; var f = "BUTTON A INPUT TEXTAREA SELECT DETAILS SUMMARY".split(" "), l = function (a, c) { if (-1 !== c.indexOf(a[0].nodeName)) return !0 }; q.module("ngAria", ["ng"]).provider("$aria", function () {
        function a(a, h, p, n) { return function (d, e, b) { var g = b.$normalize(h); !c[g] || l(e, p) || b[g] || d.$watch(b[a], function (b) { b = n ? !b : !!b; e.attr(h, b) }) } } var c = { ariaHidden: !0, ariaChecked: !0, ariaDisabled: !0, ariaRequired: !0, ariaInvalid: !0, ariaValue: !0, tabindex: !0, bindKeypress: !0, bindRoleForClick: !0 }; this.config =
            function (a) { c = q.extend(c, a) }; this.$get = function () { return { config: function (a) { return c[a] }, $$watchExpr: a } }
    }).directive("ngShow", ["$aria", function (a) { return a.$$watchExpr("ngShow", "aria-hidden", [], !0) }]).directive("ngHide", ["$aria", function (a) { return a.$$watchExpr("ngHide", "aria-hidden", [], !1) }]).directive("ngValue", ["$aria", function (a) { return a.$$watchExpr("ngValue", "aria-checked", f, !1) }]).directive("ngChecked", ["$aria", function (a) { return a.$$watchExpr("ngChecked", "aria-checked", f, !1) }]).directive("ngRequired",
        ["$aria", function (a) { return a.$$watchExpr("ngRequired", "aria-required", f, !1) }]).directive("ngModel", ["$aria", function (a) {
            function c(c, n, d, e) { return a.config(n) && !d.attr(c) && (e || !l(d, f)) } function m(a, c) { return !c.attr("role") && c.attr("type") === a && "INPUT" !== c[0].nodeName } function h(a, c) { var d = a.type, e = a.role; return "checkbox" === (d || e) || "menuitemcheckbox" === e ? "checkbox" : "radio" === (d || e) || "menuitemradio" === e ? "radio" : "range" === d || "progressbar" === e || "slider" === e ? "range" : "" } return {
                restrict: "A", require: "ngModel",
                priority: 200, compile: function (f, n) {
                    var d = h(n, f); return {
                        pre: function (a, b, c, k) { "checkbox" === d && (k.$isEmpty = function (a) { return !1 === a }) }, post: function (e, b, g, k) {
                            function f() { return k.$modelValue } function h(a) { b.attr("aria-checked", g.value == k.$viewValue) } function n() { b.attr("aria-checked", !k.$isEmpty(k.$viewValue)) } var l = c("tabindex", "tabindex", b, !1); switch (d) {
                                case "radio": case "checkbox": m(d, b) && b.attr("role", d); c("aria-checked", "ariaChecked", b, !1) && e.$watch(f, "radio" === d ? h : n); l && b.attr("tabindex", 0);
                                    break; case "range": m(d, b) && b.attr("role", "slider"); if (a.config("ariaValue")) { var p = !b.attr("aria-valuemin") && (g.hasOwnProperty("min") || g.hasOwnProperty("ngMin")), q = !b.attr("aria-valuemax") && (g.hasOwnProperty("max") || g.hasOwnProperty("ngMax")), r = !b.attr("aria-valuenow"); p && g.$observe("min", function (a) { b.attr("aria-valuemin", a) }); q && g.$observe("max", function (a) { b.attr("aria-valuemax", a) }); r && e.$watch(f, function (a) { b.attr("aria-valuenow", a) }) } l && b.attr("tabindex", 0)
                            }!g.hasOwnProperty("ngRequired") &&
                                k.$validators.required && c("aria-required", "ariaRequired", b, !1) && g.$observe("required", function () { b.attr("aria-required", !!g.required) }); c("aria-invalid", "ariaInvalid", b, !0) && e.$watch(function () { return k.$invalid }, function (a) { b.attr("aria-invalid", !!a) })
                        }
                    }
                }
            }
        }]).directive("ngDisabled", ["$aria", function (a) { return a.$$watchExpr("ngDisabled", "aria-disabled", f, !1) }]).directive("ngMessages", function () {
            return {
                restrict: "A", require: "?ngMessages", link: function (a, c, f, h) {
                    c.attr("aria-live") || c.attr("aria-live",
                        "assertive")
                }
            }
        }).directive("ngClick", ["$aria", "$parse", function (a, c) { return { restrict: "A", compile: function (m, h) { var p = c(h.ngClick, null, !0); return function (c, d, e) { if (!l(d, f) && (a.config("bindRoleForClick") && !d.attr("role") && d.attr("role", "button"), a.config("tabindex") && !d.attr("tabindex") && d.attr("tabindex", 0), a.config("bindKeypress") && !e.ngKeypress)) d.on("keypress", function (a) { function d() { p(c, { $event: a }) } var e = a.which || a.keyCode; 32 !== e && 13 !== e || c.$apply(d) }) } } } }]).directive("ngDblclick", ["$aria", function (a) {
            return function (c,
                m, h) { !a.config("tabindex") || m.attr("tabindex") || l(m, f) || m.attr("tabindex", 0) }
        }])
})(window, window.angular);
//# sourceMappingURL=angular-aria.min.js.map



// ng material

!function (a, b, c) {
    "use strict"; !function () { b.module("ngMaterial", ["ng", "ngAnimate", "ngAria", "material.core", "material.core.gestures", "material.core.layout", "material.core.theming.palette", "material.core.theming", "material.core.animate", "material.components.autocomplete", "material.components.bottomSheet", "material.components.backdrop", "material.components.button", "material.components.card", "material.components.checkbox", "material.components.chips", "material.components.content", "material.components.datepicker", "material.components.dialog", "material.components.divider", "material.components.fabActions", "material.components.fabShared", "material.components.fabSpeedDial", "material.components.fabToolbar", "material.components.gridList", "material.components.fabTrigger", "material.components.icon", "material.components.input", "material.components.list", "material.components.menuBar", "material.components.menu", "material.components.progressCircular", "material.components.progressLinear", "material.components.radioButton", "material.components.select", "material.components.showHide", "material.components.sidenav", "material.components.sticky", "material.components.slider", "material.components.subheader", "material.components.swipe", "material.components.switch", "material.components.tabs", "material.components.toast", "material.components.toolbar", "material.components.virtualRepeat", "material.components.tooltip", "material.components.whiteframe"]) }(), function () { function a(a, b) { if (b.has("$swipe")) { var c = "You are using the ngTouch module. \nAngular Material already has mobile click, tap, and swipe support... \nngTouch is not supported with Angular Material!"; a.warn(c) } } function c(a, b) { a.decorator("$$rAF", ["$delegate", d]), b.theme("default").primaryPalette("indigo").accentPalette("pink").warnPalette("deep-orange").backgroundPalette("grey") } function d(a) { return a.throttle = function (b) { var c, d, e, f; return function () { c = arguments, f = this, e = b, d || (d = !0, a(function () { e.apply(f, Array.prototype.slice.call(c)), d = !1 })) } }, a } b.module("material.core", ["ngAnimate", "material.core.animate", "material.core.layout", "material.core.gestures", "material.core.theming"]).config(c).run(a), a.$inject = ["$log", "$injector"], c.$inject = ["$provide", "$mdThemingProvider"], d.$inject = ["$delegate"] }(), function () { function a() { return { restrict: "A", link: c } } function c(a, b, c) { var d = c.mdAutoFocus || c.mdAutofocus || c.mdSidenavFocus; a.$watch(d, function (a) { b.toggleClass("_md-autofocus", a) }) } b.module("material.core").directive("mdAutofocus", a).directive("mdAutoFocus", a).directive("mdSidenavFocus", a) }(), function () { function a(a) { function c(a) { return b ? "webkit" + a.charAt(0).toUpperCase() + a.substring(1) : a } var b = /webkit/i.test(a.vendorPrefix); return { KEY_CODE: { COMMA: 188, SEMICOLON: 186, ENTER: 13, ESCAPE: 27, SPACE: 32, PAGE_UP: 33, PAGE_DOWN: 34, END: 35, HOME: 36, LEFT_ARROW: 37, UP_ARROW: 38, RIGHT_ARROW: 39, DOWN_ARROW: 40, TAB: 9, BACKSPACE: 8, DELETE: 46 }, CSS: { TRANSITIONEND: "transitionend" + (b ? " webkitTransitionEnd" : ""), ANIMATIONEND: "animationend" + (b ? " webkitAnimationEnd" : ""), TRANSFORM: c("transform"), TRANSFORM_ORIGIN: c("transformOrigin"), TRANSITION: c("transition"), TRANSITION_DURATION: c("transitionDuration"), ANIMATION_PLAY_STATE: c("animationPlayState"), ANIMATION_DURATION: c("animationDuration"), ANIMATION_NAME: c("animationName"), ANIMATION_TIMING: c("animationTimingFunction"), ANIMATION_DIRECTION: c("animationDirection") }, MEDIA: { xs: "(max-width: 599px)", "gt-xs": "(min-width: 600px)", sm: "(min-width: 600px) and (max-width: 959px)", "gt-sm": "(min-width: 960px)", md: "(min-width: 960px) and (max-width: 1279px)", "gt-md": "(min-width: 1280px)", lg: "(min-width: 1280px) and (max-width: 1919px)", "gt-lg": "(min-width: 1920px)", xl: "(min-width: 1920px)", print: "print" }, MEDIA_PRIORITY: ["xl", "gt-lg", "lg", "gt-md", "md", "gt-sm", "sm", "gt-xs", "xs", "print"] } } b.module("material.core").factory("$mdConstant", a), a.$inject = ["$sniffer"] }(), function () { function a(a, c) { function f() { return [].concat(e) } function g() { return e.length } function h(a) { return e.length && a > -1 && a < e.length } function i(a) { return !!a && h(o(a) + 1) } function j(a) { return !!a && h(o(a) - 1) } function k(a) { return h(a) ? e[a] : null } function l(a, b) { return e.filter(function (c) { return c[a] === b }) } function m(a, c) { return a ? (b.isNumber(c) || (c = e.length), e.splice(c, 0, a), o(a)) : -1 } function n(a) { p(a) && e.splice(o(a), 1) } function o(a) { return e.indexOf(a) } function p(a) { return a && o(a) > -1 } function q() { return e.length ? e[0] : null } function r() { return e.length ? e[e.length - 1] : null } function s(a, f, g, i) { g = g || d; for (var j = o(f); ;) { if (!h(j)) return null; var k = j + (a ? -1 : 1), l = null; if (h(k) ? l = e[k] : c && (l = a ? r() : q(), k = o(l)), null === l || k === i) return null; if (g(l)) return l; b.isUndefined(i) && (i = k), j = k } } var d = function () { return !0 }; a && !b.isArray(a) && (a = Array.prototype.slice.call(a)), c = !!c; var e = a || []; return { items: f, count: g, inRange: h, contains: p, indexOf: o, itemAt: k, findBy: l, add: m, remove: n, first: q, last: r, next: b.bind(null, s, !1), previous: b.bind(null, s, !0), hasPrevious: j, hasNext: i } } b.module("material.core").config(["$provide", function (b) { b.decorator("$mdUtil", ["$delegate", function (b) { return b.iterator = a, b }]) }]) }(), function () { function a(a, c, d) { function i(a) { var c = e[a]; b.isUndefined(c) && (c = e[a] = j(a)); var d = g[c]; return b.isUndefined(d) && (d = k(c)), d } function j(b) { return a.MEDIA[b] || ("(" !== b.charAt(0) ? "(" + b + ")" : b) } function k(a) { var b = f[a]; return b || (b = f[a] = d.matchMedia(a)), b.addListener(l), g[b.media] = !!b.matches } function l(a) { c.$evalAsync(function () { g[a.media] = !!a.matches }) } function m(a) { return f[a] } function n(b, c) { for (var d = 0; d < a.MEDIA_PRIORITY.length; d++) { var g = a.MEDIA_PRIORITY[d]; if (f[e[g]].matches) { var h = p(b, c + "-" + g); if (b[h]) return b[h] } } return b[p(b, c)] } function o(c, d, e) { var f = []; return c.forEach(function (c) { var g = p(d, c); b.isDefined(d[g]) && f.push(d.$observe(g, b.bind(void 0, e, null))); for (var h in a.MEDIA) g = p(d, c + "-" + h), b.isDefined(d[g]) && f.push(d.$observe(g, b.bind(void 0, e, h))) }), function () { f.forEach(function (a) { a() }) } } function p(a, b) { return h[b] || (h[b] = a.$normalize(b)) } var e = {}, f = {}, g = {}, h = {}; return i.getResponsiveAttribute = n, i.getQuery = m, i.watchResponsiveAttributes = o, i } b.module("material.core").factory("$mdMedia", a), a.$inject = ["$mdConstant", "$rootScope", "$window"] }(), function () { function e(e, f, g, h, i, j, k, l, m) { function s(a) { return a[0] || a } var n = j.startSymbol(), o = j.endSymbol(), p = "{{" === n && "}}" === o, q = function (a, c, d) { var e = !1; if (a && a.length) { var f = m.getComputedStyle(a[0]); e = b.isDefined(f[c]) && (!d || f[c] == d) } return e }, r = { dom: {}, now: a.performance ? b.bind(a.performance, a.performance.now) : Date.now || function () { return (new Date).getTime() }, bidi: function (a, c, d, f) { function h(a) { return a ? i(a) ? a : a + "px" : "0" } function i(a) { return String(a).indexOf("px") > -1 } var g = !("rtl" == e[0].dir || "rtl" == e[0].body.dir); return 0 == arguments.length ? g ? "ltr" : "rtl" : void (g && b.isDefined(d) ? b.element(a).css(c, h(d)) : !g && b.isDefined(f) && b.element(a).css(c, h(f))) }, clientRect: function (a, b, c) { var d = s(a); b = s(b || d.offsetParent || document.body); var e = d.getBoundingClientRect(), f = c ? b.getBoundingClientRect() : { left: 0, top: 0, width: 0, height: 0 }; return { left: e.left - f.left, top: e.top - f.top, width: e.width, height: e.height } }, offsetRect: function (a, b) { return r.clientRect(a, b, !0) }, nodesToArray: function (a) { a = a || []; for (var b = [], c = 0; c < a.length; ++c)b.push(a.item(c)); return b }, scrollTop: function (a) { a = b.element(a || e[0].body); var d = a[0] == e[0].body ? e[0].body : c, f = d ? d.scrollTop + d.parentElement.scrollTop : 0; return f || Math.abs(a[0].getBoundingClientRect().top) }, findFocusTarget: function (a, c) { function f(a, c) { var d, e = a[0].querySelectorAll(c); return e && e.length && e.length && b.forEach(e, function (a) { a = b.element(a); var c = a.hasClass("_md-autofocus"); c && (d = a) }), d } var e, d = "[md-autofocus]"; return e = f(a, c || d), e || c == d || (e = f(a, "[md-auto-focus]"), e || (e = f(a, d))), e }, disableScrollAround: function (a, c) { function h(a) { function f(a) { a.preventDefault() } a = b.element(a || d)[0]; var c = 50, e = b.element('<div class="md-scroll-mask">  <div class="md-scroll-mask-bar"></div></div>').css("z-index", c); return a.appendChild(e[0]), e.on("wheel", f), e.on("touchmove", f), function () { e.off("wheel"), e.off("touchmove"), e[0].parentNode.removeChild(e[0]), delete r.disableScrollAround._enableScrolling } } function i() { var a = d.parentNode, b = a.style.cssText || "", c = d.style.cssText || "", e = r.scrollTop(d), f = d.clientWidth; return d.scrollHeight > d.clientHeight + 1 && (j(d, { position: "fixed", width: "100%", top: -e + "px" }), j(a, { overflowY: "scroll" })), d.clientWidth < f && j(d, { overflow: "hidden" }), function () { d.style.cssText = c, a.style.cssText = b, d.scrollTop = e, a.scrollTop = e } } function j(a, b) { for (var c in b) a.style[c] = b[c] } if (r.disableScrollAround._count = r.disableScrollAround._count || 0, ++r.disableScrollAround._count, r.disableScrollAround._enableScrolling) return r.disableScrollAround._enableScrolling; a = b.element(a); var d = e[0].body, f = i(), g = h(c); return r.disableScrollAround._enableScrolling = function () { --r.disableScrollAround._count || (f(), g(), delete r.disableScrollAround._enableScrolling) } }, enableScrolling: function () { var a = this.disableScrollAround._enableScrolling; a && a() }, floatingScrollbars: function () { if (this.floatingScrollbars.cached === c) { var a = b.element("<div><div></div></div>").css({ width: "100%", "z-index": -1, position: "absolute", height: "35px", "overflow-y": "scroll" }); a.children().css("height", "60px"), e[0].body.appendChild(a[0]), this.floatingScrollbars.cached = a[0].offsetWidth == a[0].childNodes[0].offsetWidth, a.remove() } return this.floatingScrollbars.cached }, forceFocus: function (b) { var c = b[0] || b; document.addEventListener("click", function a(b) { b.target === c && b.$focus && (c.focus(), b.stopImmediatePropagation(), b.preventDefault(), c.removeEventListener("click", a)) }, !0); var d = document.createEvent("MouseEvents"); d.initMouseEvent("click", !1, !0, a, {}, 0, 0, 0, 0, !1, !1, !1, !1, 0, null), d.$material = !0, d.$focus = !0, c.dispatchEvent(d) }, createBackdrop: function (a, b) { return g(r.supplant('<md-backdrop class="{0}">', [b]))(a) }, supplant: function (a, b, c) { return c = c || /\{([^\{\}]*)\}/g, a.replace(c, function (a, c) { var d = c.split("."), e = b; try { for (var f in d) d.hasOwnProperty(f) && (e = e[d[f]]) } catch (b) { e = a } return "string" == typeof e || "number" == typeof e ? e : a }) }, fakeNgModel: function () { return { $fake: !0, $setTouched: b.noop, $setViewValue: function (a) { this.$viewValue = a, this.$render(a), this.$viewChangeListeners.forEach(function (a) { a() }) }, $isEmpty: function (a) { return 0 === ("" + a).length }, $parsers: [], $formatters: [], $viewChangeListeners: [], $render: b.noop } }, debounce: function (a, b, d, e) { var g; return function () { var i = d, j = Array.prototype.slice.call(arguments); f.cancel(g), g = f(function () { g = c, a.apply(i, j) }, b || 10, e) } }, throttle: function (b, c) { var d; return function () { var e = this, f = arguments, g = r.now(); (!d || g - d > c) && (b.apply(e, f), d = g) } }, time: function (b) { var c = r.now(); return b(), r.now() - c }, valueOnUse: function (a, b, c) { var d = null, e = Array.prototype.slice.call(arguments), f = e.length > 3 ? e.slice(3) : []; Object.defineProperty(a, b, { get: function () { return null === d && (d = c.apply(a, f)), d } }) }, nextUid: function () { return "" + d++ }, disconnectScope: function (b) { if (b && b.$root !== b && !b.$$destroyed) { var c = b.$parent; b.$$disconnected = !0, c.$$childHead === b && (c.$$childHead = b.$$nextSibling), c.$$childTail === b && (c.$$childTail = b.$$prevSibling), b.$$prevSibling && (b.$$prevSibling.$$nextSibling = b.$$nextSibling), b.$$nextSibling && (b.$$nextSibling.$$prevSibling = b.$$prevSibling), b.$$nextSibling = b.$$prevSibling = null } }, reconnectScope: function (b) { if (b && b.$root !== b && b.$$disconnected) { var c = b, d = c.$parent; c.$$disconnected = !1, c.$$prevSibling = d.$$childTail, d.$$childHead ? (d.$$childTail.$$nextSibling = c, d.$$childTail = c) : d.$$childHead = d.$$childTail = c } }, getClosest: function (c, d, e) { if (c instanceof b.element && (c = c[0]), d = d.toUpperCase(), e && (c = c.parentNode), !c) return null; do if (c.nodeName === d) return c; while (c = c.parentNode); return null }, elementContains: function (c, d) { var e = a.Node && a.Node.prototype && Node.prototype.contains, f = e ? b.bind(c, c.contains) : b.bind(c, function (a) { return c === d || !!(16 & this.compareDocumentPosition(a)) }); return f(d) }, extractElementByName: function (a, c, d, e) { function g(a) { return h(a) || (d ? i(a) : null) } function h(a) { if (a) for (var b = 0, d = a.length; b < d; b++)if (a[b].nodeName.toLowerCase() === c) return a[b]; return null } function i(a) { var b; if (a) for (var c = 0, d = a.length; c < d; c++) { var e = a[c]; if (!b) for (var f = 0, h = e.childNodes.length; f < h; f++)b = b || g([e.childNodes[f]]) } return b } var f = g(a); return !f && e && k.warn(r.supplant("Unable to find node '{0}' in element '{1}'.", [c, a[0].outerHTML])), b.element(f || a) }, initOptionalProperties: function (a, c, d) { d = d || {}, b.forEach(a.$$isolateBindings, function (e, f) { if (e.optional && b.isUndefined(a[f])) { var g = b.isDefined(c[e.attrName]); a[f] = b.isDefined(d[f]) ? d[f] : g } }) }, nextTick: function (a, b, c) { function i() { var a = c && c.$$destroyed, b = a ? [] : d.queue, e = a ? null : d.digest; d.queue = [], d.timeout = null, d.digest = !1, b.forEach(function (a) { a() }), e && h.$digest() } var d = r.nextTick, e = d.timeout, g = d.queue || []; return g.push(a), null == b && (b = !0), d.digest = d.digest || b, d.queue = g, e || (d.timeout = f(i, 0, !1)) }, processTemplate: function (a) { return p ? a : a && b.isString(a) ? a.replace(/\{\{/g, n).replace(/}}/g, o) : a }, getParentWithPointerEvents: function (a) { for (var b = a.parent(); q(b, "pointer-events", "none");)b = b.parent(); return b }, getNearestContentElement: function (a) { for (var b = a.parent()[0]; b && b !== l[0] && b !== document.body && "MD-CONTENT" !== b.nodeName.toUpperCase();)b = b.parentNode; return b }, parseAttributeBoolean: function (a, b) { return "" === a || !!a && (b === !1 || "false" !== a && "0" !== a) }, hasComputedStyle: q }; return r.dom.animator = i(r), r } var d = 0; b.module("material.core").factory("$mdUtil", e), e.$inject = ["$document", "$timeout", "$compile", "$rootScope", "$$mdAnimate", "$interpolate", "$log", "$rootElement", "$window"], b.element.prototype.focus = b.element.prototype.focus || function () { return this.length && this[0].focus(), this }, b.element.prototype.blur = b.element.prototype.blur || function () { return this.length && this[0].blur(), this } }(), function () { function a(a, c, d, e) { function f(a, d, e) { var f = b.element(a)[0] || a; !f || f.hasAttribute(d) && 0 !== f.getAttribute(d).length || j(f, d) || (e = b.isString(e) ? e.trim() : "", e.length ? a.attr(d, e) : c.warn('ARIA: Attribute "', d, '", required for accessibility, is missing on node:', f)) } function g(b, c, d) { a(function () { f(b, c, d()) }) } function h(a, b) { var c = i(a) || "", d = c.indexOf(e.startSymbol()) > -1; d ? g(a, b, function () { return i(a) }) : f(a, b, c) } function i(a) { return (a.text() || "").trim() } function j(a, b) { function f(a) { var b = a.currentStyle ? a.currentStyle : d.getComputedStyle(a); return "none" === b.display } var c = a.hasChildNodes(), e = !1; if (c) for (var g = a.childNodes, h = 0; h < g.length; h++) { var i = g[h]; 1 === i.nodeType && i.hasAttribute(b) && (f(i) || (e = !0)) } return e } return { expect: f, expectAsync: g, expectWithText: h } } b.module("material.core").service("$mdAria", a), a.$inject = ["$$rAF", "$log", "$window", "$interpolate"] }(), function () { function a(a, c, d, e, f, g) { this.compile = function (h) { var i = h.templateUrl, j = h.template || "", k = h.controller, l = h.controllerAs, m = b.extend({}, h.resolve || {}), n = b.extend({}, h.locals || {}), o = h.transformTemplate || b.identity, p = h.bindToController; return b.forEach(m, function (a, c) { b.isString(a) ? m[c] = d.get(a) : m[c] = d.invoke(a) }), b.extend(m, n), i ? m.$template = c.get(i, { cache: g }).then(function (a) { return a.data }) : m.$template = a.when(j), a.all(m).then(function (a) { var c, d = o(a.$template, h), g = h.element || b.element("<div>").html(d.trim()).contents(), i = e(g); return c = { locals: a, element: g, link: function (e) { if (a.$scope = e, k) { var h = f(k, a, !0); p && b.extend(h.instance, a); var j = h(); g.data("$ngControllerController", j), g.children().data("$ngControllerController", j), l && (e[l] = j), c.controller = j } return i(e) } } }) } } b.module("material.core").service("$mdCompiler", a), a.$inject = ["$q", "$http", "$injector", "$compile", "$controller", "$templateCache"] }(), function () { function i() { } function j(d, e, g) { function o(a) { return function (b, c) { c.distance < this.state.options.maxDistance && this.dispatchEvent(b, a, c) } } function p(a, b, d) { var e = c[b.replace(/^\$md./, "")]; if (!e) throw new Error("Failed to register element with handler " + b + ". Available handlers: " + Object.keys(c).join(", ")); return e.registerElement(a, d) } function r(a, e) { var f = new d(a); return b.extend(f, e), c[a] = f, l } var h = navigator.userAgent || navigator.vendor || a.opera, i = h.match(/ipad|iphone|ipod/i), j = h.match(/android/i), k = "undefined" != typeof a.jQuery && b.element === a.jQuery, l = { handler: r, register: p, isHijackingClicks: (i || j) && !k && !f }; if (l.isHijackingClicks) { var m = 6; l.handler("click", { options: { maxDistance: m }, onEnd: o("click") }), l.handler("focus", { options: { maxDistance: m }, onEnd: function (a, b) { function c(a) { var b = ["INPUT", "SELECT", "BUTTON", "TEXTAREA", "VIDEO", "AUDIO"]; return "-1" != a.getAttribute("tabindex") && !a.hasAttribute("DISABLED") && (a.hasAttribute("tabindex") || a.hasAttribute("href") || b.indexOf(a.nodeName) != -1) } b.distance < this.state.options.maxDistance && c(a.target) && (this.dispatchEvent(a, "focus", b), a.target.focus()) } }), l.handler("mouseup", { options: { maxDistance: m }, onEnd: o("mouseup") }), l.handler("mousedown", { onStart: function (a) { this.dispatchEvent(a, "mousedown") } }) } return l.handler("press", { onStart: function (a, b) { this.dispatchEvent(a, "$md.pressdown") }, onEnd: function (a, b) { this.dispatchEvent(a, "$md.pressup") } }).handler("hold", { options: { maxDistance: 6, delay: 500 }, onCancel: function () { g.cancel(this.state.timeout) }, onStart: function (a, c) { return this.state.registeredParent ? (this.state.pos = { x: c.x, y: c.y }, void (this.state.timeout = g(b.bind(this, function () { this.dispatchEvent(a, "$md.hold"), this.cancel() }), this.state.options.delay, !1))) : this.cancel() }, onMove: function (a, b) { a.preventDefault(); var c = this.state.pos.x - b.x, d = this.state.pos.y - b.y; Math.sqrt(c * c + d * d) > this.options.maxDistance && this.cancel() }, onEnd: function () { this.onCancel() } }).handler("drag", { options: { minDistance: 6, horizontal: !0, cancelMultiplier: 1.5 }, onStart: function (a) { this.state.registeredParent || this.cancel() }, onMove: function (a, b) { var c, d; a.preventDefault(), this.state.dragPointer ? this.dispatchDragMove(a) : (this.state.options.horizontal ? (c = Math.abs(b.distanceX) > this.state.options.minDistance, d = Math.abs(b.distanceY) > this.state.options.minDistance * this.state.options.cancelMultiplier) : (c = Math.abs(b.distanceY) > this.state.options.minDistance, d = Math.abs(b.distanceX) > this.state.options.minDistance * this.state.options.cancelMultiplier), c ? (this.state.dragPointer = n(a), q(a, this.state.dragPointer), this.dispatchEvent(a, "$md.dragstart", this.state.dragPointer)) : d && this.cancel()) }, dispatchDragMove: e.throttle(function (a) { this.state.isRunning && (q(a, this.state.dragPointer), this.dispatchEvent(a, "$md.drag", this.state.dragPointer)) }), onEnd: function (a, b) { this.state.dragPointer && (q(a, this.state.dragPointer), this.dispatchEvent(a, "$md.dragend", this.state.dragPointer)) } }).handler("swipe", { options: { minVelocity: .65, minDistance: 10 }, onEnd: function (a, b) { var c; Math.abs(b.velocityX) > this.state.options.minVelocity && Math.abs(b.distanceX) > this.state.options.minDistance ? (c = "left" == b.directionX ? "$md.swipeleft" : "$md.swiperight", this.dispatchEvent(a, c)) : Math.abs(b.velocityY) > this.state.options.minVelocity && Math.abs(b.distanceY) > this.state.options.minDistance && (c = "up" == b.directionY ? "$md.swipeup" : "$md.swipedown", this.dispatchEvent(a, c)) } }) } function k(a) { this.name = a, this.state = {} } function l() { function e(a, c, e) { e = e || d; var f = new b.element.Event(c); f.$material = !0, f.pointer = e, f.srcEvent = a, b.extend(f, { clientX: e.x, clientY: e.y, screenX: e.x, screenY: e.y, pageX: e.x, pageY: e.y, ctrlKey: a.ctrlKey, altKey: a.altKey, shiftKey: a.shiftKey, metaKey: a.metaKey }), b.element(e.target).trigger(f) } function f(b, c, e) { e = e || d; var f; "click" === c || "mouseup" == c || "mousedown" == c ? (f = document.createEvent("MouseEvents"), f.initMouseEvent(c, !0, !0, a, b.detail, e.x, e.y, e.x, e.y, b.ctrlKey, b.altKey, b.shiftKey, b.metaKey, b.button, b.relatedTarget || null)) : (f = document.createEvent("CustomEvent"), f.initCustomEvent(c, !0, !0, {})), f.$material = !0, f.pointer = e, f.srcEvent = b, e.target.dispatchEvent(f) } var c = "undefined" != typeof a.jQuery && b.element === a.jQuery; return k.prototype = { options: {}, dispatchEvent: c ? e : f, onStart: b.noop, onMove: b.noop, onEnd: b.noop, onCancel: b.noop, start: function (a, c) { if (!this.state.isRunning) { var d = this.getNearestParent(a.target), e = d && d.$mdGesture[this.name] || {}; this.state = { isRunning: !0, options: b.extend({}, this.options, e), registeredParent: d }, this.onStart(a, c) } }, move: function (a, b) { this.state.isRunning && this.onMove(a, b) }, end: function (a, b) { this.state.isRunning && (this.onEnd(a, b), this.state.isRunning = !1) }, cancel: function (a, b) { this.onCancel(a, b), this.state = {} }, getNearestParent: function (a) { for (var b = a; b;) { if ((b.$mdGesture || {})[this.name]) return b; b = b.parentNode } return null }, registerElement: function (a, b) { function d() { delete a[0].$mdGesture[c.name], a.off("$destroy", d) } var c = this; return a[0].$mdGesture = a[0].$mdGesture || {}, a[0].$mdGesture[this.name] = b || {}, a.on("$destroy", d), d } }, k } function m(a, f) { function i(a) { var b = !a.clientX && !a.clientY; b || a.$material || a.isIonicTap || p(a) || (a.preventDefault(), a.stopPropagation()) } function j(a) { var b = 0 === a.clientX && 0 === a.clientY; b || a.$material || a.isIonicTap || p(a) ? (g = null, "label" == a.target.tagName.toLowerCase() && (g = { x: a.x, y: a.y })) : (a.preventDefault(), a.stopPropagation(), g = null) } function r(a, b) { var e; for (var g in c) e = c[g], e instanceof f && ("start" === a && e.cancel(), e[a](b, d)) } function s(a) { if (!d) { var b = +Date.now(); e && !o(a, e) && b - e.endTime < 1500 || (d = n(a), r("start", a)) } } function t(a) { d && o(a, d) && (q(a, d), r("move", a)) } function u(a) { d && o(a, d) && (q(a, d), d.endTime = +Date.now(), r("end", a), e = d, d = null) } document.contains || (document.contains = function (a) { return document.body.contains(a) }), !h && a.isHijackingClicks && (document.addEventListener("click", j, !0), document.addEventListener("mouseup", i, !0), document.addEventListener("mousedown", i, !0), document.addEventListener("focus", i, !0), h = !0); var k = "mousedown touchstart pointerdown", l = "mousemove touchmove pointermove", m = "mouseup mouseleave touchend touchcancel pointerup pointercancel"; b.element(document).on(k, s).on(l, t).on(m, u).on("$$mdGestureReset", function () { e = d = null }) } function n(a) { var b = r(a), c = { startTime: +Date.now(), target: a.target, type: a.type.charAt(0) }; return c.startX = c.x = b.pageX, c.startY = c.y = b.pageY, c } function o(a, b) { return a && b && a.type.charAt(0) === b.type } function p(a) { return g && g.x == a.x && g.y == a.y } function q(a, b) { var c = r(a), d = b.x = c.pageX, e = b.y = c.pageY; b.distanceX = d - b.startX, b.distanceY = e - b.startY, b.distance = Math.sqrt(b.distanceX * b.distanceX + b.distanceY * b.distanceY), b.directionX = b.distanceX > 0 ? "right" : b.distanceX < 0 ? "left" : "", b.directionY = b.distanceY > 0 ? "down" : b.distanceY < 0 ? "up" : "", b.duration = +Date.now() - b.startTime, b.velocityX = b.distanceX / b.duration, b.velocityY = b.distanceY / b.duration } function r(a) { return a = a.originalEvent || a, a.touches && a.touches[0] || a.changedTouches && a.changedTouches[0] || a } var d, e, c = {}, f = !1, g = null, h = !1; b.module("material.core.gestures", []).provider("$mdGesture", i).factory("$$MdGestureHandler", l).run(m), i.prototype = { skipClickHijack: function () { return f = !0 }, $get: ["$$MdGestureHandler", "$$rAF", "$timeout", function (a, b, c) { return new j(a, b, c) }] }, j.$inject = ["$$MdGestureHandler", "$$rAF", "$timeout"], m.$inject = ["$mdGesture", "$$MdGestureHandler"] }(), function () { function a() { function a(a) { function g(a) { return e.optionsFactory = a.options, e.methods = (a.methods || []).concat(c), f } function h(a, b) { return d[a] = b, f } function i(b, d) { if (d = d || {}, d.methods = d.methods || [], d.options = d.options || function () { return {} }, /^cancel|hide|show$/.test(b)) throw new Error("Preset '" + b + "' in " + a + " is reserved!"); if (d.methods.indexOf("_options") > -1) throw new Error("Method '_options' in " + a + " is reserved!"); return e.presets[b] = { methods: d.methods.concat(c), optionsFactory: d.options, argOption: d.argOption }, f } function k(c, f) { function k(a) { return a = a || {}, a._options && (a = a._options), i.show(b.extend({}, h, a)) } function l(a) { return i.destroy(a) } function m(b, c) { var d = {}; return d[a] = j, f.invoke(b || function () { return c }, {}, d) } var g, h, i = c(), j = { hide: i.hide, cancel: i.cancel, show: k, destroy: l }; return g = e.methods || [], h = m(e.optionsFactory, {}), b.forEach(d, function (a, b) { j[b] = a }), b.forEach(e.presets, function (a, c) { function f(a) { this._options = b.extend({}, d, a) } var d = m(a.optionsFactory, {}), e = (a.methods || []).concat(g); if (b.extend(d, { $type: c }), b.forEach(e, function (a) { f.prototype[a] = function (b) { return this._options[a] = b, this } }), a.argOption) { var h = "show" + c.charAt(0).toUpperCase() + c.slice(1); j[h] = function (a) { var b = j[c](a); return j.show(b) } } j[c] = function (c) { return arguments.length && a.argOption && !b.isObject(c) && !b.isArray(c) ? (new f)[a.argOption](c) : new f(c) } }), j } var c = ["onHide", "onShow", "onRemove"], d = {}, e = { presets: {} }, f = { setDefaults: g, addPreset: i, addMethod: h, $get: k }; return f.addPreset("build", { methods: ["controller", "controllerAs", "resolve", "template", "templateUrl", "themable", "transformTemplate", "parent"] }), k.$inject = ["$$interimElement", "$injector"], f } function d(a, d, e, f, g, h, i, j, k, l, m) { return function () { function r(a) { a = a || {}; var b = new v(a || {}), c = !a.skipHide && q.length ? p.hide() : d.when(!0); return c.finally(function () { q.push(b), b.show().catch(function (a) { return a }) }), b.deferred.promise } function s(a, b) { function g(c) { return c.remove(a, !1, b || {}).catch(function (a) { return a }), c.deferred.promise } if (!q.length) return d.when(a); if (b = b || {}, b.closeAll) { var e = d.all(q.reverse().map(g)); return q = [], e } if (b.closeTo !== c) return d.all(q.splice(b.closeTo).map(g)); var f = q.pop(); return g(f) } function t(a, b) { var c = q.pop(); return c ? (c.remove(a, !0, b || {}).catch(function (a) { return a }), c.deferred.promise) : d.when(a) } function u(a) { var c = a ? null : q.shift(), e = b.element(a).length ? b.element(a)[0].parentNode : null; if (e) { var f = q.filter(function (a) { var b = a.options.element[0]; return b === e }); f.length > 0 && (c = f[0], q.splice(q.indexOf(c), 1)) } return c ? c.remove(o, !1, { $destroy: !0 }) : d.when(o) } function v(m) { function r() { return d(function (a, b) { function c(a) { n.deferred.reject(a), b(a) } u(m).then(function (b) { o = v(b, m), q = y(o, m, b.controller).then(a, c) }, c) }) } function s(a, c, e) { function f(a) { n.deferred.resolve(a) } function g(a) { n.deferred.reject(a) } return o ? (m = b.extend(m || {}, e || {}), m.cancelAutoHide && m.cancelAutoHide(), m.element.triggerHandler("$mdInterimElementRemove"), m.$destroy === !0 ? z(m.element, m).then(function () { c && g(a) || f(a) }) : (d.when(q).finally(function () { z(m.element, m).then(function () { c && g(a) || f(a) }, g) }), n.deferred.promise)) : d.when(!1) } function t(a) { return a = a || {}, a.template && (a.template = j.processTemplate(a.template)), b.extend({ preserveScope: !1, cancelAutoHide: b.noop, scope: a.scope || f.$new(a.isolateScope), onShow: function (b, c, d) { return i.enter(c, d.parent) }, onRemove: function (b, c) { return c && i.leave(c) || d.when() } }, a) } function u(a) { var b = a.skipCompile ? null : k.compile(a); return b || d(function (b) { b({ locals: {}, link: function () { return a.element } }) }) } function v(a, c) { b.extend(a.locals, c); var d = a.link(c.scope); return c.element = d, c.parent = w(d, c), c.themable && l(d), d } function w(c, d) { var e = d.parent; if (e = b.isFunction(e) ? e(d.scope, c, d) : b.isString(e) ? b.element(a[0].querySelector(e)) : b.element(e), !(e || {}).length) { var f; return h[0] && h[0].querySelector && (f = h[0].querySelector(":not(svg) > body")), f || (f = h[0]), "#comment" == f.nodeName && (f = a[0].body), b.element(f) } return e } function x() { var a, d = b.noop; m.hideDelay && (a = g(p.hide, m.hideDelay), d = function () { g.cancel(a) }), m.cancelAutoHide = function () { d(), m.cancelAutoHide = c } } function y(a, c, e) { var f = c.onShowing || b.noop, g = c.onComplete || b.noop; return f(c.scope, a, c, e), d(function (b, f) { try { d.when(c.onShow(c.scope, a, c, e)).then(function () { g(c.scope, a, c), x(), b(a) }, f) } catch (a) { f(a.message) } }) } function z(a, c) { var d = c.onRemoving || b.noop; return e(function (b, f) { try { var g = e.when(c.onRemove(c.scope, a, c) || !0); d(a, g), 1 == c.$destroy ? b(a) : g.then(function () { !c.preserveScope && c.scope && c.scope.$destroy(), b(a) }, f) } catch (a) { f(a.message) } }) } var n, o, q = d.when(!0); return m = t(m), n = { options: m, deferred: d.defer(), show: r, remove: s } } var p, o = !1, q = []; return p = { show: r, hide: s, cancel: t, destroy: u, $injector_: m } } } return a.$get = d, d.$inject = ["$document", "$q", "$$q", "$rootScope", "$timeout", "$rootElement", "$animate", "$mdUtil", "$mdCompiler", "$mdTheming", "$injector"], a } b.module("material.core").provider("$$interimElement", a) }(), function () { !function () { function l(a) { function h(a) { return a.replace(c, "").replace(d, function (a, b, c, d) { return d ? c.toUpperCase() : c }) } var c = /^((?:x|data)[\:\-_])/i, d = /([\:\-\_]+(.))/g, e = ["", "xs", "gt-xs", "sm", "gt-sm", "md", "gt-md", "lg", "gt-lg", "xl", "print"], f = ["layout", "flex", "flex-order", "flex-offset", "layout-align"], g = ["show", "hide", "layout-padding", "layout-margin"]; b.forEach(e, function (c) { b.forEach(f, function (b) { var d = c ? b + "-" + c : b; a.directive(h(d), o(d)) }), b.forEach(g, function (b) { var d = c ? b + "-" + c : b; a.directive(h(d), p(d)) }) }), a.directive("mdLayoutCss", m).directive("ngCloak", n("ng-cloak")).directive("layoutWrap", p("layout-wrap")).directive("layoutNowrap", p("layout-nowrap")).directive("layoutNoWrap", p("layout-no-wrap")).directive("layoutFill", p("layout-fill")).directive("layoutLtMd", r("layout-lt-md", !0)).directive("layoutLtLg", r("layout-lt-lg", !0)).directive("flexLtMd", r("flex-lt-md", !0)).directive("flexLtLg", r("flex-lt-lg", !0)).directive("layoutAlignLtMd", r("layout-align-lt-md")).directive("layoutAlignLtLg", r("layout-align-lt-lg")).directive("flexOrderLtMd", r("flex-order-lt-md")).directive("flexOrderLtLg", r("flex-order-lt-lg")).directive("offsetLtMd", r("flex-offset-lt-md")).directive("offsetLtLg", r("flex-offset-lt-lg")).directive("hideLtMd", r("hide-lt-md")).directive("hideLtLg", r("hide-lt-lg")).directive("showLtMd", r("show-lt-md")).directive("showLtLg", r("show-lt-lg")) } function m() { return { restrict: "A", priority: "900", compile: function (a, c) { return k.enabled = !1, b.noop } } } function n(a) { return ["$timeout", function (c) { return { restrict: "A", priority: -10, compile: function (d) { return k.enabled ? (d.addClass(a), function (b, d) { c(function () { d.removeClass(a) }, 10, !1) }) : b.noop } } }] } function o(e) { function f(a, b, c) { var d = q(b, e, c), f = c.$observe(c.$normalize(e), d); d(w(e, c, "")), a.$on("$destroy", function () { f() }) } return ["$mdUtil", "$interpolate", "$log", function (g, h, i) { return a = g, c = h, d = i, { restrict: "A", compile: function (a, c) { var g; return k.enabled && (s(e, c, a, d), t(e, w(e, c, ""), u(a, e, c)), g = f), g || b.noop } } }] } function p(e) { function f(a, b) { b.addClass(e) } return ["$mdUtil", "$interpolate", "$log", function (g, h, i) { return a = g, c = h, d = i, { restrict: "A", compile: function (a, c) { var d; return k.enabled && (t(e, w(e, c, ""), u(a, e, c)), f(null, a), d = f), d || b.noop } } }] } function q(a, c) { var d; return function (g) { var h = t(c, g || ""); b.isDefined(h) && (d && a.removeClass(d), d = h ? c + "-" + h.replace(f, "-") : c, a.addClass(d)) } } function r(a) { var c = a.split("-"); return ["$log", function (d) { return d.warn(a + "has been deprecated. Please use a `" + c[0] + "-gt-<xxx>` variant."), b.noop }] } function s(b, c, d, f) { var g, h, i, j = d[0].nodeName.toLowerCase(); switch (b.replace(e, "")) { case "flex": "md-button" != j && "fieldset" != j || (h = "<" + j + " " + b + "></" + j + ">", i = "https://github.com/philipwalton/flexbugs#9-some-html-elements-cant-be-flex-containers", g = "Markup '{0}' may not work as expected in IE Browsers. Consult '{1}' for details.", f.warn(a.supplant(g, [h, i]))) } } function t(c, d, f) { var i = d; if (!v(d)) { switch (c.replace(e, "")) { case "layout": x(d, h) || (d = h[0]); break; case "flex": x(d, g) || isNaN(d) && (d = ""); break; case "flex-offset": case "flex-order": d && !isNaN(+d) || (d = "0"); break; case "layout-align": var j = y(d); d = a.supplant("{main}-{cross}", j); break; case "layout-padding": case "layout-margin": case "layout-fill": case "layout-wrap": case "layout-nowrap": case "layout-nowrap": d = "" }d != i && (f || b.noop)(d) } return d } function u(a, b, c) { return function (d) { v(d) || (c[c.$normalize(b)] = d) } } function v(a) { return (a || "").indexOf(c.startSymbol()) > -1 } function w(a, b, c) { var d = b.$normalize(a); return b[d] ? b[d].replace(f, "-") : c || null } function x(a, b, c) { a = c && a ? a.replace(f, c) : a; var d = !1; return a && b.forEach(function (b) { b = c ? b.replace(f, c) : b, d = d || b === a }), d } function y(a) { var c, b = { main: "start", cross: "stretch" }; return a = a || "", 0 != a.indexOf("-") && 0 != a.indexOf(" ") || (a = "none" + a), c = a.toLowerCase().trim().replace(f, "-").split("-"), c.length && "space" === c[0] && (c = [c[0] + "-" + c[1], c[2]]), c.length > 0 && (b.main = c[0] || b.main), c.length > 1 && (b.cross = c[1] || b.cross), i.indexOf(b.main) < 0 && (b.main = "start"), j.indexOf(b.cross) < 0 && (b.cross = "stretch"), b } var a, c, d, e = /(-gt)?-(sm|md|lg|print)/g, f = /\s+/g, g = ["grow", "initial", "auto", "none", "noshrink", "nogrow"], h = ["row", "column"], i = ["", "start", "center", "end", "stretch", "space-around", "space-between"], j = ["", "start", "center", "end", "stretch"], k = { enabled: !0, breakpoints: [] }; l(b.module("material.core.layout", ["ng"])) }() }(), function () {
        function a(a, c) {
            function g(a) { return a && "" !== a } var d, e = [], f = {}; return d = {
                notFoundError: function (b) { a.error("No instance found for handle", b) }, getInstances: function () {
                    return e
                }, get: function (a) { if (!g(a)) return null; var b, c, d; for (b = 0, c = e.length; b < c; b++)if (d = e[b], d.$$mdHandle === a) return d; return null }, register: function (a, c) { function d() { var b = e.indexOf(a); b !== -1 && e.splice(b, 1) } function g() { var b = f[c]; b && (b.resolve(a), delete f[c]) } return c ? (a.$$mdHandle = c, e.push(a), g(), d) : b.noop }, when: function (a) { if (g(a)) { var b = c.defer(), e = d.get(a); return e ? b.resolve(e) : f[a] = b, b.promise } return c.reject("Invalid `md-component-id` value.") }
            }
        } b.module("material.core").factory("$mdComponentRegistry", a), a.$inject = ["$log", "$q"]
    }(), function () { !function () { function a(a) { function c(a) { return a.hasClass("md-icon-button") ? { isMenuItem: a.hasClass("md-menu-item"), fitRipple: !0, center: !0 } : { isMenuItem: a.hasClass("md-menu-item"), dimBackground: !0 } } return { attach: function (e, f, g) { return g = b.extend(c(f), g), a.attach(e, f, g) } } } b.module("material.core").factory("$mdButtonInkRipple", a), a.$inject = ["$mdInkRipple"] }() }(), function () { !function () { function a(a) { function c(c, d, e) { return a.attach(c, d, b.extend({ center: !0, dimBackground: !1, fitRipple: !0 }, e)) } return { attach: c } } b.module("material.core").factory("$mdCheckboxInkRipple", a), a.$inject = ["$mdInkRipple"] }() }(), function () { !function () { function a(a) { function c(c, d, e) { return a.attach(c, d, b.extend({ center: !1, dimBackground: !0, outline: !1, rippleSize: "full" }, e)) } return { attach: c } } b.module("material.core").factory("$mdListInkRipple", a), a.$inject = ["$mdInkRipple"] }() }(), function () { function c(a, c) { return { controller: b.noop, link: function (b, d, e) { e.hasOwnProperty("mdInkRippleCheckbox") ? c.attach(b, d) : a.attach(b, d) } } } function d(a) { function c(c, d, f) { return d.controller("mdNoInk") ? b.noop : a.instantiate(e, { $scope: c, $element: d, rippleOptions: f }) } return { attach: c } } function e(a, c, d, e, f, g) { this.$window = e, this.$timeout = f, this.$mdUtil = g, this.$scope = a, this.$element = c, this.options = d, this.mousedown = !1, this.ripples = [], this.timeout = null, this.lastRipple = null, g.valueOnUse(this, "container", this.createContainer), this.$element.addClass("md-ink-ripple"), (c.controller("mdInkRipple") || {}).createRipple = b.bind(this, this.createRipple), (c.controller("mdInkRipple") || {}).setColor = b.bind(this, this.color), this.bindEvents() } function f(a, c) { (a.mousedown || a.lastRipple) && (a.mousedown = !1, a.$mdUtil.nextTick(b.bind(a, c), !1)) } function g() { return { controller: b.noop } } b.module("material.core").factory("$mdInkRipple", d).directive("mdInkRipple", c).directive("mdNoInk", g).directive("mdNoBar", g).directive("mdNoStretch", g); var a = 450; c.$inject = ["$mdButtonInkRipple", "$mdCheckboxInkRipple"], d.$inject = ["$injector"], e.$inject = ["$scope", "$element", "rippleOptions", "$window", "$timeout", "$mdUtil"], e.prototype.color = function (a) { function d() { var a = c.options && c.options.colorElement ? c.options.colorElement : [], b = a.length ? a[0] : c.$element[0]; return b ? c.$window.getComputedStyle(b).color : "rgb(0,0,0)" } var c = this; return b.isDefined(a) && (c._color = c._parseColor(a)), c._color || c._parseColor(c.inkRipple()) || c._parseColor(d()) }, e.prototype.calculateColor = function () { return this.color() }, e.prototype._parseColor = function (b, c) { function d(a) { var b = "#" === a[0] ? a.substr(1) : a, c = b.length / 3, d = b.substr(0, c), e = b.substr(c, c), f = b.substr(2 * c); return 1 === c && (d += d, e += e, f += f), "rgba(" + parseInt(d, 16) + "," + parseInt(e, 16) + "," + parseInt(f, 16) + ",0.1)" } function e(a) { return a.replace(")", ", 0.1)").replace("(", "a(") } if (c = c || 1, b) return 0 === b.indexOf("rgba") ? b.replace(/\d?\.?\d*\s*\)\s*$/, (.1 * c).toString() + ")") : 0 === b.indexOf("rgb") ? e(b) : 0 === b.indexOf("#") ? d(b) : void 0 }, e.prototype.bindEvents = function () { this.$element.on("mousedown", b.bind(this, this.handleMousedown)), this.$element.on("mouseup touchend", b.bind(this, this.handleMouseup)), this.$element.on("mouseleave", b.bind(this, this.handleMouseup)), this.$element.on("touchmove", b.bind(this, this.handleTouchmove)) }, e.prototype.handleMousedown = function (a) { if (!this.mousedown) if (a.hasOwnProperty("originalEvent") && (a = a.originalEvent), this.mousedown = !0, this.options.center) this.createRipple(this.container.prop("clientWidth") / 2, this.container.prop("clientWidth") / 2); else if (a.srcElement !== this.$element[0]) { var b = this.$element[0].getBoundingClientRect(), c = a.clientX - b.left, d = a.clientY - b.top; this.createRipple(c, d) } else this.createRipple(a.offsetX, a.offsetY) }, e.prototype.handleMouseup = function () { f(this, this.clearRipples) }, e.prototype.handleTouchmove = function () { f(this, this.deleteRipples) }, e.prototype.deleteRipples = function () { for (var a = 0; a < this.ripples.length; a++)this.ripples[a].remove() }, e.prototype.clearRipples = function () { for (var a = 0; a < this.ripples.length; a++)this.fadeInComplete(this.ripples[a]) }, e.prototype.createContainer = function () { var a = b.element('<div class="md-ripple-container"></div>'); return this.$element.append(a), a }, e.prototype.clearTimeout = function () { this.timeout && (this.$timeout.cancel(this.timeout), this.timeout = null) }, e.prototype.isRippleAllowed = function () { var a = this.$element[0]; do { if (!a.tagName || "BODY" === a.tagName) break; if (a && b.isFunction(a.hasAttribute)) { if (a.hasAttribute("disabled")) return !1; if ("false" === this.inkRipple() || "0" === this.inkRipple()) return !1 } } while (a = a.parentNode); return !0 }, e.prototype.inkRipple = function () { return this.$element.attr("md-ink-ripple") }, e.prototype.createRipple = function (c, d) { function m(a) { return a ? a.replace("rgba", "rgb").replace(/,[^\),]+\)/, ")") : "rgb(0,0,0)" } function n(a, b, c) { return a ? Math.max(b, c) : Math.sqrt(Math.pow(b, 2) + Math.pow(c, 2)) } if (this.isRippleAllowed()) { var e = this, f = b.element('<div class="md-ripple"></div>'), g = this.$element.prop("clientWidth"), h = this.$element.prop("clientHeight"), i = 2 * Math.max(Math.abs(g - c), c), j = 2 * Math.max(Math.abs(h - d), d), k = n(this.options.fitRipple, i, j), l = this.calculateColor(); f.css({ left: c + "px", top: d + "px", background: "black", width: k + "px", height: k + "px", backgroundColor: m(l), borderColor: m(l) }), this.lastRipple = f, this.clearTimeout(), this.timeout = this.$timeout(function () { e.clearTimeout(), e.mousedown || e.fadeInComplete(f) }, .35 * a, !1), this.options.dimBackground && this.container.css({ backgroundColor: l }), this.container.append(f), this.ripples.push(f), f.addClass("md-ripple-placed"), this.$mdUtil.nextTick(function () { f.addClass("md-ripple-scaled md-ripple-active"), e.$timeout(function () { e.clearRipples() }, a, !1) }, !1) } }, e.prototype.fadeInComplete = function (a) { this.lastRipple === a ? this.timeout || this.mousedown || this.removeRipple(a) : this.removeRipple(a) }, e.prototype.removeRipple = function (b) { var c = this, d = this.ripples.indexOf(b); d < 0 || (this.ripples.splice(this.ripples.indexOf(b), 1), b.removeClass("md-ripple-active"), 0 === this.ripples.length && this.container.css({ backgroundColor: "" }), this.$timeout(function () { c.fadeOutComplete(b) }, a, !1)) }, e.prototype.fadeOutComplete = function (a) { a.remove(), this.lastRipple = null } }(), function () { !function () { function a(a) { function c(c, d, e) { return a.attach(c, d, b.extend({ center: !1, dimBackground: !0, outline: !1, rippleSize: "full" }, e)) } return { attach: c } } b.module("material.core").factory("$mdTabInkRipple", a), a.$inject = ["$mdInkRipple"] }() }(), function () { b.module("material.core.theming.palette", []).constant("$mdColorPalette", { red: { 50: "#ffebee", 100: "#ffcdd2", 200: "#ef9a9a", 300: "#e57373", 400: "#ef5350", 500: "#f44336", 600: "#e53935", 700: "#d32f2f", 800: "#c62828", 900: "#b71c1c", A100: "#ff8a80", A200: "#ff5252", A400: "#ff1744", A700: "#d50000", contrastDefaultColor: "light", contrastDarkColors: "50 100 200 300 A100", contrastStrongLightColors: "400 500 600 700 A200 A400 A700" }, pink: { 50: "#fce4ec", 100: "#f8bbd0", 200: "#f48fb1", 300: "#f06292", 400: "#ec407a", 500: "#e91e63", 600: "#d81b60", 700: "#c2185b", 800: "#ad1457", 900: "#880e4f", A100: "#ff80ab", A200: "#ff4081", A400: "#f50057", A700: "#c51162", contrastDefaultColor: "light", contrastDarkColors: "50 100 200 A100", contrastStrongLightColors: "500 600 A200 A400 A700" }, purple: { 50: "#f3e5f5", 100: "#e1bee7", 200: "#ce93d8", 300: "#ba68c8", 400: "#ab47bc", 500: "#9c27b0", 600: "#8e24aa", 700: "#7b1fa2", 800: "#6a1b9a", 900: "#4a148c", A100: "#ea80fc", A200: "#e040fb", A400: "#d500f9", A700: "#aa00ff", contrastDefaultColor: "light", contrastDarkColors: "50 100 200 A100", contrastStrongLightColors: "300 400 A200 A400 A700" }, "deep-purple": { 50: "#ede7f6", 100: "#d1c4e9", 200: "#b39ddb", 300: "#9575cd", 400: "#7e57c2", 500: "#673ab7", 600: "#5e35b1", 700: "#512da8", 800: "#4527a0", 900: "#311b92", A100: "#b388ff", A200: "#7c4dff", A400: "#651fff", A700: "#6200ea", contrastDefaultColor: "light", contrastDarkColors: "50 100 200 A100", contrastStrongLightColors: "300 400 A200" }, indigo: { 50: "#e8eaf6", 100: "#c5cae9", 200: "#9fa8da", 300: "#7986cb", 400: "#5c6bc0", 500: "#3f51b5", 600: "#3949ab", 700: "#303f9f", 800: "#283593", 900: "#1a237e", A100: "#8c9eff", A200: "#536dfe", A400: "#3d5afe", A700: "#304ffe", contrastDefaultColor: "light", contrastDarkColors: "50 100 200 A100", contrastStrongLightColors: "300 400 A200 A400" }, blue: { 50: "#e3f2fd", 100: "#bbdefb", 200: "#90caf9", 300: "#64b5f6", 400: "#42a5f5", 500: "#2196f3", 600: "#1e88e5", 700: "#1976d2", 800: "#1565c0", 900: "#0d47a1", A100: "#82b1ff", A200: "#448aff", A400: "#2979ff", A700: "#2962ff", contrastDefaultColor: "light", contrastDarkColors: "50 100 200 300 400 A100", contrastStrongLightColors: "500 600 700 A200 A400 A700" }, "light-blue": { 50: "#e1f5fe", 100: "#b3e5fc", 200: "#81d4fa", 300: "#4fc3f7", 400: "#29b6f6", 500: "#03a9f4", 600: "#039be5", 700: "#0288d1", 800: "#0277bd", 900: "#01579b", A100: "#80d8ff", A200: "#40c4ff", A400: "#00b0ff", A700: "#0091ea", contrastDefaultColor: "dark", contrastLightColors: "600 700 800 900 A700", contrastStrongLightColors: "600 700 800 A700" }, cyan: { 50: "#e0f7fa", 100: "#b2ebf2", 200: "#80deea", 300: "#4dd0e1", 400: "#26c6da", 500: "#00bcd4", 600: "#00acc1", 700: "#0097a7", 800: "#00838f", 900: "#006064", A100: "#84ffff", A200: "#18ffff", A400: "#00e5ff", A700: "#00b8d4", contrastDefaultColor: "dark", contrastLightColors: "700 800 900", contrastStrongLightColors: "700 800 900" }, teal: { 50: "#e0f2f1", 100: "#b2dfdb", 200: "#80cbc4", 300: "#4db6ac", 400: "#26a69a", 500: "#009688", 600: "#00897b", 700: "#00796b", 800: "#00695c", 900: "#004d40", A100: "#a7ffeb", A200: "#64ffda", A400: "#1de9b6", A700: "#00bfa5", contrastDefaultColor: "dark", contrastLightColors: "500 600 700 800 900", contrastStrongLightColors: "500 600 700" }, green: { 50: "#e8f5e9", 100: "#c8e6c9", 200: "#a5d6a7", 300: "#81c784", 400: "#66bb6a", 500: "#4caf50", 600: "#43a047", 700: "#388e3c", 800: "#2e7d32", 900: "#1b5e20", A100: "#b9f6ca", A200: "#69f0ae", A400: "#00e676", A700: "#00c853", contrastDefaultColor: "dark", contrastLightColors: "500 600 700 800 900", contrastStrongLightColors: "500 600 700" }, "light-green": { 50: "#f1f8e9", 100: "#dcedc8", 200: "#c5e1a5", 300: "#aed581", 400: "#9ccc65", 500: "#8bc34a", 600: "#7cb342", 700: "#689f38", 800: "#558b2f", 900: "#33691e", A100: "#ccff90", A200: "#b2ff59", A400: "#76ff03", A700: "#64dd17", contrastDefaultColor: "dark", contrastLightColors: "700 800 900", contrastStrongLightColors: "700 800 900" }, lime: { 50: "#f9fbe7", 100: "#f0f4c3", 200: "#e6ee9c", 300: "#dce775", 400: "#d4e157", 500: "#cddc39", 600: "#c0ca33", 700: "#afb42b", 800: "#9e9d24", 900: "#827717", A100: "#f4ff81", A200: "#eeff41", A400: "#c6ff00", A700: "#aeea00", contrastDefaultColor: "dark", contrastLightColors: "900", contrastStrongLightColors: "900" }, yellow: { 50: "#fffde7", 100: "#fff9c4", 200: "#fff59d", 300: "#fff176", 400: "#ffee58", 500: "#ffeb3b", 600: "#fdd835", 700: "#fbc02d", 800: "#f9a825", 900: "#f57f17", A100: "#ffff8d", A200: "#ffff00", A400: "#ffea00", A700: "#ffd600", contrastDefaultColor: "dark" }, amber: { 50: "#fff8e1", 100: "#ffecb3", 200: "#ffe082", 300: "#ffd54f", 400: "#ffca28", 500: "#ffc107", 600: "#ffb300", 700: "#ffa000", 800: "#ff8f00", 900: "#ff6f00", A100: "#ffe57f", A200: "#ffd740", A400: "#ffc400", A700: "#ffab00", contrastDefaultColor: "dark" }, orange: { 50: "#fff3e0", 100: "#ffe0b2", 200: "#ffcc80", 300: "#ffb74d", 400: "#ffa726", 500: "#ff9800", 600: "#fb8c00", 700: "#f57c00", 800: "#ef6c00", 900: "#e65100", A100: "#ffd180", A200: "#ffab40", A400: "#ff9100", A700: "#ff6d00", contrastDefaultColor: "dark", contrastLightColors: "800 900", contrastStrongLightColors: "800 900" }, "deep-orange": { 50: "#fbe9e7", 100: "#ffccbc", 200: "#ffab91", 300: "#ff8a65", 400: "#ff7043", 500: "#ff5722", 600: "#f4511e", 700: "#e64a19", 800: "#d84315", 900: "#bf360c", A100: "#ff9e80", A200: "#ff6e40", A400: "#ff3d00", A700: "#dd2c00", contrastDefaultColor: "light", contrastDarkColors: "50 100 200 300 400 A100 A200", contrastStrongLightColors: "500 600 700 800 900 A400 A700" }, brown: { 50: "#efebe9", 100: "#d7ccc8", 200: "#bcaaa4", 300: "#a1887f", 400: "#8d6e63", 500: "#795548", 600: "#6d4c41", 700: "#5d4037", 800: "#4e342e", 900: "#3e2723", A100: "#d7ccc8", A200: "#bcaaa4", A400: "#8d6e63", A700: "#5d4037", contrastDefaultColor: "light", contrastDarkColors: "50 100 200", contrastStrongLightColors: "300 400" }, grey: { 50: "#fafafa", 100: "#f5f5f5", 200: "#eeeeee", 300: "#e0e0e0", 400: "#bdbdbd", 500: "#9e9e9e", 600: "#757575", 700: "#616161", 800: "#424242", 900: "#212121", A100: "#ffffff", A200: "#000000", A400: "#303030", A700: "#616161", contrastDefaultColor: "dark", contrastLightColors: "600 700 800 900" }, "blue-grey": { 50: "#eceff1", 100: "#cfd8dc", 200: "#b0bec5", 300: "#90a4ae", 400: "#78909c", 500: "#607d8b", 600: "#546e7a", 700: "#455a64", 800: "#37474f", 900: "#263238", A100: "#cfd8dc", A200: "#b0bec5", A400: "#78909c", A700: "#455a64", contrastDefaultColor: "light", contrastDarkColors: "50 100 200 300 700", contrastStrongLightColors: "400 500 700" } }) }(), function () { function t(a) { function n(a, b) { return b = b || {}, d[a] = u(a, b), j } function t(a, c) { return u(a, b.extend({}, d[a] || {}, c)) } function u(a, b) { var c = q.filter(function (a) { return !b[a] }); if (c.length) throw new Error("Missing colors %1 in palette %2!".replace("%1", c.join(", ")).replace("%2", a)); return b } function v(a, c) { if (e[a]) return e[a]; c = c || "default"; var d = "string" == typeof c ? e[c] : c, f = new x(a); return d && b.forEach(d.colors, function (a, c) { f.colors[c] = { name: a.name, hues: b.extend({}, a.hues) } }), e[a] = f, f } function x(a) { function d(a) { if (a = 0 === arguments.length || !!a, a !== c.isDark) { c.isDark = a, c.foregroundPalette = c.isDark ? g : f, c.foregroundShadow = c.isDark ? h : i; var d = c.isDark ? p : o, e = c.isDark ? o : p; return b.forEach(d, function (a, b) { var d = c.colors[b], f = e[b]; if (d) for (var g in d.hues) d.hues[g] === f[g] && (d.hues[g] = a[g]) }), c } } var c = this; c.name = a, c.colors = {}, c.dark = d, d(!1), m.forEach(function (a) { var d = (c.isDark ? p : o)[a]; c[a + "Palette"] = function (f, g) { var h = c.colors[a] = { name: f, hues: b.extend({}, d, g) }; return Object.keys(h.hues).forEach(function (a) { if (!d[a]) throw new Error("Invalid hue name '%1' in theme %2's %3 color %4. Available hue names: %4".replace("%1", a).replace("%2", c.name).replace("%3", f).replace("%4", Object.keys(d).join(", "))) }), Object.keys(h.hues).map(function (a) { return h.hues[a] }).forEach(function (b) { if (q.indexOf(b) == -1) throw new Error("Invalid hue value '%1' in theme %2's %3 color %4. Available hue values: %5".replace("%1", b).replace("%2", c.name).replace("%3", a).replace("%4", f).replace("%5", q.join(", "))) }), c }, c[a + "Color"] = function () { var b = Array.prototype.slice.call(arguments); return console.warn("$mdThemingProviderTheme." + a + "Color() has been deprecated. Use $mdThemingProviderTheme." + a + "Palette() instead."), c[a + "Palette"].apply(c, b) } }) } function y(a, d) { function g(a) { return a === c || "" === a || f.THEMES[a] !== c } function h(c, e) { function j() { return f = e.controller("mdTheme") || c.data("$mdThemeController"), f && f.$mdTheme || ("default" == k ? "" : k) } function m(a) { if (a) { g(a) || d.warn("Attempted to use unregistered theme '" + a + "'. Register it with $mdThemingProvider.theme()."); var b = c.data("$mdThemeName"); b && c.removeClass("md-" + b + "-theme"), c.addClass("md-" + a + "-theme"), c.data("$mdThemeName", a), f && c.data("$mdThemeController", f) } } var f = e.controller("mdTheme"), h = c.attr("md-theme-watch"), i = (l || b.isDefined(h)) && "false" != h; m(j()), c.on("$destroy", i ? a.$watch(j, m) : b.noop) } var f = function (b, d) { d === c && (d = b, b = c), b === c && (b = a), f.inherit(d, d) }; return f.THEMES = b.extend({}, e), f.inherit = h, f.registered = g, f.defaultTheme = function () { return k }, f.generateTheme = function (a) { z(a, s) }, f } d = {}, e = {}; var j, k = "default", l = !1; return b.extend(d, a), y.$inject = ["$rootScope", "$log"], j = { definePalette: n, extendPalette: t, theme: v, setNonce: function (a) { s = a }, setDefaultTheme: function (a) { k = a }, alwaysWatchTheme: function (a) { l = a }, generateThemesOnDemand: function (a) { r = a }, $get: y, _LIGHT_DEFAULT_HUES: o, _DARK_DEFAULT_HUES: p, _PALETTES: d, _THEMES: e, _parseRules: w, _rgba: C } } function u(a, b, c) { return { priority: 100, link: { pre: function (d, e, f) { var g = { $setTheme: function (b) { a.registered(b) || c.warn("attempted to use unregistered theme '" + b + "'"), g.$mdTheme = b } }; e.data("$mdThemeController", g), g.$setTheme(b(f.mdTheme)(d)), f.$observe("mdTheme", g.$setTheme) } } } } function v(a) { return a } function w(a, c, e) { A(a, c), e = e.replace(/THEME_NAME/g, a.name); var f = [], g = a.colors[c], h = new RegExp(".md-" + a.name + "-theme", "g"), i = new RegExp("('|\")?{{\\s*(" + c + ")-(color|contrast)-?(\\d\\.?\\d*)?\\s*}}(\"|')?", "g"), j = /'?"?\{\{\s*([a-zA-Z]+)-(A?\d+|hue\-[0-3]|shadow)-?(\d\.?\d*)?(contrast)?\s*\}\}'?"?/g, k = d[g.name]; return e = e.replace(j, function (b, c, e, f, g) { return "foreground" === c ? "shadow" == e ? a.foregroundShadow : a.foregroundPalette[e] || a.foregroundPalette[1] : (0 === e.indexOf("hue") && (e = a.colors[c].hues[e]), C((d[a.colors[c].name][e] || "")[g ? "contrast" : "value"], f)) }), b.forEach(g.hues, function (b, c) { var d = e.replace(i, function (a, c, d, e, f) { return C(k[b]["color" === e ? "value" : "contrast"], f) }); if ("default" !== c && (d = d.replace(h, ".md-" + a.name + "-theme.md-" + c)), "default" == a.name) { var g = /((?:(?:(?: |>|\.|\w|-|:|\(|\)|\[|\]|"|'|=)+) )?)((?:(?:\w|\.|-)+)?)\.md-default-theme((?: |>|\.|\w|-|:|\(|\)|\[|\]|"|'|=)*)/g; d = d.replace(g, function (a, b, c, d) { return a + ", " + b + c + d }) } f.push(d) }), f } function y(c) { function p(a, c) { var d = a.contrastDefaultColor, e = a.contrastLightColors || [], f = a.contrastStrongLightColors || [], g = a.contrastDarkColors || []; "string" == typeof e && (e = e.split(" ")), "string" == typeof f && (f = f.split(" ")), "string" == typeof g && (g = g.split(" ")), delete a.contrastDefaultColor, delete a.contrastLightColors, delete a.contrastStrongLightColors, delete a.contrastDarkColors, b.forEach(a, function (c, h) { function m() { return "light" === d ? g.indexOf(h) > -1 ? j : f.indexOf(h) > -1 ? l : k : e.indexOf(h) > -1 ? f.indexOf(h) > -1 ? l : k : j } if (!b.isObject(c)) { var i = B(c); if (!i) throw new Error("Color %1, in palette %2's hue %3, is invalid. Hex or rgb(a) color expected.".replace("%1", c).replace("%2", a.name).replace("%3", h)); a[h] = { value: i, contrast: m() } } }) } var f = document.head, g = f ? f.firstElementChild : null, h = c.has("$MD_THEME_CSS") ? c.get("$MD_THEME_CSS") : ""; if (g && 0 !== h.length) { b.forEach(d, p); var i = h.split(/\}(?!(\}|'|"|;))/).filter(function (a) { return a && a.length }).map(function (a) { return a.trim() + "}" }), o = new RegExp("md-(" + m.join("|") + ")", "g"); m.forEach(function (a) { x[a] = "" }), i.forEach(function (a) { for (var d, c = (a.match(o), 0); d = m[c]; c++)if (a.indexOf(".md-" + d) > -1) return x[d] += a; for (c = 0; d = m[c]; c++)if (a.indexOf(d) > -1) return x[d] += a; return x[n] += a }), r || b.forEach(e, function (b) { a[b.name] || z(b.name, s) }) } } function z(b, c) { var d = e[b], f = document.head, g = f ? f.firstElementChild : null; a[b] || (m.forEach(function (a) { for (var b = w(d, a, x[a]); b.length;) { var e = b.shift(); if (e) { var h = document.createElement("style"); h.setAttribute("md-theme-style", ""), c && h.setAttribute("nonce", c), h.appendChild(document.createTextNode(e)), f.insertBefore(h, g) } } }), d.colors.primary.name == d.colors.accent.name && console.warn("$mdThemingProvider: Using the same palette for primary and accent. This violates the material design spec."), a[d.name] = !0) } function A(a, b) { if (!d[(a.colors[b] || {}).name]) throw new Error("You supplied an invalid color palette for theme %1's %2 palette. Available palettes: %3".replace("%1", a.name).replace("%2", b).replace("%3", Object.keys(d).join(", "))) } function B(a) { if (b.isArray(a) && 3 == a.length) return a; if (/^rgb/.test(a)) return a.replace(/(^\s*rgba?\(|\)\s*$)/g, "").split(",").map(function (a, b) { return 3 == b ? parseFloat(a, 10) : parseInt(a, 10) }); if ("#" == a.charAt(0) && (a = a.substring(1)), /^([a-fA-F0-9]{3}){1,2}$/g.test(a)) { var c = a.length / 3, d = a.substr(0, c), e = a.substr(c, c), f = a.substr(2 * c); return 1 === c && (d += d, e += e, f += f), [parseInt(d, 16), parseInt(e, 16), parseInt(f, 16)] } } function C(a, c) { return a ? (4 == a.length && (a = b.copy(a), c ? a.pop() : c = a.pop()), c && ("number" == typeof c || "string" == typeof c && c.length) ? "rgba(" + a.join(",") + "," + c + ")" : "rgb(" + a.join(",") + ")") : "rgb('0,0,0')" } b.module("material.core.theming", ["material.core.theming.palette"]).directive("mdTheme", u).directive("mdThemable", v).provider("$mdTheming", t).run(y); var d, e, a = {}, f = { name: "dark", 1: "rgba(0,0,0,0.87)", 2: "rgba(0,0,0,0.54)", 3: "rgba(0,0,0,0.38)", 4: "rgba(0,0,0,0.12)" }, g = { name: "light", 1: "rgba(255,255,255,1.0)", 2: "rgba(255,255,255,0.7)", 3: "rgba(255,255,255,0.5)", 4: "rgba(255,255,255,0.12)" }, h = "1px 1px 0px rgba(0,0,0,0.4), -1px -1px 0px rgba(0,0,0,0.4)", i = "", j = B("rgba(0,0,0,0.87)"), k = B("rgba(255,255,255,0.87)"), l = B("rgb(255,255,255)"), m = ["primary", "accent", "warn", "background"], n = "primary", o = { accent: { default: "A200", "hue-1": "A100", "hue-2": "A400", "hue-3": "A700" }, background: { default: "50", "hue-1": "A100", "hue-2": "100", "hue-3": "300" } }, p = { background: { default: "A400", "hue-1": "800", "hue-2": "900", "hue-3": "A200" } }; m.forEach(function (a) { var b = { default: "500", "hue-1": "300", "hue-2": "800", "hue-3": "A100" }; o[a] || (o[a] = b), p[a] || (p[a] = b) }); var q = ["50", "100", "200", "300", "400", "500", "600", "700", "800", "900", "A100", "A200", "A400", "A700"], r = !1, s = null; t.$inject = ["$mdColorPalette"], u.$inject = ["$mdTheming", "$interpolate", "$log"], v.$inject = ["$mdTheming"]; var x = {}; y.$inject = ["$injector"] }(), function () { function a(a, c, d, e, f) { var g; return g = { translate3d: function (a, b, c, d) { function e(c) { return f(a, { to: c || b, addClass: d.transitionOutClass, removeClass: d.transitionInClass }).start() } return f(a, { from: b, to: c, addClass: d.transitionInClass }).start().then(function () { return e }) }, waitTransitionEnd: function (a, b) { var f = 3e3; return c(function (c, g) { function i(b) { b && b.target !== a[0] || (b && d.cancel(h), a.off(e.CSS.TRANSITIONEND, i), c()) } b = b || {}; var h = d(i, b.timeout || f); a.on(e.CSS.TRANSITIONEND, i) }) }, calculateZoomToOrigin: function (c, d) { function o() { var a = c ? c.parent() : null, b = a ? a.parent() : null; return b ? g.clientRect(b) : null } var e = d.element, f = d.bounds, h = "translate3d( {centerX}px, {centerY}px, 0 ) scale( {scaleX}, {scaleY} )", i = b.bind(null, a.supplant, h), j = i({ centerX: 0, centerY: 0, scaleX: .5, scaleY: .5 }); if (e || f) { var k = e ? g.clientRect(e) || o() : g.copyRect(f), l = g.copyRect(c[0].getBoundingClientRect()), m = g.centerPointFor(l), n = g.centerPointFor(k); j = i({ centerX: n.x - m.x, centerY: n.y - m.y, scaleX: Math.round(100 * Math.min(.5, k.width / l.width)) / 100, scaleY: Math.round(100 * Math.min(.5, k.height / l.height)) / 100 }) } return j }, toCss: function (a) { function f(a, d, e) { b.forEach(d.split(" "), function (a) { c[a] = e }) } var c = {}, d = "left top right bottom width height x y min-width min-height max-width max-height"; return b.forEach(a, function (a, g) { if (!b.isUndefined(a)) if (d.indexOf(g) >= 0) c[g] = a + "px"; else switch (g) { case "transition": f(g, e.CSS.TRANSITION, a); break; case "transform": f(g, e.CSS.TRANSFORM, a); break; case "transformOrigin": f(g, e.CSS.TRANSFORM_ORIGIN, a) } }), c }, toTransformCss: function (a, c, d) { var f = {}; return b.forEach(e.CSS.TRANSFORM.split(" "), function (b) { f[b] = a }), c && (d = d || "all 0.4s cubic-bezier(0.25, 0.8, 0.25, 1) !important", f.transition = d), f }, copyRect: function (a, c) { return a ? (c = c || {}, b.forEach("left top right bottom width height".split(" "), function (b) { c[b] = Math.round(a[b]) }), c.width = c.width || c.right - c.left, c.height = c.height || c.bottom - c.top, c) : null }, clientRect: function (a) { var c = b.element(a)[0].getBoundingClientRect(), d = function (a) { return a && a.width > 0 && a.height > 0 }; return d(c) ? g.copyRect(c) : null }, centerPointFor: function (a) { return a ? { x: Math.round(a.left + a.width / 2), y: Math.round(a.top + a.height / 2) } : { x: 0, y: 0 } } } } b.module("material.core").factory("$$mdAnimate", ["$q", "$timeout", "$mdConstant", "$animateCss", function (b, c, d, e) { return function (f) { return a(f, b, c, d, e) } }]) }(), function () { b.version.minor >= 4 ? b.module("material.core.animate", []) : !function () { function l(a) { return a.replace(/-[a-z]/g, function (a) { return a.charAt(1).toUpperCase() }) } var a = b.forEach, c = b.isDefined(document.documentElement.style.WebkitAppearance), f = c ? "-webkit-" : "", g = (c ? "webkitTransitionEnd " : "") + "transitionend", h = (c ? "webkitAnimationEnd " : "") + "animationend", i = ["$document", function (a) { return function () { return a[0].body.clientWidth + 1 } }], j = ["$$rAF", function (a) { return function () { var b = !1; return a(function () { b = !0 }), function (c) { b ? c() : a(c) } } }], k = ["$q", "$$rAFMutex", function (c, d) { function h(a) { this.setHost(a), this._doneCallbacks = [], this._runInAnimationFrame = d(), this._state = 0 } var e = 0, f = 1, g = 2; return h.prototype = { setHost: function (a) { this.host = a || {} }, done: function (a) { this._state === g ? a() : this._doneCallbacks.push(a) }, progress: b.noop, getPromise: function () { if (!this.promise) { var a = this; this.promise = c(function (b, c) { a.done(function (a) { a === !1 ? c() : b() }) }) } return this.promise }, then: function (a, b) { return this.getPromise().then(a, b) }, catch: function (a) { return this.getPromise().catch(a) }, finally: function (a) { return this.getPromise().finally(a) }, pause: function () { this.host.pause && this.host.pause() }, resume: function () { this.host.resume && this.host.resume() }, end: function () { this.host.end && this.host.end(), this._resolve(!0) }, cancel: function () { this.host.cancel && this.host.cancel(), this._resolve(!1) }, complete: function (a) { var b = this; b._state === e && (b._state = f, b._runInAnimationFrame(function () { b._resolve(a) })) }, _resolve: function (b) { this._state !== g && (a(this._doneCallbacks, function (a) { a(b) }), this._doneCallbacks.length = 0, this._state = g) } }, h }]; b.module("material.core.animate", []).factory("$$forceReflow", i).factory("$$AnimateRunner", k).factory("$$rAFMutex", j).factory("$animateCss", ["$window", "$$rAF", "$$AnimateRunner", "$$forceReflow", "$$jqLite", "$timeout", function (b, d, e, i, j, k) { function m(c, d) { var i = [], j = w(c); d.transitionStyle && i.push([f + "transition", d.transitionStyle]), d.keyframeStyle && i.push([f + "animation", d.keyframeStyle]), d.delay && i.push([f + "transition-delay", d.delay + "s"]), d.duration && i.push([f + "transition-duration", d.duration + "s"]); var m = d.keyframeStyle || d.to && (d.duration > 0 || d.transitionStyle), p = !!d.addClass || !!d.removeClass, q = m || p; x(c, !0), u(c, d); var y, z, r = !1; return { close: b.close, start: function () { function m() { if (!r) return r = !0, y && z && c.off(y, z), n(c, d), t(c, d), a(i, function (a) { j.style[l(a[0])] = "" }), b.complete(!0), b } var b = new e; return s(function () { if (x(c, !1), !q) return m(); a(i, function (a) { var b = a[0], c = a[1]; j.style[l(b)] = c }), n(c, d); var b = o(c); if (0 === b.duration) return m(); var e = []; d.easing && (b.transitionDuration && e.push([f + "transition-timing-function", d.easing]), b.animationDuration && e.push([f + "animation-timing-function", d.easing])), d.delay && b.animationDelay && e.push([f + "animation-delay", d.delay + "s"]), d.duration && b.animationDuration && e.push([f + "animation-duration", d.duration + "s"]), a(e, function (a) { var b = a[0], c = a[1]; j.style[l(b)] = c, i.push(a) }); var p = b.delay, r = 1e3 * p, s = b.duration, t = 1e3 * s, u = Date.now(); y = [], b.transitionDuration && y.push(g), b.animationDuration && y.push(h), y = y.join(" "), z = function (a) { a.stopPropagation(); var b = a.originalEvent || a, c = b.timeStamp || Date.now(), d = parseFloat(b.elapsedTime.toFixed(3)); Math.max(c - u, 0) >= r && d >= s && m() }, c.on(y, z), v(c, d), k(m, r + 1.5 * t, !1) }), b } } } function n(a, b) { b.addClass && (j.addClass(a, b.addClass), b.addClass = null), b.removeClass && (j.removeClass(a, b.removeClass), b.removeClass = null) } function o(a) { function l(a) { return c ? "Webkit" + a.charAt(0).toUpperCase() + a.substr(1) : a } var d = w(a), e = b.getComputedStyle(d), f = p(e[l("transitionDuration")]), g = p(e[l("animationDuration")]), h = p(e[l("transitionDelay")]), i = p(e[l("animationDelay")]); g *= parseInt(e[l("animationIterationCount")], 10) || 1; var j = Math.max(g, f), k = Math.max(i, h); return { duration: j, delay: k, animationDuration: g, transitionDuration: f, animationDelay: i, transitionDelay: h } } function p(b) { var c = 0, d = (b || "").split(/\s*,\s*/); return a(d, function (a) { "s" == a.charAt(a.length - 1) && (a = a.substring(0, a.length - 1)), a = parseFloat(a) || 0, c = c ? Math.max(a, c) : a }), c } function s(a) { q && q(), r.push(a), q = d(function () { q = null; for (var a = i(), b = 0; b < r.length; b++)r[b](a); r.length = 0 }) } function t(a, b) { u(a, b), v(a, b) } function u(a, b) { b.from && (a.css(b.from), b.from = null) } function v(a, b) { b.to && (a.css(b.to), b.to = null) } function w(a) { for (var b = 0; b < a.length; b++)if (1 === a[b].nodeType) return a[b] } function x(a, b) { var c = w(a), d = l(f + "transition-delay"); c.style[d] = b ? "-9999s" : "" } var q, r = []; return m }]) }() }(), function () { b.module("material.components.autocomplete", ["material.core", "material.components.icon", "material.components.virtualRepeat"]) }(), function () { function a(a) { return { restrict: "E", link: function (c, d, e) { c.$on("$destroy", function () { a.destroy() }) } } } function c(a) { function e(a, e, f, g, h, i, j) { function l(c, d, j, l) { d = f.extractElementByName(d, "md-bottom-sheet"), d.attr("tabindex", "-1"), j.disableBackdrop || (k = f.createBackdrop(c, "_md-bottom-sheet-backdrop md-opaque"), k[0].tabIndex = -1, j.clickOutsideToClose && k.on("click", function () { f.nextTick(h.cancel, !0) }), g.inherit(k, j.parent), a.enter(k, j.parent, null)); var m = new n(d, j.parent); return j.bottomSheet = m, g.inherit(m.element, j.parent), j.disableParentScroll && (j.restoreScroll = f.disableScrollAround(m.element, j.parent)), a.enter(m.element, j.parent, k).then(function () { var a = f.findFocusTarget(d) || b.element(d[0].querySelector("button") || d[0].querySelector("a") || d[0].querySelector("[ng-click]")) || k; j.escapeToClose && (j.rootElementKeyupCallback = function (a) { a.keyCode === e.KEY_CODE.ESCAPE && f.nextTick(h.cancel, !0) }, i.on("keyup", j.rootElementKeyupCallback), a && a.focus()) }) } function m(b, c, d) { var e = d.bottomSheet; return d.disableBackdrop || a.leave(k), a.leave(e.element).then(function () { d.disableParentScroll && (d.restoreScroll(), delete d.restoreScroll), e.cleanup() }) } function n(a, b) { function i(b) { a.css(e.CSS.TRANSITION_DURATION, "0ms") } function k(b) { var c = b.pointer.distanceY; c < 5 && (c = Math.max(-d, c / 2)), a.css(e.CSS.TRANSFORM, "translate3d(0," + (d + c) + "px,0)") } function l(b) { if (b.pointer.distanceY > 0 && (b.pointer.distanceY > 20 || Math.abs(b.pointer.velocityY) > c)) { var d = a.prop("offsetHeight") - b.pointer.distanceY, g = Math.min(d / b.pointer.velocityY * .75, 500); a.css(e.CSS.TRANSITION_DURATION, g + "ms"), f.nextTick(h.cancel, !0) } else a.css(e.CSS.TRANSITION_DURATION, ""), a.css(e.CSS.TRANSFORM, "") } var g = j.register(b, "drag", { horizontal: !1 }); return b.on("$md.dragstart", i).on("$md.drag", k).on("$md.dragend", l), { element: a, cleanup: function () { g(), b.off("$md.dragstart", i), b.off("$md.drag", k), b.off("$md.dragend", l) } } } var k; return { themable: !0, onShow: l, onRemove: m, disableBackdrop: !1, escapeToClose: !0, clickOutsideToClose: !0, disableParentScroll: !0 } } var c = .5, d = 80; return e.$inject = ["$animate", "$mdConstant", "$mdUtil", "$mdTheming", "$mdBottomSheet", "$rootElement", "$mdGesture"], a("$mdBottomSheet").setDefaults({ methods: ["disableParentScroll", "escapeToClose", "clickOutsideToClose"], options: e }) } b.module("material.components.bottomSheet", ["material.core", "material.components.backdrop"]).directive("mdBottomSheet", a).provider("$mdBottomSheet", c), a.$inject = ["$mdBottomSheet"], c.$inject = ["$$interimElementProvider"] }(), function () { b.module("material.components.backdrop", ["material.core"]).directive("mdBackdrop", ["$mdTheming", "$animate", "$rootElement", "$window", "$log", "$$rAF", "$document", function (b, c, d, e, f, g, h) { function j(a, j, k) { var l = e.getComputedStyle(h[0].body); if ("fixed" == l.position) { var m = parseInt(l.height, 10) + Math.abs(parseInt(l.top, 10)); j.css({ height: m + "px" }) } c.pin && c.pin(j, d), g(function () { var a = j.parent()[0]; if (a) { "BODY" == a.nodeName && j.css({ position: "fixed" }); var c = e.getComputedStyle(a); "static" == c.position && f.warn(i) } j.parent().length && b.inherit(j, j.parent()) }) } var i = "<md-backdrop> may not work properly in a scrolled, static-positioned parent container."; return { restrict: "E", link: j } }]) }(), function () { function a(a, c, d, e) { function f(a) { return b.isDefined(a.href) || b.isDefined(a.ngHref) || b.isDefined(a.ngLink) || b.isDefined(a.uiSref) } function g(a, b) { if (f(b)) return '<a class="md-button" ng-transclude></a>'; var c = "undefined" == typeof b.type ? "button" : b.type; return '<button class="md-button" type="' + c + '" ng-transclude></button>' } function h(g, h, i) { c(h), a.attach(g, h), d.expectWithText(h, "aria-label"), f(i) && b.isDefined(i.ngDisabled) && g.$watch(i.ngDisabled, function (a) { h.attr("tabindex", a ? -1 : 0) }), h.on("click", function (a) { i.disabled === !0 && (a.preventDefault(), a.stopImmediatePropagation()) }), b.isDefined(i.mdNoFocusStyle) || (g.mouseActive = !1, h.on("mousedown", function () { g.mouseActive = !0, e(function () { g.mouseActive = !1 }, 100) }).on("focus", function () { g.mouseActive === !1 && h.addClass("md-focused") }).on("blur", function (a) { h.removeClass("md-focused") })) } return { restrict: "EA", replace: !0, transclude: !0, template: g, link: h } } b.module("material.components.button", ["material.core"]).directive("mdButton", a), a.$inject = ["$mdButtonInkRipple", "$mdTheming", "$mdAria", "$timeout"] }(), function () {
        function a(a) { return { restrict: "E", link: function (b, c) { a(c) } } } b.module("material.components.card", ["material.core"]).directive("mdCard", a),
            a.$inject = ["$mdTheming"]
    }(), function () { function a(a, c, d, e, f, g) { function i(i, j) { var k = i.children(), l = j.hasOwnProperty("mdIndeterminate"); return j.type = "checkbox", j.tabindex = j.tabindex || "0", i.attr("role", j.type), i.on("click", function (a) { this.hasAttribute("disabled") && a.stopImmediatePropagation() }), k.on("focus", function () { i.focus() }), function (j, k, m, n) { function p(a, b, c) { m[a] && j.$watch(m[a], function (a) { c[a] && k.attr(b, c[a]) }) } function q(a) { var b = a.which || a.keyCode; b !== d.KEY_CODE.SPACE && b !== d.KEY_CODE.ENTER || (a.preventDefault(), k.hasClass("md-focused") || k.addClass("md-focused"), r(a)) } function r(a) { k[0].hasAttribute("disabled") || j.$apply(function () { var b = m.ngChecked ? m.checked : !n.$viewValue; n.$setViewValue(b, a && a.type), n.$render() }) } function s() { n.$viewValue && !o ? k.addClass(h) : k.removeClass(h) } function t(a) { o = a !== !1, o && k.attr("aria-checked", "mixed"), k.toggleClass("md-indeterminate", o) } var o; n = n || f.fakeNgModel(), e(k), l && (t(), j.$watch(m.mdIndeterminate, t)), m.ngChecked && j.$watch(j.$eval.bind(j, m.ngChecked), n.$setViewValue.bind(n)), p("ngDisabled", "tabindex", { true: "-1", false: m.tabindex }), c.expectWithText(k, "aria-label"), a.link.pre(j, { on: b.noop, 0: {} }, m, [n]), j.mouseActive = !1, k.on("click", r).on("keypress", q).on("mousedown", function () { j.mouseActive = !0, g(function () { j.mouseActive = !1 }, 100) }).on("focus", function () { j.mouseActive === !1 && k.addClass("md-focused") }).on("blur", function () { k.removeClass("md-focused") }), n.$render = s } } a = a[0]; var h = "md-checked"; return { restrict: "E", transclude: !0, require: "?ngModel", priority: 210, template: '<div class="_md-container" md-ink-ripple md-ink-ripple-checkbox><div class="_md-icon"></div></div><div ng-transclude class="_md-label"></div>', compile: i } } b.module("material.components.checkbox", ["material.core"]).directive("mdCheckbox", a), a.$inject = ["inputDirective", "$mdAria", "$mdConstant", "$mdTheming", "$mdUtil", "$timeout"] }(), function () { b.module("material.components.chips", ["material.core", "material.components.autocomplete"]) }(), function () { function a(a) { function b(a, b) { this.$scope = a, this.$element = b } return { restrict: "E", controller: ["$scope", "$element", b], link: function (b, d, e) { d[0]; a(d), b.$broadcast("$mdContentLoaded", d), c(d[0]) } } } function c(a) { b.element(a).on("$md.pressdown", function (b) { "t" === b.pointer.type && (b.$materialScrollFixed || (b.$materialScrollFixed = !0, 0 === a.scrollTop ? a.scrollTop = 1 : a.scrollHeight === a.scrollTop + a.offsetHeight && (a.scrollTop -= 1))) }) } b.module("material.components.content", ["material.core"]).directive("mdContent", a), a.$inject = ["$mdTheming"] }(), function () { !function () { function d() { return { template: '<table aria-hidden="true" class="md-calendar-day-header"><thead></thead></table><div class="md-calendar-scroll-mask"><md-virtual-repeat-container class="md-calendar-scroll-container" md-offset-size="' + (c - a) + '"><table role="grid" tabindex="0" class="md-calendar" aria-readonly="true"><tbody role="rowgroup" md-virtual-repeat="i in ctrl.items" md-calendar-month md-month-offset="$index" class="md-calendar-month" md-start-index="ctrl.getSelectedMonthIndex()" md-item-size="' + a + '"></tbody></table></md-virtual-repeat-container></div>', scope: { minDate: "=mdMinDate", maxDate: "=mdMaxDate", dateFilter: "=mdDateFilter" }, require: ["ngModel", "mdCalendar"], controller: i, controllerAs: "ctrl", bindToController: !0, link: function (a, b, c, d) { var e = d[0], f = d[1]; f.configureNgModel(e) } } } function i(a, b, c, d, e, f, h, i, j, k, l) { if (h(a), this.items = { length: 2e3 }, this.maxDate && this.minDate) { var m = i.getMonthDistance(this.minDate, this.maxDate) + 1; m = Math.max(m, 1), m += 1, this.items.length = m } if (this.$animate = d, this.$q = e, this.$mdInkRipple = k, this.$mdUtil = l, this.keyCode = f.KEY_CODE, this.dateUtil = i, this.dateLocale = j, this.$element = a, this.$scope = c, this.calendarElement = a[0].querySelector(".md-calendar"), this.calendarScroller = a[0].querySelector(".md-virtual-repeat-scroller"), this.today = this.dateUtil.createDateAtMidnight(), this.firstRenderableDate = this.dateUtil.incrementMonths(this.today, -this.items.length / 2), this.minDate && this.minDate > this.firstRenderableDate) this.firstRenderableDate = this.minDate; else if (this.maxDate) { this.items.length - 2; this.firstRenderableDate = this.dateUtil.incrementMonths(this.maxDate, -(this.items.length - 2)) } this.id = g++ , this.ngModelCtrl = null, this.selectedDate = null, this.displayDate = null, this.focusDate = null, this.isInitialized = !1, this.isMonthTransitionInProgress = !1, b.tabindex || a.attr("tabindex", "-1"); var o = this; this.cellClickHandler = function () { var a = this; this.hasAttribute("data-timestamp") && c.$apply(function () { var b = Number(a.getAttribute("data-timestamp")); o.setNgModelValue(o.dateUtil.createDateAtMidnight(b)) }) }, this.attachCalendarEventListeners() } b.module("material.components.datepicker", ["material.core", "material.components.icon", "material.components.virtualRepeat"]).directive("mdCalendar", d); var a = 265, c = 45, e = "md-calendar-selected-date", f = "md-focus", g = 0; i.$inject = ["$element", "$attrs", "$scope", "$animate", "$q", "$mdConstant", "$mdTheming", "$$mdDateUtil", "$mdDateLocale", "$mdInkRipple", "$mdUtil"], i.prototype.configureNgModel = function (a) { this.ngModelCtrl = a; var b = this; a.$render = function () { b.changeSelectedDate(b.ngModelCtrl.$viewValue) } }, i.prototype.buildInitialCalendarDisplay = function () { this.buildWeekHeader(), this.hideVerticalScrollbar(), this.displayDate = this.selectedDate || this.today, this.isInitialized = !0 }, i.prototype.hideVerticalScrollbar = function () { var a = this.$element[0], b = a.querySelector(".md-calendar-scroll-mask"), c = this.calendarScroller, d = a.querySelector(".md-calendar-day-header").clientWidth, e = c.offsetWidth - c.clientWidth; b.style.width = d + "px", c.style.width = d + e + "px", c.style.paddingRight = e + "px" }, i.prototype.attachCalendarEventListeners = function () { this.$element.on("keydown", b.bind(this, this.handleKeyEvent)) }, i.prototype.handleKeyEvent = function (a) { var b = this; this.$scope.$apply(function () { if (a.which == b.keyCode.ESCAPE || a.which == b.keyCode.TAB) return b.$scope.$emit("md-calendar-close"), void (a.which == b.keyCode.TAB && a.preventDefault()); if (a.which === b.keyCode.ENTER) return b.setNgModelValue(b.displayDate), void a.preventDefault(); var c = b.getFocusDateFromKeyEvent(a); c && (c = b.boundDateByMinAndMax(c), a.preventDefault(), a.stopPropagation(), b.changeDisplayDate(c).then(function () { b.focus(c) })) }) }, i.prototype.getFocusDateFromKeyEvent = function (a) { var b = this.dateUtil, c = this.keyCode; switch (a.which) { case c.RIGHT_ARROW: return b.incrementDays(this.displayDate, 1); case c.LEFT_ARROW: return b.incrementDays(this.displayDate, -1); case c.DOWN_ARROW: return a.metaKey ? b.incrementMonths(this.displayDate, 1) : b.incrementDays(this.displayDate, 7); case c.UP_ARROW: return a.metaKey ? b.incrementMonths(this.displayDate, -1) : b.incrementDays(this.displayDate, -7); case c.PAGE_DOWN: return b.incrementMonths(this.displayDate, 1); case c.PAGE_UP: return b.incrementMonths(this.displayDate, -1); case c.HOME: return b.getFirstDateOfMonth(this.displayDate); case c.END: return b.getLastDateOfMonth(this.displayDate); default: return null } }, i.prototype.getSelectedMonthIndex = function () { return this.dateUtil.getMonthDistance(this.firstRenderableDate, this.selectedDate || this.today) }, i.prototype.scrollToMonth = function (b) { if (this.dateUtil.isValidDate(b)) { var c = this.dateUtil.getMonthDistance(this.firstRenderableDate, b); this.calendarScroller.scrollTop = c * a } }, i.prototype.setNgModelValue = function (a) { this.$scope.$emit("md-calendar-change", a), this.ngModelCtrl.$setViewValue(a), this.ngModelCtrl.$render() }, i.prototype.focus = function (a) { var b = a || this.selectedDate || this.today, c = this.calendarElement.querySelector(".md-focus"); c && c.classList.remove(f); var d = this.getDateId(b), e = document.getElementById(d); e ? (e.classList.add(f), e.focus()) : this.focusDate = b }, i.prototype.boundDateByMinAndMax = function (a) { var b = a; return this.minDate && a < this.minDate && (b = new Date(this.minDate.getTime())), this.maxDate && a > this.maxDate && (b = new Date(this.maxDate.getTime())), b }, i.prototype.changeSelectedDate = function (a) { var b = this, c = this.selectedDate; this.selectedDate = a, this.changeDisplayDate(a).then(function () { if (c) { var d = document.getElementById(b.getDateId(c)); d && (d.classList.remove(e), d.setAttribute("aria-selected", "false")) } if (a) { var f = document.getElementById(b.getDateId(a)); f && (f.classList.add(e), f.setAttribute("aria-selected", "true")) } }) }, i.prototype.changeDisplayDate = function (a) { if (!this.isInitialized) return this.buildInitialCalendarDisplay(), this.$q.when(); if (!this.dateUtil.isValidDate(a) || this.isMonthTransitionInProgress) return this.$q.when(); this.isMonthTransitionInProgress = !0; var b = this.animateDateChange(a); this.displayDate = a; var c = this; return b.then(function () { c.isMonthTransitionInProgress = !1 }), b }, i.prototype.animateDateChange = function (a) { return this.scrollToMonth(a), this.$q.when() }, i.prototype.buildWeekHeader = function () { for (var a = this.dateLocale.firstDayOfWeek, b = this.dateLocale.shortDays, c = document.createElement("tr"), d = 0; d < 7; d++) { var e = document.createElement("th"); e.textContent = b[(d + a) % 7], c.appendChild(e) } this.$element.find("thead").append(c) }, i.prototype.getDateId = function (a) { return ["md", this.id, a.getFullYear(), a.getMonth(), a.getDate()].join("-") } }() }(), function () { !function () { function a() { return { require: ["^^mdCalendar", "mdCalendarMonth"], scope: { offset: "=mdMonthOffset" }, controller: f, controllerAs: "mdMonthCtrl", bindToController: !0, link: function (a, b, c, d) { var e = d[0], f = d[1]; f.calendarCtrl = e, f.generateContent(), a.$watch(function () { return f.offset }, function (a, b) { a != b && f.generateContent() }) } } } function f(a, b, c) { this.dateUtil = b, this.dateLocale = c, this.$element = a, this.calendarCtrl = null, this.offset, this.focusAfterAppend = null } b.module("material.components.datepicker").directive("mdCalendarMonth", a); var c = "md-calendar-date-today", d = "md-calendar-selected-date", e = "md-focus"; f.$inject = ["$element", "$$mdDateUtil", "$mdDateLocale"], f.prototype.generateContent = function () { var a = this.calendarCtrl, b = this.dateUtil.incrementMonths(a.firstRenderableDate, this.offset); this.$element.empty(), this.$element.append(this.buildCalendarForMonth(b)), this.focusAfterAppend && (this.focusAfterAppend.classList.add(e), this.focusAfterAppend.focus(), this.focusAfterAppend = null) }, f.prototype.buildDateCell = function (a) { var b = this.calendarCtrl, e = document.createElement("td"); if (e.tabIndex = -1, e.classList.add("md-calendar-date"), e.setAttribute("role", "gridcell"), a) { e.setAttribute("tabindex", "-1"), e.setAttribute("aria-label", this.dateLocale.longDateFormatter(a)), e.id = b.getDateId(a), e.setAttribute("data-timestamp", a.getTime()), this.dateUtil.isSameDay(a, b.today) && e.classList.add(c), this.dateUtil.isValidDate(b.selectedDate) && this.dateUtil.isSameDay(a, b.selectedDate) && (e.classList.add(d), e.setAttribute("aria-selected", "true")); var f = this.dateLocale.dates[a.getDate()]; if (this.isDateEnabled(a)) { var g = document.createElement("span"); e.appendChild(g), g.classList.add("md-calendar-date-selection-indicator"), g.textContent = f, e.addEventListener("click", b.cellClickHandler), b.focusDate && this.dateUtil.isSameDay(a, b.focusDate) && (this.focusAfterAppend = e) } else e.classList.add("md-calendar-date-disabled"), e.textContent = f } return e }, f.prototype.isDateEnabled = function (a) { return this.dateUtil.isDateWithinRange(a, this.calendarCtrl.minDate, this.calendarCtrl.maxDate) && (!b.isFunction(this.calendarCtrl.dateFilter) || this.calendarCtrl.dateFilter(a)) }, f.prototype.buildDateRow = function (a) { var b = document.createElement("tr"); return b.setAttribute("role", "row"), b.setAttribute("aria-label", this.dateLocale.weekNumberFormatter(a)), b }, f.prototype.buildCalendarForMonth = function (a) { var b = this.dateUtil.isValidDate(a) ? a : new Date, c = this.dateUtil.getFirstDateOfMonth(b), d = this.getLocaleDay_(c), e = this.dateUtil.getNumberOfDaysInMonth(b), f = document.createDocumentFragment(), g = 1, h = this.buildDateRow(g); f.appendChild(h); var i = this.offset === this.calendarCtrl.items.length - 1, j = 0, k = document.createElement("td"); if (k.classList.add("md-calendar-month-label"), this.calendarCtrl.maxDate && c > this.calendarCtrl.maxDate && k.classList.add("md-calendar-month-label-disabled"), k.textContent = this.dateLocale.monthHeaderFormatter(b), d <= 2) { k.setAttribute("colspan", "7"); var l = this.buildDateRow(); if (l.appendChild(k), f.insertBefore(l, h), i) return f } else j = 2, k.setAttribute("colspan", "2"), h.appendChild(k); for (var m = j; m < d; m++)h.appendChild(this.buildDateCell()); for (var n = d, o = c, p = 1; p <= e; p++) { if (7 === n) { if (i) return f; n = 0, g++ , h = this.buildDateRow(g), f.appendChild(h) } o.setDate(p); var q = this.buildDateCell(o); h.appendChild(q), n++ } for (; h.childNodes.length < 7;)h.appendChild(this.buildDateCell()); for (; f.childNodes.length < 6;) { for (var r = this.buildDateRow(), m = 0; m < 7; m++)r.appendChild(this.buildDateCell()); f.appendChild(r) } return f }, f.prototype.getLocaleDay_ = function (a) { return (a.getDay() + (7 - this.dateLocale.firstDayOfWeek)) % 7 } }() }(), function () { !function () { b.module("material.components.datepicker").config(["$provide", function (a) { function b() { this.months = null, this.shortMonths = null, this.days = null, this.shortDays = null, this.dates = null, this.firstDayOfWeek = 0, this.formatDate = null, this.parseDate = null, this.monthHeaderFormatter = null, this.weekNumberFormatter = null, this.longDateFormatter = null, this.msgCalendar = "", this.msgOpenCalendar = "" } b.prototype.$get = function (a) { function b(a) { if (!a) return ""; var b = a.toLocaleTimeString(), c = a; return 0 != a.getHours() || b.indexOf("11:") === -1 && b.indexOf("23:") === -1 || (c = new Date(a.getFullYear(), a.getMonth(), a.getDate(), 1, 0, 0)), c.toLocaleDateString() } function c(a) { return new Date(a) } function d(a) { a = a.trim(); var b = /^(([a-zA-Z]{3,}|[0-9]{1,4})([ \.,]+|[\/\-])){2}([a-zA-Z]{3,}|[0-9]{1,4})$/; return b.test(a) } function e(a) { return m.shortMonths[a.getMonth()] + " " + a.getFullYear() } function f(a) { return "Week " + a } function g(a) { return [m.days[a.getDay()], m.months[a.getMonth()], m.dates[a.getDate()], a.getFullYear()].join(" ") } for (var h = a.DATETIME_FORMATS.DAY.map(function (a) { return a[0] }), i = Array(32), j = 1; j <= 31; j++)i[j] = j; var k = "Calendar", l = "Open calendar", m = { months: this.months || a.DATETIME_FORMATS.MONTH, shortMonths: this.shortMonths || a.DATETIME_FORMATS.SHORTMONTH, days: this.days || a.DATETIME_FORMATS.DAY, shortDays: this.shortDays || h, dates: this.dates || i, firstDayOfWeek: this.firstDayOfWeek || 0, formatDate: this.formatDate || b, parseDate: this.parseDate || c, isDateComplete: this.isDateComplete || d, monthHeaderFormatter: this.monthHeaderFormatter || e, weekNumberFormatter: this.weekNumberFormatter || f, longDateFormatter: this.longDateFormatter || g, msgCalendar: this.msgCalendar || k, msgOpenCalendar: this.msgOpenCalendar || l }; return m }, b.prototype.$get.$inject = ["$locale"], a.provider("$mdDateLocale", new b) }]) }() }(), function () { !function () { function c() { return { template: '<md-button class="md-datepicker-button md-icon-button" type="button" tabindex="-1" aria-hidden="true" ng-click="ctrl.openCalendarPane($event)"><md-icon class="md-datepicker-calendar-icon" md-svg-icon="md-calendar"></md-icon></md-button><div class="md-datepicker-input-container" ng-class="{\'md-datepicker-focused\': ctrl.isFocused}"><input class="md-datepicker-input" aria-haspopup="true" ng-focus="ctrl.setFocused(true)" ng-blur="ctrl.setFocused(false)"><md-button type="button" md-no-ink class="md-datepicker-triangle-button md-icon-button" ng-click="ctrl.openCalendarPane($event)" aria-label="{{::ctrl.dateLocale.msgOpenCalendar}}"><div class="md-datepicker-expand-triangle"></div></md-button></div><div class="md-datepicker-calendar-pane md-whiteframe-z1"><div class="md-datepicker-input-mask"><div class="md-datepicker-input-mask-opaque"></div></div><div class="md-datepicker-calendar"><md-calendar role="dialog" aria-label="{{::ctrl.dateLocale.msgCalendar}}" md-min-date="ctrl.minDate" md-max-date="ctrl.maxDate"md-date-filter="ctrl.dateFilter"ng-model="ctrl.date" ng-if="ctrl.isCalendarOpen"></md-calendar></div></div>', require: ["ngModel", "mdDatepicker", "?^mdInputContainer"], scope: { minDate: "=mdMinDate", maxDate: "=mdMaxDate", placeholder: "@mdPlaceholder", dateFilter: "=mdDateFilter" }, controller: i, controllerAs: "ctrl", bindToController: !0, link: function (a, b, c, d) { var e = d[0], f = d[1], g = d[2]; if (g) throw Error("md-datepicker should not be placed inside md-input-container."); f.configureNgModel(e) } } } function i(a, c, d, e, f, g, h, i, j, k, l, m) { this.$compile = e, this.$timeout = f, this.$window = g, this.dateLocale = k, this.dateUtil = l, this.$mdConstant = h, this.$mdUtil = j, this.$$rAF = m, this.documentElement = b.element(document.documentElement), this.ngModelCtrl = null, this.inputElement = c[0].querySelector("input"), this.ngInputElement = b.element(this.inputElement), this.inputContainer = c[0].querySelector(".md-datepicker-input-container"), this.calendarPane = c[0].querySelector(".md-datepicker-calendar-pane"), this.calendarButton = c[0].querySelector(".md-datepicker-button"), this.inputMask = c[0].querySelector(".md-datepicker-input-mask-opaque"), this.$element = c, this.$attrs = d, this.$scope = a, this.date = null, this.isFocused = !1, this.isDisabled, this.setDisabled(c[0].disabled || b.isString(d.disabled)), this.isCalendarOpen = !1, this.calendarPaneOpenedFrom = null, this.calendarPane.id = "md-date-pane" + j.nextUid(), i(c), this.bodyClickHandler = b.bind(this, this.handleBodyClick), this.windowResizeHandler = j.debounce(b.bind(this, this.closeCalendarPane), 100), d.tabindex || c.attr("tabindex", "-1"), this.installPropertyInterceptors(), this.attachChangeListeners(), this.attachInteractionListeners(); var n = this; a.$on("$destroy", function () { n.detachCalendarPane() }) } b.module("material.components.datepicker").directive("mdDatepicker", c); var d = 3, e = "md-datepicker-invalid", f = 500, g = 368, h = 360; i.$inject = ["$scope", "$element", "$attrs", "$compile", "$timeout", "$window", "$mdConstant", "$mdTheming", "$mdUtil", "$mdDateLocale", "$$mdDateUtil", "$$rAF"], i.prototype.configureNgModel = function (a) { this.ngModelCtrl = a; var b = this; a.$render = function () { var a = b.ngModelCtrl.$viewValue; if (a && !(a instanceof Date)) throw Error("The ng-model for md-datepicker must be a Date instance. Currently the model is a: " + typeof a); b.date = a, b.inputElement.value = b.dateLocale.formatDate(a), b.resizeInputElement(), b.updateErrorState() } }, i.prototype.attachChangeListeners = function () { var a = this; a.$scope.$on("md-calendar-change", function (b, c) { a.ngModelCtrl.$setViewValue(c), a.date = c, a.inputElement.value = a.dateLocale.formatDate(c), a.closeCalendarPane(), a.resizeInputElement(), a.updateErrorState() }), a.ngInputElement.on("input", b.bind(a, a.resizeInputElement)), a.ngInputElement.on("input", a.$mdUtil.debounce(a.handleInputEvent, f, a)) }, i.prototype.attachInteractionListeners = function () { var a = this, b = this.$scope, c = this.$mdConstant.KEY_CODE; a.ngInputElement.on("keydown", function (d) { d.altKey && d.keyCode == c.DOWN_ARROW && (a.openCalendarPane(d), b.$digest()) }), b.$on("md-calendar-close", function () { a.closeCalendarPane() }) }, i.prototype.installPropertyInterceptors = function () { var a = this; if (this.$attrs.ngDisabled) { var b = this.$scope.$parent; b && b.$watch(this.$attrs.ngDisabled, function (b) { a.setDisabled(b) }) } Object.defineProperty(this, "placeholder", { get: function () { return a.inputElement.placeholder }, set: function (b) { a.inputElement.placeholder = b || "" } }) }, i.prototype.setDisabled = function (a) { this.isDisabled = a, this.inputElement.disabled = a, this.calendarButton.disabled = a }, i.prototype.updateErrorState = function (a) { var c = a || this.date; if (this.clearErrorState(), this.dateUtil.isValidDate(c)) { if (c = this.dateUtil.createDateAtMidnight(c), this.dateUtil.isValidDate(this.minDate)) { var d = this.dateUtil.createDateAtMidnight(this.minDate); this.ngModelCtrl.$setValidity("mindate", c >= d) } if (this.dateUtil.isValidDate(this.maxDate)) { var f = this.dateUtil.createDateAtMidnight(this.maxDate); this.ngModelCtrl.$setValidity("maxdate", c <= f) } b.isFunction(this.dateFilter) && this.ngModelCtrl.$setValidity("filtered", this.dateFilter(c)) } else this.ngModelCtrl.$setValidity("valid", null == c); this.ngModelCtrl.$valid || this.inputContainer.classList.add(e) }, i.prototype.clearErrorState = function () { this.inputContainer.classList.remove(e), ["mindate", "maxdate", "filtered", "valid"].forEach(function (a) { this.ngModelCtrl.$setValidity(a, !0) }, this) }, i.prototype.resizeInputElement = function () { this.inputElement.size = this.inputElement.value.length + d }, i.prototype.handleInputEvent = function () { var a = this.inputElement.value, b = a ? this.dateLocale.parseDate(a) : null; this.dateUtil.setDateTimeToMidnight(b); var c = "" == a || this.dateUtil.isValidDate(b) && this.dateLocale.isDateComplete(a) && this.isDateEnabled(b); c && (this.ngModelCtrl.$setViewValue(b), this.date = b), this.updateErrorState(b) }, i.prototype.isDateEnabled = function (a) { return this.dateUtil.isDateWithinRange(a, this.minDate, this.maxDate) && (!b.isFunction(this.dateFilter) || this.dateFilter(a)) }, i.prototype.attachCalendarPane = function () { var a = this.calendarPane; a.style.transform = "", this.$element.addClass("md-datepicker-open"); var b = this.inputContainer.getBoundingClientRect(), c = document.body.getBoundingClientRect(), d = b.top - c.top, e = b.left - c.left, f = c.top < 0 && 0 == document.body.scrollTop ? -c.top : document.body.scrollTop, i = c.left < 0 && 0 == document.body.scrollLeft ? -c.left : document.body.scrollLeft, j = f + this.$window.innerHeight, k = i + this.$window.innerWidth; if (e + h > k) { if (k - h > 0) e = k - h; else { e = i; var l = this.$window.innerWidth / h; a.style.transform = "scale(" + l + ")" } a.classList.add("md-datepicker-pos-adjusted") } d + g > j && j - g > f && (d = j - g, a.classList.add("md-datepicker-pos-adjusted")), a.style.left = e + "px", a.style.top = d + "px", document.body.appendChild(a), this.inputMask.style.left = b.width + "px", this.$$rAF(function () { a.classList.add("md-pane-open") }) }, i.prototype.detachCalendarPane = function () { this.$element.removeClass("md-datepicker-open"), this.calendarPane.classList.remove("md-pane-open"), this.calendarPane.classList.remove("md-datepicker-pos-adjusted"), this.isCalendarOpen && this.$mdUtil.enableScrolling(), this.calendarPane.parentNode && this.calendarPane.parentNode.removeChild(this.calendarPane) }, i.prototype.openCalendarPane = function (b) { if (!this.isCalendarOpen && !this.isDisabled) { this.isCalendarOpen = !0, this.calendarPaneOpenedFrom = b.target, this.$mdUtil.disableScrollAround(this.calendarPane), this.attachCalendarPane(), this.focusCalendar(); var c = this; this.$mdUtil.nextTick(function () { c.documentElement.on("click touchstart", c.bodyClickHandler) }, !1), a.addEventListener("resize", this.windowResizeHandler) } }, i.prototype.closeCalendarPane = function () { this.isCalendarOpen && (this.detachCalendarPane(), this.isCalendarOpen = !1, this.calendarPaneOpenedFrom.focus(), this.calendarPaneOpenedFrom = null, this.ngModelCtrl.$setTouched(), this.documentElement.off("click touchstart", this.bodyClickHandler), a.removeEventListener("resize", this.windowResizeHandler)) }, i.prototype.getCalendarCtrl = function () { return b.element(this.calendarPane.querySelector("md-calendar")).controller("mdCalendar") }, i.prototype.focusCalendar = function () { var a = this; this.$mdUtil.nextTick(function () { a.getCalendarCtrl().focus() }, !1) }, i.prototype.setFocused = function (a) { a || this.ngModelCtrl.$setTouched(), this.isFocused = a }, i.prototype.handleBodyClick = function (a) { if (this.isCalendarOpen) { var b = this.$mdUtil.getClosest(a.target, "md-calendar"); b || this.closeCalendarPane(), this.$scope.$digest() } } }() }(), function () { !function () { b.module("material.components.datepicker").factory("$$mdDateUtil", function () { function a(a) { return new Date(a.getFullYear(), a.getMonth(), 1) } function c(a) { return new Date(a.getFullYear(), a.getMonth() + 1, 0).getDate() } function d(a) { return new Date(a.getFullYear(), a.getMonth() + 1, 1) } function e(a) { return new Date(a.getFullYear(), a.getMonth() - 1, 1) } function f(a, b) { return a.getFullYear() === b.getFullYear() && a.getMonth() === b.getMonth() } function g(a, b) { return a.getDate() == b.getDate() && f(a, b) } function h(a, b) { var c = d(a); return f(c, b) } function i(a, b) { var c = e(a); return f(b, c) } function j(a, b) { return r((a.getTime() + b.getTime()) / 2) } function k(b) { var c = a(b); return Math.floor((c.getDay() + b.getDate() - 1) / 7) } function l(a, b) { return new Date(a.getFullYear(), a.getMonth(), a.getDate() + b) } function m(a, b) { var d = new Date(a.getFullYear(), a.getMonth() + b, 1), e = c(d); return e < a.getDate() ? d.setDate(e) : d.setDate(a.getDate()), d } function n(a, b) { return 12 * (b.getFullYear() - a.getFullYear()) + (b.getMonth() - a.getMonth()) } function o(a) { return new Date(a.getFullYear(), a.getMonth(), c(a)) } function p(a) { return null != a && a.getTime && !isNaN(a.getTime()) } function q(a) { p(a) && a.setHours(0, 0, 0, 0) } function r(a) { var c; return c = b.isUndefined(a) ? new Date : new Date(a), q(c), c } function s(a, b, c) { var d = r(a), e = p(b) ? r(b) : null, f = p(c) ? r(c) : null; return (!e || e <= d) && (!f || f >= d) } return { getFirstDateOfMonth: a, getNumberOfDaysInMonth: c, getDateInNextMonth: d, getDateInPreviousMonth: e, isInNextMonth: h, isInPreviousMonth: i, getDateMidpoint: j, isSameMonthAndYear: f, getWeekOfMonth: k, incrementDays: l, incrementMonths: m, getLastDateOfMonth: o, isSameDay: g, getMonthDistance: n, isValidDate: p, setDateTimeToMidnight: q, createDateAtMidnight: r, isDateWithinRange: s } }) }() }(), function () {
        function a(a, c, d) { return { restrict: "E", link: function (e, f, g) { c(f), a(function () { function g() { f.toggleClass("md-content-overflow", c.scrollHeight > c.clientHeight) } var a, c = f[0].querySelector("md-dialog-content"); c && (a = c.getElementsByTagName("img"), g(), b.element(a).on("load", g)), e.$on("$destroy", function () { d.destroy(f) }) }) } } } function d(a) {
            function f(a, b, c) { return { template: ['<md-dialog md-theme="{{ dialog.theme }}" aria-label="{{ dialog.ariaLabel }}" ng-class="dialog.css">', '  <md-dialog-content class="md-dialog-content" role="document" tabIndex="-1">', '    <h2 class="md-title">{{ dialog.title }}</h2>', '    <div ng-if="::dialog.mdHtmlContent" class="_md-dialog-content-body" ', '        ng-bind-html="::dialog.mdHtmlContent"></div>', '    <div ng-if="::!dialog.mdHtmlContent" class="_md-dialog-content-body">', "      <p>{{::dialog.mdTextContent}}</p>", "    </div>", '    <md-input-container md-no-float ng-if="::dialog.$type == \'prompt\'" class="md-prompt-input-container">', '      <input ng-keypress="dialog.keypress($event)" md-autofocus ng-model="dialog.result" placeholder="{{::dialog.placeholder}}">', "    </md-input-container>", "  </md-dialog-content>", "  <md-dialog-actions>", '    <md-button ng-if="dialog.$type === \'confirm\' || dialog.$type === \'prompt\'"               ng-click="dialog.abort()" class="md-primary">', "      {{ dialog.cancel }}", "    </md-button>", '    <md-button ng-click="dialog.hide()" class="md-primary" md-autofocus="dialog.$type===\'alert\'">', "      {{ dialog.ok }}", "    </md-button>", "  </md-dialog-actions>", "</md-dialog>"].join("").replace(/\s\s+/g, ""), controller: function () { this.hide = function () { a.hide("prompt" !== this.$type || this.result) }, this.abort = function () { a.cancel() }, this.keypress = function (b) { b.keyCode === c.KEY_CODE.ENTER && a.hide(this.result) } }, controllerAs: "dialog", bindToController: !0, theme: b.defaultTheme() } } function g(a, f, g, h, i, j, k, l, m, n) { function o(a, b, c, d) { if (d) { if (d.mdHtmlContent = d.htmlContent || c.htmlContent || "", d.mdTextContent = d.textContent || c.textContent || d.content || c.content || "", d.mdHtmlContent && !n.has("$sanitize")) throw Error("The ngSanitize module must be loaded in order to use htmlContent."); if (d.mdHtmlContent && d.mdTextContent) throw Error("md-dialog cannot have both `htmlContent` and `textContent`") } } function p(a, c, d, e) { function f() { var a = c[0].querySelectorAll(".md-actions"); a.length > 0 && m.warn("Using a class of md-actions is deprecated, please use <md-dialog-actions>.") } function h() { function e() { var a = c[0].querySelector(".dialog-close"); if (!a) { var d = c[0].querySelectorAll(".md-actions button, md-dialog-actions button"); a = d[d.length - 1] } return b.element(a) } if (d.focusOnOpen) { var a = g.findFocusTarget(c) || e(); a.focus() } } return b.element(j[0].body).addClass("md-dialog-is-showing"), r(d), u(c.find("md-dialog"), d), t(a, c, d), x(c, d).then(function () { s(c, d), v(c, d), f(), h() }) } function q(a, c, f) { function g() { return y(c, f) } function h() { b.element(j[0].body).removeClass("md-dialog-is-showing"), c.remove(), f.$destroy || f.origin.focus() } return f.deactivateListeners(), f.unlockScreenReader(), f.hideBackdrop(f.$destroy), d && d.parentNode && d.parentNode.removeChild(d), e && e.parentNode && e.parentNode.removeChild(e), f.$destroy ? h() : g().then(h) } function r(a) { function d(a, d) { var e = b.element(a || {}); if (e && e.length) { var f = { top: 0, left: 0, height: 0, width: 0 }, g = b.isFunction(e[0].getBoundingClientRect); return b.extend(d || {}, { element: g ? e : c, bounds: g ? e[0].getBoundingClientRect() : b.extend({}, f, e[0]), focus: b.bind(e, e.focus) }) } } function e(a, c) { if (b.isString(a)) { var d = a, e = j[0].querySelectorAll(d); a = e.length ? e[0] : null } return b.element(a || c) } a.origin = b.extend({ element: null, bounds: null, focus: b.noop }, a.origin || {}), a.parent = e(a.parent, l), a.closeTo = d(e(a.closeTo)), a.openFrom = d(e(a.openFrom)), a.targetEvent && (a.origin = d(a.targetEvent.target, a.origin)) } function s(c, d) { var e = b.element(k), f = g.debounce(function () { w(c, d) }, 60), i = [], j = function () { var b = "alert" == d.$type ? a.hide : a.cancel; g.nextTick(b, !0) }; if (d.escapeToClose) { var l = d.parent, m = function (a) { a.keyCode === h.KEY_CODE.ESCAPE && (a.stopPropagation(), a.preventDefault(), j()) }; c.on("keydown", m), l.on("keydown", m), i.push(function () { c.off("keydown", m), l.off("keydown", m) }) } if (e.on("resize", f), i.push(function () { e.off("resize", f) }), d.clickOutsideToClose) { var o, n = c, p = function (a) { o = a.target }, q = function (a) { o === n[0] && a.target === n[0] && (a.stopPropagation(), a.preventDefault(), j()) }; n.on("mousedown", p), n.on("mouseup", q), i.push(function () { n.off("mousedown", p), n.off("mouseup", q) }) } d.deactivateListeners = function () { i.forEach(function (a) { a() }), d.deactivateListeners = null } } function t(a, b, c) { c.disableParentScroll && (c.restoreScroll = g.disableScrollAround(b, c.parent)), c.hasBackdrop && (c.backdrop = g.createBackdrop(a, "_md-dialog-backdrop md-opaque"), i.enter(c.backdrop, c.parent)), c.hideBackdrop = function (b) { c.backdrop && (b ? c.backdrop.remove() : i.leave(c.backdrop)), c.disableParentScroll && (c.restoreScroll(), delete c.restoreScroll), c.hideBackdrop = null } } function u(a, b) { var c = "alert" === b.$type ? "alertdialog" : "dialog", h = a.find("md-dialog-content"), i = "dialogContent_" + (a.attr("id") || g.nextUid()); a.attr({ role: c, tabIndex: "-1" }), 0 === h.length && (h = a), h.attr("id", i), a.attr("aria-describedby", i), b.ariaLabel ? f.expect(a, "aria-label", b.ariaLabel) : f.expectAsync(a, "aria-label", function () { var a = h.text().split(/\s+/); return a.length > 3 && (a = a.slice(0, 3).concat("...")), a.join(" ") }), d = document.createElement("div"), d.classList.add("_md-dialog-focus-trap"), d.tabIndex = 0, e = d.cloneNode(!1); var j = function () { a.focus() }; d.addEventListener("focus", j), e.addEventListener("focus", j), a[0].parentNode.insertBefore(d, a[0]), a.after(e) } function v(a, b) { function d(a) { for (; a.parentNode;) { if (a === document.body) return; for (var b = a.parentNode.children, e = 0; e < b.length; e++)a === b[e] || z(b[e], ["SCRIPT", "STYLE"]) || b[e].setAttribute("aria-hidden", c); d(a = a.parentNode) } } var c = !0; d(a[0]), b.unlockScreenReader = function () { c = !1, d(a[0]), b.unlockScreenReader = null } } function w(a, b) { var c = "fixed" == k.getComputedStyle(j[0].body).position, d = b.backdrop ? k.getComputedStyle(b.backdrop[0]) : null, e = d ? Math.min(j[0].body.clientHeight, Math.ceil(Math.abs(parseInt(d.height, 10)))) : 0; return a.css({ top: (c ? g.scrollTop(b.parent) : 0) + "px", height: e ? e + "px" : "100%" }), a } function x(a, b) { b.parent.append(a), w(a, b); var c = a.find("md-dialog"), d = g.dom.animator, e = d.calculateZoomToOrigin, f = { transitionInClass: "_md-transition-in", transitionOutClass: "_md-transition-out" }, h = d.toTransformCss(e(c, b.openFrom || b.origin)), i = d.toTransformCss(""); return b.fullscreen && c.addClass("md-dialog-fullscreen"), d.translate3d(c, h, i, f).then(function (a) { return b.reverseAnimate = function () { return delete b.reverseAnimate, b.closeTo ? (f = { transitionInClass: "_md-transition-out", transitionOutClass: "_md-transition-in" }, h = i, i = d.toTransformCss(e(c, b.closeTo)), d.translate3d(c, h, i, f)) : a(d.toTransformCss(e(c, b.origin))) }, !0 }) } function y(a, b) { return b.reverseAnimate() } function z(a, b) { if (b.indexOf(a.nodeName) !== -1) return !0 } return { hasBackdrop: !0, isolateScope: !0, onShow: p, onShowing: o, onRemove: q, clickOutsideToClose: !1, escapeToClose: !0, targetEvent: null, closeTo: null, openFrom: null, focusOnOpen: !0, disableParentScroll: !0, autoWrap: !0, fullscreen: !1, transformTemplate: function (a, b) { function c(a) { return b.autoWrap && !/<\/md-dialog>/g.test(a) ? "<md-dialog>" + (a || "") + "</md-dialog>" : a || "" } return '<div class="md-dialog-container" tabindex="-1">' + c(a) + "</div>" } } } var d, e; return f.$inject = ["$mdDialog", "$mdTheming", "$mdConstant"], g.$inject = ["$mdDialog", "$mdAria", "$mdUtil", "$mdConstant", "$animate", "$document", "$window", "$rootElement", "$log", "$injector"], a("$mdDialog").setDefaults({
                methods: ["disableParentScroll", "hasBackdrop", "clickOutsideToClose", "escapeToClose", "targetEvent", "closeTo", "openFrom", "parent", "fullscreen"],
                options: g
            }).addPreset("alert", { methods: ["title", "htmlContent", "textContent", "content", "ariaLabel", "ok", "theme", "css"], options: f }).addPreset("confirm", { methods: ["title", "htmlContent", "textContent", "content", "ariaLabel", "ok", "cancel", "theme", "css"], options: f }).addPreset("prompt", { methods: ["title", "htmlContent", "textContent", "content", "placeholder", "ariaLabel", "ok", "cancel", "theme", "css"], options: f })
        } b.module("material.components.dialog", ["material.core", "material.components.backdrop"]).directive("mdDialog", a).provider("$mdDialog", d), a.$inject = ["$$rAF", "$mdTheming", "$mdDialog"], d.$inject = ["$$interimElementProvider"]
    }(), function () { function a(a) { return { restrict: "E", link: a } } b.module("material.components.divider", ["material.core"]).directive("mdDivider", a), a.$inject = ["$mdTheming"] }(), function () { !function () { function a() { return { restrict: "E", require: ["^?mdFabSpeedDial", "^?mdFabToolbar"], compile: function (a, c) { var d = a.children(), e = !1; b.forEach(["", "data-", "x-"], function (a) { e = e || !!d.attr(a + "ng-repeat") }), e ? d.addClass("md-fab-action-item") : d.wrap('<div class="md-fab-action-item">') } } } b.module("material.components.fabActions", ["material.core"]).directive("mdFabActions", a) }() }(), function () { !function () { function a(a, c, d, e, f, g) { function j() { h.direction = h.direction || "down", h.isOpen = h.isOpen || !1, n(), c.addClass("_md-animations-waiting") } function k() { var d = ["click", "focusin", "focusout"]; b.forEach(d, function (a) { c.on(a, m) }), a.$on("$destroy", function () { b.forEach(d, function (a) { c.off(a, m) }), r() }) } function m(a) { "click" == a.type && E(a), "focusout" != a.type || l || (l = g(function () { h.close() }, 100, !1)), "focusin" == a.type && l && (g.cancel(l), l = null) } function n() { h.currentActionIndex = -1 } function o() { a.$watch("vm.direction", function (a, b) { d.removeClass(c, "md-" + b), d.addClass(c, "md-" + a), n() }); var b, e; a.$watch("vm.isOpen", function (a) { n(), b && e || (b = F(), e = G()), a ? q() : r(); var f = a ? "md-is-open" : "", g = a ? "" : "md-is-open"; b.attr("aria-haspopup", !0), b.attr("aria-expanded", a), e.attr("aria-hidden", !a), d.setClass(c, f, g) }) } function p() { c[0].scrollHeight > 0 ? d.addClass(c, "_md-animations-ready").then(function () { c.removeClass("_md-animations-waiting") }) : i < 10 && (g(p, 100), i += 1) } function q() { c.on("keydown", t), e.nextTick(function () { b.element(document).on("click touchend", s) }) } function r() { c.off("keydown", t), b.element(document).off("click touchend", s) } function s(a) { if (a.target) { var b = e.getClosest(a.target, "md-fab-trigger"), c = e.getClosest(a.target, "md-fab-actions"); b || c || h.close() } } function t(a) { switch (a.which) { case f.KEY_CODE.ESCAPE: return h.close(), a.preventDefault(), !1; case f.KEY_CODE.LEFT_ARROW: return y(a), !1; case f.KEY_CODE.UP_ARROW: return z(a), !1; case f.KEY_CODE.RIGHT_ARROW: return A(a), !1; case f.KEY_CODE.DOWN_ARROW: return B(a), !1 } } function u(a) { w(a, -1) } function v(a) { w(a, 1) } function w(a, c) { var d = x(); h.currentActionIndex = h.currentActionIndex + c, h.currentActionIndex = Math.min(d.length - 1, h.currentActionIndex), h.currentActionIndex = Math.max(0, h.currentActionIndex); var e = b.element(d[h.currentActionIndex]).children()[0]; b.element(e).attr("tabindex", 0), e.focus(), a.preventDefault(), a.stopImmediatePropagation() } function x() { var a = G()[0].querySelectorAll(".md-fab-action-item"); return b.forEach(a, function (a) { b.element(b.element(a).children()[0]).attr("tabindex", -1) }), a } function y(a) { "left" === h.direction ? v(a) : u(a) } function z(a) { "down" === h.direction ? u(a) : v(a) } function A(a) { "left" === h.direction ? u(a) : v(a) } function B(a) { "up" === h.direction ? u(a) : v(a) } function C(a) { return e.getClosest(a, "md-fab-trigger") } function D(a) { return e.getClosest(a, "md-fab-actions") } function E(a) { C(a.target) && h.toggle(), D(a.target) && h.close() } function F() { return c.find("md-fab-trigger") } function G() { return c.find("md-fab-actions") } var h = this; h.open = function () { a.$evalAsync("vm.isOpen = true") }, h.close = function () { a.$evalAsync("vm.isOpen = false"), c.find("md-fab-trigger")[0].focus() }, h.toggle = function () { a.$evalAsync("vm.isOpen = !vm.isOpen") }, j(), k(), o(); var i = 0; p(); var l } b.module("material.components.fabShared", ["material.core"]).controller("MdFabController", a), a.$inject = ["$scope", "$element", "$animate", "$mdUtil", "$mdConstant", "$timeout"] }() }(), function () { !function () { function d() { function a(a, b) { b.prepend('<div class="_md-css-variables"></div>') } return { restrict: "E", scope: { direction: "@?mdDirection", isOpen: "=?mdOpen" }, bindToController: !0, controller: "MdFabController", controllerAs: "vm", link: a } } function e(d) { function e(a) { d(a, c, !1) } function f(c) { if (!c.hasClass("_md-animations-waiting") || c.hasClass("_md-animations-ready")) { var d = c[0], e = c.controller("mdFabSpeedDial"), f = d.querySelectorAll(".md-fab-action-item"), g = d.querySelector("md-fab-trigger"), h = d.querySelector("._md-css-variables"), i = parseInt(a.getComputedStyle(h).zIndex); b.forEach(f, function (a, b) { var c = a.style; c.transform = c.webkitTransform = "", c.transitionDelay = "", c.opacity = 1, c.zIndex = f.length - b + i }), g.style.zIndex = i + f.length + 1, e.isOpen || b.forEach(f, function (a, b) { var c, d, f = a.style, h = (g.clientHeight - a.clientHeight) / 2, i = (g.clientWidth - a.clientWidth) / 2; switch (e.direction) { case "up": c = a.scrollHeight * (b + 1) + h, d = "Y"; break; case "down": c = -(a.scrollHeight * (b + 1) + h), d = "Y"; break; case "left": c = a.scrollWidth * (b + 1) + i, d = "X"; break; case "right": c = -(a.scrollWidth * (b + 1) + i), d = "X" }var j = "translate" + d + "(" + c + "px)"; f.transform = f.webkitTransform = j }) } } return { addClass: function (a, b, c) { a.hasClass("md-fling") ? (f(a), e(c)) : c() }, removeClass: function (a, b, c) { f(a), e(c) } } } function f(d) { function e(a) { d(a, c, !1) } function g(c) { var d = c[0], e = c.controller("mdFabSpeedDial"), g = d.querySelectorAll(".md-fab-action-item"), h = d.querySelector("._md-css-variables"), i = parseInt(a.getComputedStyle(h).zIndex); b.forEach(g, function (a, b) { var c = a.style, d = b * f; c.opacity = e.isOpen ? 1 : 0, c.transform = c.webkitTransform = e.isOpen ? "scale(1)" : "scale(0)", c.transitionDelay = (e.isOpen ? d : g.length - d) + "ms", c.zIndex = g.length - b + i }) } var f = 65; return { addClass: function (a, b, c) { g(a), e(c) }, removeClass: function (a, b, c) { g(a), e(c) } } } var c = 300; b.module("material.components.fabSpeedDial", ["material.core", "material.components.fabShared", "material.components.fabTrigger", "material.components.fabActions"]).directive("mdFabSpeedDial", d).animation(".md-fling", e).animation(".md-scale", f).service("mdFabSpeedDialFlingAnimation", e).service("mdFabSpeedDialScaleAnimation", f), e.$inject = ["$timeout"], f.$inject = ["$timeout"] }() }(), function () { !function () { function c() { function a(a, b, c) { b.addClass("md-fab-toolbar"), b.find("md-fab-trigger").find("button").prepend('<div class="_md-fab-toolbar-background"></div>') } return { restrict: "E", transclude: !0, template: '<div class="_md-fab-toolbar-wrapper">  <div class="_md-fab-toolbar-content" ng-transclude></div></div>', scope: { direction: "@?mdDirection", isOpen: "=?mdOpen" }, bindToController: !0, controller: "MdFabController", controllerAs: "vm", link: a } } function d() { function c(c, d, e) { if (d) { var f = c[0], g = c.controller("mdFabToolbar"), h = f.querySelector("._md-fab-toolbar-background"), i = f.querySelector("md-fab-trigger button"), j = f.querySelector("md-toolbar"), k = f.querySelector("md-fab-trigger button md-icon"), l = c.find("md-fab-actions").children(); if (i && h) { var m = a.getComputedStyle(i).getPropertyValue("background-color"), n = f.offsetWidth, p = (f.offsetHeight, 2 * (n / i.offsetWidth)); h.style.backgroundColor = m, h.style.borderRadius = n + "px", g.isOpen ? (j.style.pointerEvents = "initial", h.style.width = i.offsetWidth + "px", h.style.height = i.offsetHeight + "px", h.style.transform = "scale(" + p + ")", h.style.transitionDelay = "0ms", k && (k.style.transitionDelay = ".3s"), b.forEach(l, function (a, b) { a.style.transitionDelay = 25 * (l.length - b) + "ms" })) : (j.style.pointerEvents = "none", h.style.transform = "scale(1)", h.style.top = "0", c.hasClass("md-right") && (h.style.left = "0", h.style.right = null), c.hasClass("md-left") && (h.style.right = "0", h.style.left = null), h.style.transitionDelay = "200ms", k && (k.style.transitionDelay = "0ms"), b.forEach(l, function (a, b) { a.style.transitionDelay = 200 + 25 * b + "ms" })) } } } return { addClass: function (a, b, d) { c(a, b, d), d() }, removeClass: function (a, b, d) { c(a, b, d), d() } } } b.module("material.components.fabToolbar", ["material.core", "material.components.fabShared", "material.components.fabTrigger", "material.components.fabActions"]).directive("mdFabToolbar", c).animation(".md-fab-toolbar", d).service("mdFabToolbarAnimation", d) }() }(), function () { function a(a, d, e, f) { function g(c, g, h, i) { function l() { for (var a in d.MEDIA) f(a), f.getQuery(d.MEDIA[a]).addListener(j); return f.watchResponsiveAttributes(["md-cols", "md-row-height", "md-gutter"], h, n) } function m() { i.layoutDelegate = b.noop, k(); for (var a in d.MEDIA) f.getQuery(d.MEDIA[a]).removeListener(j) } function n(a) { null == a ? i.invalidateLayout() : f(a) && i.invalidateLayout() } function p(a) { var d = y(), f = { tileSpans: z(d), colCount: A(), rowMode: D(), rowHeight: C(), gutter: B() }; if (a || !b.equals(f, o)) { var h = e(f.colCount, f.tileSpans, d).map(function (a, c) { return { grid: { element: g, style: x(f.colCount, c, f.gutter, f.rowMode, f.rowHeight) }, tiles: a.map(function (a, e) { return { element: b.element(d[e]), style: w(a.position, a.spans, f.colCount, c, f.gutter, f.rowMode, f.rowHeight) } }) } }).reflow().performance(); c.mdOnLayout({ $event: { performance: h } }), o = f } } function s(a) { return q + a + r } function w(a, b, c, d, e, f, g) { var h = 1 / c * 100, i = (c - 1) / c, j = t({ share: h, gutterShare: i, gutter: e }), k = { left: u({ unit: j, offset: a.col, gutter: e }), width: v({ unit: j, span: b.col, gutter: e }), paddingTop: "", marginTop: "", top: "", height: "" }; switch (f) { case "fixed": k.top = u({ unit: g, offset: a.row, gutter: e }), k.height = v({ unit: g, span: b.row, gutter: e }); break; case "ratio": var l = h / g, m = t({ share: l, gutterShare: i, gutter: e }); k.paddingTop = v({ unit: m, span: b.row, gutter: e }), k.marginTop = u({ unit: m, offset: a.row, gutter: e }); break; case "fit": var n = (d - 1) / d, l = 1 / d * 100, m = t({ share: l, gutterShare: n, gutter: e }); k.top = u({ unit: m, offset: a.row, gutter: e }), k.height = v({ unit: m, span: b.row, gutter: e }) }return k } function x(a, b, c, d, e) { var f = {}; switch (d) { case "fixed": f.height = v({ unit: e, span: b, gutter: c }), f.paddingBottom = ""; break; case "ratio": var g = 1 === a ? 0 : (a - 1) / a, h = 1 / a * 100, i = h * (1 / e), j = t({ share: i, gutterShare: g, gutter: c }); f.height = "", f.paddingBottom = v({ unit: j, span: b, gutter: c }); break; case "fit": }return f } function y() { return [].filter.call(g.children(), function (a) { return "MD-GRID-TILE" == a.tagName && !a.$$mdDestroyed }) } function z(a) { return [].map.call(a, function (a) { var c = b.element(a).controller("mdGridTile"); return { row: parseInt(f.getResponsiveAttribute(c.$attrs, "md-rowspan"), 10) || 1, col: parseInt(f.getResponsiveAttribute(c.$attrs, "md-colspan"), 10) || 1 } }) } function A() { var a = parseInt(f.getResponsiveAttribute(h, "md-cols"), 10); if (isNaN(a)) throw "md-grid-list: md-cols attribute was not found, or contained a non-numeric value"; return a } function B() { return E(f.getResponsiveAttribute(h, "md-gutter") || 1) } function C() { var a = f.getResponsiveAttribute(h, "md-row-height"); if (!a) throw "md-grid-list: md-row-height attribute was not found"; switch (D()) { case "fixed": return E(a); case "ratio": var b = a.split(":"); return parseFloat(b[0]) / parseFloat(b[1]); case "fit": return 0 } } function D() { var a = f.getResponsiveAttribute(h, "md-row-height"); if (!a) throw "md-grid-list: md-row-height attribute was not found"; return "fit" == a ? "fit" : a.indexOf(":") !== -1 ? "ratio" : "fixed" } function E(a) { return /\D$/.test(a) ? a : a + "px" } g.attr("role", "list"), i.layoutDelegate = p; var j = b.bind(i, i.invalidateLayout), k = l(); c.$on("$destroy", m); var o, q = a.startSymbol(), r = a.endSymbol(), t = a(s("share") + "% - (" + s("gutter") + " * " + s("gutterShare") + ")"), u = a("calc((" + s("unit") + " + " + s("gutter") + ") * " + s("offset") + ")"), v = a("calc((" + s("unit") + ") * " + s("span") + " + (" + s("span") + " - 1) * " + s("gutter") + ")") } return { restrict: "E", controller: c, scope: { mdOnLayout: "&" }, link: g } } function c(a) { this.layoutInvalidated = !1, this.tilesInvalidated = !1, this.$timeout_ = a.nextTick, this.layoutDelegate = b.noop } function d(a) { function d(b, d) { var e, g, h, i, j, k; return i = a.time(function () { g = f(b, d) }), e = { layoutInfo: function () { return g }, map: function (b) { return j = a.time(function () { var a = e.layoutInfo(); h = b(a.positioning, a.rowCount) }), e }, reflow: function (b) { return k = a.time(function () { var a = b || c; a(h.grid, h.tiles) }), e }, performance: function () { return { tileCount: d.length, layoutTime: i, mapTime: j, reflowTime: k, totalTime: i + j + k } } } } function e(a, b) { a.element.css(a.style), b.forEach(function (a) { a.element.css(a.style) }) } function f(a, b) { function f(b, f) { if (b.col > a) throw "md-grid-list: Tile at position " + f + " has a colspan (" + b.col + ") that exceeds the column count (" + a + ")"; for (var j = 0, k = 0; k - j < b.col;)c >= a ? g() : (j = e.indexOf(0, c), j !== -1 && (k = i(j + 1)) !== -1 ? c = k + 1 : (j = k = 0, g())); return h(j, b.col, b.row), c = j + b.col, { col: j, row: d } } function g() { c = 0, d++ , h(0, a, -1) } function h(a, b, c) { for (var d = a; d < a + b; d++)e[d] = Math.max(e[d] + c, 0) } function i(a) { var b; for (b = a; b < e.length; b++)if (0 !== e[b]) return b; if (b === e.length) return b } function j() { for (var b = [], c = 0; c < a; c++)b.push(0); return b } var c = 0, d = 0, e = j(); return { positioning: b.map(function (a, b) { return { spans: a, position: f(a, b) } }), rowCount: d + Math.max.apply(Math, e) } } var c = e; return d.animateWith = function (a) { c = b.isFunction(a) ? a : e }, d } function e(a) { function c(c, d, e, f) { d.attr("role", "listitem"); var g = a.watchResponsiveAttributes(["md-colspan", "md-rowspan"], e, b.bind(f, f.invalidateLayout)); f.invalidateTiles(), c.$on("$destroy", function () { d[0].$$mdDestroyed = !0, g(), f.invalidateLayout() }), b.isDefined(c.$parent.$index) && c.$watch(function () { return c.$parent.$index }, function (b, c) { b !== c && f.invalidateTiles() }) } return { restrict: "E", require: "^mdGridList", template: "<figure ng-transclude></figure>", transclude: !0, scope: {}, controller: ["$attrs", function (a) { this.$attrs = a }], link: c } } function f() { return { template: "<figcaption ng-transclude></figcaption>", transclude: !0 } } b.module("material.components.gridList", ["material.core"]).directive("mdGridList", a).directive("mdGridTile", e).directive("mdGridTileFooter", f).directive("mdGridTileHeader", f).factory("$mdGridLayout", d), a.$inject = ["$interpolate", "$mdConstant", "$mdGridLayout", "$mdMedia"], c.$inject = ["$mdUtil"], c.prototype = { invalidateTiles: function () { this.tilesInvalidated = !0, this.invalidateLayout() }, invalidateLayout: function () { this.layoutInvalidated || (this.layoutInvalidated = !0, this.$timeout_(b.bind(this, this.layout))) }, layout: function () { try { this.layoutDelegate(this.tilesInvalidated) } finally { this.layoutInvalidated = !1, this.tilesInvalidated = !1 } } }, d.$inject = ["$mdUtil"], e.$inject = ["$mdMedia"] }(), function () { !function () { function a() { return { restrict: "E", require: ["^?mdFabSpeedDial", "^?mdFabToolbar"] } } b.module("material.components.fabTrigger", ["material.core"]).directive("mdFabTrigger", a) }() }(), function () { b.module("material.components.icon", ["material.core"]) }(), function () { function c(a, b) { function f(b, c) { a(c); var f = c[0].querySelector(d), g = c[0].querySelector(e); f && c.addClass("md-icon-left"), g && c.addClass("md-icon-right") } function g(a, c, d, e) { var f = this; f.isErrorGetter = d.mdIsError && b(d.mdIsError), f.delegateClick = function () { f.input.focus() }, f.element = c, f.setFocused = function (a) { c.toggleClass("md-input-focused", !!a) }, f.setHasValue = function (a) { c.toggleClass("md-input-has-value", !!a) }, f.setHasPlaceholder = function (a) { c.toggleClass("md-input-has-placeholder", !!a) }, f.setInvalid = function (a) { a ? e.addClass(c, "md-input-invalid") : e.removeClass(c, "md-input-invalid") }, a.$watch(function () { return f.label && f.input }, function (a) { a && !f.label.attr("for") && f.label.attr("for", f.input.attr("id")) }) } var c = ["INPUT", "TEXTAREA", "SELECT", "MD-SELECT"], d = c.reduce(function (a, b) { return a.concat(["md-icon ~ " + b, ".md-icon ~ " + b]) }, []).join(","), e = c.reduce(function (a, b) { return a.concat([b + " ~ md-icon", b + " ~ .md-icon"]) }, []).join(","); return g.$inject = ["$scope", "$element", "$attrs", "$animate"], { restrict: "E", link: f, controller: g } } function d() { return { restrict: "E", require: "^?mdInputContainer", link: function (a, b, c, d) { !d || c.mdNoFloat || b.hasClass("_md-container-ignore") || (d.label = b, a.$on("$destroy", function () { d.label = null })) } } } function e(a, c, d, e) { function f(f, g, h, i) { function r(a) { return j.setHasValue(!l.$isEmpty(a)), a } function s() { j.label && h.$observe("required", function (a) { j.label.toggleClass("md-required", a && !n) }) } function t() { j.setHasValue(g.val().length > 0 || (g[0].validity || {}).badInput) } function u() { function m() { if (g.addClass("md-no-flex").attr("rows", 1), d) { i || (j.style.minHeight = 0, i = g.prop("clientHeight"), j.style.minHeight = null); var a = Math.round(Math.round(n() / i)), b = Math.min(a, d); g.css("height", i * b + "px").attr("rows", b).toggleClass("_md-textarea-scrollable", a >= d) } else { g.css("height", "auto"), j.scrollTop = 0; var c = n(); c && g.css("height", c + "px") } g.removeClass("md-no-flex") } function n() { var a = j.offsetHeight, b = j.scrollHeight - a; return a + (b > 0 ? b : 0) } function o(a) { j.scrollTop = 0; var b = j.scrollHeight - j.offsetHeight, c = j.offsetHeight + b; j.style.height = c + "px" } function p(a) { return m(), a } if (!h.hasOwnProperty("mdNoAutogrow")) { var d = h.hasOwnProperty("rows") ? parseInt(h.rows) : NaN, i = null, j = g[0]; if (e(function () { a.nextTick(m) }, 10, !1), k ? (l.$formatters.unshift(p), l.$parsers.unshift(p)) : g.on("input", m), d || g.attr("rows", 1).on("scroll", o), b.element(c).on("resize", m), f.$on("$destroy", function () { b.element(c).off("resize", m) }), h.hasOwnProperty("mdDetectHidden")) { var q = function () { var a = !1; return function () { var b = 0 === j.offsetHeight; b === !1 && a === !0 && m(), a = b } }(); f.$watch(function () { return a.nextTick(q, !1), !0 }) } } } var j = i[0], k = !!i[1], l = i[1] || a.fakeNgModel(), m = b.isDefined(h.readonly), n = a.parseAttributeBoolean(h.mdNoAsterisk); if (j) { if ("hidden" === h.type) return void g.attr("aria-hidden", "true"); if (j.input) throw new Error("<md-input-container> can only have *one* <input>, <textarea> or <md-select> child element!"); j.input = g, s(); var o = b.element('<div class="md-errors-spacer">'); g.after(o), j.label || d.expect(g, "aria-label", g.attr("placeholder")), g.addClass("md-input"), g.attr("id") || g.attr("id", "input_" + a.nextUid()), "textarea" === g[0].tagName.toLowerCase() && u(), k || t(); var p = j.isErrorGetter || function () { return l.$invalid && (l.$touched || q()) }, q = function () { var c = a.getClosest(g, "form"), d = c ? b.element(c).controller("form") : null; return !!d && d.$submitted }; f.$watch(p, j.setInvalid), l.$parsers.push(r), l.$formatters.push(r), g.on("input", t), m || g.on("focus", function (b) { a.nextTick(function () { j.setFocused(!0) }) }).on("blur", function (b) { a.nextTick(function () { j.setFocused(!1), t() }) }), f.$on("$destroy", function () { j.setFocused(!1), j.setHasValue(!1), j.input = null }) } } return { restrict: "E", require: ["^?mdInputContainer", "?ngModel"], link: f } } function f(a, c) { function d(d, e, f, g) { function m(a) { return k.parent ? (k.text(String(e.val() || a || "").length + "/" + h), a) : a } var h, k, l, i = g[0], j = g[1]; c.nextTick(function () { l = b.element(j.element[0].querySelector(".md-errors-spacer")), k = b.element('<div class="md-char-counter">'), l.append(k), f.$set("ngTrim", "false"), i.$formatters.push(m), i.$viewChangeListeners.push(m), e.on("input keydown keyup", function () { m() }), d.$watch(f.mdMaxlength, function (c) { h = c, b.isNumber(c) && c > 0 ? (k.parent().length || a.enter(k, l), m()) : a.leave(k) }), i.$validators["md-maxlength"] = function (a, c) { return !b.isNumber(h) || h < 0 || (a || e.val() || c || "").length <= h } }) } return { restrict: "A", require: ["ngModel", "^mdInputContainer"], link: d } } function g(a) { function c(a, c, d, e) { if (e) { var f = e.element.find("label"), g = b.isDefined(e.element.attr("md-no-float")); if (f && f.length || g) return void e.setHasPlaceholder(!0); var h = d.placeholder; if (c.removeAttr("placeholder"), e.input && "MD-SELECT" != e.input[0].nodeName) { var i = '<label ng-click="delegateClick()">' + h + "</label>"; e.element.addClass("md-icon-float"), e.element.prepend(i) } } } return { restrict: "A", require: "^^?mdInputContainer", priority: 200, link: c } } function h(a) { function b(b, c, d) { function f() { e = !0, a(function () { c[0].select(), e = !1 }, 1, !1) } function g(a) { e && a.preventDefault() } if ("INPUT" === c[0].nodeName || "TEXTAREA" === c[0].nodeName) { var e = !1; c.on("focus", f).on("mouseup", g), b.$on("$destroy", function () { c.off("focus", f).off("mouseup", g) }) } } return { restrict: "A", link: b } } function j() { function a(a, c, d, e) { e && (c.toggleClass("md-input-messages-animation", !0), c.toggleClass("md-auto-hide", !0), ("false" == d.mdAutoHide || b(d)) && c.toggleClass("md-auto-hide", !1)) } function b(a) { return i.some(function (b) { return a[b] }) } return { restrict: "EA", link: a, require: "^^?mdInputContainer" } } function k(a) { function b(b) { var c = a.getClosest(b, "md-input-container"); if (c) return b.toggleClass("md-input-message-animation", !0), {} } return { restrict: "EA", compile: b, priority: 100 } } function l(a, b) { return { addClass: function (c, d, e) { var f = t(c); "md-input-invalid" == d && f.hasClass("md-auto-hide") ? o(c, b, a).finally(e) : e() } } } function m(a, b) { return { enter: function (c, d) { o(c, b, a).finally(d) }, leave: function (c, d) { p(c, b, a).finally(d) }, addClass: function (c, d, e) { "ng-hide" == d ? p(c, b, a).finally(e) : e() }, removeClass: function (c, d, e) { "ng-hide" == d ? o(c, b, a).finally(e) : e() } } } function n(a) { return { enter: function (b, c) { var d = t(b); return d.hasClass("md-auto-hide") ? void c() : q(b, a) }, leave: function (b, c) { return r(b, a) } } } function o(a, c, d) { var f, e = [], g = t(a); return b.forEach(g.children(), function (a) { f = q(b.element(a), c), e.push(f.start()) }), d.all(e) } function p(a, c, d) { var f, e = [], g = t(a); return b.forEach(g.children(), function (a) { f = r(b.element(a), c), e.push(f.start()) }), d.all(e) } function q(a, b) { var c = a[0].offsetHeight; return b(a, { event: "enter", structural: !0, from: { opacity: 0, "margin-top": -c + "px" }, to: { opacity: 1, "margin-top": "0" }, duration: .3 }) } function r(b, c) { var d = b[0].offsetHeight, e = a.getComputedStyle(b[0]); return 0 == e.opacity ? c(b, {}) : c(b, { event: "leave", structural: !0, from: { opacity: 1, "margin-top": 0 }, to: { opacity: 0, "margin-top": -d + "px" }, duration: .3 }) } function s(a) { var b = a.controller("mdInputContainer"); return b.element } function t(a) { var c = s(a); return b.element(c[0].querySelector(".md-input-messages-animation")) } b.module("material.components.input", ["material.core"]).directive("mdInputContainer", c).directive("label", d).directive("input", e).directive("textarea", e).directive("mdMaxlength", f).directive("placeholder", g).directive("ngMessages", j).directive("ngMessage", k).directive("ngMessageExp", k).directive("mdSelectOnFocus", h).animation(".md-input-invalid", l).animation(".md-input-messages-animation", m).animation(".md-input-message-animation", n), c.$inject = ["$mdTheming", "$parse"], e.$inject = ["$mdUtil", "$window", "$mdAria", "$timeout"], f.$inject = ["$animate", "$mdUtil"], g.$inject = ["$log"], h.$inject = ["$timeout"]; var i = ["ngIf", "ngShow", "ngHide", "ngSwitchWhen", "ngSwitchDefault"]; k.$inject = ["$mdUtil"], l.$inject = ["$q", "$animateCss"], m.$inject = ["$q", "$animateCss"], n.$inject = ["$animateCss"] }(), function () { function a(a) { return { restrict: "E", compile: function (b) { return b[0].setAttribute("role", "list"), a } } } function c(a, c, d, e) { var f = ["md-checkbox", "md-switch"]; return { restrict: "E", controller: "MdListController", compile: function (g, h) { function o() { for (var b, d, a = ["md-switch", "md-checkbox"], c = 0; d = a[c]; ++c)if ((b = g.find(d)[0]) && !b.hasAttribute("aria-label")) { var e = g.find("p")[0]; if (!e) return; b.setAttribute("aria-label", "Toggle " + e.textContent) } } function p(a) { if ("div" == a) l = b.element('<div class="_md-no-style _md-list-item-inner">'), l.append(g.contents()), g.addClass("_md-proxy-focus"); else { l = b.element('<div class="md-button _md-no-style">   <div class="_md-list-item-inner"></div></div>'); var c = b.element('<md-button class="_md-no-style" md-no-focus-style></md-button>'); c[0].setAttribute("aria-label", g[0].textContent), s(g[0], c[0]), l.prepend(c), l.children().eq(1).append(g.contents()), g.addClass("_md-button-wrap") } g[0].setAttribute("tabindex", "-1"), g.append(l) } function q() { var a = b.element('<div class="_md-secondary-container">'); b.forEach(i, function (b) { r(b, a) }); var c = b.element('<div class="flex"></div>'); l.append(c), l.append(a) } function r(c, d) { if (c && !u(c) && c.hasAttribute("ng-click")) { a.expect(c, "aria-label"); var e = b.element('<md-button class="md-secondary md-icon-button">'); s(c, e[0]), c.setAttribute("tabindex", "-1"), e.append(c), c = e[0] } c && (!v(c) || !h.ngClick && t(c)) && b.element(c).removeClass("md-secondary"), g.addClass("md-with-secondary"), d.append(c) } function s(a, c) { var d = ["ng-if", "ng-click", "aria-label", "ng-disabled", "ui-sref", "href", "ng-href", "ng-attr-ui-sref", "ui-sref-opts"]; b.forEach(d, function (b) { a.hasAttribute(b) && (c.setAttribute(b, a.getAttribute(b)), a.removeAttribute(b)) }) } function t(a) { return f.indexOf(a.nodeName.toLowerCase()) != -1 } function u(a) { var b = a.nodeName.toUpperCase(); return "MD-BUTTON" == b || "BUTTON" == b } function v(a) { for (var b = a.attributes, c = 0; c < b.length; c++)if ("ngClick" === h.$normalize(b[c].name)) return !0; return !1 } function w(a, g, h, i) { function o() { k && k.children && !n && b.forEach(f, function (a) { b.forEach(k.querySelectorAll(a + ":not(.md-secondary)"), function (a) { j.push(a) }) }) } function p() { (1 == j.length || n) && (g.addClass("md-clickable"), n || i.attachRipple(a, b.element(g[0].querySelector("._md-no-style")))) } var j = [], k = g[0].firstElementChild, l = g.hasClass("_md-button-wrap"), m = l ? k.firstElementChild : k, n = m && v(m); o(), p(), g.hasClass("_md-proxy-focus") && j.length && b.forEach(j, function (c) { c = b.element(c), a.mouseActive = !1, c.on("mousedown", function () { a.mouseActive = !0, e(function () { a.mouseActive = !1 }, 100) }).on("focus", function () { a.mouseActive === !1 && g.addClass("md-focused"), c.on("blur", function a() { g.removeClass("md-focused"), c.off("blur", a) }) }) }); var q = function (a) { if ("INPUT" != a.target.nodeName && "TEXTAREA" != a.target.nodeName && !a.target.isContentEditable) { var b = a.which || a.keyCode; b == c.KEY_CODE.SPACE && m && (m.click(), a.preventDefault(), a.stopPropagation()) } }; n || j.length || m && m.addEventListener("keypress", q), g.off("click"), g.off("keypress"), 1 == j.length && m && g.children().eq(0).on("click", function (a) { var c = d.getClosest(a.target, "BUTTON"); !c && m.contains(a.target) && b.forEach(j, function (c) { a.target === c || c.contains(a.target) || b.element(c).triggerHandler("click") }) }), a.$on("$destroy", function () { m && m.removeEventListener("keypress", q) }) } var j, k, i = g[0].querySelectorAll(".md-secondary"), l = g; if (g[0].setAttribute("role", "listitem"), h.ngClick || h.ngHref || h.href || h.uiSref || h.ngAttrUiSref) p("button"); else { for (var n, m = 0; n = f[m]; ++m)if (k = g[0].querySelector(n)) { j = !0; break } j ? p("div") : g[0].querySelector("md-button:not(.md-secondary):not(.md-exclude)") || g.addClass("_md-no-proxy") } return q(), o(), w } } } function d(a, b, c) { function e(a, b) { var d = {}; c.attach(a, b, d) } var d = this; d.attachRipple = e } b.module("material.components.list", ["material.core"]).controller("MdListController", d).directive("mdList", a).directive("mdListItem", c), a.$inject = ["$mdTheming"], c.$inject = ["$mdAria", "$mdConstant", "$mdUtil", "$timeout"], d.$inject = ["$scope", "$element", "$mdListInkRipple"] }(), function () { b.module("material.components.menuBar", ["material.core", "material.components.menu"]) }(), function () { b.module("material.components.menu", ["material.core", "material.components.backdrop"]) }(), function () { b.module("material.components.progressCircular", ["material.core"]) }(), function () { function a(a, c, d) { function i(a, b, c) { return a.attr("aria-valuemin", 0), a.attr("aria-valuemax", 100), a.attr("role", "progressbar"), j } function j(i, j, l) { function r() { l.$observe("value", function (a) { var b = k(a); j.attr("aria-valuenow", b), t() != h && u(p, b) }), l.$observe("mdBufferValue", function (a) { u(o, k(a)) }), l.$observe("mdMode", function (a) { switch (m && q.removeClass(m), a) { case h: case g: case e: case f: q.addClass(m = "_md-mode-" + a); break; default: q.addClass(m = "_md-mode-" + f) } }) } function s() { if (b.isUndefined(l.mdMode)) { var a = b.isDefined(l.value), g = a ? e : f, h = "Auto-adding the missing md-mode='{0}' to the ProgressLinear element"; d.debug(c.supplant(h, [g])), j.attr("md-mode", g), l.mdMode = g } } function t() { var a = (l.mdMode || "").trim(); if (a) switch (a) { case e: case f: case g: case h: break; default: a = f }return a } function u(a, d) { if (t()) { var e = c.supplant("translateX({0}%) scale({1},1)", [(d - 100) / 2, d / 100]), f = n({ transform: e }); b.element(a).css(f) } } a(j); var m, n = c.dom.animator.toCss, o = b.element(j[0].querySelector("._md-bar1")), p = b.element(j[0].querySelector("._md-bar2")), q = b.element(j[0].querySelector("._md-container")); j.attr("md-mode", t()), s(), r() } function k(a) { return Math.max(0, Math.min(a || 0, 100)) } var e = "determinate", f = "indeterminate", g = "buffer", h = "query"; return { restrict: "E", template: '<div class="_md-container"><div class="_md-dashed"></div><div class="_md-bar _md-bar1"></div><div class="_md-bar _md-bar2"></div></div>', compile: i } } b.module("material.components.progressLinear", ["material.core"]).directive("mdProgressLinear", a), a.$inject = ["$mdTheming", "$mdUtil", "$log"] }(), function () { function a(a, c, d, e) { function f(f, g, h, i) { function l() { g.hasClass("md-focused") || g.addClass("md-focused") } function m(d) { var e = d.which || d.keyCode; if (e == c.KEY_CODE.ENTER || d.currentTarget == d.target) switch (e) { case c.KEY_CODE.LEFT_ARROW: case c.KEY_CODE.UP_ARROW: d.preventDefault(), j.selectPrevious(), l(); break; case c.KEY_CODE.RIGHT_ARROW: case c.KEY_CODE.DOWN_ARROW: d.preventDefault(), j.selectNext(), l(); break; case c.KEY_CODE.ENTER: var f = b.element(a.getClosest(g[0], "form")); f.length > 0 && f.triggerHandler("submit") } } d(g); var j = i[0], k = i[1] || a.fakeNgModel(); j.init(k), f.mouseActive = !1, g.attr({ role: "radiogroup", tabIndex: g.attr("tabindex") || "0" }).on("keydown", m).on("mousedown", function (a) { f.mouseActive = !0, e(function () { f.mouseActive = !1 }, 100) }).on("focus", function () { f.mouseActive === !1 && j.$element.addClass("md-focused") }).on("blur", function () { j.$element.removeClass("md-focused") }) } function g(a) { this._radioButtonRenderFns = [], this.$element = a } function h() { return { init: function (a) { this._ngModelCtrl = a, this._ngModelCtrl.$render = b.bind(this, this.render) }, add: function (a) { this._radioButtonRenderFns.push(a) }, remove: function (a) { var b = this._radioButtonRenderFns.indexOf(a); b !== -1 && this._radioButtonRenderFns.splice(b, 1) }, render: function () { this._radioButtonRenderFns.forEach(function (a) { a() }) }, setViewValue: function (a, b) { this._ngModelCtrl.$setViewValue(a, b), this.render() }, getViewValue: function () { return this._ngModelCtrl.$viewValue }, selectNext: function () { return i(this.$element, 1) }, selectPrevious: function () { return i(this.$element, -1) }, setActiveDescendant: function (a) { this.$element.attr("aria-activedescendant", a) } } } function i(c, d) { var e = a.iterator(c[0].querySelectorAll("md-radio-button"), !0); if (e.count()) { var f = function (a) { return !b.element(a).attr("disabled") }, g = c[0].querySelector("md-radio-button.md-checked"), h = e[d < 0 ? "previous" : "next"](g, f) || e.first(); b.element(h).triggerHandler("click") } } return g.prototype = h(), { restrict: "E", controller: ["$element", g], require: ["mdRadioGroup", "?ngModel"], link: { pre: f } } } function c(a, b, c) { function e(e, f, g, h) { function j(a) { if (!h) throw "RadioGroupController not found."; h.add(l), g.$observe("value", l), f.on("click", k).on("$destroy", function () { h.remove(l) }) } function k(a) { f[0].hasAttribute("disabled") || e.$apply(function () { h.setViewValue(g.value, a && a.type) }) } function l() { function b(a) { "MD-RADIO-GROUP" != f.parent()[0].nodeName && f.parent()[a ? "addClass" : "removeClass"](d) } var a = h.getViewValue() == g.value; a !== i && (i = a, f.attr("aria-checked", a), a ? (b(!0), f.addClass(d), h.setActiveDescendant(f.attr("id"))) : (b(!1), f.removeClass(d))) } function m(c, d) { function e() { return g.id || "radio_" + b.nextUid() } d.ariaId = e(), c.attr({ id: d.ariaId, role: "radio", "aria-checked": "false" }), a.expectWithText(c, "aria-label") } var i; c(f), m(f, e), j() } var d = "md-checked"; return { restrict: "E", require: "^mdRadioGroup", transclude: !0, template: '<div class="_md-container" md-ink-ripple md-ink-ripple-checkbox><div class="_md-off"></div><div class="_md-on"></div></div><div ng-transclude class="_md-label"></div>', link: e } } b.module("material.components.radioButton", ["material.core"]).directive("mdRadioGroup", a).directive("mdRadioButton", c), a.$inject = ["$mdUtil", "$mdConstant", "$mdTheming", "$timeout"], c.$inject = ["$mdAria", "$mdUtil", "$mdTheming"] }(), function () {
        function f(a, d, e, f, g, h) {
            function i(g, i) {
                var j = b.element("<md-select-value><span></span></md-select-value>"); if (j.append('<span class="_md-select-icon" aria-hidden="true"></span>'), j.addClass("_md-select-value"), j[0].hasAttribute("id") || j.attr("id", "select_value_label_" + d.nextUid()), g.find("md-content").length || g.append(b.element("<md-content>").append(g.contents())), i.mdOnOpen && (g.find("md-content").prepend(b.element('<div> <md-progress-circular md-mode="{{progressMode}}" ng-hide="$$loadingAsyncDone" md-diameter="25px"></md-progress-circular></div>')), g.find("md-option").attr("ng-show", "$$loadingAsyncDone")), i.name) {
                    var k = b.element('<select class="_md-visually-hidden">'); k.attr({ name: "." + i.name, "ng-model": i.ngModel, "aria-hidden": "true", tabindex: "-1" }); var l = g.find("md-option"); b.forEach(l, function (a) {
                        var c = b.element("<option>" + a.innerHTML + "</option>"); a.hasAttribute("ng-value") ? c.attr("ng-value", a.getAttribute("ng-value")) : a.hasAttribute("value") && c.attr("value", a.getAttribute("value")),
                            k.append(c)
                    }), g.parent().append(k)
                } var m = d.parseAttributeBoolean(i.multiple), n = m ? "multiple" : "", o = '<div class="_md-select-menu-container" aria-hidden="true"><md-select-menu {0}>{1}</md-select-menu></div>'; return o = d.supplant(o, [n, g.html()]), g.empty().append(j), g.append(o), i.tabindex || i.$set("tabindex", 0), function (i, j, k, l) { function C() { var a = j.attr("aria-label") || j.attr("placeholder"); !a && q && q.label && (a = q.label.text()), p = a, f.expect(j, "aria-label", a) } function D() { x && (z = z || x.find("md-select-menu").controller("mdSelectMenu"), r.setLabelText(z.selectedLabels())) } function E() { if (p) { var a = z.selectedLabels({ mode: "aria" }); j.attr("aria-label", a.length ? p + ": " + a : p) } } function I() { q && q.setHasValue(z.selectedLabels().length > 0 || (j[0].validity || {}).badInput) } function J() { if (x = b.element(j[0].querySelector("._md-select-menu-container")), y = i, k.mdContainerClass) { var a = x[0].getAttribute("class") + " " + k.mdContainerClass; x[0].setAttribute("class", a) } z = x.find("md-select-menu").controller("mdSelectMenu"), z.init(s, k.ngModel), j.on("$destroy", function () { x.remove() }) } function K(a) { var c = [32, 13, 38, 40]; if (c.indexOf(a.keyCode) != -1) a.preventDefault(), L(a); else if (a.keyCode <= 90 && a.keyCode >= 31) { a.preventDefault(); var d = z.optNodeForKeyboardSearch(a); if (!d) return; var e = b.element(d).controller("mdOption"); z.isMultiple || z.deselect(Object.keys(z.selected)[0]), z.select(e.hashKey, e.value), z.refreshViewValue() } } function L() { y.isOpen = !0, j.attr("aria-expanded", "true"), a.show({ scope: y, preserveScope: !0, skipCompile: !0, element: x, target: j[0], selectCtrl: r, preserveElement: !0, hasBackdrop: !0, loadingAsync: !!k.mdOnOpen && (i.$eval(k.mdOnOpen) || !0) }).finally(function () { y.isOpen = !1, j.focus(), j.attr("aria-expanded", "false"), s.$setTouched() }) } var o, p, n = !0, q = l[0], r = l[1], s = l[2], t = l[3], u = j.find("md-select-value"), v = b.isDefined(k.readonly); if (q) { var w = q.isErrorGetter || function () { return s.$invalid && s.$touched }; if (q.input) throw new Error("<md-input-container> can only have *one* child <input>, <textarea> or <select> element!"); q.input = j, q.label || f.expect(j, "aria-label", j.attr("placeholder")), i.$watch(w, q.setInvalid) } var x, y, z; if (J(), e(j), k.name && t) { var A = j.parent()[0].querySelector('select[name=".' + k.name + '"]'); d.nextTick(function () { var a = b.element(A).controller("ngModel"); a && t.$removeControl(a) }) } t && b.isDefined(k.multiple) && d.nextTick(function () { var a = s.$modelValue || s.$viewValue; a && t.$setPristine() }); var B = s.$render; s.$render = function () { B(), D(), E(), I() }, k.$observe("placeholder", s.$render), r.setLabelText = function (a) { if (r.setIsPlaceholder(!a), k.mdSelectedText) a = h(k.mdSelectedText)(i); else { var b = k.placeholder || (q && q.label ? q.label.text() : ""); a = a || b || "" } var c = u.children().eq(0); c.html(a) }, r.setIsPlaceholder = function (a) { a ? (u.addClass("_md-select-placeholder"), q && q.label && q.label.addClass("_md-placeholder")) : (u.removeClass("_md-select-placeholder"), q && q.label && q.label.removeClass("_md-placeholder")) }, v || (j.on("focus", function (a) { q && q.element.hasClass("md-input-has-value") && q.setFocused(!0) }), j.on("blur", function (a) { n && (n = !1, y.isOpen && a.stopImmediatePropagation()), y.isOpen || (q && q.setFocused(!1), I()) })), r.triggerClose = function () { h(k.mdOnClose)(i) }, i.$$postDigest(function () { C(), D(), E() }), i.$watch(z.selectedLabels, D); var F; k.$observe("ngMultiple", function (a) { F && F(); var b = h(a); F = i.$watch(function () { return b(i) }, function (a, b) { a === c && b === c || (a ? j.attr("multiple", "multiple") : j.removeAttr("multiple"), j.attr("aria-multiselectable", a ? "true" : "false"), x && (z.setMultiple(a), B = s.$render, s.$render = function () { B(), D(), E(), I() }, s.$render())) }) }), k.$observe("disabled", function (a) { b.isString(a) && (a = !0), o !== c && o === a || (o = a, a ? j.attr({ "aria-disabled": "true" }).removeAttr("tabindex").off("click", L).off("keydown", K) : j.attr({ tabindex: k.tabindex, "aria-disabled": "false" }).on("click", L).on("keydown", K)) }), k.hasOwnProperty("disabled") || k.hasOwnProperty("ngDisabled") || (j.attr({ "aria-disabled": "false" }), j.on("click", L), j.on("keydown", K)); var G = { role: "listbox", "aria-expanded": "false", "aria-multiselectable": m && !k.ngMultiple ? "true" : "false" }; j[0].hasAttribute("id") || (G.id = "select_" + d.nextUid()); var H = "select_container_" + d.nextUid(); x.attr("id", H), G["aria-owns"] = H, j.attr(G), i.$on("$destroy", function () { a.destroy().finally(function () { q && (q.setFocused(!1), q.setHasValue(!1), q.input = null), s.$setTouched() }) }) }
            } return { restrict: "E", require: ["^?mdInputContainer", "mdSelect", "ngModel", "?^form"], compile: i, controller: function () { } }
        } function g(a, e, f) { function g(a, c, d, g) { function i(a) { 13 != a.keyCode && 32 != a.keyCode || j(a) } function j(c) { var d = e.getClosest(c.target, "md-option"), f = d && b.element(d).data("$mdOptionController"); if (d && f) { if (d.hasAttribute("disabled")) return c.stopImmediatePropagation(), !1; var g = h.hashGetter(f.value), i = b.isDefined(h.selected[g]); a.$apply(function () { h.isMultiple ? i ? h.deselect(g) : h.select(g, f.value) : i || (h.deselect(Object.keys(h.selected)[0]), h.select(g, f.value)), h.refreshViewValue() }) } } var h = g[0]; f(c), c.on("click", j), c.on("keypress", i) } function h(f, g, h) { function q() { var a = i.ngModel.$modelValue || i.ngModel.$viewValue || []; if (b.isArray(a)) { var c = Object.keys(i.selected), d = a.map(i.hashGetter), e = c.filter(function (a) { return d.indexOf(a) === -1 }); e.forEach(i.deselect), d.forEach(function (b, c) { i.select(b, a[c]) }) } } function r() { var a = i.ngModel.$viewValue || i.ngModel.$modelValue; Object.keys(i.selected).forEach(i.deselect), i.select(i.hashGetter(a), a) } var i = this; i.isMultiple = b.isDefined(g.multiple), i.selected = {}, i.options = {}, f.$watchCollection(function () { return i.options }, function () { i.ngModel.$render() }); var j, k; i.setMultiple = function (a) { function d(a, c) { return b.isArray(a || c || []) } var c = i.ngModel; k = k || c.$isEmpty, i.isMultiple = a, j && j(), i.isMultiple ? (c.$validators["md-multiple"] = d, c.$render = q, f.$watchCollection(i.modelBinding, function (a) { d(a) && q(a), i.ngModel.$setPristine() }), c.$isEmpty = function (a) { return !a || 0 === a.length }) : (delete c.$validators["md-multiple"], c.$render = r) }; var m, n, o, l = "", p = 300; i.optNodeForKeyboardSearch = function (a) { m && clearTimeout(m), m = setTimeout(function () { m = c, l = "", o = c, n = c }, p), l += String.fromCharCode(a.keyCode); var d = new RegExp("^" + l, "i"); n || (n = h.find("md-option"), o = new Array(n.length), b.forEach(n, function (a, b) { o[b] = a.textContent.trim() })); for (var e = 0; e < o.length; ++e)if (d.test(o[e])) return n[e] }, i.init = function (c, e) { if (i.ngModel = c, i.modelBinding = e, c.$options && c.$options.trackBy) { var g = {}, h = a(c.$options.trackBy); i.hashGetter = function (a, b) { return g.$value = a, h(b || f, g) } } else i.hashGetter = function (c) { return b.isObject(c) ? "object_" + (c.$$mdSelectId || (c.$$mdSelectId = ++d)) : c }; i.setMultiple(i.isMultiple) }, i.selectedLabels = function (a) { a = a || {}; var b = a.mode || "html", c = e.nodesToArray(h[0].querySelectorAll("md-option[selected]")); if (c.length) { var d; return "html" == b ? d = function (a) { var b = a.innerHTML, c = a.querySelector(".md-ripple-container"); return c ? b.replace(c.outerHTML, "") : b } : "aria" == b && (d = function (a) { return a.hasAttribute("aria-label") ? a.getAttribute("aria-label") : a.textContent }), c.map(d).join(", ") } return "" }, i.select = function (a, b) { var c = i.options[a]; c && c.setSelected(!0), i.selected[a] = b }, i.deselect = function (a) { var b = i.options[a]; b && b.setSelected(!1), delete i.selected[a] }, i.addOption = function (a, c) { if (b.isDefined(i.options[a])) throw new Error('Duplicate md-option values are not allowed in a select. Duplicate value "' + c.value + '" found.'); i.options[a] = c, b.isDefined(i.selected[a]) && (i.select(a, c.value), i.refreshViewValue()) }, i.removeOption = function (a) { delete i.options[a] }, i.refreshViewValue = function () { var c, a = []; for (var d in i.selected) (c = i.options[d]) ? a.push(c.value) : a.push(i.selected[d]); var e = i.ngModel.$options && i.ngModel.$options.trackBy, f = i.isMultiple ? a : a[0], g = i.ngModel.$modelValue; (e ? b.equals(g, f) : g == f) || (i.ngModel.$setViewValue(f), i.ngModel.$render()) } } return h.$inject = ["$scope", "$attrs", "$element"], { restrict: "E", require: ["mdSelectMenu"], scope: !0, controller: h, link: { pre: g } } } function h(a, c) { function d(a, c) { return a.append(b.element('<div class="_md-text">').append(a.contents())), a.attr("tabindex", c.tabindex || "0"), f } function f(d, f, g, h) { function k(a, b, c) { if (!j.hashGetter) return void (c || d.$$postDigest(function () { k(a, b, !0) })); var e = j.hashGetter(b, d), f = j.hashGetter(a, d); i.hashKey = f, i.value = a, j.removeOption(e, i), j.addOption(f, i) } function l() { var a = { role: "option", "aria-selected": "false" }; f[0].hasAttribute("id") || (a.id = "select_option_" + c.nextUid()), f.attr(a) } var i = h[0], j = h[1]; j.isMultiple && (f.attr("md-checkbox-enabled", ""), f.prepend(e.clone())), b.isDefined(g.ngValue) ? d.$watch(g.ngValue, k) : b.isDefined(g.value) ? k(g.value) : d.$watch(function () { return f.text().trim() }, k), g.$observe("disabled", function (a) { a ? f.attr("tabindex", "-1") : f.attr("tabindex", "0") }), d.$$postDigest(function () { g.$observe("selected", function (a) { b.isDefined(a) && ("string" == typeof a && (a = !0), a ? (j.isMultiple || j.deselect(Object.keys(j.selected)[0]), j.select(i.hashKey, i.value)) : j.deselect(i.hashKey), j.refreshViewValue()) }) }), a.attach(d, f), l(), d.$on("$destroy", function () { j.removeOption(i.hashKey, i) }) } function g(a) { this.selected = !1, this.setSelected = function (b) { b && !this.selected ? a.attr({ selected: "selected", "aria-selected": "true" }) : !b && this.selected && (a.removeAttr("selected"), a.attr("aria-selected", "false")), this.selected = b } } return g.$inject = ["$element"], { restrict: "E", require: ["mdOption", "^^mdSelectMenu"], controller: g, compile: d } } function i() { function a(a, c) { var d = a.find("label"); d.length || (d = b.element("<label>"), a.prepend(d)), d.addClass("_md-container-ignore"), c.label && d.text(c.label) } return { restrict: "E", compile: a } } function j(d) { function e(d, e, j, k, l, m, n, o, p) { function s(a, b, c) { function d() { return n(b, { addClass: "_md-leave" }).start() } function e() { b.removeClass("_md-active"), b.attr("aria-hidden", "true"), b[0].style.display = "none", u(c), !c.$destroy && c.restoreFocus && c.target.focus() } return c = c || {}, c.cleanupInteraction(), c.cleanupResizing(), c.hideBackdrop(), c.$destroy === !0 ? e() : d().then(e) } function t(a, f, g) { function h(a, b, c) { return c.parent.append(b), l(function (a, c) { try { n(b, { removeClass: "_md-leave", duration: 0 }).start().then(i).then(a) } catch (a) { c(a) } }) } function i() { return l(function (b) { if (g.isRemoved) return l.reject(!1); var c = v(a, f, g); c.container.element.css(r.toCss(c.container.styles)), c.dropDown.element.css(r.toCss(c.dropDown.styles)), m(function () { f.addClass("_md-active"), c.dropDown.element.css(r.toCss({ transform: "" })), t(g.focusedNode), b() }) }) } function s(a, b, c) { return c.disableParentScroll && !j.getClosest(c.target, "MD-DIALOG") ? c.restoreScroll = j.disableScrollAround(c.element, c.parent) : c.disableParentScroll = !1, c.hasBackdrop && (c.backdrop = j.createBackdrop(a, "_md-select-backdrop _md-click-catcher"), o.enter(c.backdrop, p[0].body, null, { duration: 0 })), function () { c.backdrop && c.backdrop.remove(), c.disableParentScroll && c.restoreScroll(), delete c.restoreScroll } } function t(a) { a && !a.hasAttribute("disabled") && a.focus() } function u(a, c) { var d = f.find("md-select-menu"); if (!c.target) throw new Error(j.supplant(q, [c.target])); b.extend(c, { isRemoved: !1, target: b.element(c.target), parent: b.element(c.parent), selectEl: d, contentEl: f.find("md-content"), optionNodes: d[0].getElementsByTagName("md-option") }) } function w() { var c = function (a, b, c) { return function () { if (!c.isRemoved) { var d = v(a, b, c), e = d.container, f = d.dropDown; e.element.css(r.toCss(e.styles)), f.element.css(r.toCss(f.styles)) } } }(a, f, g), d = b.element(k); return d.on("resize", c), d.on("orientationchange", c), function () { d.off("resize", c), d.off("orientationchange", c) } } function x() { g.loadingAsync && !g.isRemoved && (a.$$loadingAsyncDone = !1, a.progressMode = "indeterminate", l.when(g.loadingAsync).then(function () { a.$$loadingAsyncDone = !0, a.progressMode = "", delete g.loadingAsync }).then(function () { m(i) })) } function y() { function h(a) { a.preventDefault(), a.stopPropagation(), g.restoreFocus = !1, j.nextTick(d.hide, !0) } function i(b) { var c = e.KEY_CODE; switch (b.preventDefault(), b.stopPropagation(), b.keyCode) { case c.UP_ARROW: return m(); case c.DOWN_ARROW: return l(); case c.SPACE: case c.ENTER: var f = j.getClosest(b.target, "md-option"); f && (a.triggerHandler({ type: "click", target: f }), b.preventDefault()), n(b); break; case c.TAB: case c.ESCAPE: b.stopPropagation(), b.preventDefault(), g.restoreFocus = !0, j.nextTick(d.hide, !0); break; default: if (b.keyCode >= 31 && b.keyCode <= 90) { var h = a.controller("mdSelectMenu").optNodeForKeyboardSearch(b); g.focusedNode = h || g.focusedNode, h && h.focus() } } } function k(a) { var e, b = j.nodesToArray(g.optionNodes), d = b.indexOf(g.focusedNode); do d === -1 ? d = 0 : "next" === a && d < b.length - 1 ? d++ : "prev" === a && d > 0 && d-- , e = b[d], e.hasAttribute("disabled") && (e = c); while (!e && d < b.length - 1 && d > 0); e && e.focus(), g.focusedNode = e } function l() { k("next") } function m() { k("prev") } function n(c) { function f() { var a = !1; if (c && c.currentTarget.children.length > 0) { var b = c.currentTarget.children[0], d = b.scrollHeight > b.clientHeight; if (d && b.children.length > 0) { var e = c.pageX - c.currentTarget.getBoundingClientRect().left; e > b.querySelector("md-option").offsetWidth && (a = !0) } } return a } if (!(c && "click" == c.type && c.currentTarget != a[0] || f())) { var e = j.getClosest(c.target, "md-option"); e && e.hasAttribute && !e.hasAttribute("disabled") && (c.preventDefault(), c.stopPropagation(), b.isMultiple || (g.restoreFocus = !0, j.nextTick(function () { d.hide(b.ngModel.$viewValue) }, !0))) } } if (!g.isRemoved) { var a = g.selectEl, b = a.controller("mdSelectMenu") || {}; return f.addClass("_md-clickable"), g.backdrop && g.backdrop.on("click", h), a.on("keydown", i), a.on("click", n), function () { g.backdrop && g.backdrop.off("click", h), a.off("keydown", i), a.off("click", n), f.removeClass("_md-clickable"), g.isRemoved = !0 } } } return x(), u(a, g), g.hideBackdrop = s(a, f, g), h(a, f, g).then(function (a) { return f.attr("aria-hidden", "false"), g.alreadyOpen = !0, g.cleanupInteraction = y(), g.cleanupResizing = w(), a }, g.hideBackdrop) } function u(a) { var b = a.selectCtrl; if (b) { var c = a.selectEl.controller("mdSelectMenu"); b.setLabelText(c ? c.selectedLabels() : ""), b.triggerClose() } } function v(c, d, e) { var B, l = d[0], m = e.target[0].children[0], n = p[0].body, o = e.selectEl[0], q = e.contentEl[0], r = n.getBoundingClientRect(), s = m.getBoundingClientRect(), t = !1, u = { left: r.left + a, top: a, bottom: r.height - a, right: r.width - a - (j.floatingScrollbars() ? 16 : 0) }, v = { top: s.top - u.top, left: s.left - u.left, right: u.right - (s.left + s.width), bottom: u.bottom - (s.top + s.height) }, w = r.width - 2 * a, x = o.querySelector("md-option[selected]"), y = o.getElementsByTagName("md-option"), z = o.getElementsByTagName("md-optgroup"), A = i(d, q), C = f(e.loadingAsync); B = C ? q.firstElementChild || q : x ? x : z.length ? z[0] : y.length ? y[0] : q.firstElementChild || q, q.offsetWidth > w ? q.style["max-width"] = w + "px" : q.style.maxWidth = null, t && (q.style["min-width"] = s.width + "px"), A && o.classList.add("_md-overflow"); var D = B; "MD-OPTGROUP" === (D.tagName || "").toUpperCase() && (D = y[0] || q.firstElementChild || q, B = D), e.focusedNode = D, l.style.display = "block"; var E = o.getBoundingClientRect(), F = h(B); if (B) { var G = k.getComputedStyle(B); F.paddingLeft = parseInt(G.paddingLeft, 10) || 0, F.paddingRight = parseInt(G.paddingRight, 10) || 0 } if (A) { var H = q.offsetHeight / 2; q.scrollTop = F.top + F.height / 2 - H, v.top < H ? q.scrollTop = Math.min(F.top, q.scrollTop + H - v.top) : v.bottom < H && (q.scrollTop = Math.max(F.top + F.height - E.height, q.scrollTop - H + v.bottom)) } var I, J, K, L; t ? (I = s.left, J = s.top + s.height, K = "50% 0", J + E.height > u.bottom && (J = s.top - E.height, K = "50% 100%")) : (I = s.left + F.left - F.paddingLeft + 2, J = Math.floor(s.top + s.height / 2 - F.height / 2 - F.top + q.scrollTop) + 2, K = F.left + s.width / 2 + "px " + (F.top + F.height / 2 - q.scrollTop) + "px 0px", L = Math.min(s.width + F.paddingLeft + F.paddingRight, w)); var M = l.getBoundingClientRect(), N = Math.round(100 * Math.min(s.width / E.width, 1)) / 100, O = Math.round(100 * Math.min(s.height / E.height, 1)) / 100; return { container: { element: b.element(l), styles: { left: Math.floor(g(u.left, I, u.right - M.width)), top: Math.floor(g(u.top, J, u.bottom - M.height)), "min-width": L } }, dropDown: { element: b.element(o), styles: { transformOrigin: K, transform: e.alreadyOpen ? "" : j.supplant("scale({0},{1})", [N, O]) } } } } var q = "$mdSelect.show() expected a target element in options.target but got '{0}'!", r = j.dom.animator; return { parent: "body", themable: !0, onShow: t, onRemove: s, hasBackdrop: !0, disableParentScroll: !0 } } function f(a) { return a && b.isFunction(a.then) } function g(a, b, c) { return Math.max(a, Math.min(b, c)) } function h(a) { return a ? { left: a.offsetLeft, top: a.offsetTop, width: a.offsetWidth, height: a.offsetHeight } : { left: 0, top: 0, width: 0, height: 0 } } function i(a, b) { var c = !1; try { var d = a[0].style.display; a[0].style.display = "block", c = b.scrollHeight > b.offsetHeight, a[0].style.display = d } finally { } return c } return e.$inject = ["$mdSelect", "$mdConstant", "$mdUtil", "$window", "$q", "$$rAF", "$animateCss", "$animate", "$document"], d("$mdSelect").setDefaults({ methods: ["target"], options: e }) } var a = 8, d = 0, e = b.element('<div class="_md-container"><div class="_md-icon"></div></div>'); b.module("material.components.select", ["material.core", "material.components.backdrop"]).directive("mdSelect", f).directive("mdSelectMenu", g).directive("mdOption", h).directive("mdOptgroup", i).provider("$mdSelect", j), f.$inject = ["$mdSelect", "$mdUtil", "$mdTheming", "$mdAria", "$compile", "$parse"], g.$inject = ["$parse", "$mdUtil", "$mdTheming"], h.$inject = ["$mdButtonInkRipple", "$mdUtil"], j.$inject = ["$$interimElementProvider"]
    }(), function () { function a(a, b) { return ["$mdUtil", function (c) { return { restrict: "A", multiElement: !0, link: function (d, e, f) { var g = d.$on("$md-resize-enable", function () { g(), d.$watch(f[a], function (a) { !!a === b && (c.nextTick(function () { d.$broadcast("$md-resize") }), c.dom.animator.waitTransitionEnd(e).then(function () { d.$broadcast("$md-resize") })) }) }) } } }] } b.module("material.components.showHide", ["material.core"]).directive("ngShow", a("ngShow", !0)).directive("ngHide", a("ngHide", !1)) }(), function () { function a(a, c) { return function (d) { function h() { return a.when(d).then(function (a) { return g = a, a }) } var e, f = "SideNav '" + d + "' is not available!", g = a.get(d); return g || a.notFoundError(d), e = { isOpen: function () { return g && g.isOpen() }, isLockedOpen: function () { return g && g.isLockedOpen() }, toggle: function () { return g ? g.toggle() : c.reject(f) }, open: function () { return g ? g.open() : c.reject(f) }, close: function () { return g ? g.close() : c.reject(f) }, then: function (a) { var d = g ? c.when(g) : h(); return d.then(a || b.noop) } } } } function d() { return { restrict: "A", require: "^mdSidenav", link: function (a, b, c, d) { } } } function e(a, d, e, f, g, h, i, j, k, l) { function m(h, m, n, o) { function v(a, b) { h.isLockedOpen = a, a === b ? m.toggleClass("_md-locked-open", !!a) : g[a ? "addClass" : "removeClass"](m, "_md-locked-open"), q && q.toggleClass("_md-locked-open", !!a) } function w(a) { var b = d.findFocusTarget(m) || d.findFocusTarget(m, "[md-sidenav-focus]") || m, c = m.parent(); return c[a ? "on" : "off"]("keydown", z), q && q[a ? "on" : "off"]("click", A), a && (r = l[0].activeElement), x(a), s = k.all([a && q ? g.enter(q, c) : q ? g.leave(q) : k.when(!0), g[a ? "removeClass" : "addClass"](m, "_md-closed")]).then(function () { h.isOpen && b && b.focus() }) } function x(a) { var d = m.parent(); a && !p ? (p = d.css("overflow"), d.css("overflow", "hidden")) : b.isDefined(p) && (d.css("overflow", p), p = c) } function y(a) { return h.isOpen == a ? k.when(!0) : k(function (b) { h.isOpen = a, d.nextTick(function () { s.then(function (a) { h.isOpen || (r && r.focus(), r = null), b(a) }) }) }) } function z(a) { var b = a.keyCode === e.KEY_CODE.ESCAPE; return b ? A(a) : k.when(!0) } function A(a) { return a.preventDefault(), o.close() } var p, q, r = null, s = k.when(!0), t = i(n.mdIsLockedOpen), u = function () { return t(h.$parent, { $media: function (b) { return j.warn("$media is deprecated for is-locked-open. Use $mdMedia instead."), a(b) }, $mdMedia: a }) }; b.isDefined(n.mdDisableBackdrop) || (q = d.createBackdrop(h, "_md-sidenav-backdrop md-opaque ng-enter")), f(m), q && f.inherit(q, m), m.on("$destroy", function () { q && q.remove(), o.destroy() }), h.$on("$destroy", function () { q && q.remove() }), h.$watch(u, v), h.$watch("isOpen", w), o.$toggleOpen = y } return { restrict: "E", scope: { isOpen: "=?mdIsOpen" }, controller: "$mdSidenavController", compile: function (a) { return a.addClass("_md-closed"), a.attr("tabIndex", "-1"), m } } } function f(a, b, c, d, e) { var f = this; f.isOpen = function () { return !!a.isOpen }, f.isLockedOpen = function () { return !!a.isLockedOpen }, f.open = function () { return f.$toggleOpen(!0) }, f.close = function () { return f.$toggleOpen(!1) }, f.toggle = function () { return f.$toggleOpen(!a.isOpen) }, f.$toggleOpen = function (b) { return e.when(a.isOpen = b) }, f.destroy = d.register(f, c.mdComponentId) } b.module("material.components.sidenav", ["material.core", "material.components.backdrop"]).factory("$mdSidenav", a).directive("mdSidenav", e).directive("mdSidenavFocus", d).controller("$mdSidenavController", f), a.$inject = ["$mdComponentRegistry", "$q"], e.$inject = ["$mdMedia", "$mdUtil", "$mdConstant", "$mdTheming", "$animate", "$compile", "$parse", "$log", "$q", "$document"], f.$inject = ["$scope", "$element", "$attrs", "$mdComponentRegistry", "$q"] }(), function () { function a(a, d, e, f, g) { function i(a) { function i(a, c) { c.addClass("_md-sticky-clone"); var d = { element: a, clone: c }; return h.items.push(d), f.nextTick(function () { b.prepend(d.clone) }), g(), function () { h.items.forEach(function (b, c) { b.element[0] === a[0] && (h.items.splice(c, 1), b.clone.remove()) }), g() } } function j() { h.items.forEach(l), h.items = h.items.sort(function (a, b) { return a.top < b.top ? -1 : 1 }); for (var a, c = b.prop("scrollTop"), d = h.items.length - 1; d >= 0; d--)if (c > h.items[d].top) { a = h.items[d]; break } n(a) } function l(a) { var d = a.element[0]; for (a.top = 0, a.left = 0, a.right = 0; d && d !== b[0];)a.top += d.offsetTop, a.left += d.offsetLeft, d.offsetParent && (a.right += d.offsetParent.offsetWidth - d.offsetWidth - d.offsetLeft), d = d.offsetParent; a.height = a.element.prop("offsetHeight"); var e = f.floatingScrollbars() ? "0" : c; f.bidi(a.clone, "margin-left", a.left, e), f.bidi(a.clone, "margin-right", e, a.right) } function m() { var a = b.prop("scrollTop"), c = a > (m.prevScrollTop || 0); if (m.prevScrollTop = a, 0 === a) return void n(null); if (c) { if (h.next && h.next.top <= a) return void n(h.next); if (h.current && h.next && h.next.top - a <= h.next.height) return void p(h.current, a + (h.next.top - h.next.height - a)) } if (!c) { if (h.current && h.prev && a < h.current.top) return void n(h.prev); if (h.next && h.current && a >= h.next.top - h.current.height) return void p(h.current, a + (h.next.top - a - h.current.height)) } h.current && p(h.current, a) } function n(a) { if (h.current !== a) { h.current && (p(h.current, null), o(h.current, null)), a && o(a, "active"), h.current = a; var b = h.items.indexOf(a); h.next = h.items[b + 1], h.prev = h.items[b - 1], o(h.next, "next"), o(h.prev, "prev") } } function o(a, b) { a && a.state !== b && (a.state && (a.clone.attr("sticky-prev-state", a.state), a.element.attr("sticky-prev-state", a.state)), a.clone.attr("sticky-state", b), a.element.attr("sticky-state", b), a.state = b) } function p(a, b) { a && (null === b || b === c ? a.translateY && (a.translateY = null, a.clone.css(d.CSS.TRANSFORM, "")) : (a.translateY = b, f.bidi(a.clone, d.CSS.TRANSFORM, "translate3d(" + a.left + "px," + b + "px,0)", "translateY(" + b + "px)"))) } var b = a.$element, g = e.throttle(j); k(b), b.on("$scrollstart", g), b.on("$scroll", m); var h; return h = { prev: null, current: null, next: null, items: [], add: i, refreshElements: j } } function j(c) { var d, e = b.element("<div>"); a[0].body.appendChild(e[0]); for (var f = ["sticky", "-webkit-sticky"], g = 0; g < f.length; ++g)if (e.css({ position: f[g], top: 0, "z-index": 2 }), e.css("position") == f[g]) { d = f[g]; break } return e.remove(), d } function k(a) { function g() { +f.now() - d > b ? (c = !1, a.triggerHandler("$scrollend")) : (a.triggerHandler("$scroll"), e.throttle(g)) } var c, d, b = 200; a.on("scroll touchmove", function () { c || (c = !0, e.throttle(g), a.triggerHandler("$scrollstart")), a.triggerHandler("$scroll"), d = +f.now() }) } var h = j(); return function (b, c, d) { var e = c.controller("mdContent"); if (e) if (h) c.css({ position: h, top: 0, "z-index": 2 }); else { var f = e.$element.data("$$sticky"); f || (f = i(e), e.$element.data("$$sticky", f)); var j = d || g(c.clone())(b), k = f.add(c, j); b.$on("$destroy", k) } } } b.module("material.components.sticky", ["material.core", "material.components.content"]).factory("$mdSticky", a), a.$inject = ["$document", "$mdConstant", "$$rAF", "$mdUtil", "$compile"] }(), function () { function a() { return { controller: function () { }, compile: function (a) { var d = a.find("md-slider"); if (d) { var e = d.attr("md-vertical"); return e !== c && a.attr("md-vertical", ""), d.attr("flex") || d.attr("flex", ""), function (a, c, d, e) { function f(a) { c.children().attr("disabled", a), c.find("input").attr("disabled", a) } var g = b.noop; d.disabled ? f(!0) : d.ngDisabled && (g = a.$watch(d.ngDisabled, function (a) { f(a) })), a.$on("$destroy", function () { g() }); var h; e.fitInputWidthToTextLength = function (a) { var b = c.find("md-input-container"), d = getComputedStyle(b[0]), e = parseInt(d["min-width"]), f = 2 * parseInt(d.padding); h = h || parseInt(d["max-width"]); var g = Math.max(h, e + f + e / 2 * a); b.css("max-width", g + "px") } } } } } } function d(a, c, d, e, f, g, h, i, j, k) { function l(a, c) { var e = b.element(a[0].getElementsByClassName("_md-slider-wrapper")), f = c.tabindex || 0; return e.attr("tabindex", f), (c.disabled || c.ngDisabled) && e.attr("tabindex", -1), e.attr("role", "slider"), d.expect(a, "aria-label"), m } function m(d, l, m, n) { function F() { V(), aa() } function L(a) { H = parseFloat(a), l.attr("aria-valuemin", a), F() } function M(a) { I = parseFloat(a), l.attr("aria-valuemax", a), F() } function N(a) { J = parseFloat(a) } function O(a) { K = ba(parseInt(a), 0, 6) } function P() { l.attr("aria-disabled", !!r()) } function S() { if (D && !r() && !b.isUndefined(J)) { if (J <= 0) { var a = "Slider step value must be greater than zero when in discrete mode"; throw j.error(a), new Error(a) } var d = Math.floor((I - H) / J); Q || (Q = b.element("<canvas>").css("position", "absolute"), x.append(Q), R = Q[0].getContext("2d")); var e = W(); !e || e.height || e.width || (V(), e = U), Q[0].width = e.width, Q[0].height = e.height; for (var f, g = 0; g <= d; g++) { var h = c.getComputedStyle(x[0]); R.fillStyle = h.color || "black", f = Math.floor((C ? e.height : e.width) * (g / d)), R.fillRect(C ? 0 : f - 1, C ? f - 1 : 0, C ? e.width : 2, C ? 2 : e.height) } } } function T() { if (Q && R) { var a = W(); R.clearRect(0, 0, a.width, a.height) } } function V() { U = v[0].getBoundingClientRect() } function W() { return A(), U } function X(a) { if (!r()) { var b; (C ? a.keyCode === f.KEY_CODE.DOWN_ARROW : a.keyCode === f.KEY_CODE.LEFT_ARROW) ? b = -J : (C ? a.keyCode === f.KEY_CODE.UP_ARROW : a.keyCode === f.KEY_CODE.RIGHT_ARROW) && (b = J), b && ((a.metaKey || a.ctrlKey || a.altKey) && (b *= 4), a.preventDefault(), a.stopPropagation(), d.$evalAsync(function () { _(o.$viewValue + b) })) } } function Y() { S(), d.mouseActive = !0, y.removeClass("md-focused"), k(function () { d.mouseActive = !1 }, 100) } function Z() { d.mouseActive === !1 && y.addClass("md-focused") } function $() { y.removeClass("md-focused"), l.removeClass("_md-active"), T() } function _(a) { o.$setViewValue(ba(ca(a))) } function aa() { isNaN(o.$viewValue) && (o.$viewValue = o.$modelValue), o.$viewValue = ba(o.$viewValue); var a = (o.$viewValue - H) / (I - H); d.modelValue = o.$viewValue, l.attr("aria-valuenow", o.$viewValue), da(a), t.text(o.$viewValue) } function ba(a, c, d) { if (b.isNumber(a)) return c = b.isNumber(c) ? c : H, d = b.isNumber(d) ? d : I, Math.max(c, Math.min(d, a)) } function ca(a) { if (b.isNumber(a)) { var c = Math.round((a - H) / J) * J + H; return c = Math.round(c * Math.pow(10, K)) / Math.pow(10, K), p && p.fitInputWidthToTextLength && e.debounce(function () { p.fitInputWidthToTextLength(c.toString().length) }, 100)(), c } } function da(a) { a = na(a); var b = 100 * a + "%"; u.css(C ? "bottom" : "left", b), w.css(C ? "height" : "width", b), l.toggleClass("_md-min", 0 === a), l.toggleClass("_md-max", 1 === a) } function fa(a) { if (!r()) { l.addClass("_md-active"), l[0].focus(), V(); var b = pa(oa(C ? a.pointer.y : a.pointer.x)), c = ba(ca(b)); d.$apply(function () { _(c), da(qa(c)) }) } } function ga(a) { if (!r()) { l.removeClass("_md-dragging"); var b = pa(oa(C ? a.pointer.y : a.pointer.x)), c = ba(ca(b)); d.$apply(function () { _(c), aa() }) } } function ha(a) { r() || (ea = !0, a.stopPropagation(), l.addClass("_md-dragging"), ka(a)) } function ia(a) { ea && (a.stopPropagation(), ka(a)) } function ja(a) { ea && (a.stopPropagation(), ea = !1) } function ka(a) { D ? ma(C ? a.pointer.y : a.pointer.x) : la(C ? a.pointer.y : a.pointer.x) } function la(a) { d.$evalAsync(function () { _(pa(oa(a))) }) } function ma(a) { var b = pa(oa(a)), c = ba(ca(b)); da(oa(a)), t.text(c) } function na(a) { return Math.max(0, Math.min(a || 0, 1)) } function oa(a) { var b = C ? U.top : U.left, c = C ? U.height : U.width, d = (a - b) / c; return Math.max(0, Math.min(1, C ? 1 - d : d)) } function pa(a) { return H + a * (I - H) } function qa(a) { return (a - H) / (I - H) } g(l); var o = n[0] || { $setViewValue: function (a) { this.$viewValue = a, this.$viewChangeListeners.forEach(function (a) { a() }) }, $parsers: [], $formatters: [], $viewChangeListeners: [] }, p = n[1], r = (b.element(e.getClosest(l, "_md-slider-container", !0)), m.ngDisabled ? b.bind(null, i(m.ngDisabled), d.$parent) : function () { return l[0].hasAttribute("disabled") }), s = b.element(l[0].querySelector("._md-thumb")), t = b.element(l[0].querySelector("._md-thumb-text")), u = s.parent(), v = b.element(l[0].querySelector("._md-track-container")), w = b.element(l[0].querySelector("._md-track-fill")), x = b.element(l[0].querySelector("._md-track-ticks")), y = b.element(l[0].getElementsByClassName("_md-slider-wrapper")), A = (b.element(l[0].getElementsByClassName("_md-slider-content")), e.throttle(V, 5e3)), B = 3, C = b.isDefined(m.mdVertical), D = b.isDefined(m.mdDiscrete); b.isDefined(m.min) ? m.$observe("min", L) : L(0), b.isDefined(m.max) ? m.$observe("max", M) : M(100), b.isDefined(m.step) ? m.$observe("step", N) : N(1), b.isDefined(m.round) ? m.$observe("round", O) : O(B); var E = b.noop; m.ngDisabled && (E = d.$parent.$watch(m.ngDisabled, P)), h.register(y, "drag", { horizontal: !C }), d.mouseActive = !1, y.on("keydown", X).on("mousedown", Y).on("focus", Z).on("blur", $).on("$md.pressdown", fa).on("$md.pressup", ga).on("$md.dragstart", ha).on("$md.drag", ia).on("$md.dragend", ja), setTimeout(F, 0); var G = a.throttle(F); b.element(c).on("resize", G), d.$on("$destroy", function () { b.element(c).off("resize", G) }), o.$render = aa, o.$viewChangeListeners.push(aa), o.$formatters.push(ba), o.$formatters.push(ca); var H, I, J, K, Q, R, U = {}; V(); var ea = !1 } return { scope: {}, require: ["?ngModel", "?^mdSliderContainer"], template: '<div class="_md-slider-wrapper"><div class="_md-slider-content"><div class="_md-track-container"><div class="_md-track"></div><div class="_md-track _md-track-fill"></div><div class="_md-track-ticks"></div></div><div class="_md-thumb-container"><div class="_md-thumb"></div><div class="_md-focus-thumb"></div><div class="_md-focus-ring"></div><div class="_md-sign"><span class="_md-thumb-text"></span></div><div class="_md-disabled-thumb"></div></div></div></div>', compile: l } } b.module("material.components.slider", ["material.core"]).directive("mdSlider", d).directive("mdSliderContainer", a), d.$inject = ["$$rAF", "$window", "$mdAria", "$mdUtil", "$mdConstant", "$mdTheming", "$mdGesture", "$parse", "$log", "$timeout"] }(), function () { function a(a, c, d, e) { return { restrict: "E", replace: !0, transclude: !0, template: '<div class="md-subheader">  <div class="_md-subheader-inner">    <span class="_md-subheader-content"></span>  </div></div>', link: function (g, h, i, j, k) { function m(a) { return b.element(a[0].querySelector("._md-subheader-content")) } d(h); var l = h[0].outerHTML; k(g, function (a) { m(h).append(a) }), h.hasClass("md-no-sticky") || k(g, function (b) { var d = '<div class="_md-subheader-wrapper">' + l + "</div>", f = c(d)(g); a(g, h, f), e.nextTick(function () { m(f).append(b) }) }) } } } b.module("material.components.subheader", ["material.core", "material.components.sticky"]).directive("mdSubheader", a), a.$inject = ["$mdSticky", "$compile", "$mdTheming", "$mdUtil"] }(), function () { function a(a) { function d(a) { function d(d, e, f) { var g = a(f[b]); e.on(c, function (a) { d.$apply(function () { g(d, { $event: a }) }) }) } return { restrict: "A", link: d } } var b = "md" + a, c = "$md." + a.toLowerCase(); return d.$inject = ["$parse"], d } b.module("material.components.swipe", ["material.core"]).directive("mdSwipeLeft", a("SwipeLeft")).directive("mdSwipeRight", a("SwipeRight")).directive("mdSwipeUp", a("SwipeUp")).directive("mdSwipeDown", a("SwipeDown")) }(), function () {
        function a(a, c, d, e, f, g) {
            function i(a, i) {
                var j = h.compile(a, i); return a.addClass("_md-dragging"), function (a, h, i, k) {
                    function p(b) { l && l(a) || (b.stopPropagation(), h.addClass("_md-dragging"), o = { width: m.prop("offsetWidth") }) } function q(a) { if (o) { a.stopPropagation(), a.srcEvent && a.srcEvent.preventDefault(); var b = a.pointer.distanceX / o.width, c = k.$viewValue ? 1 + b : b; c = Math.max(0, Math.min(1, c)), m.css(d.CSS.TRANSFORM, "translate3d(" + 100 * c + "%,0,0)"), o.translate = c } } function r(a) { if (o) { a.stopPropagation(), h.removeClass("_md-dragging"), m.css(d.CSS.TRANSFORM, ""); var b = k.$viewValue ? o.translate > .5 : o.translate < .5; b && s(!k.$viewValue), o = null } } function s(b) { a.$apply(function () { k.$setViewValue(b), k.$render() }) } k = k || c.fakeNgModel(); var l = null; null != i.disabled ? l = function () { return !0 } : i.ngDisabled && (l = e(i.ngDisabled)); var m = b.element(h[0].querySelector("._md-thumb-container")), n = b.element(h[0].querySelector("._md-container")); f(function () { h.removeClass("_md-dragging") }), j(a, h, i, k), l && a.$watch(l, function (a) { h.attr("tabindex", a ? -1 : 0) }), g.register(n, "drag"), n.on("$md.dragstart", p).on("$md.drag", q).on("$md.dragend", r);
                    var o
                }
            } var h = a[0]; return { restrict: "E", priority: 210, transclude: !0, template: '<div class="_md-container"><div class="_md-bar"></div><div class="_md-thumb-container"><div class="_md-thumb" md-ink-ripple md-ink-ripple-checkbox></div></div></div><div ng-transclude class="_md-label"></div>', require: "?ngModel", compile: i }
        } b.module("material.components.switch", ["material.core", "material.components.checkbox"]).directive("mdSwitch", a), a.$inject = ["mdCheckboxDirective", "$mdUtil", "$mdConstant", "$parse", "$$rAF", "$mdGesture"]
    }(), function () { b.module("material.components.tabs", ["material.core", "material.components.icon"]) }(), function () { function a(a) { return { restrict: "E", link: function (c, d, e) { c.$on("$destroy", function () { a.destroy() }) } } } function c(a) { function f(a) { d = a } function g(a, c, e, f) { function h(b, h, i) { d = i.textContent || i.content; var k = !f("gt-sm"); return h = e.extractElementByName(h, "md-toast", !0), i.element = h, i.onSwipe = function (a, b) { var d = a.type.replace("$md.", ""), f = d.replace("swipe", ""); "down" === f && i.position.indexOf("top") != -1 && !k || "up" === f && (i.position.indexOf("bottom") != -1 || k) || ("left" !== f && "right" !== f || !k) && (h.addClass("_md-" + d), e.nextTick(c.cancel)) }, i.openClass = j(i.position), i.parent.addClass(i.openClass), e.hasComputedStyle(i.parent, "position", "static") && i.parent.css("position", "relative"), h.on(g, i.onSwipe), h.addClass(k ? "_md-bottom" : i.position.split(" ").map(function (a) { return "_md-" + a }).join(" ")), i.parent && i.parent.addClass("_md-toast-animating"), a.enter(h, i.parent).then(function () { i.parent && i.parent.removeClass("_md-toast-animating") }) } function i(b, c, d) { return c.off(g, d.onSwipe), d.parent && d.parent.addClass("_md-toast-animating"), d.openClass && d.parent.removeClass(d.openClass), (1 == d.$destroy ? c.remove() : a.leave(c)).then(function () { d.parent && d.parent.removeClass("_md-toast-animating"), e.hasComputedStyle(d.parent, "position", "static") && d.parent.css("position", "") }) } function j(a) { return f("gt-xs") ? "_md-toast-open-" + (a.indexOf("top") > -1 ? "top" : "bottom") : "_md-toast-open-bottom" } var g = "$md.swipeleft $md.swiperight $md.swipeup $md.swipedown"; return { onShow: h, onRemove: i, position: "bottom left", themable: !0, hideDelay: 3e3, autoWrap: !0, transformTemplate: function (a, c) { var d = c.autoWrap && a && !/md-toast-content/g.test(a); if (d) { var e = document.createElement("md-template"); e.innerHTML = a; for (var f = 0; f < e.children.length; f++)if ("MD-TOAST" === e.children[f].nodeName) { var g = b.element('<div class="md-toast-content">'); g.append(e.children[f].children), e.children[f].appendChild(g[0]) } return e.outerHTML } return a || "" } } } var d, c = "ok", e = a("$mdToast").setDefaults({ methods: ["position", "hideDelay", "capsule", "parent", "position"], options: g }).addPreset("simple", { argOption: "textContent", methods: ["textContent", "content", "action", "highlightAction", "highlightClass", "theme", "parent"], options: ["$mdToast", "$mdTheming", function (a, b) { return { template: '<md-toast md-theme="{{ toast.theme }}" ng-class="{\'md-capsule\': toast.capsule}">  <div class="md-toast-content">    <span flex class="md-toast-text" role="alert" aria-relevant="all" aria-atomic="true">      {{ toast.content }}    </span>    <md-button class="md-action" ng-if="toast.action" ng-click="toast.resolve()"         ng-class="highlightClasses">      {{ toast.action }}    </md-button>  </div></md-toast>', controller: ["$scope", function (e) { var f = this; f.highlightAction && (e.highlightClasses = ["md-highlight", f.highlightClass]), e.$watch(function () { return d }, function () { f.content = d }), this.resolve = function () { a.hide(c) } }], theme: b.defaultTheme(), controllerAs: "toast", bindToController: !0 } }] }).addMethod("updateTextContent", f).addMethod("updateContent", f); return g.$inject = ["$animate", "$mdToast", "$mdUtil", "$mdMedia"], e } b.module("material.components.toast", ["material.core", "material.components.button"]).directive("mdToast", a).provider("$mdToast", c), a.$inject = ["$mdToast"], c.$inject = ["$$interimElementProvider"] }(), function () { function a(a, c, d, e, f) { var g = b.bind(null, d.supplant, "translate3d(0,{0}px,0)"); return { template: "", restrict: "E", link: function (h, i, j) { function k() { function r(a) { var b = i.parent().find("md-content"); !k && b.length && s(null, b), a = h.$eval(a), a === !1 ? l() : l = u() } function s(a, b) { b && i.parent()[0] === b.parent()[0] && (k && k.off("scroll", p), k = b, l = u()) } function t(a) { var b = a ? a.target.scrollTop : n; q(), m = Math.min(e / o, Math.max(0, m + b - n)), i.css(c.CSS.TRANSFORM, g([-m * o])), k.css(c.CSS.TRANSFORM, g([(e - m) * o])), n = b, d.nextTick(function () { var a = i.hasClass("md-whiteframe-z1"); a && !m ? f.removeClass(i, "md-whiteframe-z1") : !a && m && f.addClass(i, "md-whiteframe-z1") }) } function u() { return k ? (k.on("scroll", p), k.attr("scroll-shrink", "true"), a(v), function () { k.off("scroll", p), k.attr("scroll-shrink", "false"), a(v) }) : b.noop } function v() { e = i.prop("offsetHeight"); var a = -e * o + "px"; k.css({ "margin-top": a, "margin-bottom": a }), t() } var e, k, l = b.noop, m = 0, n = 0, o = j.mdShrinkSpeedFactor || .5, p = a.throttle(t), q = d.debounce(v, 5e3); h.$on("$mdContentLoaded", s), j.$observe("mdScrollShrink", r), j.ngShow && h.$watch(j.ngShow, v), j.ngHide && h.$watch(j.ngHide, v), h.$on("$destroy", l) } e(i), b.isDefined(j.mdScrollShrink) && k() } } } b.module("material.components.toolbar", ["material.core", "material.components.content"]).directive("mdToolbar", a), a.$inject = ["$$rAF", "$mdConstant", "$mdUtil", "$mdTheming", "$animate"] }(), function () { function a() { return { controller: f, template: c, compile: function (b, c) { b.addClass("md-virtual-repeat-container").addClass(c.hasOwnProperty("mdOrientHorizontal") ? "md-orient-horizontal" : "md-orient-vertical") } } } function c(a) { return '<div class="md-virtual-repeat-scroller"><div class="md-virtual-repeat-sizer"></div><div class="md-virtual-repeat-offsetter">' + a[0].innerHTML + "</div></div>" } function f(a, c, d, e, f, g, h, i) { this.$rootScope = e, this.$scope = g, this.$element = h, this.$attrs = i, this.size = 0, this.scrollSize = 0, this.scrollOffset = 0, this.horizontal = this.$attrs.hasOwnProperty("mdOrientHorizontal"), this.repeater = null, this.autoShrink = this.$attrs.hasOwnProperty("mdAutoShrink"), this.autoShrinkMin = parseInt(this.$attrs.mdAutoShrinkMin, 10) || 0, this.originalSize = null, this.offsetSize = parseInt(this.$attrs.mdOffsetSize, 10) || 0, this.oldElementSize = null, this.$attrs.mdTopIndex ? (this.bindTopIndex = d(this.$attrs.mdTopIndex), this.topIndex = this.bindTopIndex(this.$scope), b.isDefined(this.topIndex) || (this.topIndex = 0, this.bindTopIndex.assign(this.$scope, 0)), this.$scope.$watch(this.bindTopIndex, b.bind(this, function (a) { a !== this.topIndex && this.scrollToIndex(a) }))) : this.topIndex = 0, this.scroller = h[0].getElementsByClassName("md-virtual-repeat-scroller")[0], this.sizer = this.scroller.getElementsByClassName("md-virtual-repeat-sizer")[0], this.offsetter = this.scroller.getElementsByClassName("md-virtual-repeat-offsetter")[0]; var j = b.bind(this, this.updateSize); a(b.bind(this, function () { j(); var a = c.debounce(j, 10, null, !1), d = b.element(f); this.size || a(), d.on("resize", a), g.$on("$destroy", function () { d.off("resize", a) }), g.$emit("$md-resize-enable"), g.$on("$md-resize", j) })) } function g(a) { return { controller: h, priority: 1e3, require: ["mdVirtualRepeat", "^^mdVirtualRepeatContainer"], restrict: "A", terminal: !0, transclude: "element", compile: function (c, d) { var e = d.mdVirtualRepeat, f = e.match(/^\s*([\s\S]+?)\s+in\s+([\s\S]+?)\s*$/), g = f[1], h = a(f[2]), i = d.mdExtraName && a(d.mdExtraName); return function (b, c, d, e, f) { e[0].link_(e[1], f, g, h, i) } } } } function h(a, c, d, e, f, g, h, i) { this.$scope = a, this.$element = c, this.$attrs = d, this.$browser = e, this.$document = f, this.$rootScope = g, this.$$rAF = h, this.onDemand = i.parseAttributeBoolean(d.mdOnDemand), this.browserCheckUrlChange = e.$$checkUrlChange, this.newStartIndex = 0, this.newEndIndex = 0, this.newVisibleEnd = 0, this.startIndex = 0, this.endIndex = 0, this.itemSize = a.$eval(d.mdItemSize) || null, this.isFirstRender = !0, this.isVirtualRepeatUpdating_ = !1, this.itemsLength = 0, this.unwatchItemSize_ = b.noop, this.blocks = {}, this.pooledBlocks = [] } function i(a) { if (!b.isFunction(a.getItemAtIndex) || !b.isFunction(a.getLength)) throw Error("When md-on-demand is enabled, the Object passed to md-virtual-repeat must implement functions getItemAtIndex() and getLength() "); this.model = a } b.module("material.components.virtualRepeat", ["material.core", "material.components.showHide"]).directive("mdVirtualRepeatContainer", a).directive("mdVirtualRepeat", g); var d = 1533917, e = 3; f.$inject = ["$$rAF", "$mdUtil", "$parse", "$rootScope", "$window", "$scope", "$element", "$attrs"], f.prototype.register = function (a) { this.repeater = a, b.element(this.scroller).on("scroll wheel touchmove touchend", b.bind(this, this.handleScroll_)) }, f.prototype.isHorizontal = function () { return this.horizontal }, f.prototype.getSize = function () { return this.size }, f.prototype.setSize_ = function (a) { var b = this.getDimensionName_(); this.size = a, this.$element[0].style[b] = a + "px" }, f.prototype.unsetSize_ = function () { this.$element[0].style[this.getDimensionName_()] = this.oldElementSize, this.oldElementSize = null }, f.prototype.updateSize = function () { this.originalSize || (this.size = this.isHorizontal() ? this.$element[0].clientWidth : this.$element[0].clientHeight, this.handleScroll_(), this.repeater && this.repeater.containerUpdated()) }, f.prototype.getScrollSize = function () { return this.scrollSize }, f.prototype.getDimensionName_ = function () { return this.isHorizontal() ? "width" : "height" }, f.prototype.sizeScroller_ = function (a) { var b = this.getDimensionName_(), c = this.isHorizontal() ? "height" : "width"; if (this.sizer.innerHTML = "", a < d) this.sizer.style[b] = a + "px"; else { this.sizer.style[b] = "auto", this.sizer.style[c] = "auto"; var e = Math.floor(a / d), f = document.createElement("div"); f.style[b] = "1533917px", f.style[c] = "1px"; for (var g = 0; g < e; g++)this.sizer.appendChild(f.cloneNode(!1)); f.style[b] = a - e * d + "px", this.sizer.appendChild(f) } }, f.prototype.autoShrink_ = function (a) { var b = Math.max(a, this.autoShrinkMin * this.repeater.getItemSize()); if (this.autoShrink && b !== this.size) { null === this.oldElementSize && (this.oldElementSize = this.$element[0].style[this.getDimensionName_()]); var c = this.originalSize || this.size; !c || b < c ? (this.originalSize || (this.originalSize = this.size), this.setSize_(b)) : null !== this.originalSize && (this.unsetSize_(), this.originalSize = null, this.updateSize()), this.repeater.containerUpdated() } }, f.prototype.setScrollSize = function (a) { var b = a + this.offsetSize; this.scrollSize !== b && (this.sizeScroller_(b), this.autoShrink_(b), this.scrollSize = b) }, f.prototype.getScrollOffset = function () { return this.scrollOffset }, f.prototype.scrollTo = function (a) { this.scroller[this.isHorizontal() ? "scrollLeft" : "scrollTop"] = a, this.handleScroll_() }, f.prototype.scrollToIndex = function (a) { var b = this.repeater.getItemSize(), c = this.repeater.itemsLength; a > c && (a = c - 1), this.scrollTo(b * a) }, f.prototype.resetScroll = function () { this.scrollTo(0) }, f.prototype.handleScroll_ = function () { var a = b.element(document)[0], c = "rtl" != a.dir && "rtl" != a.body.dir; c || this.maxSize || (this.scroller.scrollLeft = this.scrollSize, this.maxSize = this.scroller.scrollLeft); var d = this.isHorizontal() ? c ? this.scroller.scrollLeft : this.maxSize - this.scroller.scrollLeft : this.scroller.scrollTop; if (!(d === this.scrollOffset || d > this.scrollSize - this.size)) { var f = this.repeater.getItemSize(); if (f) { var g = Math.max(0, Math.floor(d / f) - e), h = (this.isHorizontal() ? "translateX(" : "translateY(") + (!this.isHorizontal() || c ? g * f : -(g * f)) + "px)"; if (this.scrollOffset = d, this.offsetter.style.webkitTransform = h, this.offsetter.style.transform = h, this.bindTopIndex) { var i = Math.floor(d / f); i !== this.topIndex && i < this.repeater.getItemCount() && (this.topIndex = i, this.bindTopIndex.assign(this.$scope, i), this.$rootScope.$$phase || this.$scope.$digest()) } this.repeater.containerUpdated() } } }, g.$inject = ["$parse"], h.$inject = ["$scope", "$element", "$attrs", "$browser", "$document", "$rootScope", "$$rAF", "$mdUtil"], h.Block, h.prototype.link_ = function (a, c, d, e, f) { this.container = a, this.transclude = c, this.repeatName = d, this.rawRepeatListExpression = e, this.extraName = f, this.sized = !1, this.repeatListExpression = b.bind(this, this.repeatListExpression_), this.container.register(this) }, h.prototype.readItemSize_ = function () { if (!this.itemSize) { this.items = this.repeatListExpression(this.$scope), this.parentNode = this.$element[0].parentNode; var a = this.getBlock_(0); a.element[0].parentNode || this.parentNode.appendChild(a.element[0]), this.itemSize = a.element[0][this.container.isHorizontal() ? "offsetWidth" : "offsetHeight"] || null, this.blocks[0] = a, this.poolBlock_(0), this.itemSize && this.containerUpdated() } }, h.prototype.repeatListExpression_ = function (a) { var b = this.rawRepeatListExpression(a); if (this.onDemand && b) { var c = new i(b); return c.$$includeIndexes(this.newStartIndex, this.newVisibleEnd), c } return b }, h.prototype.containerUpdated = function () { return this.itemSize ? (this.sized || (this.items = this.repeatListExpression(this.$scope)), this.sized || (this.unwatchItemSize_(), this.sized = !0, this.$scope.$watchCollection(this.repeatListExpression, b.bind(this, function (a, b) { this.isVirtualRepeatUpdating_ || this.virtualRepeatUpdate_(a, b) }))), this.updateIndexes_(), void ((this.newStartIndex !== this.startIndex || this.newEndIndex !== this.endIndex || this.container.getScrollOffset() > this.container.getScrollSize()) && (this.items instanceof i && this.items.$$includeIndexes(this.newStartIndex, this.newEndIndex), this.virtualRepeatUpdate_(this.items, this.items)))) : (this.unwatchItemSize_ = this.$scope.$watchCollection(this.repeatListExpression, b.bind(this, function (a) { a && a.length && this.$$rAF(b.bind(this, this.readItemSize_)) })), void (this.$rootScope.$$phase || this.$scope.$digest())) }, h.prototype.getItemSize = function () { return this.itemSize }, h.prototype.getItemCount = function () { return this.itemsLength }, h.prototype.virtualRepeatUpdate_ = function (a, c) { this.isVirtualRepeatUpdating_ = !0; var d = a && a.length || 0, e = !1; if (this.items && d < this.items.length && 0 !== this.container.getScrollOffset()) return this.items = a, void this.container.resetScroll(); if (d !== this.itemsLength && (e = !0, this.itemsLength = d), this.items = a, (a !== c || e) && this.updateIndexes_(), this.parentNode = this.$element[0].parentNode, e && this.container.setScrollSize(d * this.itemSize), this.isFirstRender) { this.isFirstRender = !1; var f = this.$attrs.mdStartIndex ? this.$scope.$eval(this.$attrs.mdStartIndex) : this.container.topIndex; this.container.scrollToIndex(f) } Object.keys(this.blocks).forEach(function (a) { var b = parseInt(a, 10); (b < this.newStartIndex || b >= this.newEndIndex) && this.poolBlock_(b) }, this), this.$browser.$$checkUrlChange = b.noop; var g, h, i = [], j = []; for (g = this.newStartIndex; g < this.newEndIndex && null == this.blocks[g]; g++)h = this.getBlock_(g), this.updateBlock_(h, g), i.push(h); for (; null != this.blocks[g]; g++)this.updateBlock_(this.blocks[g], g); for (var k = g - 1; g < this.newEndIndex; g++)h = this.getBlock_(g), this.updateBlock_(h, g), j.push(h); i.length && this.parentNode.insertBefore(this.domFragmentFromBlocks_(i), this.$element[0].nextSibling), j.length && this.parentNode.insertBefore(this.domFragmentFromBlocks_(j), this.blocks[k] && this.blocks[k].element[0].nextSibling), this.$browser.$$checkUrlChange = this.browserCheckUrlChange, this.startIndex = this.newStartIndex, this.endIndex = this.newEndIndex, this.isVirtualRepeatUpdating_ = !1 }, h.prototype.getBlock_ = function (a) { if (this.pooledBlocks.length) return this.pooledBlocks.pop(); var c; return this.transclude(b.bind(this, function (b, d) { c = { element: b, new: !0, scope: d }, this.updateScope_(d, a), this.parentNode.appendChild(b[0]) })), c }, h.prototype.updateBlock_ = function (a, b) { this.blocks[b] = a, (a.new || a.scope.$index !== b || a.scope[this.repeatName] !== this.items[b]) && (a.new = !1, this.updateScope_(a.scope, b), this.$rootScope.$$phase || a.scope.$digest()) }, h.prototype.updateScope_ = function (a, b) { a.$index = b, a[this.repeatName] = this.items && this.items[b], this.extraName && (a[this.extraName(this.$scope)] = this.items[b]) }, h.prototype.poolBlock_ = function (a) { this.pooledBlocks.push(this.blocks[a]), this.parentNode.removeChild(this.blocks[a].element[0]), delete this.blocks[a] }, h.prototype.domFragmentFromBlocks_ = function (a) { var b = this.$document[0].createDocumentFragment(); return a.forEach(function (a) { b.appendChild(a.element[0]) }), b }, h.prototype.updateIndexes_ = function () { var a = this.items ? this.items.length : 0, b = Math.ceil(this.container.getSize() / this.itemSize); this.newStartIndex = Math.max(0, Math.min(a - b, Math.floor(this.container.getScrollOffset() / this.itemSize))), this.newVisibleEnd = this.newStartIndex + b + e, this.newEndIndex = Math.min(a, this.newVisibleEnd), this.newStartIndex = Math.max(0, this.newStartIndex - e) }, i.prototype.$$includeIndexes = function (a, b) { for (var c = a; c < b; c++)this.hasOwnProperty(c) || (this[c] = this.model.getItemAtIndex(c)); this.length = this.model.getLength() } }(), function () { function a(a, c, d, e, f, g, h, i, j) { function m(h, m, n) { function s() { h.delay = h.delay || k } function t() { var a = "center top"; switch (h.direction) { case "left": a = "right center"; break; case "right": a = "left center"; break; case "top": a = "center bottom"; break; case "bottom": a = "center top" }p.css("transform-origin", a) } function u() { h.$on("$destroy", function () { h.visible = !1, m.remove(), b.element(c).off("resize", r) }), h.$watch("visible", function (a) { a ? z() : A() }), h.$watch("direction", B) } function v() { o.attr("aria-label") || o.text().trim() || o.attr("aria-label", m.text().trim()) } function w() { m.detach(), m.attr("role", "tooltip") } function x() { function j() { y(!1) } var a = !1, d = b.element(c); if (o[0] && "MutationObserver" in c) { var f = new MutationObserver(function (a) { a.forEach(function (a) { "disabled" === a.attributeName && o[0].disabled && (y(!1), h.$digest()) }) }); f.observe(o[0], { attributes: !0 }) } var g = function () { i = document.activeElement === o[0] }, i = !1; d.on("blur", g), d.on("resize", r), document.addEventListener("scroll", j, !0), h.$on("$destroy", function () { d.off("blur", g), d.off("resize", r), document.removeEventListener("scroll", j, !0), f && f.disconnect() }); var k = function (a) { return "focus" === a.type && i ? void (i = !1) : (o.on("blur mouseleave touchend touchcancel", l), void y(!0)) }, l = function () { var b = h.hasOwnProperty("autohide") ? h.autohide : n.hasOwnProperty("mdAutohide"); (b || a || e[0].activeElement !== o[0]) && (o.off("blur mouseleave touchend touchcancel", l), o.triggerHandler("blur"), y(!1)), a = !1 }; o.on("mousedown", function () { a = !0 }), o.on("focus mouseenter touchstart", k) } function y(b) { y.value = !!b, y.queued || (b ? (y.queued = !0, a(function () { h.visible = y.value, y.queued = !1 }, h.delay)) : f.nextTick(function () { h.visible = !1 })) } function z() { return q.append(m), f.hasComputedStyle(m, "display", "none") ? (h.visible = !1, void m.detach()) : (B(), void b.forEach([m, p], function (a) { i.addClass(a, "_md-show") })) } function A() { var a = []; b.forEach([m, p], function (b) { b.parent() && b.hasClass("_md-show") && a.push(i.removeClass(b, "_md-show")) }), j.all(a).then(function () { h.visible || m.detach() }) } function B() { h.visible && (t(), C()) } function C() { function e(b) { var c = { left: b.left, top: b.top }; return c.left = Math.min(c.left, q.prop("scrollWidth") - a.width - l), c.left = Math.max(c.left, l), c.top = Math.min(c.top, q.prop("scrollHeight") - a.height - l), c.top = Math.max(c.top, l), c } function g(c) { return "left" === c ? { left: b.left - a.width - l, top: b.top + b.height / 2 - a.height / 2 } : "right" === c ? { left: b.left + b.width + l, top: b.top + b.height / 2 - a.height / 2 } : "top" === c ? { left: b.left + b.width / 2 - a.width / 2, top: b.top - a.height - l } : { left: b.left + b.width / 2 - a.width / 2, top: b.top + b.height + l } } var a = f.offsetRect(m, q), b = f.offsetRect(o, q), c = g(h.direction), d = m.prop("offsetParent"); h.direction ? c = e(c) : d && c.top > d.scrollHeight - a.height - l && (c = e(g("top"))), m.css({ left: c.left + "px", top: c.top + "px" }) } g(m); var o = f.getParentWithPointerEvents(m), p = b.element(m[0].getElementsByClassName("_md-content")[0]), q = b.element(document.body), r = d.throttle(function () { B() }); i.pin && i.pin(m, o), s(), w(), x(), t(), u(), v() } var k = 0, l = 8; return { restrict: "E", transclude: !0, priority: 210, template: '<div class="_md-content" ng-transclude></div>', scope: { delay: "=?mdDelay", visible: "=?mdVisible", autohide: "=?mdAutohide", direction: "@?mdDirection" }, link: m } } b.module("material.components.tooltip", ["material.core"]).directive("mdTooltip", a), a.$inject = ["$timeout", "$window", "$$rAF", "$document", "$mdUtil", "$mdTheming", "$rootElement", "$animate", "$q"] }(), function () { function a(a) { function e(e, f, g) { var h = parseInt(g.mdWhiteframe, 10) || d; (h > c || h < b) && (a.warn("md-whiteframe attribute value is invalid. It should be a number between " + b + " and " + c, f[0]), h = d), f.addClass("md-whiteframe-" + h + "dp") } var b = 1, c = 24, d = 4; return { restrict: "A", link: e } } b.module("material.components.whiteframe", ["material.core"]).directive("mdWhiteframe", a), a.$inject = ["$log"] }(), function () { function g(a, g, h, i, j, k, l, m, n, o) { function z() { h.initOptionalProperties(a, n, { searchText: null, selectedItem: null }), j(g), D(), h.nextTick(function () { F(), B(), C(), g.on("focus", C) }) } function A() { function q() { var a = 0, b = g.find("md-input-container"); if (b.length) { var c = b.find("input"); a = b.prop("offsetHeight"), a -= c.prop("offsetTop"), a -= c.prop("offsetHeight"), a += b.prop("offsetTop") } return a } function r() { var a = s.scrollContainer.getBoundingClientRect(), c = {}; a.right > i.right - e && (c.left = b.right - a.width + "px"), s.$.scrollContainer.css(c) } if (!s) return h.nextTick(A, !1, a); var p, b = s.wrap.getBoundingClientRect(), c = s.snap.getBoundingClientRect(), i = s.root.getBoundingClientRect(), j = c.bottom - i.top, k = i.bottom - c.top, l = b.left - i.left, m = b.width, o = q(); n.mdFloatingLabel && (l += f, m -= 2 * f), p = { left: l + "px", minWidth: m + "px", maxWidth: Math.max(b.right - i.left, i.right - b.left) - e + "px" }, j > k && i.height - b.bottom - e < d ? (p.top = "auto", p.bottom = k + "px", p.maxHeight = Math.min(d, b.top - i.top - e) + "px") : (p.top = j - o + "px", p.bottom = "auto", p.maxHeight = Math.min(d, i.bottom + h.scrollTop() - b.bottom - e) + "px"), s.$.scrollContainer.css(p), h.nextTick(r, !1) } function B() { s.$.root.length && (j(s.$.scrollContainer), s.$.scrollContainer.detach(), s.$.root.append(s.$.scrollContainer), l.pin && l.pin(s.$.scrollContainer, m)) } function C() { a.autofocus && s.input.focus() } function D() { var c = parseInt(a.delay, 10) || 0; n.$observe("disabled", function (a) { p.isDisabled = h.parseAttributeBoolean(a, !1) }), n.$observe("required", function (a) { p.isRequired = h.parseAttributeBoolean(a, !1) }), n.$observe("readonly", function (a) { p.isReadonly = h.parseAttributeBoolean(a, !1) }), a.$watch("searchText", c ? h.debounce(S, c) : S), a.$watch("selectedItem", M), b.element(k).on("resize", A), a.$on("$destroy", E) } function E() { if (p.hidden || h.enableScrolling(), b.element(k).off("resize", A), s) { var a = "ul scroller scrollContainer input".split(" "); b.forEach(a, function (a) { s.$[a].remove() }) } } function F() { s = { main: g[0], scrollContainer: g[0].getElementsByClassName("md-virtual-repeat-container")[0], scroller: g[0].getElementsByClassName("md-virtual-repeat-scroller")[0], ul: g.find("ul")[0], input: g.find("input")[0], wrap: g.find("md-autocomplete-wrap")[0], root: document.body }, s.li = s.ul.getElementsByTagName("li"), s.snap = G(), s.$ = H(s) } function G() { for (var a = g; a.length; a = a.parent())if (b.isDefined(a.attr("md-autocomplete-snap"))) return a[0]; return s.wrap } function H(a) { var c = {}; for (var d in a) a.hasOwnProperty(d) && (c[d] = b.element(a[d])); return c } function I(b, c) { !b && c ? (A(), s && h.nextTick(function () { h.disableScrollAround(s.ul) }, !1, a)) : b && !c && h.nextTick(function () { h.enableScrolling() }, !1, a) } function J() { u = !0 } function K() { w || s.input.focus(), u = !1, p.hidden = aa() } function L() { s.input.focus() } function M(b, c) { b && Y(b).then(function (d) { a.searchText = d, P(b, c) }), b !== c && N() } function N() { b.isFunction(a.itemChange) && a.itemChange(Z(a.selectedItem)) } function O() { b.isFunction(a.textChange) && a.textChange() } function P(a, b) { v.forEach(function (c) { c(a, b) }) } function Q(a) { v.indexOf(a) == -1 && v.push(a) } function R(a) { var b = v.indexOf(a); b != -1 && v.splice(b, 1) } function S(b, c) { p.index = $(), b !== c && Y(a.selectedItem).then(function (d) { b !== d && (a.selectedItem = null, b !== c && O(), ga() ? ra() : (p.matches = [], _(!1), la())) }) } function T() { w = !1, u || (p.hidden = aa()) } function U(a) { a && (u = !1, w = !1), s.input.blur() } function V() { w = !0, b.isString(a.searchText) || (a.searchText = ""), p.hidden = aa(), p.hidden || ra() } function W(a) { switch (a.keyCode) { case i.KEY_CODE.DOWN_ARROW: if (p.loading) return; a.stopPropagation(), a.preventDefault(), p.index = Math.min(p.index + 1, p.matches.length - 1), na(), la(); break; case i.KEY_CODE.UP_ARROW: if (p.loading) return; a.stopPropagation(), a.preventDefault(), p.index = p.index < 0 ? p.matches.length - 1 : Math.max(0, p.index - 1), na(), la(); break; case i.KEY_CODE.TAB: if (K(), p.hidden || p.loading || p.index < 0 || p.matches.length < 1) return; ia(p.index); break; case i.KEY_CODE.ENTER: if (p.hidden || p.loading || p.index < 0 || p.matches.length < 1) return; if (da()) return; a.stopPropagation(), a.preventDefault(), ia(p.index); break; case i.KEY_CODE.ESCAPE: a.stopPropagation(), a.preventDefault(), ja(), U(!0) } } function X() { return b.isNumber(a.minLength) ? a.minLength : 1 } function Y(b) { function c(b) { return b && a.itemText ? a.itemText(Z(b)) : null } return o.when(c(b) || b) } function Z(a) { if (!a) return c; var b = {}; return p.itemName && (b[p.itemName] = a), b } function $() { return a.autoselect ? 0 : -1 } function _(a) { p.loading != a && (p.loading = a), p.hidden = aa() } function aa() { return !(!p.loading || ca()) || (!!da() || (!w || !ba())) } function ba() { return ga() && ca() || qa() } function ca() { return !!p.matches.length } function da() { return !!p.scope.selectedItem } function ea() { return p.loading && !da() } function fa() { return Y(p.matches[p.index]) } function ga() { return (a.searchText || "").length >= X() } function ha(a, b, c) { Object.defineProperty(p, a, { get: function () { return c }, set: function (a) { var d = c; c = a, b(a, d) } }) } function ia(b) { h.nextTick(function () { Y(p.matches[b]).then(function (a) { var b = s.$.input.controller("ngModel"); b.$setViewValue(a), b.$render() }).finally(function () { a.selectedItem = p.matches[b], _(!1) }) }, !1) } function ja() { _(!0), p.index = 0, p.matches = [], a.searchText = ""; var b = document.createEvent("CustomEvent"); b.initCustomEvent("input", !0, !0, { value: a.searchText }), s.input.dispatchEvent(b), s.input.focus() } function ka(c) { function i(b) { b && (b = o.when(b), y++ , _(!0), h.nextTick(function () { b.then(j).finally(function () { 0 === --y && _(!1) }) }, !0, a)) } function j(b) { t[e] = b, (c || "") === (a.searchText || "") && (p.matches = b, p.hidden = aa(), p.loading && _(!1), a.selectOnMatch && sa(), la(), A()) } var d = a.$parent.$eval(r), e = c.toLowerCase(), f = b.isArray(d), g = !!d.then; f ? j(d) : g && i(d) } function la() { fa().then(function (a) { p.messages = [ma(), a] }) } function ma() { if (x === p.matches.length) return ""; switch (x = p.matches.length, p.matches.length) { case 0: return "There are no matches available."; case 1: return "There is 1 match available."; default: return "There are " + p.matches.length + " matches available." } } function na() { if (s.li[0]) { var a = s.li[0].offsetHeight, b = a * p.index, c = b + a, d = s.scroller.clientHeight, e = s.scroller.scrollTop; b < e ? pa(b) : c > e + d && pa(c - d) } } function oa() { return 0 !== y } function pa(a) { s.$.scrollContainer.controller("mdVirtualRepeatContainer").scrollTo(a) } function qa() { var a = (p.scope.searchText || "").length; return p.hasNotFound && !ca() && (!p.loading || oa()) && a >= X() && (w || u) && !da() } function ra() { var b = a.searchText || "", c = b.toLowerCase(); !a.noCache && t[c] ? (p.matches = t[c], la()) : ka(b), p.hidden = aa() } function sa() { var b = a.searchText, c = p.matches, d = c[0]; 1 === c.length && Y(d).then(function (c) { var d = b == c; a.matchInsensitive && !d && (d = b.toLowerCase() == c.toLowerCase()), d && ia(0) }) } var p = this, q = a.itemsExpr.split(/ in /i), r = q[1], s = null, t = {}, u = !1, v = [], w = !1, x = 0, y = 0; return ha("hidden", I, !0), p.scope = a, p.parent = a.$parent, p.itemName = q[0], p.matches = [], p.loading = !1, p.hidden = !0, p.index = null, p.messages = [], p.id = h.nextUid(), p.isDisabled = null, p.isRequired = null, p.isReadonly = null, p.hasNotFound = !1, p.keydown = W, p.blur = T, p.focus = V, p.clear = ja, p.select = ia, p.listEnter = J, p.listLeave = K, p.mouseUp = L, p.getCurrentDisplayValue = fa, p.registerSelectedItemWatcher = Q, p.unregisterSelectedItemWatcher = R, p.notFoundVisible = qa, p.loadingIsVisible = ea, z() } b.module("material.components.autocomplete").controller("MdAutocompleteCtrl", g); var a = 41, d = 5.5 * a, e = 8, f = 2; g.$inject = ["$scope", "$element", "$mdUtil", "$mdConstant", "$mdTheming", "$window", "$animate", "$rootElement", "$attrs", "$q"] }(), function () {
        function a() {
            return {
                controller: "MdAutocompleteCtrl", controllerAs: "$mdAutocompleteCtrl", scope: { inputName: "@mdInputName", inputMinlength: "@mdInputMinlength", inputMaxlength: "@mdInputMaxlength", searchText: "=?mdSearchText", selectedItem: "=?mdSelectedItem", itemsExpr: "@mdItems", itemText: "&mdItemText", placeholder: "@placeholder", noCache: "=?mdNoCache", selectOnMatch: "=?mdSelectOnMatch", matchInsensitive: "=?mdMatchCaseInsensitive", itemChange: "&?mdSelectedItemChange", textChange: "&?mdSearchTextChange", minLength: "=?mdMinLength", delay: "=?mdDelay", autofocus: "=?mdAutofocus", floatingLabel: "@?mdFloatingLabel", autoselect: "=?mdAutoselect", menuClass: "@?mdMenuClass", inputId: "@?mdInputId" }, link: function (a, b, c, d) { d.hasNotFound = !!b.attr("md-has-not-found") }, template: function (a, b) {
                    function g() { var b = a.find("md-item-template").detach(), c = b.length ? b.html() : a.html(); return b.length || a.empty(), "<md-autocomplete-parent-scope md-autocomplete-replace>" + c + "</md-autocomplete-parent-scope>" } function h() { var b = a.find("md-not-found").detach(), c = b.length ? b.html() : ""; return c ? '<li ng-if="$mdAutocompleteCtrl.notFoundVisible()"                         md-autocomplete-parent-scope>' + c + "</li>" : "" } function i() { return b.mdFloatingLabel ? '            <md-input-container flex ng-if="floatingLabel">              <label>{{floatingLabel}}</label>              <input type="search"                  ' + (null != f ? 'tabindex="' + f + '"' : "") + '                  id="{{ inputId || \'fl-input-\' + $mdAutocompleteCtrl.id }}"                  name="{{inputName}}"                  autocomplete="off"                  ng-required="$mdAutocompleteCtrl.isRequired"                  ng-readonly="$mdAutocompleteCtrl.isReadonly"                  ng-minlength="inputMinlength"                  ng-maxlength="inputMaxlength"                  ng-disabled="$mdAutocompleteCtrl.isDisabled"                  ng-model="$mdAutocompleteCtrl.scope.searchText"                  ng-keydown="$mdAutocompleteCtrl.keydown($event)"                  ng-blur="$mdAutocompleteCtrl.blur()"                  ' + (null != b.mdNoAsterisk ? 'md-no-asterisk="' + b.mdNoAsterisk + '"' : "") + '                  ng-focus="$mdAutocompleteCtrl.focus()"                  aria-owns="ul-{{$mdAutocompleteCtrl.id}}"                  ' + (null != b.mdSelectOnFocus ? 'md-select-on-focus=""' : "") + '                  aria-label="{{floatingLabel}}"                  aria-autocomplete="list"                  aria-haspopup="true"                  aria-activedescendant=""                  aria-expanded="{{!$mdAutocompleteCtrl.hidden}}"/>              <div md-autocomplete-parent-scope md-autocomplete-replace>' + e + "</div>            </md-input-container>" : '            <input flex type="search"                ' + (null != f ? 'tabindex="' + f + '"' : "") + '                id="{{ inputId || \'input-\' + $mdAutocompleteCtrl.id }}"                name="{{inputName}}"                ng-if="!floatingLabel"                autocomplete="off"                ng-required="$mdAutocompleteCtrl.isRequired"                ng-disabled="$mdAutocompleteCtrl.isDisabled"                ng-readonly="$mdAutocompleteCtrl.isReadonly"                ng-model="$mdAutocompleteCtrl.scope.searchText"                ng-keydown="$mdAutocompleteCtrl.keydown($event)"                ng-blur="$mdAutocompleteCtrl.blur()"                ng-focus="$mdAutocompleteCtrl.focus()"                placeholder="{{placeholder}}"                aria-owns="ul-{{$mdAutocompleteCtrl.id}}"                ' + (null != b.mdSelectOnFocus ? 'md-select-on-focus=""' : "") + '                aria-label="{{placeholder}}"                aria-autocomplete="list"                aria-haspopup="true"                aria-activedescendant=""                aria-expanded="{{!$mdAutocompleteCtrl.hidden}}"/>                ' } var c = h(), d = g(), e = a.html(), f = b.tabindex; return c && a.attr("md-has-not-found", !0), a.attr("tabindex", "-1"), '        <md-autocomplete-wrap            layout="row"            ng-class="{ \'md-whiteframe-z1\': !floatingLabel, \'md-menu-showing\': !$mdAutocompleteCtrl.hidden }"            role="listbox">          ' + i() + '          <md-progress-linear              class="' + (b.mdFloatingLabel ? "md-inline" : "") + '"              ng-if="$mdAutocompleteCtrl.loadingIsVisible()"              md-mode="indeterminate"></md-progress-linear>          <md-virtual-repeat-container              md-auto-shrink              md-auto-shrink-min="1"              ng-mouseenter="$mdAutocompleteCtrl.listEnter()"              ng-mouseleave="$mdAutocompleteCtrl.listLeave()"              ng-mouseup="$mdAutocompleteCtrl.mouseUp()"              ng-hide="$mdAutocompleteCtrl.hidden"              class="md-autocomplete-suggestions-container md-whiteframe-z1"              ng-class="{ \'md-not-found\': $mdAutocompleteCtrl.notFoundVisible() }"              role="presentation">            <ul class="md-autocomplete-suggestions"                ng-class="::menuClass"                id="ul-{{$mdAutocompleteCtrl.id}}">              <li md-virtual-repeat="item in $mdAutocompleteCtrl.matches"                  ng-class="{ selected: $index === $mdAutocompleteCtrl.index }"                  ng-click="$mdAutocompleteCtrl.select($index)"                  md-extra-name="$mdAutocompleteCtrl.itemName">                  ' + d + "                  </li>" + c + '            </ul>          </md-virtual-repeat-container>        </md-autocomplete-wrap>        <aria-status            class="_md-visually-hidden"            role="status"            aria-live="assertive">          <p ng-repeat="message in $mdAutocompleteCtrl.messages track by $index" ng-if="message">{{message}}</p>        </aria-status>';
                }
            }
        } b.module("material.components.autocomplete").directive("mdAutocomplete", a)
    }(), function () { function a(a, b) { function c(a, c, d) { return function (c, e, f) { function j(a, d) { h[d] = c[a], c.$watch(a, function (a) { b.nextTick(function () { h[d] = a }) }) } function k() { var a = !1, b = !1; c.$watch(function () { b || a || (a = !0, c.$$postDigest(function () { b || h.$digest(), a = b = !1 })) }), h.$watch(function () { b = !0 }) } var g = c.$mdAutocompleteCtrl, h = g.parent.$new(), i = g.itemName; j("$index", "$index"), j("item", i), k(), d(h, function (a) { e.after(a) }) } } return { restrict: "AE", compile: c, terminal: !0, transclude: "element" } } b.module("material.components.autocomplete").directive("mdAutocompleteParentScope", a), a.$inject = ["$compile", "$mdUtil"] }(), function () { function a(a, c, d) { function e(e, f) { var h = null, i = null, j = d.mdHighlightFlags || "", k = a.$watch(function (a) { return { term: e(a), unsafeText: f(a) } }, function (a, d) { null !== h && a.unsafeText === d.unsafeText || (h = b.element("<div>").text(a.unsafeText).html()), null !== i && a.term === d.term || (i = g(a.term, j)), c.html(h.replace(i, '<span class="highlight">$&</span>')) }, !0); c.on("$destroy", k) } function f(a) { return a && a.replace(/[\\\^\$\*\+\?\.\(\)\|\{}\[\]]/g, "\\$&") } function g(a, b) { var c = ""; return b.indexOf("^") >= 1 && (c += "^"), c += a, b.indexOf("$") >= 1 && (c += "$"), new RegExp(f(c), b.replace(/[\$\^]/g, "")) } this.init = e } b.module("material.components.autocomplete").controller("MdHighlightCtrl", a), a.$inject = ["$scope", "$element", "$attrs"] }(), function () { function a(a, b) { return { terminal: !0, controller: "MdHighlightCtrl", compile: function (d, e) { var f = b(e.mdHighlightText), g = a(d.html()); return function (b, c, d, e) { e.init(f, g) } } } } b.module("material.components.autocomplete").directive("mdHighlightText", a), a.$inject = ["$interpolate", "$parse"] }(), function () { function d(a, b, d, e, f) { this.$scope = a, this.$element = b, this.$mdConstant = d, this.$timeout = e, this.$mdUtil = f, this.isEditting = !1, this.parentController = c, this.enableChipEdit = !1 } b.module("material.components.chips").controller("MdChipCtrl", d), d.$inject = ["$scope", "$element", "$mdConstant", "$timeout", "$mdUtil"], d.prototype.init = function (a) { this.parentController = a, this.enableChipEdit = this.parentController.enableChipEdit, this.enableChipEdit && (this.$element.on("keydown", this.chipKeyDown.bind(this)), this.$element.on("mousedown", this.chipMouseDown.bind(this)), this.getChipContent().addClass("_md-chip-content-edit-is-enabled")) }, d.prototype.getChipContent = function () { var a = this.$element[0].getElementsByClassName("_md-chip-content"); return b.element(a[0]) }, d.prototype.getContentElement = function () { return b.element(this.getChipContent().children()[0]) }, d.prototype.getChipIndex = function () { return parseInt(this.$element.attr("index")) }, d.prototype.goOutOfEditMode = function () { if (this.isEditting) { this.isEditting = !1, this.$element.removeClass("_md-chip-editing"), this.getChipContent()[0].contentEditable = "false"; var a = this.getChipIndex(), b = this.getContentElement().text(); b ? (this.parentController.updateChipContents(a, this.getContentElement().text()), this.$mdUtil.nextTick(function () { this.parentController.selectedChip === a && this.parentController.focusChip(a) }.bind(this))) : this.parentController.removeChipAndFocusInput(a) } }, d.prototype.selectNodeContents = function (b) { var c, d; document.body.createTextRange ? (c = document.body.createTextRange(), c.moveToElementText(b), c.select()) : a.getSelection && (d = a.getSelection(), c = document.createRange(), c.selectNodeContents(b), d.removeAllRanges(), d.addRange(c)) }, d.prototype.goInEditMode = function () { this.isEditting = !0, this.$element.addClass("_md-chip-editing"), this.getChipContent()[0].contentEditable = "true", this.getChipContent().on("blur", function () { this.goOutOfEditMode() }.bind(this)), this.selectNodeContents(this.getChipContent()[0]) }, d.prototype.chipKeyDown = function (a) { this.isEditting || a.keyCode !== this.$mdConstant.KEY_CODE.ENTER && a.keyCode !== this.$mdConstant.KEY_CODE.SPACE ? this.isEditting && a.keyCode === this.$mdConstant.KEY_CODE.ENTER && (a.preventDefault(), this.goOutOfEditMode()) : (a.preventDefault(), this.goInEditMode()) }, d.prototype.chipMouseDown = function () { this.getChipIndex() == this.parentController.selectedChip && this.enableChipEdit && !this.isEditting && this.goInEditMode() } }(), function () { function c(c, d) { function f(a, f) { return a.append(d.processTemplate(e)), function (d, e, f, g) { var h = g.shift(), i = g.shift(); c(e), h && (i.init(h), b.element(e[0].querySelector("._md-chip-content")).on("blur", function () { h.selectedChip = -1, h.$scope.$applyAsync() })) } } var e = d.processTemplate(a); return { restrict: "E", require: ["^?mdChips", "mdChip"], compile: f, controller: "MdChipCtrl" } } b.module("material.components.chips").directive("mdChip", c); var a = '    <span ng-if="!$mdChipsCtrl.readonly" class="_md-visually-hidden">      {{$mdChipsCtrl.deleteHint}}    </span>'; c.$inject = ["$mdTheming", "$mdUtil"] }(), function () { function a(a) { function b(b, c, d, e) { c.on("click", function (a) { b.$apply(function () { e.removeChip(b.$$replacedScope.$index) }) }), a(function () { c.attr({ tabindex: -1, "aria-hidden": !0 }), c.find("button").attr("tabindex", "-1") }) } return { restrict: "A", require: "^mdChips", scope: !1, link: b } } b.module("material.components.chips").directive("mdChipRemove", a), a.$inject = ["$timeout"] }(), function () { function a(a) { function b(b, c, d) { var e = b.$parent.$mdChipsCtrl, f = e.parent.$new(!1, e.parent); f.$$replacedScope = b, f.$chip = b.$chip, f.$index = b.$index, f.$mdChipsCtrl = e; var g = e.$scope.$eval(d.mdChipTransclude); c.html(g), a(c.contents())(f) } return { restrict: "EA", terminal: !0, link: b, scope: !1 } } b.module("material.components.chips").directive("mdChipTransclude", a), a.$inject = ["$compile"] }(), function () { function a(a, b, c, d, e, f) { this.$timeout = e, this.$mdConstant = b, this.$scope = a, this.parent = a.$parent, this.$log = c, this.$element = d, this.ngModelCtrl = null, this.userInputNgModelCtrl = null, this.userInputElement = null, this.items = [], this.selectedChip = -1, this.hasAutocomplete = !1, this.enableChipEdit = f.parseAttributeBoolean(this.mdEnableChipEdit), this.deleteHint = "Press delete to remove this chip.", this.deleteButtonLabel = "Remove", this.chipBuffer = "", this.useOnAppend = !1, this.useTransformChip = !1, this.useOnAdd = !1, this.useOnRemove = !1, this.useOnSelect = !1 } b.module("material.components.chips").controller("MdChipsCtrl", a), a.$inject = ["$scope", "$mdConstant", "$log", "$element", "$timeout", "$mdUtil"], a.prototype.inputKeydown = function (a) { var b = this.getChipBuffer(); if (!(this.hasAutocomplete && a.isDefaultPrevented && a.isDefaultPrevented())) { if (a.keyCode === this.$mdConstant.KEY_CODE.BACKSPACE) { if (b) return; return a.preventDefault(), a.stopPropagation(), void (this.items.length && this.selectAndFocusChipSafe(this.items.length - 1)) } if ((!this.separatorKeys || this.separatorKeys.length < 1) && (this.separatorKeys = [this.$mdConstant.KEY_CODE.ENTER]), this.separatorKeys.indexOf(a.keyCode) !== -1) { if (this.hasAutocomplete && this.requireMatch || !b) return; if (a.preventDefault(), this.hasMaxChipsReached()) return; this.appendChip(b.trim()), this.resetChipBuffer() } } }, a.prototype.updateChipContents = function (a, b) { a >= 0 && a < this.items.length && (this.items[a] = b, this.ngModelCtrl.$setDirty()) }, a.prototype.isEditingChip = function () { return !!this.$element[0].getElementsByClassName("_md-chip-editing").length }, a.prototype.chipKeydown = function (a) { if (!this.getChipBuffer() && !this.isEditingChip()) switch (a.keyCode) { case this.$mdConstant.KEY_CODE.BACKSPACE: case this.$mdConstant.KEY_CODE.DELETE: if (this.selectedChip < 0) return; a.preventDefault(), this.removeAndSelectAdjacentChip(this.selectedChip); break; case this.$mdConstant.KEY_CODE.LEFT_ARROW: a.preventDefault(), this.selectedChip < 0 && (this.selectedChip = this.items.length), this.items.length && this.selectAndFocusChipSafe(this.selectedChip - 1); break; case this.$mdConstant.KEY_CODE.RIGHT_ARROW: a.preventDefault(), this.selectAndFocusChipSafe(this.selectedChip + 1); break; case this.$mdConstant.KEY_CODE.ESCAPE: case this.$mdConstant.KEY_CODE.TAB: if (this.selectedChip < 0) return; a.preventDefault(), this.onFocus() } }, a.prototype.getPlaceholder = function () { var a = this.items.length && ("" == this.secondaryPlaceholder || this.secondaryPlaceholder); return a ? this.secondaryPlaceholder : this.placeholder }, a.prototype.removeAndSelectAdjacentChip = function (a) { var c = this.getAdjacentChipIndex(a); this.removeChip(a), this.$timeout(b.bind(this, function () { this.selectAndFocusChipSafe(c) })) }, a.prototype.resetSelectedChip = function () { this.selectedChip = -1 }, a.prototype.getAdjacentChipIndex = function (a) { var b = this.items.length - 1; return 0 == b ? -1 : a == b ? a - 1 : a }, a.prototype.appendChip = function (a) { if (this.useTransformChip && this.transformChip) { var c = this.transformChip({ $chip: a }); b.isDefined(c) && (a = c) } if (b.isObject(a)) { var d = this.items.some(function (c) { return b.equals(a, c) }); if (d) return } if (!(null == a || this.items.indexOf(a) + 1)) { var e = this.items.push(a); this.ngModelCtrl.$setDirty(), this.validateModel(), this.useOnAdd && this.onAdd && this.onAdd({ $chip: a, $index: e }) } }, a.prototype.useOnAppendExpression = function () { this.$log.warn("md-on-append is deprecated; please use md-transform-chip or md-on-add instead"), this.useTransformChip && this.transformChip || (this.useTransformChip = !0, this.transformChip = this.onAppend) }, a.prototype.useTransformChipExpression = function () { this.useTransformChip = !0 }, a.prototype.useOnAddExpression = function () { this.useOnAdd = !0 }, a.prototype.useOnRemoveExpression = function () { this.useOnRemove = !0 }, a.prototype.useOnSelectExpression = function () { this.useOnSelect = !0 }, a.prototype.getChipBuffer = function () { return this.userInputElement ? this.userInputNgModelCtrl ? this.userInputNgModelCtrl.$viewValue : this.userInputElement[0].value : this.chipBuffer }, a.prototype.resetChipBuffer = function () { this.userInputElement ? this.userInputNgModelCtrl ? (this.userInputNgModelCtrl.$setViewValue(""), this.userInputNgModelCtrl.$render()) : this.userInputElement[0].value = "" : this.chipBuffer = "" }, a.prototype.hasMaxChipsReached = function () { return b.isString(this.maxChips) && (this.maxChips = parseInt(this.maxChips, 10) || 0), this.maxChips > 0 && this.items.length >= this.maxChips }, a.prototype.validateModel = function () { this.ngModelCtrl.$setValidity("md-max-chips", !this.hasMaxChipsReached()) }, a.prototype.removeChip = function (a) { var b = this.items.splice(a, 1); this.ngModelCtrl.$setDirty(), this.validateModel(), b && b.length && this.useOnRemove && this.onRemove && this.onRemove({ $chip: b[0], $index: a }) }, a.prototype.removeChipAndFocusInput = function (a) { this.removeChip(a), this.onFocus() }, a.prototype.selectAndFocusChipSafe = function (a) { return this.items.length ? a === this.items.length ? this.onFocus() : (a = Math.max(a, 0), a = Math.min(a, this.items.length - 1), this.selectChip(a), void this.focusChip(a)) : (this.selectChip(-1), void this.onFocus()) }, a.prototype.selectChip = function (a) { a >= -1 && a <= this.items.length ? (this.selectedChip = a, this.useOnSelect && this.onSelect && this.onSelect({ $chip: this.items[this.selectedChip] })) : this.$log.warn("Selected Chip index out of bounds; ignoring.") }, a.prototype.selectAndFocusChip = function (a) { this.selectChip(a), a != -1 && this.focusChip(a) }, a.prototype.focusChip = function (a) { this.$element[0].querySelector('md-chip[index="' + a + '"] ._md-chip-content').focus() }, a.prototype.configureNgModel = function (a) { this.ngModelCtrl = a; var b = this; a.$render = function () { b.items = b.ngModelCtrl.$viewValue } }, a.prototype.onFocus = function () { var a = this.$element[0].querySelector("input"); a && a.focus(), this.resetSelectedChip() }, a.prototype.onInputFocus = function () { this.inputHasFocus = !0, this.resetSelectedChip() }, a.prototype.onInputBlur = function () { this.inputHasFocus = !1 }, a.prototype.configureUserInput = function (a) { this.userInputElement = a; var c = a.controller("ngModel"); c != this.ngModelCtrl && (this.userInputNgModelCtrl = c); var d = this.$scope, e = this, f = function (a, c) { d.$evalAsync(b.bind(e, c, a)) }; a.attr({ tabindex: 0 }).on("keydown", function (a) { f(a, e.inputKeydown) }).on("focus", function (a) { f(a, e.onInputFocus) }).on("blur", function (a) { f(a, e.onInputBlur) }) }, a.prototype.configureAutocomplete = function (a) { a && (this.hasAutocomplete = !0, a.registerSelectedItemWatcher(b.bind(this, function (a) { if (a) { if (this.hasMaxChipsReached()) return; this.appendChip(a), this.resetChipBuffer() } })), this.$element.find("input").on("focus", b.bind(this, this.onInputFocus)).on("blur", b.bind(this, this.onInputBlur))) }, a.prototype.hasFocus = function () { return this.inputHasFocus || this.selectedChip >= 0 } }(), function () { function f(b, f, g, h, i) { function k(a, c) { function o(a) { if (c.ngModel) { var b = d[0].querySelector(a); return b && b.outerHTML } } var d = c.$mdUserTemplate; c.$mdUserTemplate = null; var e = o("md-chips>md-chip-template"), k = o("md-chips>*[md-chip-remove]") || j.remove, l = e || j.default, m = o("md-chips>md-autocomplete") || o("md-chips>input") || j.input, n = d.find("md-chip"); return d[0].querySelector("md-chip-template>*[md-chip-remove]") && h.warn("invalid placement of md-chip-remove within md-chip-template."), function (d, h, o, p) { f.initOptionalProperties(d, c), b(h); var q = p[0]; if (e && (q.enableChipEdit = !1), q.chipContentsTemplate = l, q.chipRemoveTemplate = k, q.chipInputTemplate = m, h.attr({ "aria-hidden": !0, tabindex: -1 }).on("focus", function () { q.onFocus() }), c.ngModel && (q.configureNgModel(h.controller("ngModel")), o.mdTransformChip && q.useTransformChipExpression(), o.mdOnAppend && q.useOnAppendExpression(), o.mdOnAdd && q.useOnAddExpression(), o.mdOnRemove && q.useOnRemoveExpression(), o.mdOnSelect && q.useOnSelectExpression(), m != j.input && d.$watch("$mdChipsCtrl.readonly", function (a) { a || f.nextTick(function () { 0 === m.indexOf("<md-autocomplete") && q.configureAutocomplete(h.find("md-autocomplete").controller("mdAutocomplete")), q.configureUserInput(h.find("input")) }) }), f.nextTick(function () { var a = h.find("input"); a && a.toggleClass("md-input", !0) })), n.length > 0) { var r = g(n.clone())(d.$parent); i(function () { h.find("md-chips-wrap").prepend(r) }) } } } function l() { return { chips: f.processTemplate(a), input: f.processTemplate(c), default: f.processTemplate(d), remove: f.processTemplate(e) } } var j = l(); return { template: function (a, b) { return b.$mdUserTemplate = a.clone(), j.chips }, require: ["mdChips"], restrict: "E", controller: "MdChipsCtrl", controllerAs: "$mdChipsCtrl", bindToController: !0, compile: k, scope: { readonly: "=readonly", placeholder: "@", mdEnableChipEdit: "@", secondaryPlaceholder: "@", maxChips: "@mdMaxChips", transformChip: "&mdTransformChip", onAppend: "&mdOnAppend", onAdd: "&mdOnAdd", onRemove: "&mdOnRemove", onSelect: "&mdOnSelect", deleteHint: "@", deleteButtonLabel: "@", separatorKeys: "=?mdSeparatorKeys", requireMatch: "=?mdRequireMatch" } } } b.module("material.components.chips").directive("mdChips", f); var a = '      <md-chips-wrap          ng-keydown="$mdChipsCtrl.chipKeydown($event)"          ng-class="{ \'md-focused\': $mdChipsCtrl.hasFocus(), \'md-readonly\': !$mdChipsCtrl.ngModelCtrl || $mdChipsCtrl.readonly}"          class="md-chips">        <md-chip ng-repeat="$chip in $mdChipsCtrl.items"            index="{{$index}}"            ng-class="{\'md-focused\': $mdChipsCtrl.selectedChip == $index, \'md-readonly\': !$mdChipsCtrl.ngModelCtrl || $mdChipsCtrl.readonly}">          <div class="_md-chip-content"              tabindex="-1"              aria-hidden="true"              ng-click="!$mdChipsCtrl.readonly && $mdChipsCtrl.focusChip($index)"              ng-focus="!$mdChipsCtrl.readonly && $mdChipsCtrl.selectChip($index)"              md-chip-transclude="$mdChipsCtrl.chipContentsTemplate"></div>          <div ng-if="!$mdChipsCtrl.readonly"               class="_md-chip-remove-container"               md-chip-transclude="$mdChipsCtrl.chipRemoveTemplate"></div>        </md-chip>        <div class="_md-chip-input-container">          <div ng-if="!$mdChipsCtrl.readonly && $mdChipsCtrl.ngModelCtrl"               md-chip-transclude="$mdChipsCtrl.chipInputTemplate"></div>        </div>      </md-chips-wrap>', c = '        <input            class="md-input"            tabindex="0"            placeholder="{{$mdChipsCtrl.getPlaceholder()}}"            aria-label="{{$mdChipsCtrl.getPlaceholder()}}"            ng-model="$mdChipsCtrl.chipBuffer"            ng-focus="$mdChipsCtrl.onInputFocus()"            ng-blur="$mdChipsCtrl.onInputBlur()"            ng-trim="false"            ng-keydown="$mdChipsCtrl.inputKeydown($event)">', d = "      <span>{{$chip}}</span>", e = '      <button          class="_md-chip-remove"          ng-if="!$mdChipsCtrl.readonly"          ng-click="$mdChipsCtrl.removeChipAndFocusInput($$replacedScope.$index)"          type="button"          aria-hidden="true"          tabindex="-1">        <md-icon md-svg-icon="md-close"></md-icon>        <span class="_md-visually-hidden">          {{$mdChipsCtrl.deleteButtonLabel}}        </span>      </button>'; f.$inject = ["$mdTheming", "$mdUtil", "$compile", "$log", "$timeout"] }(), function () { function a() { this.selectedItem = null, this.searchText = "" } b.module("material.components.chips").controller("MdContactChipsCtrl", a), a.prototype.queryContact = function (a) { var c = this.contactQuery({ $query: a }); return this.filterSelected ? c.filter(b.bind(this, this.filterSelectedContacts)) : c }, a.prototype.itemName = function (a) { return a[this.contactName] }, a.prototype.filterSelectedContacts = function (a) { return this.contacts.indexOf(a) == -1 } }(), function () { function c(b, c) { function d(a, d) { return function (e, f, g, h) { c.initOptionalProperties(e, d), b(f), f.attr("tabindex", "-1") } } return { template: function (b, c) { return a }, restrict: "E", controller: "MdContactChipsCtrl", controllerAs: "$mdContactChipsCtrl", bindToController: !0, compile: d, scope: { contactQuery: "&mdContacts", placeholder: "@", secondaryPlaceholder: "@", contactName: "@mdContactName", contactImage: "@mdContactImage", contactEmail: "@mdContactEmail", contacts: "=ngModel", requireMatch: "=?mdRequireMatch", highlightFlags: "@?mdHighlightFlags" } } } b.module("material.components.chips").directive("mdContactChips", c); var a = '      <md-chips class="md-contact-chips"          ng-model="$mdContactChipsCtrl.contacts"          md-require-match="$mdContactChipsCtrl.requireMatch"          md-autocomplete-snap>          <md-autocomplete              md-menu-class="md-contact-chips-suggestions"              md-selected-item="$mdContactChipsCtrl.selectedItem"              md-search-text="$mdContactChipsCtrl.searchText"              md-items="item in $mdContactChipsCtrl.queryContact($mdContactChipsCtrl.searchText)"              md-item-text="$mdContactChipsCtrl.itemName(item)"              md-no-cache="true"              md-autoselect              placeholder="{{$mdContactChipsCtrl.contacts.length == 0 ?                  $mdContactChipsCtrl.placeholder : $mdContactChipsCtrl.secondaryPlaceholder}}">            <div class="md-contact-suggestion">              <img                   ng-src="{{item[$mdContactChipsCtrl.contactImage]}}"                  alt="{{item[$mdContactChipsCtrl.contactName]}}"                  ng-if="item[$mdContactChipsCtrl.contactImage]" />              <span class="md-contact-name" md-highlight-text="$mdContactChipsCtrl.searchText"                    md-highlight-flags="{{$mdContactChipsCtrl.highlightFlags}}">                {{item[$mdContactChipsCtrl.contactName]}}              </span>              <span class="md-contact-email" >{{item[$mdContactChipsCtrl.contactEmail]}}</span>            </div>          </md-autocomplete>          <md-chip-template>            <div class="md-contact-avatar">              <img                   ng-src="{{$chip[$mdContactChipsCtrl.contactImage]}}"                  alt="{{$chip[$mdContactChipsCtrl.contactName]}}"                  ng-if="$chip[$mdContactChipsCtrl.contactImage]" />            </div>            <div class="md-contact-name">              {{$chip[$mdContactChipsCtrl.contactName]}}            </div>          </md-chip-template>      </md-chips>'; c.$inject = ["$mdTheming", "$mdUtil"] }(), function () { function a(a, b, c) { function d(d, e, f) { function i() { var a = e.parent(); return !(!a.attr("aria-label") && !a.text()) || !(!a.parent().attr("aria-label") && !a.parent().text()) } function j() { f.mdSvgIcon || f.mdSvgSrc || (f.mdFontIcon && e.addClass("md-font " + f.mdFontIcon), e.addClass(a.fontSet(f.mdFontSet))) } b(e), j(); var g = f.alt || f.mdFontIcon || f.mdSvgIcon || e.text(), h = f.$normalize(f.$attr.mdSvgIcon || f.$attr.mdSvgSrc || ""); f["aria-label"] || ("" === g || i() ? e.text() || c.expect(e, "aria-hidden", "true") : (c.expect(e, "aria-label", g), c.expect(e, "role", "img"))), h && f.$observe(h, function (b) { e.empty(), b && a(b).then(function (a) { e.empty(), e.append(a) }) }) } return { restrict: "E", link: d } } b.module("material.components.icon").directive("mdIcon", ["$mdIcon", "$mdTheming", "$mdAria", a]) }(), function () { function d() { } function e(a, b) { this.url = a, this.viewBoxSize = b || c.defaultViewBoxSize } function f(c, d, e, f, g, h) { function l(a) { if (a = a || "", i[a]) return e.when(n(i[a])); if (j.test(a) || k.test(a)) return r(a).then(o(a)); a.indexOf(":") == -1 && (a = "$default:" + a); var b = c[a] ? p : q; return b(a).then(o(a)) } function m(a) { var d = b.isUndefined(a) || !(a && a.length); if (d) return c.defaultFontSet; var e = a; return b.forEach(c.fontSets, function (b) { b.alias == a && (e = b.fontSet || e) }), e } function n(a) { var c = a.clone(), d = "_cache" + h.nextUid(); return c.id && (c.id += d), b.forEach(c.querySelectorAll("[id]"), function (a) { a.id += d }), c } function o(a) { return function (d) { return i[a] = t(d) ? d : new u(d, c[a]), i[a].clone() } } function p(a) { var b = c[a]; return r(b.url).then(function (a) { return new u(a, b) }) } function q(a) { function g(b) { var c = a.slice(a.lastIndexOf(":") + 1), e = b.querySelector("#" + c); return e ? new u(e, d) : h(a) } function h(a) { var b = "icon " + a + " not found"; return f.warn(b), e.reject(b || a) } var b = a.substring(0, a.lastIndexOf(":")) || "$default", d = c[b]; return d ? r(d.url).then(g) : h(a) } function r(c) { function f(c) { var d = k.exec(c), f = /base64/i.test(c), g = f ? a.atob(d[2]) : d[2]; return e.when(b.element(g)[0]) } function h(a) { return d.get(a, { cache: g }).then(function (a) { return b.element("<div>").append(a.data).find("svg")[0] }).catch(s) } return k.test(c) ? f(c) : h(c) } function s(a) { var c = b.isString(a) ? a : a.message || a.data || a.statusText; return f.warn(c), e.reject(c) } function t(a) { return b.isDefined(a.element) && b.isDefined(a.config) } function u(a, c) { a && "svg" != a.tagName && (a = b.element('<svg xmlns="http://www.w3.org/2000/svg">').append(a)[0]), a.getAttribute("xmlns") || a.setAttribute("xmlns", "http://www.w3.org/2000/svg"), this.element = a, this.config = c, this.prepare() } function v() { var a = this.config ? this.config.viewBoxSize : c.defaultViewBoxSize; b.forEach({ fit: "", height: "100%", width: "100%", preserveAspectRatio: "xMidYMid meet", viewBox: this.element.getAttribute("viewBox") || "0 0 " + a + " " + a, focusable: !1 }, function (a, b) { this.element.setAttribute(b, a) }, this) } function w() { return this.element.cloneNode(!0) } var i = {}, j = /[-\w@:%\+.~#?&\/\/=]{2,}\.[a-z]{2,4}\b(\/[-\w@:%\+.~#?&\/\/=]*)?/i, k = /^data:image\/svg\+xml[\s*;\w\-\=]*?(base64)?,(.*)$/i; return u.prototype = { clone: w, prepare: v }, l.fontSet = m, l } b.module("material.components.icon").provider("$mdIcon", d); var c = { defaultViewBoxSize: 24, defaultFontSet: "material-icons", fontSets: [] }; d.prototype = { icon: function (a, b, d) { return a.indexOf(":") == -1 && (a = "$default:" + a), c[a] = new e(b, d), this }, iconSet: function (a, b, d) { return c[a] = new e(b, d), this }, defaultIconSet: function (a, b) { var d = "$default"; return c[d] || (c[d] = new e(a, b)), c[d].viewBoxSize = b || c.defaultViewBoxSize, this }, defaultViewBoxSize: function (a) { return c.defaultViewBoxSize = a, this }, fontSet: function (b, d) { return c.fontSets.push({ alias: b, fontSet: d || b }), this }, defaultFontSet: function (b) { return c.defaultFontSet = b ? b : "", this }, defaultIconSize: function (b) { return c.defaultIconSize = b, this }, preloadIcons: function (a) { var b = this, c = [{ id: "md-tabs-arrow", url: "md-tabs-arrow.svg", svg: '<svg version="1.1" x="0px" y="0px" viewBox="0 0 24 24"><g><polygon points="15.4,7.4 14,6 8,12 14,18 15.4,16.6 10.8,12 "/></g></svg>' }, { id: "md-close", url: "md-close.svg", svg: '<svg version="1.1" x="0px" y="0px" viewBox="0 0 24 24"><g><path d="M19 6.41l-1.41-1.41-5.59 5.59-5.59-5.59-1.41 1.41 5.59 5.59-5.59 5.59 1.41 1.41 5.59-5.59 5.59 5.59 1.41-1.41-5.59-5.59z"/></g></svg>' }, { id: "md-cancel", url: "md-cancel.svg", svg: '<svg version="1.1" x="0px" y="0px" viewBox="0 0 24 24"><g><path d="M12 2c-5.53 0-10 4.47-10 10s4.47 10 10 10 10-4.47 10-10-4.47-10-10-10zm5 13.59l-1.41 1.41-3.59-3.59-3.59 3.59-1.41-1.41 3.59-3.59-3.59-3.59 1.41-1.41 3.59 3.59 3.59-3.59 1.41 1.41-3.59 3.59 3.59 3.59z"/></g></svg>' }, { id: "md-menu", url: "md-menu.svg", svg: '<svg version="1.1" x="0px" y="0px" viewBox="0 0 24 24"><path d="M3,6H21V8H3V6M3,11H21V13H3V11M3,16H21V18H3V16Z" /></svg>' }, { id: "md-toggle-arrow", url: "md-toggle-arrow-svg", svg: '<svg version="1.1" x="0px" y="0px" viewBox="0 0 48 48"><path d="M24 16l-12 12 2.83 2.83 9.17-9.17 9.17 9.17 2.83-2.83z"/><path d="M0 0h48v48h-48z" fill="none"/></svg>' }, { id: "md-calendar", url: "md-calendar.svg", svg: '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path d="M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z"/></svg>' }]; c.forEach(function (c) { b.icon(c.id, c.url), a.put(c.url, c.svg) }) }, $get: ["$http", "$q", "$log", "$templateCache", "$mdUtil", function (a, b, d, e, g) { return this.preloadIcons(e), f(c, a, b, d, e, g) }] }, f.$inject = ["config", "$http", "$q", "$log", "$templateCache", "$mdUtil"] }(), function () { function d(c, d, e, f, g, h, i, j) { this.$element = e, this.$attrs = f, this.$mdConstant = g, this.$mdUtil = i, this.$document = h, this.$scope = c, this.$rootScope = d, this.$timeout = j; var k = this; b.forEach(a, function (a) { k[a] = b.bind(k, k[a]) }) } b.module("material.components.menuBar").controller("MenuBarController", d); var a = ["handleKeyDown", "handleMenuHover", "scheduleOpenHoveredMenu", "cancelScheduledOpen"]; d.$inject = ["$scope", "$rootScope", "$element", "$attrs", "$mdConstant", "$document", "$mdUtil", "$timeout"], d.prototype.init = function () { var a = this.$element, b = this.$mdUtil, d = this.$scope, e = this, f = []; a.on("keydown", this.handleKeyDown), this.parentToolbar = b.getClosest(a, "MD-TOOLBAR"), f.push(this.$rootScope.$on("$mdMenuOpen", function (b, c) { e.getMenus().indexOf(c[0]) != -1 && (a[0].classList.add("_md-open"), c[0].classList.add("_md-open"), e.currentlyOpenMenu = c.controller("mdMenu"), e.currentlyOpenMenu.registerContainerProxy(e.handleKeyDown), e.enableOpenOnHover()) })), f.push(this.$rootScope.$on("$mdMenuClose", function (d, f, g) { var h = e.getMenus(); if (h.indexOf(f[0]) != -1 && (a[0].classList.remove("_md-open"), f[0].classList.remove("_md-open")), a[0].contains(f[0])) { for (var i = f[0]; i && h.indexOf(i) == -1;)i = b.getClosest(i, "MD-MENU", !0); i && (g.skipFocus || i.querySelector("button:not([disabled])").focus(), e.currentlyOpenMenu = c, e.disableOpenOnHover(), e.setKeyboardMode(!0)) } })), d.$on("$destroy", function () { for (; f.length;)f.shift()() }), this.setKeyboardMode(!0) }, d.prototype.setKeyboardMode = function (a) { a ? this.$element[0].classList.add("_md-keyboard-mode") : this.$element[0].classList.remove("_md-keyboard-mode") }, d.prototype.enableOpenOnHover = function () { if (!this.openOnHoverEnabled) { this.openOnHoverEnabled = !0; var a; (a = this.parentToolbar) && (a.dataset.mdRestoreStyle = a.getAttribute("style"), a.style.position = "relative", a.style.zIndex = 100), b.element(this.getMenus()).on("mouseenter", this.handleMenuHover) } }, d.prototype.handleMenuHover = function (a) { this.setKeyboardMode(!1), this.openOnHoverEnabled && this.scheduleOpenHoveredMenu(a) }, d.prototype.disableOpenOnHover = function () { if (this.openOnHoverEnabled) { this.openOnHoverEnabled = !1; var a; (a = this.parentToolbar) && (a.style.cssText = a.dataset.mdRestoreStyle || ""), b.element(this.getMenus()).off("mouseenter", this.handleMenuHover) } }, d.prototype.scheduleOpenHoveredMenu = function (a) { var c = b.element(a.currentTarget), d = c.controller("mdMenu"); this.setKeyboardMode(!1), this.scheduleOpenMenu(d) }, d.prototype.scheduleOpenMenu = function (a) { var b = this, d = this.$timeout; a != b.currentlyOpenMenu && (d.cancel(b.pendingMenuOpen), b.pendingMenuOpen = d(function () { b.pendingMenuOpen = c, b.currentlyOpenMenu && b.currentlyOpenMenu.close(!0, { closeAll: !0 }), a.open() }, 200, !1)) }, d.prototype.handleKeyDown = function (a) { var c = this.$mdConstant.KEY_CODE, d = this.currentlyOpenMenu, e = d && d.isOpen; this.setKeyboardMode(!0); var f, g, h; switch (a.keyCode) { case c.DOWN_ARROW: d ? d.focusMenuContainer() : this.openFocusedMenu(), f = !0; break; case c.UP_ARROW: d && d.close(), f = !0; break; case c.LEFT_ARROW: g = this.focusMenu(-1), e && (h = b.element(g).controller("mdMenu"), this.scheduleOpenMenu(h)), f = !0; break; case c.RIGHT_ARROW: g = this.focusMenu(1), e && (h = b.element(g).controller("mdMenu"), this.scheduleOpenMenu(h)), f = !0 }f && (a && a.preventDefault && a.preventDefault(), a && a.stopImmediatePropagation && a.stopImmediatePropagation()) }, d.prototype.focusMenu = function (a) { var b = this.getMenus(), c = this.getFocusedMenuIndex(); c == -1 && (c = this.getOpenMenuIndex()); var d = !1; if (c == -1 ? (c = 0, d = !0) : (a < 0 && c > 0 || a > 0 && c < b.length - a) && (c += a, d = !0), d) return b[c].querySelector("button").focus(), b[c] }, d.prototype.openFocusedMenu = function () { var a = this.getFocusedMenu(); a && b.element(a).controller("mdMenu").open() }, d.prototype.getMenus = function () { var a = this.$element; return this.$mdUtil.nodesToArray(a[0].children).filter(function (a) { return "MD-MENU" == a.nodeName }) }, d.prototype.getFocusedMenu = function () { return this.getMenus()[this.getFocusedMenuIndex()] }, d.prototype.getFocusedMenuIndex = function () { var a = this.$mdUtil, b = a.getClosest(this.$document[0].activeElement, "MD-MENU"); if (!b) return -1; var c = this.getMenus().indexOf(b); return c }, d.prototype.getOpenMenuIndex = function () { for (var a = this.getMenus(), b = 0; b < a.length; ++b)if (a[b].classList.contains("_md-open")) return b; return -1 } }(), function () { function a(a, c) { return { restrict: "E", require: "mdMenuBar", controller: "MenuBarController", compile: function (e, f) { return f.ariaRole || e[0].setAttribute("role", "menubar"), b.forEach(e[0].children, function (c) { if ("MD-MENU" == c.nodeName) { c.hasAttribute("md-position-mode") || (c.setAttribute("md-position-mode", "left bottom"), c.querySelector("button,a").setAttribute("role", "menuitem")); var d = a.nodesToArray(c.querySelectorAll("md-menu-content")); b.forEach(d, function (a) { a.classList.add("_md-menu-bar-menu"), a.classList.add("md-dense"), a.hasAttribute("width") || a.setAttribute("width", 5) }) } }), function (b, d, e, f) { c(b, d), f.init() } } } } b.module("material.components.menuBar").directive("mdMenuBar", a), a.$inject = ["$mdUtil", "$mdTheming"] }(), function () { function a() { return { restrict: "E", compile: function (a, b) { b.role || a[0].setAttribute("role", "separator") } } } b.module("material.components.menuBar").directive("mdMenuDivider", a) }(), function () { function a(a, b, c) { this.$element = b, this.$attrs = c, this.$scope = a } b.module("material.components.menuBar").controller("MenuItemController", a), a.$inject = ["$scope", "$element", "$attrs"], a.prototype.init = function (a) { var b = this.$element, c = this.$attrs; this.ngModel = a, "checkbox" != c.type && "radio" != c.type || (this.mode = c.type, this.iconEl = b[0].children[0], this.buttonEl = b[0].children[1], a && this.initClickListeners()) }, a.prototype.clearNgAria = function () { var a = this.$element[0], c = ["role", "tabindex", "aria-invalid", "aria-checked"]; b.forEach(c, function (b) { a.removeAttribute(b) }) }, a.prototype.initClickListeners = function () { function k() { if ("radio" == g) { var a = e.ngValue ? d.$eval(e.ngValue) : e.value; return c.$modelValue == a } return c.$modelValue } function l(a) { a ? i.off("click", j) : i.on("click", j) } var a = this, c = this.ngModel, d = this.$scope, e = this.$attrs, g = (this.$element, this.mode); this.handleClick = b.bind(this, this.handleClick); var h = this.iconEl, i = b.element(this.buttonEl), j = this.handleClick; e.$observe("disabled", l), l(e.disabled), c.$render = function () { a.clearNgAria(), k() ? (h.style.display = "", i.attr("aria-checked", "true")) : (h.style.display = "none", i.attr("aria-checked", "false")) }, d.$$postDigest(c.$render) }, a.prototype.handleClick = function (a) { var e, b = this.mode, c = this.ngModel, d = this.$attrs; "checkbox" == b ? e = !c.$modelValue : "radio" == b && (e = d.ngValue ? this.$scope.$eval(d.ngValue) : d.value), c.$setViewValue(e), c.$render() } }(), function () {
        function a() { return { require: ["mdMenuItem", "?ngModel"], priority: 210, compile: function (a, c) { function f(c, d, e) { e = e || a, e instanceof b.element && (e = e[0]), e.hasAttribute(c) || e.setAttribute(c, d) } function g(b) { if (a[0].hasAttribute(b)) { var c = a[0].getAttribute(b); e[0].setAttribute(b, c), a[0].removeAttribute(b) } } if ("checkbox" == c.type || "radio" == c.type) { var d = a[0].textContent, e = b.element('<md-button type="button"></md-button>'); e.html(d), e.attr("tabindex", "0"), a.html(""), a.append(b.element('<md-icon md-svg-icon="check"></md-icon>')), a.append(e), a[0].classList.add("md-indent"), f("role", "checkbox" == c.type ? "menuitemcheckbox" : "menuitemradio", e), b.forEach(["ng-disabled"], g) } else f("role", "menuitem", a[0].querySelector("md-button,button,a")); return function (a, b, c, d) { var e = d[0], f = d[1]; e.init(f) } }, controller: "MenuItemController" } } b.module("material.components.menuBar").directive("mdMenuItem", a);
    }(), function () { function a(a, d, e, f, g, h, i, j) { var k, m, l = this; this.nestLevel = parseInt(d.mdNestLevel, 10) || 0, this.init = function (d, h) { h = h || {}, k = d, m = e[0].querySelector("[ng-click],[ng-mouseenter]"), m.setAttribute("aria-expanded", "false"), this.isInMenuBar = h.isInMenuBar, this.nestedMenus = g.nodesToArray(k[0].querySelectorAll(".md-nested-menu")), k.on("$mdInterimElementRemove", function () { l.isOpen = !1 }); var i = "menu_container_" + g.nextUid(); k.attr("id", i), b.element(m).attr({ "aria-owns": i, "aria-haspopup": "true" }), f.$on("$destroy", this.disableHoverListener), k.on("$destroy", function () { a.destroy() }) }; var n, o, p = []; this.enableHoverListener = function () { p.push(i.$on("$mdMenuOpen", function (a, b) { k[0].contains(b[0]) && (l.currentlyOpenMenu = b.controller("mdMenu"), l.isAlreadyOpening = !1, l.currentlyOpenMenu.registerContainerProxy(l.triggerContainerProxy.bind(l))) })), p.push(i.$on("$mdMenuClose", function (a, b) { k[0].contains(b[0]) && (l.currentlyOpenMenu = c) })), o = b.element(g.nodesToArray(k[0].children[0].children)), o.on("mouseenter", l.handleMenuItemHover), o.on("mouseleave", l.handleMenuItemMouseLeave) }, this.disableHoverListener = function () { for (; p.length;)p.shift()(); o && o.off("mouseenter", l.handleMenuItemHover), o && o.off("mouseleave", l.handleMenuMouseLeave) }, this.handleMenuItemHover = function (a) { if (!l.isAlreadyOpening) { var c = a.target.querySelector("md-menu") || g.getClosest(a.target, "MD-MENU"); n = h(function () { if (c && (c = b.element(c).controller("mdMenu")), l.currentlyOpenMenu && l.currentlyOpenMenu != c) { var a = l.nestLevel + 1; l.currentlyOpenMenu.close(!0, { closeTo: a }), l.isAlreadyOpening = !0, c.open() } else c && !c.isOpen && c.open && (l.isAlreadyOpening = !0, c.open()) }, c ? 100 : 250); var d = a.currentTarget.querySelector(".md-button:not([disabled])"); d && d.focus() } }, this.handleMenuItemMouseLeave = function () { n && (h.cancel(n), n = c) }, this.open = function (c) { c && c.stopPropagation(), c && c.preventDefault(), l.isOpen || (l.enableHoverListener(), l.isOpen = !0, m = m || (c ? c.target : e[0]), m.setAttribute("aria-expanded", "true"), f.$emit("$mdMenuOpen", e), a.show({ scope: f, mdMenuCtrl: l, nestLevel: l.nestLevel, element: k, target: m, preserveElement: !0, parent: "body" }).finally(function () { m.setAttribute("aria-expanded", "false"), l.disableHoverListener() })) }, f.$mdOpenMenu = this.open, f.$watch(function () { return l.isOpen }, function (a) { a ? (k.attr("aria-hidden", "false"), e[0].classList.add("_md-open"), b.forEach(l.nestedMenus, function (a) { a.classList.remove("_md-open") })) : (k.attr("aria-hidden", "true"), e[0].classList.remove("_md-open")), f.$mdMenuIsOpen = l.isOpen }), this.focusMenuContainer = function () { var b = k[0].querySelector("[md-menu-focus-target]"); b || (b = k[0].querySelector(".md-button")), b.focus() }, this.registerContainerProxy = function (b) { this.containerProxy = b }, this.triggerContainerProxy = function (b) { this.containerProxy && this.containerProxy(b) }, this.destroy = function () { return l.isOpen ? a.destroy() : j.when(!1) }, this.close = function (d, g) { if (l.isOpen) { l.isOpen = !1; var h = b.extend({}, g, { skipFocus: d }); if (f.$emit("$mdMenuClose", e, h), a.hide(null, g), !d) { var i = l.restoreFocusTo || e.find("button")[0]; i instanceof b.element && (i = i[0]), i && i.focus() } } }, this.positionMode = function () { var b = (d.mdPositionMode || "target").split(" "); return 1 == b.length && b.push(b[0]), { left: b[0], top: b[1] } }, this.offsets = function () { var b = (d.mdOffset || "0 0").split(" ").map(parseFloat); if (2 == b.length) return { left: b[0], top: b[1] }; if (1 == b.length) return { top: b[0], left: b[0] }; throw Error("Invalid offsets specified. Please follow format <x, y> or <n>") } } b.module("material.components.menu").controller("mdMenuCtrl", a), a.$inject = ["$mdMenu", "$attrs", "$element", "$scope", "$mdUtil", "$timeout", "$rootScope", "$q"] }(), function () { function a(a) { function e(c) { c.addClass("md-menu"); var e = c.children()[0]; if (e.hasAttribute("ng-click") || (e = e.querySelector("[ng-click],[ng-mouseenter]") || e), !e || "MD-BUTTON" != e.nodeName && "BUTTON" != e.nodeName || e.hasAttribute("type") || e.setAttribute("type", "button"), 2 != c.children().length) throw Error(d + "Expected two children elements."); e && e.setAttribute("aria-haspopup", "true"); var g = c[0].querySelectorAll("md-menu"), h = parseInt(c[0].getAttribute("md-nest-level"), 10) || 0; return g && b.forEach(a.nodesToArray(g), function (a) { a.hasAttribute("md-position-mode") || a.setAttribute("md-position-mode", "cascade"), a.classList.add("_md-nested-menu"), a.setAttribute("md-nest-level", h + 1) }), f } function f(a, d, e, f) { var g = f[0], h = f[1] != c, i = b.element('<div class="_md-open-menu-container md-whiteframe-z2"></div>'), j = d.children()[1]; j.hasAttribute("role") || j.setAttribute("role", "menu"), i.append(j), d.on("$destroy", function () { i.remove() }), d.append(i), i[0].style.display = "none", g.init(i, { isInMenuBar: h }) } var d = "Invalid HTML for md-menu: "; return { restrict: "E", require: ["mdMenu", "?^mdMenuBar"], controller: "mdMenuCtrl", scope: !0, compile: e } } b.module("material.components.menu").directive("mdMenu", a), a.$inject = ["$mdUtil"] }(), function () { function a(a) { function e(a, e, g, h, i, j, k, l, m) { function o(c, d, e) { return e.nestLevel ? b.noop : (e.disableParentScroll && !a.getClosest(e.target, "MD-DIALOG") ? e.restoreScroll = a.disableScrollAround(e.element, e.parent) : e.disableParentScroll = !1, e.hasBackdrop && (e.backdrop = a.createBackdrop(c, "_md-menu-backdrop _md-click-catcher"), m.enter(e.backdrop, h[0].body)), function () { e.backdrop && e.backdrop.remove(), e.disableParentScroll && e.restoreScroll() }) } function p(a, b, c) { function d() { return l(b, { addClass: "_md-leave" }).start() } function e() { b.removeClass("_md-active"), t(b, c), c.alreadyOpen = !1 } return c.cleanupInteraction(), c.cleanupResizing(), c.hideBackdrop(), c.$destroy === !0 ? e() : d().then(e) } function q(c, d, f) { function h() { return f.parent.append(d), d[0].style.display = "", j(function (a) { var b = u(d, f); d.removeClass("_md-leave"), l(d, { addClass: "_md-active", from: n.toCss(b), to: n.toCss({ transform: "" }) }).start().then(a) }) } function m() { if (!f.target) throw Error("$mdMenu.show() expected a target to animate from in options.target"); b.extend(f, { alreadyOpen: !1, isRemoved: !1, target: b.element(f.target), parent: b.element(f.parent), menuContentEl: b.element(d[0].querySelector("md-menu-content")) }) } function p() { var a = function (a, b) { return k.throttle(function () { if (!f.isRemoved) { var c = u(a, b); a.css(n.toCss(c)) } }) }(d, f); return i.addEventListener("resize", a), i.addEventListener("orientationchange", a), function () { i.removeEventListener("resize", a), i.removeEventListener("orientationchange", a) } } function q() { function h(b) { var c; switch (b.keyCode) { case g.KEY_CODE.ESCAPE: f.mdMenuCtrl.close(!1, { closeAll: !0 }), c = !0; break; case g.KEY_CODE.UP_ARROW: r(b, f.menuContentEl, f, -1) || f.nestLevel || f.mdMenuCtrl.triggerContainerProxy(b), c = !0; break; case g.KEY_CODE.DOWN_ARROW: r(b, f.menuContentEl, f, 1) || f.nestLevel || f.mdMenuCtrl.triggerContainerProxy(b), c = !0; break; case g.KEY_CODE.LEFT_ARROW: f.nestLevel ? f.mdMenuCtrl.close() : f.mdMenuCtrl.triggerContainerProxy(b), c = !0; break; case g.KEY_CODE.RIGHT_ARROW: var d = a.getClosest(b.target, "MD-MENU"); d && d != f.parent[0] ? b.target.click() : f.mdMenuCtrl.triggerContainerProxy(b), c = !0 }c && (b.preventDefault(), b.stopImmediatePropagation()) } function i(a) { a.preventDefault(), a.stopPropagation(), c.$apply(function () { f.mdMenuCtrl.close(!0, { closeAll: !0 }) }) } function j(b) { function g() { c.$apply(function () { f.mdMenuCtrl.close(!0, { closeAll: !0 }) }) } function h(a, b) { if (!a) return !1; for (var d, c = 0; d = b[c]; ++c)for (var g, e = [d, "data-" + d, "x-" + d], f = 0; g = e[f]; ++f)if (a.hasAttribute(g)) return !0; return !1 } var d = b.target; do { if (d == f.menuContentEl[0]) return; if ((h(d, ["ng-click", "ng-href", "ui-sref"]) || "BUTTON" == d.nodeName || "MD-BUTTON" == d.nodeName) && !h(d, ["md-prevent-menu-close"])) { var e = a.getClosest(d, "MD-MENU"); d.hasAttribute("disabled") || e && e != f.parent[0] || g(); break } } while (d = d.parentNode) } d.addClass("_md-clickable"), f.backdrop && f.backdrop.on("click", i), f.menuContentEl.on("keydown", h), f.menuContentEl[0].addEventListener("click", j, !0); var b = f.menuContentEl[0].querySelector("[md-menu-focus-target]"); if (!b) { var e = f.menuContentEl[0].firstElementChild; b = e && (e.querySelector(".md-button:not([disabled])") || e.firstElementChild) } return b && b.focus(), function () { d.removeClass("_md-clickable"), f.backdrop && f.backdrop.off("click", i), f.menuContentEl.off("keydown", h), f.menuContentEl[0].removeEventListener("click", j, !0) } } return m(f), e.inherit(f.menuContentEl, f.target), f.cleanupResizing = p(), f.hideBackdrop = o(c, d, f), h().then(function (a) { return f.alreadyOpen = !0, f.cleanupInteraction = q(), a }) } function r(b, c, d, e) { for (var i, f = a.getClosest(b.target, "MD-MENU-ITEM"), g = a.nodesToArray(c[0].children), h = g.indexOf(f), j = h + e; j >= 0 && j < g.length; j += e) { var k = g[j].querySelector(".md-button"); if (i = s(k)) break } return i } function s(a) { if (a && a.getAttribute("tabindex") != -1) return a.focus(), h[0].activeElement == a } function t(a, b) { b.preserveElement ? f(a).style.display = "none" : f(a).parentNode === f(b.parent) && f(b.parent).removeChild(f(a)) } function u(b, e) { function B(a) { a.top = Math.max(Math.min(a.top, p.bottom - f.offsetHeight), p.top), a.left = Math.max(Math.min(a.left, p.right - f.offsetWidth), p.left) } function C() { for (var a = 0; a < g.children.length; ++a)if ("none" != i.getComputedStyle(g.children[a]).display) return g.children[a] } var q, f = b[0], g = b[0].firstElementChild, j = g.getBoundingClientRect(), k = h[0].body, l = k.getBoundingClientRect(), m = i.getComputedStyle(g), n = e.target[0].querySelector("[md-menu-origin]") || e.target[0], o = n.getBoundingClientRect(), p = { left: l.left + d, top: Math.max(l.top, 0) + d, bottom: Math.max(l.bottom, Math.max(l.top, 0) + l.height) - d, right: l.right - d }, r = { top: 0, left: 0, right: 0, bottom: 0 }, s = { top: 0, left: 0, right: 0, bottom: 0 }, t = e.mdMenuCtrl.positionMode(); "target" != t.top && "target" != t.left && "target-right" != t.left || (q = C(), q && (q = q.firstElementChild || q, q = q.querySelector("[md-menu-align-target]") || q, r = q.getBoundingClientRect(), s = { top: parseFloat(f.style.top || 0), left: parseFloat(f.style.left || 0) })); var u = {}, v = "top "; switch (t.top) { case "target": u.top = s.top + o.top - r.top; break; case "cascade": u.top = o.top - parseFloat(m.paddingTop) - n.style.top; break; case "bottom": u.top = o.top + o.height; break; default: throw new Error('Invalid target mode "' + t.top + '" specified for md-menu on Y axis.') }var w = "rtl" == a.bidi(); switch (t.left) { case "target": u.left = s.left + o.left - r.left, v += w ? "right" : "left"; break; case "target-left": u.left = o.left, v += "left"; break; case "target-right": u.left = o.right - j.width + (j.right - r.right), v += "right"; break; case "cascade": var x = w ? o.left - j.width < p.left : o.right + j.width < p.right; u.left = x ? o.right - n.style.left : o.left - n.style.left - j.width, v += x ? "left" : "right"; break; case "left": w ? (u.left = o.right - j.width, v += "right") : (u.left = o.left, v += "left"); break; default: throw new Error('Invalid target mode "' + t.left + '" specified for md-menu on X axis.') }var y = e.mdMenuCtrl.offsets(); u.top += y.top, u.left += y.left, B(u); var z = Math.round(100 * Math.min(o.width / f.offsetWidth, 1)) / 100, A = Math.round(100 * Math.min(o.height / f.offsetHeight, 1)) / 100; return { top: Math.round(u.top), left: Math.round(u.left), transform: e.alreadyOpen ? c : a.supplant("scale({0},{1})", [z, A]), transformOrigin: v } } var n = a.dom.animator; return { parent: "body", onShow: q, onRemove: p, hasBackdrop: !0, disableParentScroll: !0, skipCompile: !0, preserveScope: !0, skipHide: !0, themable: !0 } } function f(a) { return a instanceof b.element && (a = a[0]), a } var d = 8; return e.$inject = ["$mdUtil", "$mdTheming", "$mdConstant", "$document", "$window", "$q", "$$rAF", "$animateCss", "$animate"], a("$mdMenu").setDefaults({ methods: ["target"], options: e }) } b.module("material.components.menu").provider("$mdMenu", a), a.$inject = ["$$interimElementProvider"] }(), function () { function a(a, c, d, e, f, g, h) { function l(h, i, l) { function x(b, e, g, i, j) { var k = ++v, l = f.now(), n = e - b, o = p(h.mdDiameter), s = o - q(o), t = g || d.easeFn, u = i || d.duration; e === b ? r.attr("d", m(e, o, s, j)) : a(function d(e) { var g = c.Math.min((e || f.now()) - l, u); r.attr("d", m(t(g, b, n, u), o, s, j)), k === v && g < u && a(d) }) } function y() { x(s, t, d.easeFnIndeterminate, d.durationIndeterminate, u), u = (u + t) % 100; var a = s; s = -t, t = -a } function z() { if (!w) { var b = f.now(), c = d.rotationDurationIndeterminate, e = p(h.mdDiameter) / 2; e = " " + e + ", " + e, a(function g(h) { var i = h || f.now(), j = i - b, k = d.easingPresets.linearEase(j, 0, 360, c); r.attr("transform", "rotate(" + k + e + ")"), w ? a(g) : r.removeAttr("transform"), j >= c && (b = i) }), w = g(y, d.durationIndeterminate + 50, 0, !1), y(), i.removeAttr("aria-valuenow") } } function A() { w && (g.cancel(w), w = null) } var w, n = b.element(i[0].querySelector("svg")), r = b.element(i[0].querySelector("path")), s = d.startIndeterminate, t = d.endIndeterminate, u = 0, v = 0; e(i), h.mdMode === k && z(), h.$watchGroup(["value", "mdMode"], function (a, b) { var c = a[1]; if (c !== j && c !== k && (c = k, l.$set("mdMode", c)), c === k) z(); else { var d = o(a[0]); A(), i.attr("aria-valuenow", d), x(o(b[0]), d) } }), h.$watch("mdDiameter", function (a) { var b = p(a), c = q(b), d = { width: b + "px", height: b + "px" }; n[0].setAttribute("viewBox", "0 0 " + b + " " + b), n.css(d), i.css(d), r.css("stroke-width", c + "px") }) } function m(a, b, c, d) { var o, e = 3.5999, f = d || 0, g = b / 2, h = c / 2, i = f * e, j = a * e, k = n(g, h, i), l = n(g, h, j + i), m = j < 0 ? 0 : 1; return o = j < 0 ? j >= -180 ? 0 : 1 : j <= 180 ? 0 : 1, "M" + k + "A" + h + "," + h + " 0 " + o + "," + m + " " + l } function n(a, b, d) { var e = (d - 90) * i; return a + b * c.Math.cos(e) + "," + (a + b * c.Math.sin(e)) } function o(a) { return c.Math.max(0, c.Math.min(a || 0, 100)) } function p(a) { var b = d.progressSize; if (a) { var c = parseFloat(a); return a.lastIndexOf("%") === a.length - 1 && (c = c / 100 * b), c } return b } function q(a) { return d.strokeWidth / 100 * a } var i = c.Math.PI / 180, j = "determinate", k = "indeterminate"; return { restrict: "E", scope: { value: "@", mdDiameter: "@", mdMode: "@" }, template: '<svg xmlns="http://www.w3.org/2000/svg"><path fill="none"/></svg>', compile: function (a, c) { if (a.attr({ "aria-valuemin": 0, "aria-valuemax": 100, role: "progressbar" }), b.isUndefined(c.mdMode)) { var d = b.isDefined(c.value), e = d ? j : k, g = "Auto-adding the missing md-mode='{0}' to the ProgressCircular element"; h.debug(f.supplant(g, [e])), c.$set("mdMode", e) } else c.$set("mdMode", c.mdMode.trim()); return l } } } b.module("material.components.progressCircular").directive("mdProgressCircular", a), a.$inject = ["$$rAF", "$window", "$mdProgressCircular", "$mdTheming", "$mdUtil", "$interval", "$log"] }(), function () { function a() { function c(a, b, c, d) { return c * a / d + b } function d(a, b, c, d) { var e = (a /= d) * a, f = e * a; return b + c * (6 * f * e + -15 * e * e + 10 * f) } var a = { progressSize: 50, strokeWidth: 10, duration: 100, easeFn: c, durationIndeterminate: 500, startIndeterminate: 3, endIndeterminate: 80, rotationDurationIndeterminate: 2900, easeFnIndeterminate: d, easingPresets: { linearEase: c, materialEase: d } }; return { configure: function (c) { return a = b.extend(a, c || {}) }, $get: function () { return a } } } b.module("material.components.progressCircular").provider("$mdProgressCircular", a) }(), function () { function a() { function a(a, d, e, f) { if (f) { var g = f.getTabElementIndex(d), h = c(d, "md-tab-body").remove(), i = c(d, "md-tab-label").remove(), j = f.insertTab({ scope: a, parent: a.$parent, index: g, element: d, template: h.html(), label: i.html() }, g); a.select = a.select || b.noop, a.deselect = a.deselect || b.noop, a.$watch("active", function (a) { a && f.select(j.getIndex(), !0) }), a.$watch("disabled", function () { f.refreshIndex() }), a.$watch(function () { return f.getTabElementIndex(d) }, function (a) { j.index = a, f.updateTabOrder() }), a.$on("$destroy", function () { f.removeTab(j) }) } } function c(a, c) { for (var d = a[0].children, e = 0, f = d.length; e < f; e++) { var g = d[e]; if (g.tagName === c.toUpperCase()) return b.element(g) } return b.element() } return { require: "^?mdTabs", terminal: !0, compile: function (d, e) { var f = c(d, "md-tab-label"), g = c(d, "md-tab-body"); if (0 == f.length && (f = b.element("<md-tab-label></md-tab-label>"), e.label ? f.text(e.label) : f.append(d.contents()), 0 == g.length)) { var h = d.contents().detach(); g = b.element("<md-tab-body></md-tab-body>"), g.append(h) } return d.append(f), g.html() && d.append(g), a }, scope: { active: "=?mdActive", disabled: "=?ngDisabled", select: "&?mdOnSelect", deselect: "&?mdOnDeselect" } } } b.module("material.components.tabs").directive("mdTab", a) }(), function () { function a() { return { require: "^?mdTabs", link: function (b, c, d, e) { e && e.attachRipple(b, c) } } } b.module("material.components.tabs").directive("mdTabItem", a) }(), function () { function a() { return { terminal: !0 } } b.module("material.components.tabs").directive("mdTabLabel", a) }(), function () { function a(a) { return { restrict: "A", compile: function (b, c) { var d = a(c.mdTabScroll, null, !0); return function (b, c) { c.on("mousewheel", function (a) { b.$apply(function () { d(b, { $event: a }) }) }) } } } } b.module("material.components.tabs").directive("mdTabScroll", a), a.$inject = ["$parse"] }(), function () { function a(a, d, e, f, g, h, i, j, k, l) { function s() { m.selectedIndex = m.selectedIndex || 0, t(), v(), u(), l(d), h.nextTick(function () { ka(), ga(), la(), m.tabs[m.selectedIndex] && m.tabs[m.selectedIndex].scope.select(), r = !0, _() }) } function t() { var a = j.$mdTabsTemplate, c = b.element(o.data); c.html(a), k(c.contents())(m.parent), delete j.$mdTabsTemplate } function u() { b.element(e).on("resize", O), a.$on("$destroy", y) } function v() { a.$watch("$mdTabsCtrl.selectedIndex", G) } function w(a, b) { var c = j.$normalize("md-" + a); b && $(a, b), j.$observe(c, function (b) { m[a] = b }) } function x(a, b) { function d(b) { m[a] = "false" !== b } var c = j.$normalize("md-" + a); b && $(a, b), j.hasOwnProperty(c) && d(j[c]), j.$observe(c, d) } function y() { q = !0, b.element(e).off("resize", O) } function z(a) { b.element(o.wrapper).toggleClass("md-stretch-tabs", W()), la() } function A(a) { m.shouldCenterTabs = X() } function B(a, c) { a !== c && (b.forEach(o.tabs, function (b) { b.style.maxWidth = a + "px" }), h.nextTick(m.updateInkBarStyles)) } function C(a, b) { a !== b && (m.maxTabWidth = ca(), m.shouldCenterTabs = X(), h.nextTick(function () { m.maxTabWidth = ca(), ga(m.selectedIndex) })) } function D(a) { d[a ? "removeClass" : "addClass"]("md-no-tab-content") } function E(c) { var d = m.shouldCenterTabs ? "" : "-" + c + "px"; b.element(o.paging).css(f.CSS.TRANSFORM, "translate3d(" + d + ", 0, 0)"), a.$broadcast("$mdTabsPaginationChanged") } function F(a, b) { a !== b && o.tabs[a] && (ga(), fa()) } function G(b, c) { b !== c && (m.selectedIndex = Z(b), m.lastSelectedIndex = c, m.updateInkBarStyles(), ka(), ga(b), a.$broadcast("$mdTabsChanged"), m.tabs[c] && m.tabs[c].scope.deselect(), m.tabs[b] && m.tabs[b].scope.select()) } function H(a) { var b = d[0].getElementsByTagName("md-tab"); return Array.prototype.indexOf.call(b, a[0]) } function I() { I.watcher || (I.watcher = a.$watch(function () { h.nextTick(function () { I.watcher && d.prop("offsetParent") && (I.watcher(), I.watcher = null, O()) }, !1) })) } function J(a) { switch (a.keyCode) { case f.KEY_CODE.LEFT_ARROW: a.preventDefault(), ea(-1, !0); break; case f.KEY_CODE.RIGHT_ARROW: a.preventDefault(), ea(1, !0); break; case f.KEY_CODE.SPACE: case f.KEY_CODE.ENTER: a.preventDefault(), n || (m.selectedIndex = m.focusIndex) }m.lastClick = !1 } function K(a, b) { n || (m.focusIndex = m.selectedIndex = a), m.lastClick = !0, b && m.noSelectClick || h.nextTick(function () { m.tabs[a].element.triggerHandler("click") }, !1) } function L(a) { m.shouldPaginate && (a.preventDefault(), m.offsetLeft = na(m.offsetLeft - a.wheelDelta)) } function M() { var c, d, a = o.canvas.clientWidth, b = a + m.offsetLeft; for (c = 0; c < o.tabs.length && (d = o.tabs[c], !(d.offsetLeft + d.offsetWidth > b)); c++); m.offsetLeft = na(d.offsetLeft) } function N() { var a, b; for (a = 0; a < o.tabs.length && (b = o.tabs[a], !(b.offsetLeft + b.offsetWidth >= m.offsetLeft)); a++); m.offsetLeft = na(b.offsetLeft + b.offsetWidth - o.canvas.clientWidth) } function O() { m.lastSelectedIndex = m.selectedIndex, m.offsetLeft = na(m.offsetLeft), h.nextTick(function () { m.updateInkBarStyles(), _() }) } function P(a) { b.element(o.inkBar).toggleClass("ng-hide", a) } function Q(a) { d.toggleClass("md-dynamic-height", a) } function R(a) { if (!q) { var b = m.selectedIndex, c = m.tabs.splice(a.getIndex(), 1)[0]; ja(), m.selectedIndex === b && (c.scope.deselect(), m.tabs[m.selectedIndex] && m.tabs[m.selectedIndex].scope.select()), h.nextTick(function () { _(), m.offsetLeft = na(m.offsetLeft) }) } } function S(a, c) { var d = r, e = { getIndex: function () { return m.tabs.indexOf(f) }, isActive: function () { return this.getIndex() === m.selectedIndex }, isLeft: function () { return this.getIndex() < m.selectedIndex }, isRight: function () { return this.getIndex() > m.selectedIndex }, shouldRender: function () { return !m.noDisconnect || this.isActive() }, hasFocus: function () { return !m.lastClick && m.hasFocus && this.getIndex() === m.focusIndex }, id: h.nextUid() }, f = b.extend(e, a); return b.isDefined(c) ? m.tabs.splice(c, 0, f) : m.tabs.push(f), ha(), ia(), h.nextTick(function () { _(), d && m.autoselect && h.nextTick(function () { h.nextTick(function () { K(m.tabs.indexOf(f)) }) }) }), f } function T() { var a = {}; return a.wrapper = d[0].getElementsByTagName("md-tabs-wrapper")[0], a.data = d[0].getElementsByTagName("md-tab-data")[0], a.canvas = a.wrapper.getElementsByTagName("md-tabs-canvas")[0], a.paging = a.canvas.getElementsByTagName("md-pagination-wrapper")[0], a.tabs = a.paging.getElementsByTagName("md-tab-item"), a.dummies = a.canvas.getElementsByTagName("md-dummy-tab"), a.inkBar = a.paging.getElementsByTagName("md-ink-bar")[0], a.contentsWrapper = d[0].getElementsByTagName("md-tabs-content-wrapper")[0], a.contents = a.contentsWrapper.getElementsByTagName("md-tab-content"), a } function U() { return m.offsetLeft > 0 } function V() { var a = o.tabs[o.tabs.length - 1]; return a && a.offsetLeft + a.offsetWidth > o.canvas.clientWidth + m.offsetLeft } function W() { switch (m.stretchTabs) { case "always": return !0; case "never": return !1; default: return !m.shouldPaginate && e.matchMedia("(max-width: 600px)").matches } } function X() { return m.centerTabs && !m.shouldPaginate } function Y() { if (m.noPagination || !r) return !1; var a = d.prop("clientWidth"); return b.forEach(T().dummies, function (b) { a -= b.offsetWidth }), a < 0 } function Z(a) { if (a === -1) return -1; var c, d, b = Math.max(m.tabs.length - a, a); for (c = 0; c <= b; c++) { if (d = m.tabs[a + c], d && d.scope.disabled !== !0) return d.getIndex(); if (d = m.tabs[a - c], d && d.scope.disabled !== !0) return d.getIndex() } return a } function $(a, b, c) { Object.defineProperty(m, a, { get: function () { return c }, set: function (a) { var d = c; c = a, b && b(a, d) } }) } function _() { aa(), m.maxTabWidth = ca(), m.shouldPaginate = Y() } function aa() { W() ? b.element(o.paging).css("width", "") : b.element(o.paging).css("width", ba() + "px") } function ba() { var a = 1; return b.forEach(T().dummies, function (b) { a += Math.max(b.offsetWidth, b.getBoundingClientRect().width) }), Math.ceil(a) } function ca() { return d.prop("clientWidth") } function da() { var a = m.tabs[m.selectedIndex], b = m.tabs[m.focusIndex]; m.tabs = m.tabs.sort(function (a, b) { return a.index - b.index }), m.selectedIndex = m.tabs.indexOf(a), m.focusIndex = m.tabs.indexOf(b) } function ea(a, b) { var c, d = b ? "focusIndex" : "selectedIndex", e = m[d]; for (c = e + a; m.tabs[c] && m.tabs[c].scope.disabled; c += a); m.tabs[c] && (m[d] = c) } function fa() { T().dummies[m.focusIndex].focus() } function ga(a) { if (null == a && (a = m.focusIndex), o.tabs[a] && !m.shouldCenterTabs) { var b = o.tabs[a], c = b.offsetLeft, d = b.offsetWidth + c; m.offsetLeft = Math.max(m.offsetLeft, na(d - o.canvas.clientWidth + 64)), m.offsetLeft = Math.min(m.offsetLeft, na(c)) } } function ha() { p.forEach(function (a) { h.nextTick(a) }), p = [] } function ia() { var a = !1; b.forEach(m.tabs, function (b) { b.template && (a = !0) }), m.hasContent = a } function ja() { m.selectedIndex = Z(m.selectedIndex), m.focusIndex = Z(m.focusIndex) } function ka() { if (!m.dynamicHeight) return d.css("height", ""); if (!m.tabs.length) return p.push(ka); var a = o.contents[m.selectedIndex], b = a ? a.offsetHeight : 0, e = o.wrapper.offsetHeight, f = b + e, g = d.prop("clientHeight"); if (g !== f) { "bottom" === d.attr("md-align-tabs") && (g -= e, f -= e, d.attr("md-border-bottom") !== c && ++g), n = !0; var j = { height: g + "px" }, k = { height: f + "px" }; d.css(j), i(d, { from: j, to: k, easing: "cubic-bezier(0.35, 0, 0.25, 1)", duration: .5 }).start().done(function () { d.css({ transition: "none", height: "" }), h.nextTick(function () { d.css("transition", "") }), n = !1 }) } } function la() { if (!o.tabs[m.selectedIndex]) return void b.element(o.inkBar).css({ left: "auto", right: "auto" }); if (!m.tabs.length) return p.push(m.updateInkBarStyles); if (!d.prop("offsetParent")) return I(); var i, a = m.selectedIndex, c = o.paging.offsetWidth, e = o.tabs[a], f = e.offsetLeft, g = c - f - e.offsetWidth; m.shouldCenterTabs && (i = Array.prototype.slice.call(o.tabs).reduce(function (a, b) { return a + b.offsetWidth }, 0), c > i && h.nextTick(la, !1)), ma(), b.element(o.inkBar).css({ left: f + "px", right: g + "px" }) } function ma() { var a = m.selectedIndex, c = m.lastSelectedIndex, d = b.element(o.inkBar); b.isNumber(c) && d.toggleClass("md-left", a < c).toggleClass("md-right", a > c) } function na(a) { if (!o.tabs.length || !m.shouldPaginate) return 0; var b = o.tabs[o.tabs.length - 1], c = b.offsetLeft + b.offsetWidth; return a = Math.max(0, a), a = Math.min(c - o.canvas.clientWidth, a) } function oa(a, c) { var d = { colorElement: b.element(o.inkBar) }; g.attach(a, c, d) } var m = this, n = !1, o = T(), p = [], q = !1, r = !1; w("stretchTabs", z), $("focusIndex", F, m.selectedIndex || 0), $("offsetLeft", E, 0), $("hasContent", D, !1), $("maxTabWidth", B, ca()), $("shouldPaginate", C, !1), x("noInkBar", P), x("dynamicHeight", Q), x("noPagination"), x("swipeContent"), x("noDisconnect"), x("autoselect"), x("noSelectClick"), x("centerTabs", A, !1), x("enableDisconnect"), m.scope = a, m.parent = a.$parent, m.tabs = [], m.lastSelectedIndex = null, m.hasFocus = !1, m.lastClick = !0, m.shouldCenterTabs = X(), m.updatePagination = h.debounce(_, 100), m.redirectFocus = fa, m.attachRipple = oa, m.insertTab = S, m.removeTab = R, m.select = K, m.scroll = L, m.nextPage = M, m.previousPage = N, m.keydown = J, m.canPageForward = V, m.canPageBack = U, m.refreshIndex = ja, m.incrementIndex = ea, m.getTabElementIndex = H, m.updateInkBarStyles = h.debounce(la, 100), m.updateTabOrder = h.debounce(da, 100), s() } b.module("material.components.tabs").controller("MdTabsController", a), a.$inject = ["$scope", "$element", "$window", "$mdConstant", "$mdTabInkRipple", "$mdUtil", "$animateCss", "$attrs", "$compile", "$mdTheming"] }(), function () { function a() { return { scope: { selectedIndex: "=?mdSelected" }, template: function (a, b) { return b.$mdTabsTemplate = a.html(), '<md-tabs-wrapper> <md-tab-data></md-tab-data> <md-prev-button tabindex="-1" role="button" aria-label="Previous Page" aria-disabled="{{!$mdTabsCtrl.canPageBack()}}" ng-class="{ \'md-disabled\': !$mdTabsCtrl.canPageBack() }" ng-if="$mdTabsCtrl.shouldPaginate" ng-click="$mdTabsCtrl.previousPage()"> <md-icon md-svg-icon="md-tabs-arrow"></md-icon> </md-prev-button> <md-next-button tabindex="-1" role="button" aria-label="Next Page" aria-disabled="{{!$mdTabsCtrl.canPageForward()}}" ng-class="{ \'md-disabled\': !$mdTabsCtrl.canPageForward() }" ng-if="$mdTabsCtrl.shouldPaginate" ng-click="$mdTabsCtrl.nextPage()"> <md-icon md-svg-icon="md-tabs-arrow"></md-icon> </md-next-button> <md-tabs-canvas tabindex="{{ $mdTabsCtrl.hasFocus ? -1 : 0 }}" aria-activedescendant="tab-item-{{$mdTabsCtrl.tabs[$mdTabsCtrl.focusIndex].id}}" ng-focus="$mdTabsCtrl.redirectFocus()" ng-class="{ \'md-paginated\': $mdTabsCtrl.shouldPaginate, \'md-center-tabs\': $mdTabsCtrl.shouldCenterTabs }" ng-keydown="$mdTabsCtrl.keydown($event)" role="tablist"> <md-pagination-wrapper ng-class="{ \'md-center-tabs\': $mdTabsCtrl.shouldCenterTabs }" md-tab-scroll="$mdTabsCtrl.scroll($event)"> <md-tab-item tabindex="-1" class="md-tab" ng-repeat="tab in $mdTabsCtrl.tabs" role="tab" aria-controls="tab-content-{{::tab.id}}" aria-selected="{{tab.isActive()}}" aria-disabled="{{tab.scope.disabled || \'false\'}}" ng-click="$mdTabsCtrl.select(tab.getIndex())" ng-class="{ \'md-active\':    tab.isActive(), \'md-focused\':   tab.hasFocus(), \'md-disabled\':  tab.scope.disabled }" ng-disabled="tab.scope.disabled" md-swipe-left="$mdTabsCtrl.nextPage()" md-swipe-right="$mdTabsCtrl.previousPage()" md-tabs-template="::tab.label" md-scope="::tab.parent"></md-tab-item> <md-ink-bar></md-ink-bar> </md-pagination-wrapper> <div class="_md-visually-hidden md-dummy-wrapper"> <md-dummy-tab class="md-tab" tabindex="-1" id="tab-item-{{::tab.id}}" role="tab" aria-controls="tab-content-{{::tab.id}}" aria-selected="{{tab.isActive()}}" aria-disabled="{{tab.scope.disabled || \'false\'}}" ng-focus="$mdTabsCtrl.hasFocus = true" ng-blur="$mdTabsCtrl.hasFocus = false" ng-repeat="tab in $mdTabsCtrl.tabs" md-tabs-template="::tab.label" md-scope="::tab.parent"></md-dummy-tab> </div> </md-tabs-canvas> </md-tabs-wrapper> <md-tabs-content-wrapper ng-show="$mdTabsCtrl.hasContent && $mdTabsCtrl.selectedIndex >= 0"> <md-tab-content id="tab-content-{{::tab.id}}" role="tabpanel" aria-labelledby="tab-item-{{::tab.id}}" md-swipe-left="$mdTabsCtrl.swipeContent && $mdTabsCtrl.incrementIndex(1)" md-swipe-right="$mdTabsCtrl.swipeContent && $mdTabsCtrl.incrementIndex(-1)" ng-if="$mdTabsCtrl.hasContent" ng-repeat="(index, tab) in $mdTabsCtrl.tabs" ng-class="{ \'md-no-transition\': $mdTabsCtrl.lastSelectedIndex == null, \'md-active\':        tab.isActive(), \'md-left\':          tab.isLeft(), \'md-right\':         tab.isRight(), \'md-no-scroll\':     $mdTabsCtrl.dynamicHeight }"> <div md-tabs-template="::tab.template" md-connected-if="tab.isActive()" md-scope="::tab.parent" ng-if="$mdTabsCtrl.enableDisconnect || tab.shouldRender()"></div> </md-tab-content> </md-tabs-content-wrapper>' }, controller: "MdTabsController", controllerAs: "$mdTabsCtrl", bindToController: !0 } } b.module("material.components.tabs").directive("mdTabs", a) }(), function () { function a(a, b) { function c(c, d, e, f) { function h() { c.$watch("connected", function (a) { a === !1 ? i() : j() }), c.$on("$destroy", j) } function i() { f.enableDisconnect && b.disconnectScope(g) } function j() { f.enableDisconnect && b.reconnectScope(g) } if (f) { var g = f.enableDisconnect ? c.compileScope.$new() : c.compileScope; return d.html(c.template), a(d.contents())(g), d.on("DOMSubtreeModified", function () { f.updatePagination(), f.updateInkBarStyles() }), b.nextTick(h) } } return { restrict: "A", link: c, scope: { template: "=mdTabsTemplate", connected: "=?mdConnectedIf", compileScope: "=mdScope" }, require: "^?mdTabs" } } b.module("material.components.tabs").directive("mdTabsTemplate", a), a.$inject = ["$compile", "$mdUtil"] }(), function () {
        b.module("material.core").constant("$MD_THEME_CSS", "/*  Only used with Theme processes */html.md-THEME_NAME-theme, body.md-THEME_NAME-theme {  color: '{{foreground-1}}';  background-color: '{{background-color}}'; }md-autocomplete.md-THEME_NAME-theme {  background: '{{background-A100}}'; }  md-autocomplete.md-THEME_NAME-theme[disabled] {    background: '{{background-100}}'; }  md-autocomplete.md-THEME_NAME-theme button md-icon path {    fill: '{{background-600}}'; }  md-autocomplete.md-THEME_NAME-theme button:after {    background: '{{background-600-0.3}}'; }.md-autocomplete-suggestions-container.md-THEME_NAME-theme {  background: '{{background-A100}}'; }  .md-autocomplete-suggestions-container.md-THEME_NAME-theme li {    color: '{{background-900}}'; }    .md-autocomplete-suggestions-container.md-THEME_NAME-theme li .highlight {      color: '{{background-600}}'; }    .md-autocomplete-suggestions-container.md-THEME_NAME-theme li:hover, .md-autocomplete-suggestions-container.md-THEME_NAME-theme li.selected {      background: '{{background-200}}'; }md-bottom-sheet.md-THEME_NAME-theme {  background-color: '{{background-50}}';  border-top-color: '{{background-300}}'; }  md-bottom-sheet.md-THEME_NAME-theme.md-list md-list-item {    color: '{{foreground-1}}'; }  md-bottom-sheet.md-THEME_NAME-theme .md-subheader {    background-color: '{{background-50}}'; }  md-bottom-sheet.md-THEME_NAME-theme .md-subheader {    color: '{{foreground-1}}'; }md-backdrop {  background-color: '{{background-900-0.0}}'; }  md-backdrop.md-opaque.md-THEME_NAME-theme {    background-color: '{{background-900-1.0}}'; }.md-button.md-THEME_NAME-theme:not([disabled]):hover {  background-color: '{{background-500-0.2}}'; }.md-button.md-THEME_NAME-theme:not([disabled]).md-focused {  background-color: '{{background-500-0.2}}'; }.md-button.md-THEME_NAME-theme:not([disabled]).md-icon-button:hover {  background-color: transparent; }.md-button.md-THEME_NAME-theme.md-fab {  background-color: '{{accent-color}}';  color: '{{accent-contrast}}'; }  .md-button.md-THEME_NAME-theme.md-fab md-icon {    color: '{{accent-contrast}}'; }  .md-button.md-THEME_NAME-theme.md-fab:not([disabled]):hover {    background-color: '{{accent-600}}'; }  .md-button.md-THEME_NAME-theme.md-fab:not([disabled]).md-focused {    background-color: '{{accent-600}}'; }.md-button.md-THEME_NAME-theme.md-primary {  color: '{{primary-color}}'; }  .md-button.md-THEME_NAME-theme.md-primary.md-raised, .md-button.md-THEME_NAME-theme.md-primary.md-fab {    color: '{{primary-contrast}}';    background-color: '{{primary-color}}'; }    .md-button.md-THEME_NAME-theme.md-primary.md-raised:not([disabled]) md-icon, .md-button.md-THEME_NAME-theme.md-primary.md-fab:not([disabled]) md-icon {      color: '{{primary-contrast}}'; }    .md-button.md-THEME_NAME-theme.md-primary.md-raised:not([disabled]):hover, .md-button.md-THEME_NAME-theme.md-primary.md-fab:not([disabled]):hover {      background-color: '{{primary-600}}'; }    .md-button.md-THEME_NAME-theme.md-primary.md-raised:not([disabled]).md-focused, .md-button.md-THEME_NAME-theme.md-primary.md-fab:not([disabled]).md-focused {      background-color: '{{primary-600}}'; }  .md-button.md-THEME_NAME-theme.md-primary:not([disabled]) md-icon {    color: '{{primary-color}}'; }.md-button.md-THEME_NAME-theme.md-fab {  background-color: '{{accent-color}}';  color: '{{accent-contrast}}'; }  .md-button.md-THEME_NAME-theme.md-fab:not([disabled]) .md-icon {    color: '{{accent-contrast}}'; }  .md-button.md-THEME_NAME-theme.md-fab:not([disabled]):hover {    background-color: '{{accent-600}}'; }  .md-button.md-THEME_NAME-theme.md-fab:not([disabled]).md-focused {    background-color: '{{accent-600}}'; }.md-button.md-THEME_NAME-theme.md-raised {  color: '{{background-900}}';  background-color: '{{background-50}}'; }  .md-button.md-THEME_NAME-theme.md-raised:not([disabled]) md-icon {    color: '{{background-900}}'; }  .md-button.md-THEME_NAME-theme.md-raised:not([disabled]):hover {    background-color: '{{background-50}}'; }  .md-button.md-THEME_NAME-theme.md-raised:not([disabled]).md-focused {    background-color: '{{background-200}}'; }.md-button.md-THEME_NAME-theme.md-warn {  color: '{{warn-color}}'; }  .md-button.md-THEME_NAME-theme.md-warn.md-raised, .md-button.md-THEME_NAME-theme.md-warn.md-fab {    color: '{{warn-contrast}}';    background-color: '{{warn-color}}'; }    .md-button.md-THEME_NAME-theme.md-warn.md-raised:not([disabled]) md-icon, .md-button.md-THEME_NAME-theme.md-warn.md-fab:not([disabled]) md-icon {      color: '{{warn-contrast}}'; }    .md-button.md-THEME_NAME-theme.md-warn.md-raised:not([disabled]):hover, .md-button.md-THEME_NAME-theme.md-warn.md-fab:not([disabled]):hover {      background-color: '{{warn-600}}'; }    .md-button.md-THEME_NAME-theme.md-warn.md-raised:not([disabled]).md-focused, .md-button.md-THEME_NAME-theme.md-warn.md-fab:not([disabled]).md-focused {      background-color: '{{warn-600}}'; }  .md-button.md-THEME_NAME-theme.md-warn:not([disabled]) md-icon {    color: '{{warn-color}}'; }.md-button.md-THEME_NAME-theme.md-accent {  color: '{{accent-color}}'; }  .md-button.md-THEME_NAME-theme.md-accent.md-raised, .md-button.md-THEME_NAME-theme.md-accent.md-fab {    color: '{{accent-contrast}}';    background-color: '{{accent-color}}'; }    .md-button.md-THEME_NAME-theme.md-accent.md-raised:not([disabled]) md-icon, .md-button.md-THEME_NAME-theme.md-accent.md-fab:not([disabled]) md-icon {      color: '{{accent-contrast}}'; }    .md-button.md-THEME_NAME-theme.md-accent.md-raised:not([disabled]):hover, .md-button.md-THEME_NAME-theme.md-accent.md-fab:not([disabled]):hover {      background-color: '{{accent-600}}'; }    .md-button.md-THEME_NAME-theme.md-accent.md-raised:not([disabled]).md-focused, .md-button.md-THEME_NAME-theme.md-accent.md-fab:not([disabled]).md-focused {      background-color: '{{accent-600}}'; }  .md-button.md-THEME_NAME-theme.md-accent:not([disabled]) md-icon {    color: '{{accent-color}}'; }.md-button.md-THEME_NAME-theme[disabled], .md-button.md-THEME_NAME-theme.md-raised[disabled], .md-button.md-THEME_NAME-theme.md-fab[disabled], .md-button.md-THEME_NAME-theme.md-accent[disabled], .md-button.md-THEME_NAME-theme.md-warn[disabled] {  color: '{{foreground-3}}';  cursor: default; }  .md-button.md-THEME_NAME-theme[disabled] md-icon, .md-button.md-THEME_NAME-theme.md-raised[disabled] md-icon, .md-button.md-THEME_NAME-theme.md-fab[disabled] md-icon, .md-button.md-THEME_NAME-theme.md-accent[disabled] md-icon, .md-button.md-THEME_NAME-theme.md-warn[disabled] md-icon {    color: '{{foreground-3}}'; }.md-button.md-THEME_NAME-theme.md-raised[disabled], .md-button.md-THEME_NAME-theme.md-fab[disabled] {  background-color: '{{foreground-4}}'; }.md-button.md-THEME_NAME-theme[disabled] {  background-color: transparent; }a.md-THEME_NAME-theme:not(.md-button) {  color: '{{accent-color}}'; }  a.md-THEME_NAME-theme:not(.md-button):hover {    color: '{{accent-700}}'; }  a.md-THEME_NAME-theme:not(.md-button).md-primary {    color: '{{primary-color}}'; }    a.md-THEME_NAME-theme:not(.md-button).md-primary:hover {      color: '{{primary-700}}'; }  a.md-THEME_NAME-theme:not(.md-button).md-warn {    color: '{{warn-color}}'; }    a.md-THEME_NAME-theme:not(.md-button).md-warn:hover {      color: '{{warn-700}}'; }md-card.md-THEME_NAME-theme {  background-color: '{{background-hue-1}}';  border-radius: 2px; }  md-card.md-THEME_NAME-theme .md-card-image {    border-radius: 2px 2px 0 0; }  md-card.md-THEME_NAME-theme md-card-header md-card-avatar md-icon {    color: '{{background-color}}';    background-color: '{{foreground-3}}'; }  md-card.md-THEME_NAME-theme md-card-header md-card-header-text .md-subhead {    color: '{{foreground-2}}'; }  md-card.md-THEME_NAME-theme md-card-title md-card-title-text:not(:only-child) .md-subhead {    color: '{{foreground-2}}'; }md-checkbox.md-THEME_NAME-theme .md-ripple {  color: '{{accent-600}}'; }md-checkbox.md-THEME_NAME-theme.md-checked .md-ripple {  color: '{{background-600}}'; }md-checkbox.md-THEME_NAME-theme.md-checked.md-focused ._md-container:before {  background-color: '{{accent-color-0.26}}'; }md-checkbox.md-THEME_NAME-theme .md-ink-ripple {  color: '{{foreground-2}}'; }md-checkbox.md-THEME_NAME-theme.md-checked .md-ink-ripple {  color: '{{accent-color-0.87}}'; }md-checkbox.md-THEME_NAME-theme ._md-icon {  border-color: '{{foreground-2}}'; }md-checkbox.md-THEME_NAME-theme.md-checked ._md-icon {  background-color: '{{accent-color-0.87}}'; }md-checkbox.md-THEME_NAME-theme.md-checked ._md-icon:after {  border-color: '{{accent-contrast-0.87}}'; }md-checkbox.md-THEME_NAME-theme:not([disabled]).md-primary .md-ripple {  color: '{{primary-600}}'; }md-checkbox.md-THEME_NAME-theme:not([disabled]).md-primary.md-checked .md-ripple {  color: '{{background-600}}'; }md-checkbox.md-THEME_NAME-theme:not([disabled]).md-primary .md-ink-ripple {  color: '{{foreground-2}}'; }md-checkbox.md-THEME_NAME-theme:not([disabled]).md-primary.md-checked .md-ink-ripple {  color: '{{primary-color-0.87}}'; }md-checkbox.md-THEME_NAME-theme:not([disabled]).md-primary ._md-icon {  border-color: '{{foreground-2}}'; }md-checkbox.md-THEME_NAME-theme:not([disabled]).md-primary.md-checked ._md-icon {  background-color: '{{primary-color-0.87}}'; }md-checkbox.md-THEME_NAME-theme:not([disabled]).md-primary.md-checked.md-focused ._md-container:before {  background-color: '{{primary-color-0.26}}'; }md-checkbox.md-THEME_NAME-theme:not([disabled]).md-primary.md-checked ._md-icon:after {  border-color: '{{primary-contrast-0.87}}'; }md-checkbox.md-THEME_NAME-theme:not([disabled]).md-primary .md-indeterminate[disabled] ._md-container {  color: '{{foreground-3}}'; }md-checkbox.md-THEME_NAME-theme:not([disabled]).md-warn .md-ripple {  color: '{{warn-600}}'; }md-checkbox.md-THEME_NAME-theme:not([disabled]).md-warn .md-ink-ripple {  color: '{{foreground-2}}'; }md-checkbox.md-THEME_NAME-theme:not([disabled]).md-warn.md-checked .md-ink-ripple {  color: '{{warn-color-0.87}}'; }md-checkbox.md-THEME_NAME-theme:not([disabled]).md-warn ._md-icon {  border-color: '{{foreground-2}}'; }md-checkbox.md-THEME_NAME-theme:not([disabled]).md-warn.md-checked ._md-icon {  background-color: '{{warn-color-0.87}}'; }md-checkbox.md-THEME_NAME-theme:not([disabled]).md-warn.md-checked.md-focused:not([disabled]) ._md-container:before {  background-color: '{{warn-color-0.26}}'; }md-checkbox.md-THEME_NAME-theme:not([disabled]).md-warn.md-checked ._md-icon:after {  border-color: '{{background-200}}'; }md-checkbox.md-THEME_NAME-theme[disabled] ._md-icon {  border-color: '{{foreground-3}}'; }md-checkbox.md-THEME_NAME-theme[disabled].md-checked ._md-icon {  background-color: '{{foreground-3}}'; }md-checkbox.md-THEME_NAME-theme[disabled].md-checked ._md-icon:after {  border-color: '{{background-200}}'; }md-checkbox.md-THEME_NAME-theme[disabled] ._md-label {  color: '{{foreground-3}}'; }md-chips.md-THEME_NAME-theme .md-chips {  box-shadow: 0 1px '{{foreground-4}}'; }  md-chips.md-THEME_NAME-theme .md-chips.md-focused {    box-shadow: 0 2px '{{primary-color}}'; }  md-chips.md-THEME_NAME-theme .md-chips ._md-chip-input-container input {    color: '{{foreground-1}}'; }    md-chips.md-THEME_NAME-theme .md-chips ._md-chip-input-container input::-webkit-input-placeholder {      color: '{{foreground-3}}'; }    md-chips.md-THEME_NAME-theme .md-chips ._md-chip-input-container input:-moz-placeholder {      color: '{{foreground-3}}'; }    md-chips.md-THEME_NAME-theme .md-chips ._md-chip-input-container input::-moz-placeholder {      color: '{{foreground-3}}'; }    md-chips.md-THEME_NAME-theme .md-chips ._md-chip-input-container input:-ms-input-placeholder {      color: '{{foreground-3}}'; }    md-chips.md-THEME_NAME-theme .md-chips ._md-chip-input-container input::-webkit-input-placeholder {      color: '{{foreground-3}}'; }md-chips.md-THEME_NAME-theme md-chip {  background: '{{background-300}}';  color: '{{background-800}}'; }  md-chips.md-THEME_NAME-theme md-chip md-icon {    color: '{{background-700}}'; }  md-chips.md-THEME_NAME-theme md-chip.md-focused {    background: '{{primary-color}}';    color: '{{primary-contrast}}'; }    md-chips.md-THEME_NAME-theme md-chip.md-focused md-icon {      color: '{{primary-contrast}}'; }  md-chips.md-THEME_NAME-theme md-chip._md-chip-editing {    background: transparent;    color: '{{background-800}}'; }md-chips.md-THEME_NAME-theme md-chip-remove .md-button md-icon path {  fill: '{{background-500}}'; }.md-contact-suggestion span.md-contact-email {  color: '{{background-400}}'; }md-content.md-THEME_NAME-theme {  color: '{{foreground-1}}';  background-color: '{{background-hue-1}}'; }/** Theme styles for mdCalendar. */.md-calendar.md-THEME_NAME-theme {  background: '{{background-A100}}';  color: '{{background-A200-0.87}}'; }  .md-calendar.md-THEME_NAME-theme tr:last-child td {    border-bottom-color: '{{background-200}}'; }.md-THEME_NAME-theme .md-calendar-day-header {  background: '{{background-300}}';  color: '{{background-A200-0.87}}'; }.md-THEME_NAME-theme .md-calendar-date.md-calendar-date-today .md-calendar-date-selection-indicator {  border: 1px solid '{{primary-500}}'; }.md-THEME_NAME-theme .md-calendar-date.md-calendar-date-today.md-calendar-date-disabled {  color: '{{primary-500-0.6}}'; }.md-THEME_NAME-theme .md-calendar-date.md-focus .md-calendar-date-selection-indicator {  background: '{{background-hue-1}}'; }.md-THEME_NAME-theme .md-calendar-date-selection-indicator:hover {  background: '{{background-300}}'; }.md-THEME_NAME-theme .md-calendar-date.md-calendar-selected-date .md-calendar-date-selection-indicator,.md-THEME_NAME-theme .md-calendar-date.md-focus.md-calendar-selected-date .md-calendar-date-selection-indicator {  background: '{{primary-500}}';  color: '{{primary-500-contrast}}';  border-color: transparent; }.md-THEME_NAME-theme .md-calendar-date-disabled,.md-THEME_NAME-theme .md-calendar-month-label-disabled {  color: '{{foreground-3}}'; }/** Theme styles for mdDatepicker. */.md-THEME_NAME-theme .md-datepicker-input {  color: '{{foreground-1}}'; }  .md-THEME_NAME-theme .md-datepicker-input::-webkit-input-placeholder {    color: '{{foreground-3}}'; }  .md-THEME_NAME-theme .md-datepicker-input:-moz-placeholder {    color: '{{foreground-3}}'; }  .md-THEME_NAME-theme .md-datepicker-input::-moz-placeholder {    color: '{{foreground-3}}'; }  .md-THEME_NAME-theme .md-datepicker-input:-ms-input-placeholder {    color: '{{foreground-3}}'; }  .md-THEME_NAME-theme .md-datepicker-input::-webkit-input-placeholder {    color: '{{foreground-3}}'; }.md-THEME_NAME-theme .md-datepicker-input-container {  border-bottom-color: '{{background-300}}'; }  .md-THEME_NAME-theme .md-datepicker-input-container.md-datepicker-focused {    border-bottom-color: '{{primary-500}}'; }  .md-THEME_NAME-theme .md-datepicker-input-container.md-datepicker-invalid {    border-bottom-color: '{{warn-A700}}'; }.md-THEME_NAME-theme .md-datepicker-calendar-pane {  border-color: '{{background-hue-1}}'; }.md-THEME_NAME-theme .md-datepicker-triangle-button .md-datepicker-expand-triangle {  border-top-color: '{{foreground-3}}'; }.md-THEME_NAME-theme .md-datepicker-triangle-button:hover .md-datepicker-expand-triangle {  border-top-color: '{{foreground-2}}'; }.md-THEME_NAME-theme .md-datepicker-open .md-datepicker-calendar-icon {  fill: '{{primary-500}}'; }.md-THEME_NAME-theme .md-datepicker-open .md-datepicker-input-container,.md-THEME_NAME-theme .md-datepicker-input-mask-opaque {  background: '{{background-hue-1}}'; }.md-THEME_NAME-theme .md-datepicker-calendar {  background: '{{background-A100}}'; }md-dialog.md-THEME_NAME-theme {  border-radius: 4px;  background-color: '{{background-hue-1}}'; }  md-dialog.md-THEME_NAME-theme.md-content-overflow .md-actions, md-dialog.md-THEME_NAME-theme.md-content-overflow md-dialog-actions {    border-top-color: '{{foreground-4}}'; }md-divider.md-THEME_NAME-theme {  border-top-color: '{{foreground-4}}'; }.layout-row > md-divider.md-THEME_NAME-theme,.layout-xs-row > md-divider.md-THEME_NAME-theme, .layout-gt-xs-row > md-divider.md-THEME_NAME-theme,.layout-sm-row > md-divider.md-THEME_NAME-theme, .layout-gt-sm-row > md-divider.md-THEME_NAME-theme,.layout-md-row > md-divider.md-THEME_NAME-theme, .layout-gt-md-row > md-divider.md-THEME_NAME-theme,.layout-lg-row > md-divider.md-THEME_NAME-theme, .layout-gt-lg-row > md-divider.md-THEME_NAME-theme,.layout-xl-row > md-divider.md-THEME_NAME-theme {  border-right-color: '{{foreground-4}}'; }md-icon.md-THEME_NAME-theme {  color: '{{foreground-2}}'; }  md-icon.md-THEME_NAME-theme.md-primary {    color: '{{primary-color}}'; }  md-icon.md-THEME_NAME-theme.md-accent {    color: '{{accent-color}}'; }  md-icon.md-THEME_NAME-theme.md-warn {    color: '{{warn-color}}'; }md-input-container.md-THEME_NAME-theme .md-input {  color: '{{foreground-1}}';  border-color: '{{foreground-4}}'; }  md-input-container.md-THEME_NAME-theme .md-input::-webkit-input-placeholder {    color: '{{foreground-3}}'; }  md-input-container.md-THEME_NAME-theme .md-input:-moz-placeholder {    color: '{{foreground-3}}'; }  md-input-container.md-THEME_NAME-theme .md-input::-moz-placeholder {    color: '{{foreground-3}}'; }  md-input-container.md-THEME_NAME-theme .md-input:-ms-input-placeholder {    color: '{{foreground-3}}'; }  md-input-container.md-THEME_NAME-theme .md-input::-webkit-input-placeholder {    color: '{{foreground-3}}'; }md-input-container.md-THEME_NAME-theme > md-icon {  color: '{{foreground-1}}'; }md-input-container.md-THEME_NAME-theme label,md-input-container.md-THEME_NAME-theme ._md-placeholder {  color: '{{foreground-3}}'; }md-input-container.md-THEME_NAME-theme label.md-required:after {  color: '{{warn-A700}}'; }md-input-container.md-THEME_NAME-theme:not(.md-input-focused):not(.md-input-invalid) label.md-required:after {  color: '{{foreground-2}}'; }md-input-container.md-THEME_NAME-theme .md-input-messages-animation, md-input-container.md-THEME_NAME-theme .md-input-message-animation {  color: '{{warn-A700}}'; }  md-input-container.md-THEME_NAME-theme .md-input-messages-animation .md-char-counter, md-input-container.md-THEME_NAME-theme .md-input-message-animation .md-char-counter {    color: '{{foreground-1}}'; }md-input-container.md-THEME_NAME-theme:not(.md-input-invalid).md-input-has-value label {  color: '{{foreground-2}}'; }md-input-container.md-THEME_NAME-theme:not(.md-input-invalid).md-input-focused .md-input {  border-color: '{{primary-500}}'; }md-input-container.md-THEME_NAME-theme:not(.md-input-invalid).md-input-focused label {  color: '{{primary-500}}'; }md-input-container.md-THEME_NAME-theme:not(.md-input-invalid).md-input-focused md-icon {  color: '{{primary-500}}'; }md-input-container.md-THEME_NAME-theme:not(.md-input-invalid).md-input-focused.md-accent .md-input {  border-color: '{{accent-500}}'; }md-input-container.md-THEME_NAME-theme:not(.md-input-invalid).md-input-focused.md-accent label {  color: '{{accent-500}}'; }md-input-container.md-THEME_NAME-theme:not(.md-input-invalid).md-input-focused.md-warn .md-input {  border-color: '{{warn-A700}}'; }md-input-container.md-THEME_NAME-theme:not(.md-input-invalid).md-input-focused.md-warn label {  color: '{{warn-A700}}'; }md-input-container.md-THEME_NAME-theme.md-input-invalid .md-input {  border-color: '{{warn-A700}}'; }md-input-container.md-THEME_NAME-theme.md-input-invalid label {  color: '{{warn-A700}}'; }md-input-container.md-THEME_NAME-theme.md-input-invalid .md-input-message-animation, md-input-container.md-THEME_NAME-theme.md-input-invalid .md-char-counter {  color: '{{warn-A700}}'; }md-input-container.md-THEME_NAME-theme .md-input[disabled],md-input-container.md-THEME_NAME-theme .md-input [disabled] {  border-bottom-color: transparent;  color: '{{foreground-3}}';  background-image: linear-gradient(to right, \"{{foreground-3}}\" 0%, \"{{foreground-3}}\" 33%, transparent 0%);  background-image: -ms-linear-gradient(left, transparent 0%, \"{{foreground-3}}\" 100%); }md-list.md-THEME_NAME-theme md-list-item.md-2-line .md-list-item-text h3, md-list.md-THEME_NAME-theme md-list-item.md-2-line .md-list-item-text h4,md-list.md-THEME_NAME-theme md-list-item.md-3-line .md-list-item-text h3,md-list.md-THEME_NAME-theme md-list-item.md-3-line .md-list-item-text h4 {  color: '{{foreground-1}}'; }md-list.md-THEME_NAME-theme md-list-item.md-2-line .md-list-item-text p,md-list.md-THEME_NAME-theme md-list-item.md-3-line .md-list-item-text p {  color: '{{foreground-2}}'; }md-list.md-THEME_NAME-theme ._md-proxy-focus.md-focused div._md-no-style {  background-color: '{{background-100}}'; }md-list.md-THEME_NAME-theme md-list-item .md-avatar-icon {  background-color: '{{foreground-3}}';  color: '{{background-color}}'; }md-list.md-THEME_NAME-theme md-list-item > md-icon {  color: '{{foreground-2}}'; }  md-list.md-THEME_NAME-theme md-list-item > md-icon.md-highlight {    color: '{{primary-color}}'; }    md-list.md-THEME_NAME-theme md-list-item > md-icon.md-highlight.md-accent {      color: '{{accent-color}}'; }md-menu-bar.md-THEME_NAME-theme > button.md-button {  color: '{{foreground-2}}';  border-radius: 2px; }md-menu-bar.md-THEME_NAME-theme md-menu._md-open > button, md-menu-bar.md-THEME_NAME-theme md-menu > button:focus {  outline: none;  background: '{{background-200}}'; }md-menu-bar.md-THEME_NAME-theme._md-open:not(._md-keyboard-mode) md-menu:hover > button {  background-color: '{{ background-500-0.2}}'; }md-menu-bar.md-THEME_NAME-theme:not(._md-keyboard-mode):not(._md-open) md-menu button:hover,md-menu-bar.md-THEME_NAME-theme:not(._md-keyboard-mode):not(._md-open) md-menu button:focus {  background: transparent; }md-menu-content.md-THEME_NAME-theme .md-menu > .md-button:after {  color: '{{background-A200-0.54}}'; }md-menu-content.md-THEME_NAME-theme .md-menu._md-open > .md-button {  background-color: '{{ background-500-0.2}}'; }md-toolbar.md-THEME_NAME-theme.md-menu-toolbar {  background-color: '{{background-A100}}';  color: '{{background-A200}}'; }  md-toolbar.md-THEME_NAME-theme.md-menu-toolbar md-toolbar-filler {    background-color: '{{primary-color}}';    color: '{{background-A100-0.87}}'; }    md-toolbar.md-THEME_NAME-theme.md-menu-toolbar md-toolbar-filler md-icon {      color: '{{background-A100-0.87}}'; }md-menu-content.md-THEME_NAME-theme {  background-color: '{{background-A100}}'; }  md-menu-content.md-THEME_NAME-theme md-menu-item {    color: '{{background-A200-0.87}}'; }    md-menu-content.md-THEME_NAME-theme md-menu-item md-icon {      color: '{{background-A200-0.54}}'; }    md-menu-content.md-THEME_NAME-theme md-menu-item .md-button[disabled] {      color: '{{background-A200-0.25}}'; }      md-menu-content.md-THEME_NAME-theme md-menu-item .md-button[disabled] md-icon {        color: '{{background-A200-0.25}}'; }  md-menu-content.md-THEME_NAME-theme md-menu-divider {    background-color: '{{background-A200-0.11}}'; }md-progress-circular.md-THEME_NAME-theme path {  stroke: '{{primary-color}}'; }md-progress-circular.md-THEME_NAME-theme.md-warn path {  stroke: '{{warn-color}}'; }md-progress-circular.md-THEME_NAME-theme.md-accent path {  stroke: '{{accent-color}}'; }md-progress-linear.md-THEME_NAME-theme ._md-container {  background-color: '{{primary-100}}'; }md-progress-linear.md-THEME_NAME-theme ._md-bar {  background-color: '{{primary-color}}'; }md-progress-linear.md-THEME_NAME-theme.md-warn ._md-container {  background-color: '{{warn-100}}'; }md-progress-linear.md-THEME_NAME-theme.md-warn ._md-bar {  background-color: '{{warn-color}}'; }md-progress-linear.md-THEME_NAME-theme.md-accent ._md-container {  background-color: '{{accent-100}}'; }md-progress-linear.md-THEME_NAME-theme.md-accent ._md-bar {  background-color: '{{accent-color}}'; }md-progress-linear.md-THEME_NAME-theme[md-mode=buffer].md-warn ._md-bar1 {  background-color: '{{warn-100}}'; }md-progress-linear.md-THEME_NAME-theme[md-mode=buffer].md-warn ._md-dashed:before {  background: radial-gradient(\"{{warn-100}}\" 0%, \"{{warn-100}}\" 16%, transparent 42%); }md-progress-linear.md-THEME_NAME-theme[md-mode=buffer].md-accent ._md-bar1 {  background-color: '{{accent-100}}'; }md-progress-linear.md-THEME_NAME-theme[md-mode=buffer].md-accent ._md-dashed:before {  background: radial-gradient(\"{{accent-100}}\" 0%, \"{{accent-100}}\" 16%, transparent 42%); }md-radio-button.md-THEME_NAME-theme ._md-off {  border-color: '{{foreground-2}}'; }md-radio-button.md-THEME_NAME-theme ._md-on {  background-color: '{{accent-color-0.87}}'; }md-radio-button.md-THEME_NAME-theme.md-checked ._md-off {  border-color: '{{accent-color-0.87}}'; }md-radio-button.md-THEME_NAME-theme.md-checked .md-ink-ripple {  color: '{{accent-color-0.87}}'; }md-radio-button.md-THEME_NAME-theme ._md-container .md-ripple {  color: '{{accent-600}}'; }md-radio-group.md-THEME_NAME-theme:not([disabled]) .md-primary ._md-on, md-radio-group.md-THEME_NAME-theme:not([disabled]).md-primary ._md-on,md-radio-button.md-THEME_NAME-theme:not([disabled]) .md-primary ._md-on,md-radio-button.md-THEME_NAME-theme:not([disabled]).md-primary ._md-on {  background-color: '{{primary-color-0.87}}'; }md-radio-group.md-THEME_NAME-theme:not([disabled]) .md-primary .md-checked ._md-off, md-radio-group.md-THEME_NAME-theme:not([disabled]) .md-primary.md-checked ._md-off, md-radio-group.md-THEME_NAME-theme:not([disabled]).md-primary .md-checked ._md-off, md-radio-group.md-THEME_NAME-theme:not([disabled]).md-primary.md-checked ._md-off,md-radio-button.md-THEME_NAME-theme:not([disabled]) .md-primary .md-checked ._md-off,md-radio-button.md-THEME_NAME-theme:not([disabled]) .md-primary.md-checked ._md-off,md-radio-button.md-THEME_NAME-theme:not([disabled]).md-primary .md-checked ._md-off,md-radio-button.md-THEME_NAME-theme:not([disabled]).md-primary.md-checked ._md-off {  border-color: '{{primary-color-0.87}}'; }md-radio-group.md-THEME_NAME-theme:not([disabled]) .md-primary .md-checked .md-ink-ripple, md-radio-group.md-THEME_NAME-theme:not([disabled]) .md-primary.md-checked .md-ink-ripple, md-radio-group.md-THEME_NAME-theme:not([disabled]).md-primary .md-checked .md-ink-ripple, md-radio-group.md-THEME_NAME-theme:not([disabled]).md-primary.md-checked .md-ink-ripple,md-radio-button.md-THEME_NAME-theme:not([disabled]) .md-primary .md-checked .md-ink-ripple,md-radio-button.md-THEME_NAME-theme:not([disabled]) .md-primary.md-checked .md-ink-ripple,md-radio-button.md-THEME_NAME-theme:not([disabled]).md-primary .md-checked .md-ink-ripple,md-radio-button.md-THEME_NAME-theme:not([disabled]).md-primary.md-checked .md-ink-ripple {  color: '{{primary-color-0.87}}'; }md-radio-group.md-THEME_NAME-theme:not([disabled]) .md-primary ._md-container .md-ripple, md-radio-group.md-THEME_NAME-theme:not([disabled]).md-primary ._md-container .md-ripple,md-radio-button.md-THEME_NAME-theme:not([disabled]) .md-primary ._md-container .md-ripple,md-radio-button.md-THEME_NAME-theme:not([disabled]).md-primary ._md-container .md-ripple {  color: '{{primary-600}}'; }md-radio-group.md-THEME_NAME-theme:not([disabled]) .md-warn ._md-on, md-radio-group.md-THEME_NAME-theme:not([disabled]).md-warn ._md-on,md-radio-button.md-THEME_NAME-theme:not([disabled]) .md-warn ._md-on,md-radio-button.md-THEME_NAME-theme:not([disabled]).md-warn ._md-on {  background-color: '{{warn-color-0.87}}'; }md-radio-group.md-THEME_NAME-theme:not([disabled]) .md-warn .md-checked ._md-off, md-radio-group.md-THEME_NAME-theme:not([disabled]) .md-warn.md-checked ._md-off, md-radio-group.md-THEME_NAME-theme:not([disabled]).md-warn .md-checked ._md-off, md-radio-group.md-THEME_NAME-theme:not([disabled]).md-warn.md-checked ._md-off,md-radio-button.md-THEME_NAME-theme:not([disabled]) .md-warn .md-checked ._md-off,md-radio-button.md-THEME_NAME-theme:not([disabled]) .md-warn.md-checked ._md-off,md-radio-button.md-THEME_NAME-theme:not([disabled]).md-warn .md-checked ._md-off,md-radio-button.md-THEME_NAME-theme:not([disabled]).md-warn.md-checked ._md-off {  border-color: '{{warn-color-0.87}}'; }md-radio-group.md-THEME_NAME-theme:not([disabled]) .md-warn .md-checked .md-ink-ripple, md-radio-group.md-THEME_NAME-theme:not([disabled]) .md-warn.md-checked .md-ink-ripple, md-radio-group.md-THEME_NAME-theme:not([disabled]).md-warn .md-checked .md-ink-ripple, md-radio-group.md-THEME_NAME-theme:not([disabled]).md-warn.md-checked .md-ink-ripple,md-radio-button.md-THEME_NAME-theme:not([disabled]) .md-warn .md-checked .md-ink-ripple,md-radio-button.md-THEME_NAME-theme:not([disabled]) .md-warn.md-checked .md-ink-ripple,md-radio-button.md-THEME_NAME-theme:not([disabled]).md-warn .md-checked .md-ink-ripple,md-radio-button.md-THEME_NAME-theme:not([disabled]).md-warn.md-checked .md-ink-ripple {  color: '{{warn-color-0.87}}'; }md-radio-group.md-THEME_NAME-theme:not([disabled]) .md-warn ._md-container .md-ripple, md-radio-group.md-THEME_NAME-theme:not([disabled]).md-warn ._md-container .md-ripple,md-radio-button.md-THEME_NAME-theme:not([disabled]) .md-warn ._md-container .md-ripple,md-radio-button.md-THEME_NAME-theme:not([disabled]).md-warn ._md-container .md-ripple {  color: '{{warn-600}}'; }md-radio-group.md-THEME_NAME-theme[disabled],md-radio-button.md-THEME_NAME-theme[disabled] {  color: '{{foreground-3}}'; }  md-radio-group.md-THEME_NAME-theme[disabled] ._md-container ._md-off,  md-radio-button.md-THEME_NAME-theme[disabled] ._md-container ._md-off {    border-color: '{{foreground-3}}'; }  md-radio-group.md-THEME_NAME-theme[disabled] ._md-container ._md-on,  md-radio-button.md-THEME_NAME-theme[disabled] ._md-container ._md-on {    border-color: '{{foreground-3}}'; }md-radio-group.md-THEME_NAME-theme .md-checked .md-ink-ripple {  color: '{{accent-color-0.26}}'; }md-radio-group.md-THEME_NAME-theme.md-primary .md-checked:not([disabled]) .md-ink-ripple, md-radio-group.md-THEME_NAME-theme .md-checked:not([disabled]).md-primary .md-ink-ripple {  color: '{{primary-color-0.26}}'; }md-radio-group.md-THEME_NAME-theme .md-checked.md-primary .md-ink-ripple {  color: '{{warn-color-0.26}}'; }md-radio-group.md-THEME_NAME-theme.md-focused:not(:empty) .md-checked ._md-container:before {  background-color: '{{accent-color-0.26}}'; }md-radio-group.md-THEME_NAME-theme.md-focused:not(:empty).md-primary .md-checked ._md-container:before,md-radio-group.md-THEME_NAME-theme.md-focused:not(:empty) .md-checked.md-primary ._md-container:before {  background-color: '{{primary-color-0.26}}'; }md-radio-group.md-THEME_NAME-theme.md-focused:not(:empty).md-warn .md-checked ._md-container:before,md-radio-group.md-THEME_NAME-theme.md-focused:not(:empty) .md-checked.md-warn ._md-container:before {  background-color: '{{warn-color-0.26}}'; }md-select.md-THEME_NAME-theme[disabled] ._md-select-value {  border-bottom-color: transparent;  background-image: linear-gradient(to right, \"{{foreground-3}}\" 0%, \"{{foreground-3}}\" 33%, transparent 0%);  background-image: -ms-linear-gradient(left, transparent 0%, \"{{foreground-3}}\" 100%); }md-select.md-THEME_NAME-theme ._md-select-value {  border-bottom-color: '{{foreground-4}}'; }  md-select.md-THEME_NAME-theme ._md-select-value._md-select-placeholder {    color: '{{foreground-3}}'; }md-select.md-THEME_NAME-theme.ng-invalid.ng-dirty ._md-select-value {  color: '{{warn-A700}}' !important;  border-bottom-color: '{{warn-A700}}' !important; }md-select.md-THEME_NAME-theme:not([disabled]):focus ._md-select-value {  border-bottom-color: '{{primary-color}}';  color: '{{ foreground-1 }}'; }  md-select.md-THEME_NAME-theme:not([disabled]):focus ._md-select-value._md-select-placeholder {    color: '{{ foreground-1 }}'; }md-select.md-THEME_NAME-theme:not([disabled]):focus.md-accent ._md-select-value {  border-bottom-color: '{{accent-color}}'; }md-select.md-THEME_NAME-theme:not([disabled]):focus.md-warn ._md-select-value {  border-bottom-color: '{{warn-color}}'; }md-select.md-THEME_NAME-theme[disabled] ._md-select-value {  color: '{{foreground-3}}'; }  md-select.md-THEME_NAME-theme[disabled] ._md-select-value._md-select-placeholder {    color: '{{foreground-3}}'; }md-select-menu.md-THEME_NAME-theme md-content {  background: '{{background-A100}}'; }  md-select-menu.md-THEME_NAME-theme md-content md-optgroup {    color: '{{background-600-0.87}}'; }  md-select-menu.md-THEME_NAME-theme md-content md-option {    color: '{{background-900-0.87}}'; }    md-select-menu.md-THEME_NAME-theme md-content md-option[disabled] ._md-text {      color: '{{background-400-0.87}}'; }    md-select-menu.md-THEME_NAME-theme md-content md-option:not([disabled]):focus, md-select-menu.md-THEME_NAME-theme md-content md-option:not([disabled]):hover {      background: '{{background-200}}'; }    md-select-menu.md-THEME_NAME-theme md-content md-option[selected] {      color: '{{primary-500}}'; }      md-select-menu.md-THEME_NAME-theme md-content md-option[selected]:focus {        color: '{{primary-600}}'; }      md-select-menu.md-THEME_NAME-theme md-content md-option[selected].md-accent {        color: '{{accent-500}}'; }        md-select-menu.md-THEME_NAME-theme md-content md-option[selected].md-accent:focus {          color: '{{accent-600}}'; }[md-checkbox-enabled].md-THEME_NAME-theme .md-ripple {  color: '{{primary-600}}'; }[md-checkbox-enabled].md-THEME_NAME-theme[selected] .md-ripple {  color: '{{background-600}}'; }[md-checkbox-enabled].md-THEME_NAME-theme .md-ink-ripple {  color: '{{foreground-2}}'; }[md-checkbox-enabled].md-THEME_NAME-theme[selected] .md-ink-ripple {  color: '{{primary-color-0.87}}'; }[md-checkbox-enabled].md-THEME_NAME-theme ._md-icon {  border-color: '{{foreground-2}}'; }[md-checkbox-enabled].md-THEME_NAME-theme[selected] ._md-icon {  background-color: '{{primary-color-0.87}}'; }[md-checkbox-enabled].md-THEME_NAME-theme[selected].md-focused ._md-container:before {  background-color: '{{primary-color-0.26}}'; }[md-checkbox-enabled].md-THEME_NAME-theme[selected] ._md-icon:after {  border-color: '{{primary-contrast-0.87}}'; }[md-checkbox-enabled].md-THEME_NAME-theme .md-indeterminate[disabled] ._md-container {  color: '{{foreground-3}}'; }[md-checkbox-enabled].md-THEME_NAME-theme md-option ._md-text {  color: '{{background-900-0.87}}'; }md-sidenav.md-THEME_NAME-theme, md-sidenav.md-THEME_NAME-theme md-content {  background-color: '{{background-hue-1}}'; }md-slider.md-THEME_NAME-theme ._md-track {  background-color: '{{foreground-3}}'; }md-slider.md-THEME_NAME-theme ._md-track-ticks {  color: '{{background-contrast}}'; }md-slider.md-THEME_NAME-theme ._md-focus-ring {  background-color: '{{accent-200-0.38}}'; }md-slider.md-THEME_NAME-theme ._md-disabled-thumb {  border-color: '{{background-color}}';  background-color: '{{background-color}}'; }md-slider.md-THEME_NAME-theme._md-min ._md-thumb:after {  background-color: '{{background-color}}';  border-color: '{{foreground-3}}'; }md-slider.md-THEME_NAME-theme._md-min ._md-focus-ring {  background-color: '{{foreground-3-0.38}}'; }md-slider.md-THEME_NAME-theme._md-min[md-discrete] ._md-thumb:after {  background-color: '{{background-contrast}}';  border-color: transparent; }md-slider.md-THEME_NAME-theme._md-min[md-discrete] ._md-sign {  background-color: '{{background-400}}'; }  md-slider.md-THEME_NAME-theme._md-min[md-discrete] ._md-sign:after {    border-top-color: '{{background-400}}'; }md-slider.md-THEME_NAME-theme._md-min[md-discrete][md-vertical] ._md-sign:after {  border-top-color: transparent;  border-left-color: '{{background-400}}'; }md-slider.md-THEME_NAME-theme ._md-track._md-track-fill {  background-color: '{{accent-color}}'; }md-slider.md-THEME_NAME-theme ._md-thumb:after {  border-color: '{{accent-color}}';  background-color: '{{accent-color}}'; }md-slider.md-THEME_NAME-theme ._md-sign {  background-color: '{{accent-color}}'; }  md-slider.md-THEME_NAME-theme ._md-sign:after {    border-top-color: '{{accent-color}}'; }md-slider.md-THEME_NAME-theme[md-vertical] ._md-sign:after {  border-top-color: transparent;  border-left-color: '{{accent-color}}'; }md-slider.md-THEME_NAME-theme ._md-thumb-text {  color: '{{accent-contrast}}'; }md-slider.md-THEME_NAME-theme.md-warn ._md-focus-ring {  background-color: '{{warn-200-0.38}}'; }md-slider.md-THEME_NAME-theme.md-warn ._md-track._md-track-fill {  background-color: '{{warn-color}}'; }md-slider.md-THEME_NAME-theme.md-warn ._md-thumb:after {  border-color: '{{warn-color}}';  background-color: '{{warn-color}}'; }md-slider.md-THEME_NAME-theme.md-warn ._md-sign {  background-color: '{{warn-color}}'; }  md-slider.md-THEME_NAME-theme.md-warn ._md-sign:after {    border-top-color: '{{warn-color}}'; }md-slider.md-THEME_NAME-theme.md-warn[md-vertical] ._md-sign:after {  border-top-color: transparent;  border-left-color: '{{warn-color}}'; }md-slider.md-THEME_NAME-theme.md-warn ._md-thumb-text {  color: '{{warn-contrast}}'; }md-slider.md-THEME_NAME-theme.md-primary ._md-focus-ring {  background-color: '{{primary-200-0.38}}'; }md-slider.md-THEME_NAME-theme.md-primary ._md-track._md-track-fill {  background-color: '{{primary-color}}'; }md-slider.md-THEME_NAME-theme.md-primary ._md-thumb:after {  border-color: '{{primary-color}}';  background-color: '{{primary-color}}'; }md-slider.md-THEME_NAME-theme.md-primary ._md-sign {  background-color: '{{primary-color}}'; }  md-slider.md-THEME_NAME-theme.md-primary ._md-sign:after {    border-top-color: '{{primary-color}}'; }md-slider.md-THEME_NAME-theme.md-primary[md-vertical] ._md-sign:after {  border-top-color: transparent;  border-left-color: '{{primary-color}}'; }md-slider.md-THEME_NAME-theme.md-primary ._md-thumb-text {  color: '{{primary-contrast}}'; }md-slider.md-THEME_NAME-theme[disabled] ._md-thumb:after {  border-color: transparent; }md-slider.md-THEME_NAME-theme[disabled]:not(._md-min) ._md-thumb:after, md-slider.md-THEME_NAME-theme[disabled][md-discrete] ._md-thumb:after {  background-color: '{{foreground-3}}';  border-color: transparent; }md-slider.md-THEME_NAME-theme[disabled][readonly] ._md-sign {  background-color: '{{background-400}}'; }  md-slider.md-THEME_NAME-theme[disabled][readonly] ._md-sign:after {    border-top-color: '{{background-400}}'; }md-slider.md-THEME_NAME-theme[disabled][readonly][md-vertical] ._md-sign:after {  border-top-color: transparent;  border-left-color: '{{background-400}}'; }md-slider.md-THEME_NAME-theme[disabled][readonly] ._md-disabled-thumb {  border-color: transparent;  background-color: transparent; }md-slider-container[disabled] > *:first-child:not(md-slider),md-slider-container[disabled] > *:last-child:not(md-slider) {  color: '{{foreground-3}}'; }.md-subheader.md-THEME_NAME-theme {  color: '{{ foreground-2-0.23 }}';  background-color: '{{background-hue-2}}'; }  .md-subheader.md-THEME_NAME-theme.md-primary {    color: '{{primary-color}}'; }  .md-subheader.md-THEME_NAME-theme.md-accent {    color: '{{accent-color}}'; }  .md-subheader.md-THEME_NAME-theme.md-warn {    color: '{{warn-color}}'; }md-switch.md-THEME_NAME-theme .md-ink-ripple {  color: '{{background-500}}'; }md-switch.md-THEME_NAME-theme ._md-thumb {  background-color: '{{background-50}}'; }md-switch.md-THEME_NAME-theme ._md-bar {  background-color: '{{background-500}}'; }md-switch.md-THEME_NAME-theme.md-checked .md-ink-ripple {  color: '{{accent-color}}'; }md-switch.md-THEME_NAME-theme.md-checked ._md-thumb {  background-color: '{{accent-color}}'; }md-switch.md-THEME_NAME-theme.md-checked ._md-bar {  background-color: '{{accent-color-0.5}}'; }md-switch.md-THEME_NAME-theme.md-checked.md-focused ._md-thumb:before {  background-color: '{{accent-color-0.26}}'; }md-switch.md-THEME_NAME-theme.md-checked.md-primary .md-ink-ripple {  color: '{{primary-color}}'; }md-switch.md-THEME_NAME-theme.md-checked.md-primary ._md-thumb {  background-color: '{{primary-color}}'; }md-switch.md-THEME_NAME-theme.md-checked.md-primary ._md-bar {  background-color: '{{primary-color-0.5}}'; }md-switch.md-THEME_NAME-theme.md-checked.md-primary.md-focused ._md-thumb:before {  background-color: '{{primary-color-0.26}}'; }md-switch.md-THEME_NAME-theme.md-checked.md-warn .md-ink-ripple {  color: '{{warn-color}}'; }md-switch.md-THEME_NAME-theme.md-checked.md-warn ._md-thumb {  background-color: '{{warn-color}}'; }md-switch.md-THEME_NAME-theme.md-checked.md-warn ._md-bar {  background-color: '{{warn-color-0.5}}'; }md-switch.md-THEME_NAME-theme.md-checked.md-warn.md-focused ._md-thumb:before {  background-color: '{{warn-color-0.26}}'; }md-switch.md-THEME_NAME-theme[disabled] ._md-thumb {  background-color: '{{background-400}}'; }md-switch.md-THEME_NAME-theme[disabled] ._md-bar {  background-color: '{{foreground-4}}'; }md-tabs.md-THEME_NAME-theme md-tabs-wrapper {  background-color: transparent;  border-color: '{{foreground-4}}'; }md-tabs.md-THEME_NAME-theme .md-paginator md-icon {  color: '{{primary-color}}'; }md-tabs.md-THEME_NAME-theme md-ink-bar {  color: '{{accent-color}}';  background: '{{accent-color}}'; }md-tabs.md-THEME_NAME-theme .md-tab {  color: '{{foreground-2}}'; }  md-tabs.md-THEME_NAME-theme .md-tab[disabled], md-tabs.md-THEME_NAME-theme .md-tab[disabled] md-icon {    color: '{{foreground-3}}'; }  md-tabs.md-THEME_NAME-theme .md-tab.md-active, md-tabs.md-THEME_NAME-theme .md-tab.md-active md-icon, md-tabs.md-THEME_NAME-theme .md-tab.md-focused, md-tabs.md-THEME_NAME-theme .md-tab.md-focused md-icon {    color: '{{primary-color}}'; }  md-tabs.md-THEME_NAME-theme .md-tab.md-focused {    background: '{{primary-color-0.1}}'; }  md-tabs.md-THEME_NAME-theme .md-tab .md-ripple-container {    color: '{{accent-100}}'; }md-tabs.md-THEME_NAME-theme.md-accent > md-tabs-wrapper {  background-color: '{{accent-color}}'; }  md-tabs.md-THEME_NAME-theme.md-accent > md-tabs-wrapper > md-tabs-canvas > md-pagination-wrapper > md-tab-item:not([disabled]) {    color: '{{accent-100}}'; }    md-tabs.md-THEME_NAME-theme.md-accent > md-tabs-wrapper > md-tabs-canvas > md-pagination-wrapper > md-tab-item:not([disabled]).md-active, md-tabs.md-THEME_NAME-theme.md-accent > md-tabs-wrapper > md-tabs-canvas > md-pagination-wrapper > md-tab-item:not([disabled]).md-active md-icon, md-tabs.md-THEME_NAME-theme.md-accent > md-tabs-wrapper > md-tabs-canvas > md-pagination-wrapper > md-tab-item:not([disabled]).md-focused, md-tabs.md-THEME_NAME-theme.md-accent > md-tabs-wrapper > md-tabs-canvas > md-pagination-wrapper > md-tab-item:not([disabled]).md-focused md-icon {      color: '{{accent-contrast}}'; }    md-tabs.md-THEME_NAME-theme.md-accent > md-tabs-wrapper > md-tabs-canvas > md-pagination-wrapper > md-tab-item:not([disabled]).md-focused {      background: '{{accent-contrast-0.1}}'; }  md-tabs.md-THEME_NAME-theme.md-accent > md-tabs-wrapper > md-tabs-canvas > md-pagination-wrapper > md-ink-bar {    color: '{{primary-600-1}}';    background: '{{primary-600-1}}'; }md-tabs.md-THEME_NAME-theme.md-primary > md-tabs-wrapper {  background-color: '{{primary-color}}'; }  md-tabs.md-THEME_NAME-theme.md-primary > md-tabs-wrapper > md-tabs-canvas > md-pagination-wrapper > md-tab-item:not([disabled]) {    color: '{{primary-100}}'; }    md-tabs.md-THEME_NAME-theme.md-primary > md-tabs-wrapper > md-tabs-canvas > md-pagination-wrapper > md-tab-item:not([disabled]).md-active, md-tabs.md-THEME_NAME-theme.md-primary > md-tabs-wrapper > md-tabs-canvas > md-pagination-wrapper > md-tab-item:not([disabled]).md-active md-icon, md-tabs.md-THEME_NAME-theme.md-primary > md-tabs-wrapper > md-tabs-canvas > md-pagination-wrapper > md-tab-item:not([disabled]).md-focused, md-tabs.md-THEME_NAME-theme.md-primary > md-tabs-wrapper > md-tabs-canvas > md-pagination-wrapper > md-tab-item:not([disabled]).md-focused md-icon {      color: '{{primary-contrast}}'; }    md-tabs.md-THEME_NAME-theme.md-primary > md-tabs-wrapper > md-tabs-canvas > md-pagination-wrapper > md-tab-item:not([disabled]).md-focused {      background: '{{primary-contrast-0.1}}'; }md-tabs.md-THEME_NAME-theme.md-warn > md-tabs-wrapper {  background-color: '{{warn-color}}'; }  md-tabs.md-THEME_NAME-theme.md-warn > md-tabs-wrapper > md-tabs-canvas > md-pagination-wrapper > md-tab-item:not([disabled]) {    color: '{{warn-100}}'; }    md-tabs.md-THEME_NAME-theme.md-warn > md-tabs-wrapper > md-tabs-canvas > md-pagination-wrapper > md-tab-item:not([disabled]).md-active, md-tabs.md-THEME_NAME-theme.md-warn > md-tabs-wrapper > md-tabs-canvas > md-pagination-wrapper > md-tab-item:not([disabled]).md-active md-icon, md-tabs.md-THEME_NAME-theme.md-warn > md-tabs-wrapper > md-tabs-canvas > md-pagination-wrapper > md-tab-item:not([disabled]).md-focused, md-tabs.md-THEME_NAME-theme.md-warn > md-tabs-wrapper > md-tabs-canvas > md-pagination-wrapper > md-tab-item:not([disabled]).md-focused md-icon {      color: '{{warn-contrast}}'; }    md-tabs.md-THEME_NAME-theme.md-warn > md-tabs-wrapper > md-tabs-canvas > md-pagination-wrapper > md-tab-item:not([disabled]).md-focused {      background: '{{warn-contrast-0.1}}'; }md-toolbar > md-tabs.md-THEME_NAME-theme > md-tabs-wrapper {  background-color: '{{primary-color}}'; }  md-toolbar > md-tabs.md-THEME_NAME-theme > md-tabs-wrapper > md-tabs-canvas > md-pagination-wrapper > md-tab-item:not([disabled]) {    color: '{{primary-100}}'; }    md-toolbar > md-tabs.md-THEME_NAME-theme > md-tabs-wrapper > md-tabs-canvas > md-pagination-wrapper > md-tab-item:not([disabled]).md-active, md-toolbar > md-tabs.md-THEME_NAME-theme > md-tabs-wrapper > md-tabs-canvas > md-pagination-wrapper > md-tab-item:not([disabled]).md-active md-icon, md-toolbar > md-tabs.md-THEME_NAME-theme > md-tabs-wrapper > md-tabs-canvas > md-pagination-wrapper > md-tab-item:not([disabled]).md-focused, md-toolbar > md-tabs.md-THEME_NAME-theme > md-tabs-wrapper > md-tabs-canvas > md-pagination-wrapper > md-tab-item:not([disabled]).md-focused md-icon {      color: '{{primary-contrast}}'; }    md-toolbar > md-tabs.md-THEME_NAME-theme > md-tabs-wrapper > md-tabs-canvas > md-pagination-wrapper > md-tab-item:not([disabled]).md-focused {      background: '{{primary-contrast-0.1}}'; }md-toolbar.md-accent > md-tabs.md-THEME_NAME-theme > md-tabs-wrapper {  background-color: '{{accent-color}}'; }  md-toolbar.md-accent > md-tabs.md-THEME_NAME-theme > md-tabs-wrapper > md-tabs-canvas > md-pagination-wrapper > md-tab-item:not([disabled]) {    color: '{{accent-100}}'; }    md-toolbar.md-accent > md-tabs.md-THEME_NAME-theme > md-tabs-wrapper > md-tabs-canvas > md-pagination-wrapper > md-tab-item:not([disabled]).md-active, md-toolbar.md-accent > md-tabs.md-THEME_NAME-theme > md-tabs-wrapper > md-tabs-canvas > md-pagination-wrapper > md-tab-item:not([disabled]).md-active md-icon, md-toolbar.md-accent > md-tabs.md-THEME_NAME-theme > md-tabs-wrapper > md-tabs-canvas > md-pagination-wrapper > md-tab-item:not([disabled]).md-focused, md-toolbar.md-accent > md-tabs.md-THEME_NAME-theme > md-tabs-wrapper > md-tabs-canvas > md-pagination-wrapper > md-tab-item:not([disabled]).md-focused md-icon {      color: '{{accent-contrast}}'; }    md-toolbar.md-accent > md-tabs.md-THEME_NAME-theme > md-tabs-wrapper > md-tabs-canvas > md-pagination-wrapper > md-tab-item:not([disabled]).md-focused {      background: '{{accent-contrast-0.1}}'; }  md-toolbar.md-accent > md-tabs.md-THEME_NAME-theme > md-tabs-wrapper > md-tabs-canvas > md-pagination-wrapper > md-ink-bar {    color: '{{primary-600-1}}';    background: '{{primary-600-1}}'; }md-toolbar.md-warn > md-tabs.md-THEME_NAME-theme > md-tabs-wrapper {  background-color: '{{warn-color}}'; }  md-toolbar.md-warn > md-tabs.md-THEME_NAME-theme > md-tabs-wrapper > md-tabs-canvas > md-pagination-wrapper > md-tab-item:not([disabled]) {    color: '{{warn-100}}'; }    md-toolbar.md-warn > md-tabs.md-THEME_NAME-theme > md-tabs-wrapper > md-tabs-canvas > md-pagination-wrapper > md-tab-item:not([disabled]).md-active, md-toolbar.md-warn > md-tabs.md-THEME_NAME-theme > md-tabs-wrapper > md-tabs-canvas > md-pagination-wrapper > md-tab-item:not([disabled]).md-active md-icon, md-toolbar.md-warn > md-tabs.md-THEME_NAME-theme > md-tabs-wrapper > md-tabs-canvas > md-pagination-wrapper > md-tab-item:not([disabled]).md-focused, md-toolbar.md-warn > md-tabs.md-THEME_NAME-theme > md-tabs-wrapper > md-tabs-canvas > md-pagination-wrapper > md-tab-item:not([disabled]).md-focused md-icon {      color: '{{warn-contrast}}'; }    md-toolbar.md-warn > md-tabs.md-THEME_NAME-theme > md-tabs-wrapper > md-tabs-canvas > md-pagination-wrapper > md-tab-item:not([disabled]).md-focused {      background: '{{warn-contrast-0.1}}'; }md-toast.md-THEME_NAME-theme .md-toast-content {  background-color: #323232;  color: '{{background-50}}'; }  md-toast.md-THEME_NAME-theme .md-toast-content .md-button {    color: '{{background-50}}'; }    md-toast.md-THEME_NAME-theme .md-toast-content .md-button.md-highlight {      color: '{{accent-A200}}'; }      md-toast.md-THEME_NAME-theme .md-toast-content .md-button.md-highlight.md-primary {        color: '{{primary-A200}}'; }      md-toast.md-THEME_NAME-theme .md-toast-content .md-button.md-highlight.md-warn {        color: '{{warn-A200}}'; }md-toolbar.md-THEME_NAME-theme:not(.md-menu-toolbar) {  background-color: '{{primary-color}}';  color: '{{primary-contrast}}'; }  md-toolbar.md-THEME_NAME-theme:not(.md-menu-toolbar) md-icon {    color: '{{primary-contrast}}';    fill: '{{primary-contrast}}'; }  md-toolbar.md-THEME_NAME-theme:not(.md-menu-toolbar) .md-button[disabled] md-icon {    color: '{{primary-contrast-0.26}}';    fill: '{{primary-contrast-0.26}}'; }  md-toolbar.md-THEME_NAME-theme:not(.md-menu-toolbar).md-accent {    background-color: '{{accent-color}}';    color: '{{accent-contrast}}'; }    md-toolbar.md-THEME_NAME-theme:not(.md-menu-toolbar).md-accent .md-ink-ripple {      color: '{{accent-contrast}}'; }    md-toolbar.md-THEME_NAME-theme:not(.md-menu-toolbar).md-accent md-icon {      color: '{{accent-contrast}}';      fill: '{{accent-contrast}}'; }    md-toolbar.md-THEME_NAME-theme:not(.md-menu-toolbar).md-accent .md-button[disabled] md-icon {      color: '{{accent-contrast-0.26}}';      fill: '{{accent-contrast-0.26}}'; }  md-toolbar.md-THEME_NAME-theme:not(.md-menu-toolbar).md-warn {    background-color: '{{warn-color}}';    color: '{{warn-contrast}}'; }md-tooltip.md-THEME_NAME-theme {  color: '{{background-A100}}'; }  md-tooltip.md-THEME_NAME-theme ._md-content {    background-color: '{{foreground-2}}'; }");
    }()
}(window, window.angular), window.ngMaterial = { version: { full: "1.1.0-rc2" } };

/*! WOW - v0.1.9 - 2014-05-10
* Copyright (c) 2014 Matthieu Aussaguel; Licensed MIT */(function () { var a, b, c = function (a, b) { return function () { return a.apply(b, arguments) } }; a = function () { function a() { } return a.prototype.extend = function (a, b) { var c, d; for (c in a) d = a[c], null != d && (b[c] = d); return b }, a.prototype.isMobile = function (a) { return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(a) }, a }(), b = this.WeakMap || (b = function () { function a() { this.keys = [], this.values = [] } return a.prototype.get = function (a) { var b, c, d, e, f; for (f = this.keys, b = d = 0, e = f.length; e > d; b = ++d)if (c = f[b], c === a) return this.values[b] }, a.prototype.set = function (a, b) { var c, d, e, f, g; for (g = this.keys, c = e = 0, f = g.length; f > e; c = ++e)if (d = g[c], d === a) return void (this.values[c] = b); return this.keys.push(a), this.values.push(b) }, a }()), this.WOW = function () { function d(a) { null == a && (a = {}), this.scrollCallback = c(this.scrollCallback, this), this.scrollHandler = c(this.scrollHandler, this), this.start = c(this.start, this), this.scrolled = !0, this.config = this.util().extend(a, this.defaults), this.animationNameCache = new b } return d.prototype.defaults = { boxClass: "wow", animateClass: "animated", offset: 0, mobile: !0 }, d.prototype.init = function () { var a; return this.element = window.document.documentElement, "interactive" === (a = document.readyState) || "complete" === a ? this.start() : document.addEventListener("DOMContentLoaded", this.start) }, d.prototype.start = function () { var a, b, c, d; if (this.boxes = this.element.getElementsByClassName(this.config.boxClass), this.boxes.length) { if (this.disabled()) return this.resetStyle(); for (d = this.boxes, b = 0, c = d.length; c > b; b++)a = d[b], this.applyStyle(a, !0); return window.addEventListener("scroll", this.scrollHandler, !1), window.addEventListener("resize", this.scrollHandler, !1), this.interval = setInterval(this.scrollCallback, 50) } }, d.prototype.stop = function () { return window.removeEventListener("scroll", this.scrollHandler, !1), window.removeEventListener("resize", this.scrollHandler, !1), null != this.interval ? clearInterval(this.interval) : void 0 }, d.prototype.show = function (a) { return this.applyStyle(a), a.className = "" + a.className + " " + this.config.animateClass }, d.prototype.applyStyle = function (a, b) { var c, d, e; return d = a.getAttribute("data-wow-duration"), c = a.getAttribute("data-wow-delay"), e = a.getAttribute("data-wow-iteration"), this.animate(function (f) { return function () { return f.customStyle(a, b, d, c, e) } }(this)) }, d.prototype.animate = function () { return "requestAnimationFrame" in window ? function (a) { return window.requestAnimationFrame(a) } : function (a) { return a() } }(), d.prototype.resetStyle = function () { var a, b, c, d, e; for (d = this.boxes, e = [], b = 0, c = d.length; c > b; b++)a = d[b], e.push(a.setAttribute("style", "visibility: visible;")); return e }, d.prototype.customStyle = function (a, b, c, d, e) { return b && this.cacheAnimationName(a), a.style.visibility = b ? "hidden" : "visible", c && this.vendorSet(a.style, { animationDuration: c }), d && this.vendorSet(a.style, { animationDelay: d }), e && this.vendorSet(a.style, { animationIterationCount: e }), this.vendorSet(a.style, { animationName: b ? "none" : this.cachedAnimationName(a) }), a }, d.prototype.vendors = ["moz", "webkit"], d.prototype.vendorSet = function (a, b) { var c, d, e, f; f = []; for (c in b) d = b[c], a["" + c] = d, f.push(function () { var b, f, g, h; for (g = this.vendors, h = [], b = 0, f = g.length; f > b; b++)e = g[b], h.push(a["" + e + c.charAt(0).toUpperCase() + c.substr(1)] = d); return h }.call(this)); return f }, d.prototype.vendorCSS = function (a, b) { var c, d, e, f, g, h; for (d = window.getComputedStyle(a), c = d.getPropertyCSSValue(b), h = this.vendors, f = 0, g = h.length; g > f; f++)e = h[f], c = c || d.getPropertyCSSValue("-" + e + "-" + b); return c }, d.prototype.animationName = function (a) { var b; try { b = this.vendorCSS(a, "animation-name").cssText } catch (c) { b = window.getComputedStyle(a).getPropertyValue("animation-name") } return "none" === b ? "" : b }, d.prototype.cacheAnimationName = function (a) { return this.animationNameCache.set(a, this.animationName(a)) }, d.prototype.cachedAnimationName = function (a) { return this.animationNameCache.get(a) }, d.prototype.scrollHandler = function () { return this.scrolled = !0 }, d.prototype.scrollCallback = function () { var a; return this.scrolled && (this.scrolled = !1, this.boxes = function () { var b, c, d, e; for (d = this.boxes, e = [], b = 0, c = d.length; c > b; b++)a = d[b], a && (this.isVisible(a) ? this.show(a) : e.push(a)); return e }.call(this), !this.boxes.length) ? this.stop() : void 0 }, d.prototype.offsetTop = function (a) { for (var b; void 0 === a.offsetTop;)a = a.parentNode; for (b = a.offsetTop; a = a.offsetParent;)b += a.offsetTop; return b }, d.prototype.isVisible = function (a) { var b, c, d, e, f; return c = a.getAttribute("data-wow-offset") || this.config.offset, f = window.pageYOffset, e = f + this.element.clientHeight - c, d = this.offsetTop(a), b = d + a.clientHeight, e >= d && b >= f }, d.prototype.util = function () { return this._util || (this._util = new a) }, d.prototype.disabled = function () { return !this.config.mobile && this.util().isMobile(navigator.userAgent) }, d }() }).call(this);


/*
 jQuery animateNumber plugin v0.0.14
 (c) 2013, Alexandr Borisov.
 https://github.com/aishek/jquery-animateNumber
*/
(function (d) {
    var r = function (b) { return b.split("").reverse().join("") }, m = { numberStep: function (b, a) { var e = Math.floor(b); d(a.elem).text(e) } }, g = function (b) { var a = b.elem; a.nodeType && a.parentNode && (a = a._animateNumberSetter, a || (a = m.numberStep), a(b.now, b)) }; d.Tween && d.Tween.propHooks ? d.Tween.propHooks.number = { set: g } : d.fx.step.number = g; d.animateNumber = {
        numberStepFactories: {
            append: function (b) { return function (a, e) { var f = Math.floor(a); d(e.elem).prop("number", a).text(f + b) } }, separator: function (b, a, e) {
                b = b || " ";
                a = a || 3; e = e || ""; return function (f, k) { var u = 0 > f, c = Math.floor((u ? -1 : 1) * f).toString(), n = d(k.elem); if (c.length > a) { for (var h = c, l = a, m = h.split("").reverse(), c = [], p, s, q, t = 0, g = Math.ceil(h.length / l); t < g; t++) { p = ""; for (q = 0; q < l; q++) { s = t * l + q; if (s === h.length) break; p += m[s] } c.push(p) } h = c.length - 1; l = r(c[h]); c[h] = r(parseInt(l, 10).toString()); c = c.join(b); c = r(c) } n.prop("number", f).text((u ? "-" : "") + c + e) }
            }
        }
    }; d.fn.animateNumber = function () {
        for (var b = arguments[0], a = d.extend({}, m, b), e = d(this), f = [a], k = 1, g = arguments.length; k < g; k++)f.push(arguments[k]);
        if (b.numberStep) { var c = this.each(function () { this._animateNumberSetter = b.numberStep }), n = a.complete; a.complete = function () { c.each(function () { delete this._animateNumberSetter }); n && n.apply(this, arguments) } } return e.animate.apply(e, f)
    }
})(jQuery);

//bootstrap js
/*!
  * Bootstrap v4.1.3 (https://getbootstrap.com/)
  * Copyright 2011-2018 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)
  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
  */
!function (t, e) { "object" == typeof exports && "undefined" != typeof module ? e(exports, require("jquery"), require("popper.js")) : "function" == typeof define && define.amd ? define(["exports", "jquery", "popper.js"], e) : e(t.bootstrap = {}, t.jQuery, t.Popper) }(this, function (t, e, h) { "use strict"; function i(t, e) { for (var n = 0; n < e.length; n++) { var i = e[n]; i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(t, i.key, i) } } function s(t, e, n) { return e && i(t.prototype, e), n && i(t, n), t } function l(r) { for (var t = 1; t < arguments.length; t++) { var o = null != arguments[t] ? arguments[t] : {}, e = Object.keys(o); "function" == typeof Object.getOwnPropertySymbols && (e = e.concat(Object.getOwnPropertySymbols(o).filter(function (t) { return Object.getOwnPropertyDescriptor(o, t).enumerable }))), e.forEach(function (t) { var e, n, i; e = r, i = o[n = t], n in e ? Object.defineProperty(e, n, { value: i, enumerable: !0, configurable: !0, writable: !0 }) : e[n] = i }) } return r } e = e && e.hasOwnProperty("default") ? e.default : e, h = h && h.hasOwnProperty("default") ? h.default : h; var r, n, o, a, c, u, f, d, g, _, m, p, v, y, E, C, T, b, S, I, A, D, w, N, O, k, P, j, H, L, R, x, W, U, q, F, K, M, Q, B, V, Y, z, J, Z, G, $, X, tt, et, nt, it, rt, ot, st, at, lt, ct, ht, ut, ft, dt, gt, _t, mt, pt, vt, yt, Et, Ct, Tt, bt, St, It, At, Dt, wt, Nt, Ot, kt, Pt, jt, Ht, Lt, Rt, xt, Wt, Ut, qt, Ft, Kt, Mt, Qt, Bt, Vt, Yt, zt, Jt, Zt, Gt, $t, Xt, te, ee, ne, ie, re, oe, se, ae, le, ce, he, ue, fe, de, ge, _e, me, pe, ve, ye, Ee, Ce, Te, be, Se, Ie, Ae, De, we, Ne, Oe, ke, Pe, je, He, Le, Re, xe, We, Ue, qe, Fe, Ke, Me, Qe, Be, Ve, Ye, ze, Je, Ze, Ge, $e, Xe, tn, en, nn, rn, on, sn, an, ln, cn, hn, un, fn, dn, gn, _n, mn, pn, vn, yn, En, Cn, Tn, bn, Sn, In, An, Dn, wn, Nn, On, kn, Pn, jn, Hn, Ln, Rn, xn, Wn, Un, qn, Fn = function (i) { var e = "transitionend"; function t(t) { var e = this, n = !1; return i(this).one(l.TRANSITION_END, function () { n = !0 }), setTimeout(function () { n || l.triggerTransitionEnd(e) }, t), this } var l = { TRANSITION_END: "bsTransitionEnd", getUID: function (t) { for (; t += ~~(1e6 * Math.random()), document.getElementById(t);); return t }, getSelectorFromElement: function (t) { var e = t.getAttribute("data-target"); e && "#" !== e || (e = t.getAttribute("href") || ""); try { return document.querySelector(e) ? e : null } catch (t) { return null } }, getTransitionDurationFromElement: function (t) { if (!t) return 0; var e = i(t).css("transition-duration"); return parseFloat(e) ? (e = e.split(",")[0], 1e3 * parseFloat(e)) : 0 }, reflow: function (t) { return t.offsetHeight }, triggerTransitionEnd: function (t) { i(t).trigger(e) }, supportsTransitionEnd: function () { return Boolean(e) }, isElement: function (t) { return (t[0] || t).nodeType }, typeCheckConfig: function (t, e, n) { for (var i in n) if (Object.prototype.hasOwnProperty.call(n, i)) { var r = n[i], o = e[i], s = o && l.isElement(o) ? "element" : (a = o, {}.toString.call(a).match(/\s([a-z]+)/i)[1].toLowerCase()); if (!new RegExp(r).test(s)) throw new Error(t.toUpperCase() + ': Option "' + i + '" provided type "' + s + '" but expected type "' + r + '".') } var a } }; return i.fn.emulateTransitionEnd = t, i.event.special[l.TRANSITION_END] = { bindType: e, delegateType: e, handle: function (t) { if (i(t.target).is(this)) return t.handleObj.handler.apply(this, arguments) } }, l }(e), Kn = (n = "alert", a = "." + (o = "bs.alert"), c = (r = e).fn[n], u = { CLOSE: "close" + a, CLOSED: "closed" + a, CLICK_DATA_API: "click" + a + ".data-api" }, f = "alert", d = "fade", g = "show", _ = function () { function i(t) { this._element = t } var t = i.prototype; return t.close = function (t) { var e = this._element; t && (e = this._getRootElement(t)), this._triggerCloseEvent(e).isDefaultPrevented() || this._removeElement(e) }, t.dispose = function () { r.removeData(this._element, o), this._element = null }, t._getRootElement = function (t) { var e = Fn.getSelectorFromElement(t), n = !1; return e && (n = document.querySelector(e)), n || (n = r(t).closest("." + f)[0]), n }, t._triggerCloseEvent = function (t) { var e = r.Event(u.CLOSE); return r(t).trigger(e), e }, t._removeElement = function (e) { var n = this; if (r(e).removeClass(g), r(e).hasClass(d)) { var t = Fn.getTransitionDurationFromElement(e); r(e).one(Fn.TRANSITION_END, function (t) { return n._destroyElement(e, t) }).emulateTransitionEnd(t) } else this._destroyElement(e) }, t._destroyElement = function (t) { r(t).detach().trigger(u.CLOSED).remove() }, i._jQueryInterface = function (n) { return this.each(function () { var t = r(this), e = t.data(o); e || (e = new i(this), t.data(o, e)), "close" === n && e[n](this) }) }, i._handleDismiss = function (e) { return function (t) { t && t.preventDefault(), e.close(this) } }, s(i, null, [{ key: "VERSION", get: function () { return "4.1.3" } }]), i }(), r(document).on(u.CLICK_DATA_API, '[data-dismiss="alert"]', _._handleDismiss(new _)), r.fn[n] = _._jQueryInterface, r.fn[n].Constructor = _, r.fn[n].noConflict = function () { return r.fn[n] = c, _._jQueryInterface }, _), Mn = (p = "button", y = "." + (v = "bs.button"), E = ".data-api", C = (m = e).fn[p], T = "active", b = "btn", I = '[data-toggle^="button"]', A = '[data-toggle="buttons"]', D = "input", w = ".active", N = ".btn", O = { CLICK_DATA_API: "click" + y + E, FOCUS_BLUR_DATA_API: (S = "focus") + y + E + " blur" + y + E }, k = function () { function n(t) { this._element = t } var t = n.prototype; return t.toggle = function () { var t = !0, e = !0, n = m(this._element).closest(A)[0]; if (n) { var i = this._element.querySelector(D); if (i) { if ("radio" === i.type) if (i.checked && this._element.classList.contains(T)) t = !1; else { var r = n.querySelector(w); r && m(r).removeClass(T) } if (t) { if (i.hasAttribute("disabled") || n.hasAttribute("disabled") || i.classList.contains("disabled") || n.classList.contains("disabled")) return; i.checked = !this._element.classList.contains(T), m(i).trigger("change") } i.focus(), e = !1 } } e && this._element.setAttribute("aria-pressed", !this._element.classList.contains(T)), t && m(this._element).toggleClass(T) }, t.dispose = function () { m.removeData(this._element, v), this._element = null }, n._jQueryInterface = function (e) { return this.each(function () { var t = m(this).data(v); t || (t = new n(this), m(this).data(v, t)), "toggle" === e && t[e]() }) }, s(n, null, [{ key: "VERSION", get: function () { return "4.1.3" } }]), n }(), m(document).on(O.CLICK_DATA_API, I, function (t) { t.preventDefault(); var e = t.target; m(e).hasClass(b) || (e = m(e).closest(N)), k._jQueryInterface.call(m(e), "toggle") }).on(O.FOCUS_BLUR_DATA_API, I, function (t) { var e = m(t.target).closest(N)[0]; m(e).toggleClass(S, /^focus(in)?$/.test(t.type)) }), m.fn[p] = k._jQueryInterface, m.fn[p].Constructor = k, m.fn[p].noConflict = function () { return m.fn[p] = C, k._jQueryInterface }, k), Qn = (j = "carousel", L = "." + (H = "bs.carousel"), R = ".data-api", x = (P = e).fn[j], W = { interval: 5e3, keyboard: !0, slide: !1, pause: "hover", wrap: !0 }, U = { interval: "(number|boolean)", keyboard: "boolean", slide: "(boolean|string)", pause: "(string|boolean)", wrap: "boolean" }, q = "next", F = "prev", K = "left", M = "right", Q = { SLIDE: "slide" + L, SLID: "slid" + L, KEYDOWN: "keydown" + L, MOUSEENTER: "mouseenter" + L, MOUSELEAVE: "mouseleave" + L, TOUCHEND: "touchend" + L, LOAD_DATA_API: "load" + L + R, CLICK_DATA_API: "click" + L + R }, B = "carousel", V = "active", Y = "slide", z = "carousel-item-right", J = "carousel-item-left", Z = "carousel-item-next", G = "carousel-item-prev", $ = ".active", X = ".active.carousel-item", tt = ".carousel-item", et = ".carousel-item-next, .carousel-item-prev", nt = ".carousel-indicators", it = "[data-slide], [data-slide-to]", rt = '[data-ride="carousel"]', ot = function () { function o(t, e) { this._items = null, this._interval = null, this._activeElement = null, this._isPaused = !1, this._isSliding = !1, this.touchTimeout = null, this._config = this._getConfig(e), this._element = P(t)[0], this._indicatorsElement = this._element.querySelector(nt), this._addEventListeners() } var t = o.prototype; return t.next = function () { this._isSliding || this._slide(q) }, t.nextWhenVisible = function () { !document.hidden && P(this._element).is(":visible") && "hidden" !== P(this._element).css("visibility") && this.next() }, t.prev = function () { this._isSliding || this._slide(F) }, t.pause = function (t) { t || (this._isPaused = !0), this._element.querySelector(et) && (Fn.triggerTransitionEnd(this._element), this.cycle(!0)), clearInterval(this._interval), this._interval = null }, t.cycle = function (t) { t || (this._isPaused = !1), this._interval && (clearInterval(this._interval), this._interval = null), this._config.interval && !this._isPaused && (this._interval = setInterval((document.visibilityState ? this.nextWhenVisible : this.next).bind(this), this._config.interval)) }, t.to = function (t) { var e = this; this._activeElement = this._element.querySelector(X); var n = this._getItemIndex(this._activeElement); if (!(t > this._items.length - 1 || t < 0)) if (this._isSliding) P(this._element).one(Q.SLID, function () { return e.to(t) }); else { if (n === t) return this.pause(), void this.cycle(); var i = n < t ? q : F; this._slide(i, this._items[t]) } }, t.dispose = function () { P(this._element).off(L), P.removeData(this._element, H), this._items = null, this._config = null, this._element = null, this._interval = null, this._isPaused = null, this._isSliding = null, this._activeElement = null, this._indicatorsElement = null }, t._getConfig = function (t) { return t = l({}, W, t), Fn.typeCheckConfig(j, t, U), t }, t._addEventListeners = function () { var e = this; this._config.keyboard && P(this._element).on(Q.KEYDOWN, function (t) { return e._keydown(t) }), "hover" === this._config.pause && (P(this._element).on(Q.MOUSEENTER, function (t) { return e.pause(t) }).on(Q.MOUSELEAVE, function (t) { return e.cycle(t) }), "ontouchstart" in document.documentElement && P(this._element).on(Q.TOUCHEND, function () { e.pause(), e.touchTimeout && clearTimeout(e.touchTimeout), e.touchTimeout = setTimeout(function (t) { return e.cycle(t) }, 500 + e._config.interval) })) }, t._keydown = function (t) { if (!/input|textarea/i.test(t.target.tagName)) switch (t.which) { case 37: t.preventDefault(), this.prev(); break; case 39: t.preventDefault(), this.next() } }, t._getItemIndex = function (t) { return this._items = t && t.parentNode ? [].slice.call(t.parentNode.querySelectorAll(tt)) : [], this._items.indexOf(t) }, t._getItemByDirection = function (t, e) { var n = t === q, i = t === F, r = this._getItemIndex(e), o = this._items.length - 1; if ((i && 0 === r || n && r === o) && !this._config.wrap) return e; var s = (r + (t === F ? -1 : 1)) % this._items.length; return -1 === s ? this._items[this._items.length - 1] : this._items[s] }, t._triggerSlideEvent = function (t, e) { var n = this._getItemIndex(t), i = this._getItemIndex(this._element.querySelector(X)), r = P.Event(Q.SLIDE, { relatedTarget: t, direction: e, from: i, to: n }); return P(this._element).trigger(r), r }, t._setActiveIndicatorElement = function (t) { if (this._indicatorsElement) { var e = [].slice.call(this._indicatorsElement.querySelectorAll($)); P(e).removeClass(V); var n = this._indicatorsElement.children[this._getItemIndex(t)]; n && P(n).addClass(V) } }, t._slide = function (t, e) { var n, i, r, o = this, s = this._element.querySelector(X), a = this._getItemIndex(s), l = e || s && this._getItemByDirection(t, s), c = this._getItemIndex(l), h = Boolean(this._interval); if (t === q ? (n = J, i = Z, r = K) : (n = z, i = G, r = M), l && P(l).hasClass(V)) this._isSliding = !1; else if (!this._triggerSlideEvent(l, r).isDefaultPrevented() && s && l) { this._isSliding = !0, h && this.pause(), this._setActiveIndicatorElement(l); var u = P.Event(Q.SLID, { relatedTarget: l, direction: r, from: a, to: c }); if (P(this._element).hasClass(Y)) { P(l).addClass(i), Fn.reflow(l), P(s).addClass(n), P(l).addClass(n); var f = Fn.getTransitionDurationFromElement(s); P(s).one(Fn.TRANSITION_END, function () { P(l).removeClass(n + " " + i).addClass(V), P(s).removeClass(V + " " + i + " " + n), o._isSliding = !1, setTimeout(function () { return P(o._element).trigger(u) }, 0) }).emulateTransitionEnd(f) } else P(s).removeClass(V), P(l).addClass(V), this._isSliding = !1, P(this._element).trigger(u); h && this.cycle() } }, o._jQueryInterface = function (i) { return this.each(function () { var t = P(this).data(H), e = l({}, W, P(this).data()); "object" == typeof i && (e = l({}, e, i)); var n = "string" == typeof i ? i : e.slide; if (t || (t = new o(this, e), P(this).data(H, t)), "number" == typeof i) t.to(i); else if ("string" == typeof n) { if ("undefined" == typeof t[n]) throw new TypeError('No method named "' + n + '"'); t[n]() } else e.interval && (t.pause(), t.cycle()) }) }, o._dataApiClickHandler = function (t) { var e = Fn.getSelectorFromElement(this); if (e) { var n = P(e)[0]; if (n && P(n).hasClass(B)) { var i = l({}, P(n).data(), P(this).data()), r = this.getAttribute("data-slide-to"); r && (i.interval = !1), o._jQueryInterface.call(P(n), i), r && P(n).data(H).to(r), t.preventDefault() } } }, s(o, null, [{ key: "VERSION", get: function () { return "4.1.3" } }, { key: "Default", get: function () { return W } }]), o }(), P(document).on(Q.CLICK_DATA_API, it, ot._dataApiClickHandler), P(window).on(Q.LOAD_DATA_API, function () { for (var t = [].slice.call(document.querySelectorAll(rt)), e = 0, n = t.length; e < n; e++) { var i = P(t[e]); ot._jQueryInterface.call(i, i.data()) } }), P.fn[j] = ot._jQueryInterface, P.fn[j].Constructor = ot, P.fn[j].noConflict = function () { return P.fn[j] = x, ot._jQueryInterface }, ot), Bn = (at = "collapse", ct = "." + (lt = "bs.collapse"), ht = (st = e).fn[at], ut = { toggle: !0, parent: "" }, ft = { toggle: "boolean", parent: "(string|element)" }, dt = { SHOW: "show" + ct, SHOWN: "shown" + ct, HIDE: "hide" + ct, HIDDEN: "hidden" + ct, CLICK_DATA_API: "click" + ct + ".data-api" }, gt = "show", _t = "collapse", mt = "collapsing", pt = "collapsed", vt = "width", yt = "height", Et = ".show, .collapsing", Ct = '[data-toggle="collapse"]', Tt = function () { function a(e, t) { this._isTransitioning = !1, this._element = e, this._config = this._getConfig(t), this._triggerArray = st.makeArray(document.querySelectorAll('[data-toggle="collapse"][href="#' + e.id + '"],[data-toggle="collapse"][data-target="#' + e.id + '"]')); for (var n = [].slice.call(document.querySelectorAll(Ct)), i = 0, r = n.length; i < r; i++) { var o = n[i], s = Fn.getSelectorFromElement(o), a = [].slice.call(document.querySelectorAll(s)).filter(function (t) { return t === e }); null !== s && 0 < a.length && (this._selector = s, this._triggerArray.push(o)) } this._parent = this._config.parent ? this._getParent() : null, this._config.parent || this._addAriaAndCollapsedClass(this._element, this._triggerArray), this._config.toggle && this.toggle() } var t = a.prototype; return t.toggle = function () { st(this._element).hasClass(gt) ? this.hide() : this.show() }, t.show = function () { var t, e, n = this; if (!this._isTransitioning && !st(this._element).hasClass(gt) && (this._parent && 0 === (t = [].slice.call(this._parent.querySelectorAll(Et)).filter(function (t) { return t.getAttribute("data-parent") === n._config.parent })).length && (t = null), !(t && (e = st(t).not(this._selector).data(lt)) && e._isTransitioning))) { var i = st.Event(dt.SHOW); if (st(this._element).trigger(i), !i.isDefaultPrevented()) { t && (a._jQueryInterface.call(st(t).not(this._selector), "hide"), e || st(t).data(lt, null)); var r = this._getDimension(); st(this._element).removeClass(_t).addClass(mt), this._element.style[r] = 0, this._triggerArray.length && st(this._triggerArray).removeClass(pt).attr("aria-expanded", !0), this.setTransitioning(!0); var o = "scroll" + (r[0].toUpperCase() + r.slice(1)), s = Fn.getTransitionDurationFromElement(this._element); st(this._element).one(Fn.TRANSITION_END, function () { st(n._element).removeClass(mt).addClass(_t).addClass(gt), n._element.style[r] = "", n.setTransitioning(!1), st(n._element).trigger(dt.SHOWN) }).emulateTransitionEnd(s), this._element.style[r] = this._element[o] + "px" } } }, t.hide = function () { var t = this; if (!this._isTransitioning && st(this._element).hasClass(gt)) { var e = st.Event(dt.HIDE); if (st(this._element).trigger(e), !e.isDefaultPrevented()) { var n = this._getDimension(); this._element.style[n] = this._element.getBoundingClientRect()[n] + "px", Fn.reflow(this._element), st(this._element).addClass(mt).removeClass(_t).removeClass(gt); var i = this._triggerArray.length; if (0 < i) for (var r = 0; r < i; r++) { var o = this._triggerArray[r], s = Fn.getSelectorFromElement(o); if (null !== s) st([].slice.call(document.querySelectorAll(s))).hasClass(gt) || st(o).addClass(pt).attr("aria-expanded", !1) } this.setTransitioning(!0); this._element.style[n] = ""; var a = Fn.getTransitionDurationFromElement(this._element); st(this._element).one(Fn.TRANSITION_END, function () { t.setTransitioning(!1), st(t._element).removeClass(mt).addClass(_t).trigger(dt.HIDDEN) }).emulateTransitionEnd(a) } } }, t.setTransitioning = function (t) { this._isTransitioning = t }, t.dispose = function () { st.removeData(this._element, lt), this._config = null, this._parent = null, this._element = null, this._triggerArray = null, this._isTransitioning = null }, t._getConfig = function (t) { return (t = l({}, ut, t)).toggle = Boolean(t.toggle), Fn.typeCheckConfig(at, t, ft), t }, t._getDimension = function () { return st(this._element).hasClass(vt) ? vt : yt }, t._getParent = function () { var n = this, t = null; Fn.isElement(this._config.parent) ? (t = this._config.parent, "undefined" != typeof this._config.parent.jquery && (t = this._config.parent[0])) : t = document.querySelector(this._config.parent); var e = '[data-toggle="collapse"][data-parent="' + this._config.parent + '"]', i = [].slice.call(t.querySelectorAll(e)); return st(i).each(function (t, e) { n._addAriaAndCollapsedClass(a._getTargetFromElement(e), [e]) }), t }, t._addAriaAndCollapsedClass = function (t, e) { if (t) { var n = st(t).hasClass(gt); e.length && st(e).toggleClass(pt, !n).attr("aria-expanded", n) } }, a._getTargetFromElement = function (t) { var e = Fn.getSelectorFromElement(t); return e ? document.querySelector(e) : null }, a._jQueryInterface = function (i) { return this.each(function () { var t = st(this), e = t.data(lt), n = l({}, ut, t.data(), "object" == typeof i && i ? i : {}); if (!e && n.toggle && /show|hide/.test(i) && (n.toggle = !1), e || (e = new a(this, n), t.data(lt, e)), "string" == typeof i) { if ("undefined" == typeof e[i]) throw new TypeError('No method named "' + i + '"'); e[i]() } }) }, s(a, null, [{ key: "VERSION", get: function () { return "4.1.3" } }, { key: "Default", get: function () { return ut } }]), a }(), st(document).on(dt.CLICK_DATA_API, Ct, function (t) { "A" === t.currentTarget.tagName && t.preventDefault(); var n = st(this), e = Fn.getSelectorFromElement(this), i = [].slice.call(document.querySelectorAll(e)); st(i).each(function () { var t = st(this), e = t.data(lt) ? "toggle" : n.data(); Tt._jQueryInterface.call(t, e) }) }), st.fn[at] = Tt._jQueryInterface, st.fn[at].Constructor = Tt, st.fn[at].noConflict = function () { return st.fn[at] = ht, Tt._jQueryInterface }, Tt), Vn = (St = "dropdown", At = "." + (It = "bs.dropdown"), Dt = ".data-api", wt = (bt = e).fn[St], Nt = new RegExp("38|40|27"), Ot = { HIDE: "hide" + At, HIDDEN: "hidden" + At, SHOW: "show" + At, SHOWN: "shown" + At, CLICK: "click" + At, CLICK_DATA_API: "click" + At + Dt, KEYDOWN_DATA_API: "keydown" + At + Dt, KEYUP_DATA_API: "keyup" + At + Dt }, kt = "disabled", Pt = "show", jt = "dropup", Ht = "dropright", Lt = "dropleft", Rt = "dropdown-menu-right", xt = "position-static", Wt = '[data-toggle="dropdown"]', Ut = ".dropdown form", qt = ".dropdown-menu", Ft = ".navbar-nav", Kt = ".dropdown-menu .dropdown-item:not(.disabled):not(:disabled)", Mt = "top-start", Qt = "top-end", Bt = "bottom-start", Vt = "bottom-end", Yt = "right-start", zt = "left-start", Jt = { offset: 0, flip: !0, boundary: "scrollParent", reference: "toggle", display: "dynamic" }, Zt = { offset: "(number|string|function)", flip: "boolean", boundary: "(string|element)", reference: "(string|element)", display: "string" }, Gt = function () { function c(t, e) { this._element = t, this._popper = null, this._config = this._getConfig(e), this._menu = this._getMenuElement(), this._inNavbar = this._detectNavbar(), this._addEventListeners() } var t = c.prototype; return t.toggle = function () { if (!this._element.disabled && !bt(this._element).hasClass(kt)) { var t = c._getParentFromElement(this._element), e = bt(this._menu).hasClass(Pt); if (c._clearMenus(), !e) { var n = { relatedTarget: this._element }, i = bt.Event(Ot.SHOW, n); if (bt(t).trigger(i), !i.isDefaultPrevented()) { if (!this._inNavbar) { if ("undefined" == typeof h) throw new TypeError("Bootstrap dropdown require Popper.js (https://popper.js.org)"); var r = this._element; "parent" === this._config.reference ? r = t : Fn.isElement(this._config.reference) && (r = this._config.reference, "undefined" != typeof this._config.reference.jquery && (r = this._config.reference[0])), "scrollParent" !== this._config.boundary && bt(t).addClass(xt), this._popper = new h(r, this._menu, this._getPopperConfig()) } "ontouchstart" in document.documentElement && 0 === bt(t).closest(Ft).length && bt(document.body).children().on("mouseover", null, bt.noop), this._element.focus(), this._element.setAttribute("aria-expanded", !0), bt(this._menu).toggleClass(Pt), bt(t).toggleClass(Pt).trigger(bt.Event(Ot.SHOWN, n)) } } } }, t.dispose = function () { bt.removeData(this._element, It), bt(this._element).off(At), this._element = null, (this._menu = null) !== this._popper && (this._popper.destroy(), this._popper = null) }, t.update = function () { this._inNavbar = this._detectNavbar(), null !== this._popper && this._popper.scheduleUpdate() }, t._addEventListeners = function () { var e = this; bt(this._element).on(Ot.CLICK, function (t) { t.preventDefault(), t.stopPropagation(), e.toggle() }) }, t._getConfig = function (t) { return t = l({}, this.constructor.Default, bt(this._element).data(), t), Fn.typeCheckConfig(St, t, this.constructor.DefaultType), t }, t._getMenuElement = function () { if (!this._menu) { var t = c._getParentFromElement(this._element); t && (this._menu = t.querySelector(qt)) } return this._menu }, t._getPlacement = function () { var t = bt(this._element.parentNode), e = Bt; return t.hasClass(jt) ? (e = Mt, bt(this._menu).hasClass(Rt) && (e = Qt)) : t.hasClass(Ht) ? e = Yt : t.hasClass(Lt) ? e = zt : bt(this._menu).hasClass(Rt) && (e = Vt), e }, t._detectNavbar = function () { return 0 < bt(this._element).closest(".navbar").length }, t._getPopperConfig = function () { var e = this, t = {}; "function" == typeof this._config.offset ? t.fn = function (t) { return t.offsets = l({}, t.offsets, e._config.offset(t.offsets) || {}), t } : t.offset = this._config.offset; var n = { placement: this._getPlacement(), modifiers: { offset: t, flip: { enabled: this._config.flip }, preventOverflow: { boundariesElement: this._config.boundary } } }; return "static" === this._config.display && (n.modifiers.applyStyle = { enabled: !1 }), n }, c._jQueryInterface = function (e) { return this.each(function () { var t = bt(this).data(It); if (t || (t = new c(this, "object" == typeof e ? e : null), bt(this).data(It, t)), "string" == typeof e) { if ("undefined" == typeof t[e]) throw new TypeError('No method named "' + e + '"'); t[e]() } }) }, c._clearMenus = function (t) { if (!t || 3 !== t.which && ("keyup" !== t.type || 9 === t.which)) for (var e = [].slice.call(document.querySelectorAll(Wt)), n = 0, i = e.length; n < i; n++) { var r = c._getParentFromElement(e[n]), o = bt(e[n]).data(It), s = { relatedTarget: e[n] }; if (t && "click" === t.type && (s.clickEvent = t), o) { var a = o._menu; if (bt(r).hasClass(Pt) && !(t && ("click" === t.type && /input|textarea/i.test(t.target.tagName) || "keyup" === t.type && 9 === t.which) && bt.contains(r, t.target))) { var l = bt.Event(Ot.HIDE, s); bt(r).trigger(l), l.isDefaultPrevented() || ("ontouchstart" in document.documentElement && bt(document.body).children().off("mouseover", null, bt.noop), e[n].setAttribute("aria-expanded", "false"), bt(a).removeClass(Pt), bt(r).removeClass(Pt).trigger(bt.Event(Ot.HIDDEN, s))) } } } }, c._getParentFromElement = function (t) { var e, n = Fn.getSelectorFromElement(t); return n && (e = document.querySelector(n)), e || t.parentNode }, c._dataApiKeydownHandler = function (t) { if ((/input|textarea/i.test(t.target.tagName) ? !(32 === t.which || 27 !== t.which && (40 !== t.which && 38 !== t.which || bt(t.target).closest(qt).length)) : Nt.test(t.which)) && (t.preventDefault(), t.stopPropagation(), !this.disabled && !bt(this).hasClass(kt))) { var e = c._getParentFromElement(this), n = bt(e).hasClass(Pt); if ((n || 27 === t.which && 32 === t.which) && (!n || 27 !== t.which && 32 !== t.which)) { var i = [].slice.call(e.querySelectorAll(Kt)); if (0 !== i.length) { var r = i.indexOf(t.target); 38 === t.which && 0 < r && r-- , 40 === t.which && r < i.length - 1 && r++ , r < 0 && (r = 0), i[r].focus() } } else { if (27 === t.which) { var o = e.querySelector(Wt); bt(o).trigger("focus") } bt(this).trigger("click") } } }, s(c, null, [{ key: "VERSION", get: function () { return "4.1.3" } }, { key: "Default", get: function () { return Jt } }, { key: "DefaultType", get: function () { return Zt } }]), c }(), bt(document).on(Ot.KEYDOWN_DATA_API, Wt, Gt._dataApiKeydownHandler).on(Ot.KEYDOWN_DATA_API, qt, Gt._dataApiKeydownHandler).on(Ot.CLICK_DATA_API + " " + Ot.KEYUP_DATA_API, Gt._clearMenus).on(Ot.CLICK_DATA_API, Wt, function (t) { t.preventDefault(), t.stopPropagation(), Gt._jQueryInterface.call(bt(this), "toggle") }).on(Ot.CLICK_DATA_API, Ut, function (t) { t.stopPropagation() }), bt.fn[St] = Gt._jQueryInterface, bt.fn[St].Constructor = Gt, bt.fn[St].noConflict = function () { return bt.fn[St] = wt, Gt._jQueryInterface }, Gt), Yn = (Xt = "modal", ee = "." + (te = "bs.modal"), ne = ($t = e).fn[Xt], ie = { backdrop: !0, keyboard: !0, focus: !0, show: !0 }, re = { backdrop: "(boolean|string)", keyboard: "boolean", focus: "boolean", show: "boolean" }, oe = { HIDE: "hide" + ee, HIDDEN: "hidden" + ee, SHOW: "show" + ee, SHOWN: "shown" + ee, FOCUSIN: "focusin" + ee, RESIZE: "resize" + ee, CLICK_DISMISS: "click.dismiss" + ee, KEYDOWN_DISMISS: "keydown.dismiss" + ee, MOUSEUP_DISMISS: "mouseup.dismiss" + ee, MOUSEDOWN_DISMISS: "mousedown.dismiss" + ee, CLICK_DATA_API: "click" + ee + ".data-api" }, se = "modal-scrollbar-measure", ae = "modal-backdrop", le = "modal-open", ce = "fade", he = "show", ue = ".modal-dialog", fe = '[data-toggle="modal"]', de = '[data-dismiss="modal"]', ge = ".fixed-top, .fixed-bottom, .is-fixed, .sticky-top", _e = ".sticky-top", me = function () { function r(t, e) { this._config = this._getConfig(e), this._element = t, this._dialog = t.querySelector(ue), this._backdrop = null, this._isShown = !1, this._isBodyOverflowing = !1, this._ignoreBackdropClick = !1, this._scrollbarWidth = 0 } var t = r.prototype; return t.toggle = function (t) { return this._isShown ? this.hide() : this.show(t) }, t.show = function (t) { var e = this; if (!this._isTransitioning && !this._isShown) { $t(this._element).hasClass(ce) && (this._isTransitioning = !0); var n = $t.Event(oe.SHOW, { relatedTarget: t }); $t(this._element).trigger(n), this._isShown || n.isDefaultPrevented() || (this._isShown = !0, this._checkScrollbar(), this._setScrollbar(), this._adjustDialog(), $t(document.body).addClass(le), this._setEscapeEvent(), this._setResizeEvent(), $t(this._element).on(oe.CLICK_DISMISS, de, function (t) { return e.hide(t) }), $t(this._dialog).on(oe.MOUSEDOWN_DISMISS, function () { $t(e._element).one(oe.MOUSEUP_DISMISS, function (t) { $t(t.target).is(e._element) && (e._ignoreBackdropClick = !0) }) }), this._showBackdrop(function () { return e._showElement(t) })) } }, t.hide = function (t) { var e = this; if (t && t.preventDefault(), !this._isTransitioning && this._isShown) { var n = $t.Event(oe.HIDE); if ($t(this._element).trigger(n), this._isShown && !n.isDefaultPrevented()) { this._isShown = !1; var i = $t(this._element).hasClass(ce); if (i && (this._isTransitioning = !0), this._setEscapeEvent(), this._setResizeEvent(), $t(document).off(oe.FOCUSIN), $t(this._element).removeClass(he), $t(this._element).off(oe.CLICK_DISMISS), $t(this._dialog).off(oe.MOUSEDOWN_DISMISS), i) { var r = Fn.getTransitionDurationFromElement(this._element); $t(this._element).one(Fn.TRANSITION_END, function (t) { return e._hideModal(t) }).emulateTransitionEnd(r) } else this._hideModal() } } }, t.dispose = function () { $t.removeData(this._element, te), $t(window, document, this._element, this._backdrop).off(ee), this._config = null, this._element = null, this._dialog = null, this._backdrop = null, this._isShown = null, this._isBodyOverflowing = null, this._ignoreBackdropClick = null, this._scrollbarWidth = null }, t.handleUpdate = function () { this._adjustDialog() }, t._getConfig = function (t) { return t = l({}, ie, t), Fn.typeCheckConfig(Xt, t, re), t }, t._showElement = function (t) { var e = this, n = $t(this._element).hasClass(ce); this._element.parentNode && this._element.parentNode.nodeType === Node.ELEMENT_NODE || document.body.appendChild(this._element), this._element.style.display = "block", this._element.removeAttribute("aria-hidden"), this._element.scrollTop = 0, n && Fn.reflow(this._element), $t(this._element).addClass(he), this._config.focus && this._enforceFocus(); var i = $t.Event(oe.SHOWN, { relatedTarget: t }), r = function () { e._config.focus && e._element.focus(), e._isTransitioning = !1, $t(e._element).trigger(i) }; if (n) { var o = Fn.getTransitionDurationFromElement(this._element); $t(this._dialog).one(Fn.TRANSITION_END, r).emulateTransitionEnd(o) } else r() }, t._enforceFocus = function () { var e = this; $t(document).off(oe.FOCUSIN).on(oe.FOCUSIN, function (t) { document !== t.target && e._element !== t.target && 0 === $t(e._element).has(t.target).length && e._element.focus() }) }, t._setEscapeEvent = function () { var e = this; this._isShown && this._config.keyboard ? $t(this._element).on(oe.KEYDOWN_DISMISS, function (t) { 27 === t.which && (t.preventDefault(), e.hide()) }) : this._isShown || $t(this._element).off(oe.KEYDOWN_DISMISS) }, t._setResizeEvent = function () { var e = this; this._isShown ? $t(window).on(oe.RESIZE, function (t) { return e.handleUpdate(t) }) : $t(window).off(oe.RESIZE) }, t._hideModal = function () { var t = this; this._element.style.display = "none", this._element.setAttribute("aria-hidden", !0), this._isTransitioning = !1, this._showBackdrop(function () { $t(document.body).removeClass(le), t._resetAdjustments(), t._resetScrollbar(), $t(t._element).trigger(oe.HIDDEN) }) }, t._removeBackdrop = function () { this._backdrop && ($t(this._backdrop).remove(), this._backdrop = null) }, t._showBackdrop = function (t) { var e = this, n = $t(this._element).hasClass(ce) ? ce : ""; if (this._isShown && this._config.backdrop) { if (this._backdrop = document.createElement("div"), this._backdrop.className = ae, n && this._backdrop.classList.add(n), $t(this._backdrop).appendTo(document.body), $t(this._element).on(oe.CLICK_DISMISS, function (t) { e._ignoreBackdropClick ? e._ignoreBackdropClick = !1 : t.target === t.currentTarget && ("static" === e._config.backdrop ? e._element.focus() : e.hide()) }), n && Fn.reflow(this._backdrop), $t(this._backdrop).addClass(he), !t) return; if (!n) return void t(); var i = Fn.getTransitionDurationFromElement(this._backdrop); $t(this._backdrop).one(Fn.TRANSITION_END, t).emulateTransitionEnd(i) } else if (!this._isShown && this._backdrop) { $t(this._backdrop).removeClass(he); var r = function () { e._removeBackdrop(), t && t() }; if ($t(this._element).hasClass(ce)) { var o = Fn.getTransitionDurationFromElement(this._backdrop); $t(this._backdrop).one(Fn.TRANSITION_END, r).emulateTransitionEnd(o) } else r() } else t && t() }, t._adjustDialog = function () { var t = this._element.scrollHeight > document.documentElement.clientHeight; !this._isBodyOverflowing && t && (this._element.style.paddingLeft = this._scrollbarWidth + "px"), this._isBodyOverflowing && !t && (this._element.style.paddingRight = this._scrollbarWidth + "px") }, t._resetAdjustments = function () { this._element.style.paddingLeft = "", this._element.style.paddingRight = "" }, t._checkScrollbar = function () { var t = document.body.getBoundingClientRect(); this._isBodyOverflowing = t.left + t.right < window.innerWidth, this._scrollbarWidth = this._getScrollbarWidth() }, t._setScrollbar = function () { var r = this; if (this._isBodyOverflowing) { var t = [].slice.call(document.querySelectorAll(ge)), e = [].slice.call(document.querySelectorAll(_e)); $t(t).each(function (t, e) { var n = e.style.paddingRight, i = $t(e).css("padding-right"); $t(e).data("padding-right", n).css("padding-right", parseFloat(i) + r._scrollbarWidth + "px") }), $t(e).each(function (t, e) { var n = e.style.marginRight, i = $t(e).css("margin-right"); $t(e).data("margin-right", n).css("margin-right", parseFloat(i) - r._scrollbarWidth + "px") }); var n = document.body.style.paddingRight, i = $t(document.body).css("padding-right"); $t(document.body).data("padding-right", n).css("padding-right", parseFloat(i) + this._scrollbarWidth + "px") } }, t._resetScrollbar = function () { var t = [].slice.call(document.querySelectorAll(ge)); $t(t).each(function (t, e) { var n = $t(e).data("padding-right"); $t(e).removeData("padding-right"), e.style.paddingRight = n || "" }); var e = [].slice.call(document.querySelectorAll("" + _e)); $t(e).each(function (t, e) { var n = $t(e).data("margin-right"); "undefined" != typeof n && $t(e).css("margin-right", n).removeData("margin-right") }); var n = $t(document.body).data("padding-right"); $t(document.body).removeData("padding-right"), document.body.style.paddingRight = n || "" }, t._getScrollbarWidth = function () { var t = document.createElement("div"); t.className = se, document.body.appendChild(t); var e = t.getBoundingClientRect().width - t.clientWidth; return document.body.removeChild(t), e }, r._jQueryInterface = function (n, i) { return this.each(function () { var t = $t(this).data(te), e = l({}, ie, $t(this).data(), "object" == typeof n && n ? n : {}); if (t || (t = new r(this, e), $t(this).data(te, t)), "string" == typeof n) { if ("undefined" == typeof t[n]) throw new TypeError('No method named "' + n + '"'); t[n](i) } else e.show && t.show(i) }) }, s(r, null, [{ key: "VERSION", get: function () { return "4.1.3" } }, { key: "Default", get: function () { return ie } }]), r }(), $t(document).on(oe.CLICK_DATA_API, fe, function (t) { var e, n = this, i = Fn.getSelectorFromElement(this); i && (e = document.querySelector(i)); var r = $t(e).data(te) ? "toggle" : l({}, $t(e).data(), $t(this).data()); "A" !== this.tagName && "AREA" !== this.tagName || t.preventDefault(); var o = $t(e).one(oe.SHOW, function (t) { t.isDefaultPrevented() || o.one(oe.HIDDEN, function () { $t(n).is(":visible") && n.focus() }) }); me._jQueryInterface.call($t(e), r, this) }), $t.fn[Xt] = me._jQueryInterface, $t.fn[Xt].Constructor = me, $t.fn[Xt].noConflict = function () { return $t.fn[Xt] = ne, me._jQueryInterface }, me), zn = (ve = "tooltip", Ee = "." + (ye = "bs.tooltip"), Ce = (pe = e).fn[ve], Te = "bs-tooltip", be = new RegExp("(^|\\s)" + Te + "\\S+", "g"), Ae = { animation: !0, template: '<div class="tooltip" role="tooltip"><div class="arrow"></div><div class="tooltip-inner"></div></div>', trigger: "hover focus", title: "", delay: 0, html: !(Ie = { AUTO: "auto", TOP: "top", RIGHT: "right", BOTTOM: "bottom", LEFT: "left" }), selector: !(Se = { animation: "boolean", template: "string", title: "(string|element|function)", trigger: "string", delay: "(number|object)", html: "boolean", selector: "(string|boolean)", placement: "(string|function)", offset: "(number|string)", container: "(string|element|boolean)", fallbackPlacement: "(string|array)", boundary: "(string|element)" }), placement: "top", offset: 0, container: !1, fallbackPlacement: "flip", boundary: "scrollParent" }, we = "out", Ne = { HIDE: "hide" + Ee, HIDDEN: "hidden" + Ee, SHOW: (De = "show") + Ee, SHOWN: "shown" + Ee, INSERTED: "inserted" + Ee, CLICK: "click" + Ee, FOCUSIN: "focusin" + Ee, FOCUSOUT: "focusout" + Ee, MOUSEENTER: "mouseenter" + Ee, MOUSELEAVE: "mouseleave" + Ee }, Oe = "fade", ke = "show", Pe = ".tooltip-inner", je = ".arrow", He = "hover", Le = "focus", Re = "click", xe = "manual", We = function () { function i(t, e) { if ("undefined" == typeof h) throw new TypeError("Bootstrap tooltips require Popper.js (https://popper.js.org)"); this._isEnabled = !0, this._timeout = 0, this._hoverState = "", this._activeTrigger = {}, this._popper = null, this.element = t, this.config = this._getConfig(e), this.tip = null, this._setListeners() } var t = i.prototype; return t.enable = function () { this._isEnabled = !0 }, t.disable = function () { this._isEnabled = !1 }, t.toggleEnabled = function () { this._isEnabled = !this._isEnabled }, t.toggle = function (t) { if (this._isEnabled) if (t) { var e = this.constructor.DATA_KEY, n = pe(t.currentTarget).data(e); n || (n = new this.constructor(t.currentTarget, this._getDelegateConfig()), pe(t.currentTarget).data(e, n)), n._activeTrigger.click = !n._activeTrigger.click, n._isWithActiveTrigger() ? n._enter(null, n) : n._leave(null, n) } else { if (pe(this.getTipElement()).hasClass(ke)) return void this._leave(null, this); this._enter(null, this) } }, t.dispose = function () { clearTimeout(this._timeout), pe.removeData(this.element, this.constructor.DATA_KEY), pe(this.element).off(this.constructor.EVENT_KEY), pe(this.element).closest(".modal").off("hide.bs.modal"), this.tip && pe(this.tip).remove(), this._isEnabled = null, this._timeout = null, this._hoverState = null, (this._activeTrigger = null) !== this._popper && this._popper.destroy(), this._popper = null, this.element = null, this.config = null, this.tip = null }, t.show = function () { var e = this; if ("none" === pe(this.element).css("display")) throw new Error("Please use show on visible elements"); var t = pe.Event(this.constructor.Event.SHOW); if (this.isWithContent() && this._isEnabled) { pe(this.element).trigger(t); var n = pe.contains(this.element.ownerDocument.documentElement, this.element); if (t.isDefaultPrevented() || !n) return; var i = this.getTipElement(), r = Fn.getUID(this.constructor.NAME); i.setAttribute("id", r), this.element.setAttribute("aria-describedby", r), this.setContent(), this.config.animation && pe(i).addClass(Oe); var o = "function" == typeof this.config.placement ? this.config.placement.call(this, i, this.element) : this.config.placement, s = this._getAttachment(o); this.addAttachmentClass(s); var a = !1 === this.config.container ? document.body : pe(document).find(this.config.container); pe(i).data(this.constructor.DATA_KEY, this), pe.contains(this.element.ownerDocument.documentElement, this.tip) || pe(i).appendTo(a), pe(this.element).trigger(this.constructor.Event.INSERTED), this._popper = new h(this.element, i, { placement: s, modifiers: { offset: { offset: this.config.offset }, flip: { behavior: this.config.fallbackPlacement }, arrow: { element: je }, preventOverflow: { boundariesElement: this.config.boundary } }, onCreate: function (t) { t.originalPlacement !== t.placement && e._handlePopperPlacementChange(t) }, onUpdate: function (t) { e._handlePopperPlacementChange(t) } }), pe(i).addClass(ke), "ontouchstart" in document.documentElement && pe(document.body).children().on("mouseover", null, pe.noop); var l = function () { e.config.animation && e._fixTransition(); var t = e._hoverState; e._hoverState = null, pe(e.element).trigger(e.constructor.Event.SHOWN), t === we && e._leave(null, e) }; if (pe(this.tip).hasClass(Oe)) { var c = Fn.getTransitionDurationFromElement(this.tip); pe(this.tip).one(Fn.TRANSITION_END, l).emulateTransitionEnd(c) } else l() } }, t.hide = function (t) { var e = this, n = this.getTipElement(), i = pe.Event(this.constructor.Event.HIDE), r = function () { e._hoverState !== De && n.parentNode && n.parentNode.removeChild(n), e._cleanTipClass(), e.element.removeAttribute("aria-describedby"), pe(e.element).trigger(e.constructor.Event.HIDDEN), null !== e._popper && e._popper.destroy(), t && t() }; if (pe(this.element).trigger(i), !i.isDefaultPrevented()) { if (pe(n).removeClass(ke), "ontouchstart" in document.documentElement && pe(document.body).children().off("mouseover", null, pe.noop), this._activeTrigger[Re] = !1, this._activeTrigger[Le] = !1, this._activeTrigger[He] = !1, pe(this.tip).hasClass(Oe)) { var o = Fn.getTransitionDurationFromElement(n); pe(n).one(Fn.TRANSITION_END, r).emulateTransitionEnd(o) } else r(); this._hoverState = "" } }, t.update = function () { null !== this._popper && this._popper.scheduleUpdate() }, t.isWithContent = function () { return Boolean(this.getTitle()) }, t.addAttachmentClass = function (t) { pe(this.getTipElement()).addClass(Te + "-" + t) }, t.getTipElement = function () { return this.tip = this.tip || pe(this.config.template)[0], this.tip }, t.setContent = function () { var t = this.getTipElement(); this.setElementContent(pe(t.querySelectorAll(Pe)), this.getTitle()), pe(t).removeClass(Oe + " " + ke) }, t.setElementContent = function (t, e) { var n = this.config.html; "object" == typeof e && (e.nodeType || e.jquery) ? n ? pe(e).parent().is(t) || t.empty().append(e) : t.text(pe(e).text()) : t[n ? "html" : "text"](e) }, t.getTitle = function () { var t = this.element.getAttribute("data-original-title"); return t || (t = "function" == typeof this.config.title ? this.config.title.call(this.element) : this.config.title), t }, t._getAttachment = function (t) { return Ie[t.toUpperCase()] }, t._setListeners = function () { var i = this; this.config.trigger.split(" ").forEach(function (t) { if ("click" === t) pe(i.element).on(i.constructor.Event.CLICK, i.config.selector, function (t) { return i.toggle(t) }); else if (t !== xe) { var e = t === He ? i.constructor.Event.MOUSEENTER : i.constructor.Event.FOCUSIN, n = t === He ? i.constructor.Event.MOUSELEAVE : i.constructor.Event.FOCUSOUT; pe(i.element).on(e, i.config.selector, function (t) { return i._enter(t) }).on(n, i.config.selector, function (t) { return i._leave(t) }) } pe(i.element).closest(".modal").on("hide.bs.modal", function () { return i.hide() }) }), this.config.selector ? this.config = l({}, this.config, { trigger: "manual", selector: "" }) : this._fixTitle() }, t._fixTitle = function () { var t = typeof this.element.getAttribute("data-original-title"); (this.element.getAttribute("title") || "string" !== t) && (this.element.setAttribute("data-original-title", this.element.getAttribute("title") || ""), this.element.setAttribute("title", "")) }, t._enter = function (t, e) { var n = this.constructor.DATA_KEY; (e = e || pe(t.currentTarget).data(n)) || (e = new this.constructor(t.currentTarget, this._getDelegateConfig()), pe(t.currentTarget).data(n, e)), t && (e._activeTrigger["focusin" === t.type ? Le : He] = !0), pe(e.getTipElement()).hasClass(ke) || e._hoverState === De ? e._hoverState = De : (clearTimeout(e._timeout), e._hoverState = De, e.config.delay && e.config.delay.show ? e._timeout = setTimeout(function () { e._hoverState === De && e.show() }, e.config.delay.show) : e.show()) }, t._leave = function (t, e) { var n = this.constructor.DATA_KEY; (e = e || pe(t.currentTarget).data(n)) || (e = new this.constructor(t.currentTarget, this._getDelegateConfig()), pe(t.currentTarget).data(n, e)), t && (e._activeTrigger["focusout" === t.type ? Le : He] = !1), e._isWithActiveTrigger() || (clearTimeout(e._timeout), e._hoverState = we, e.config.delay && e.config.delay.hide ? e._timeout = setTimeout(function () { e._hoverState === we && e.hide() }, e.config.delay.hide) : e.hide()) }, t._isWithActiveTrigger = function () { for (var t in this._activeTrigger) if (this._activeTrigger[t]) return !0; return !1 }, t._getConfig = function (t) { return "number" == typeof (t = l({}, this.constructor.Default, pe(this.element).data(), "object" == typeof t && t ? t : {})).delay && (t.delay = { show: t.delay, hide: t.delay }), "number" == typeof t.title && (t.title = t.title.toString()), "number" == typeof t.content && (t.content = t.content.toString()), Fn.typeCheckConfig(ve, t, this.constructor.DefaultType), t }, t._getDelegateConfig = function () { var t = {}; if (this.config) for (var e in this.config) this.constructor.Default[e] !== this.config[e] && (t[e] = this.config[e]); return t }, t._cleanTipClass = function () { var t = pe(this.getTipElement()), e = t.attr("class").match(be); null !== e && e.length && t.removeClass(e.join("")) }, t._handlePopperPlacementChange = function (t) { var e = t.instance; this.tip = e.popper, this._cleanTipClass(), this.addAttachmentClass(this._getAttachment(t.placement)) }, t._fixTransition = function () { var t = this.getTipElement(), e = this.config.animation; null === t.getAttribute("x-placement") && (pe(t).removeClass(Oe), this.config.animation = !1, this.hide(), this.show(), this.config.animation = e) }, i._jQueryInterface = function (n) { return this.each(function () { var t = pe(this).data(ye), e = "object" == typeof n && n; if ((t || !/dispose|hide/.test(n)) && (t || (t = new i(this, e), pe(this).data(ye, t)), "string" == typeof n)) { if ("undefined" == typeof t[n]) throw new TypeError('No method named "' + n + '"'); t[n]() } }) }, s(i, null, [{ key: "VERSION", get: function () { return "4.1.3" } }, { key: "Default", get: function () { return Ae } }, { key: "NAME", get: function () { return ve } }, { key: "DATA_KEY", get: function () { return ye } }, { key: "Event", get: function () { return Ne } }, { key: "EVENT_KEY", get: function () { return Ee } }, { key: "DefaultType", get: function () { return Se } }]), i }(), pe.fn[ve] = We._jQueryInterface, pe.fn[ve].Constructor = We, pe.fn[ve].noConflict = function () { return pe.fn[ve] = Ce, We._jQueryInterface }, We), Jn = (qe = "popover", Ke = "." + (Fe = "bs.popover"), Me = (Ue = e).fn[qe], Qe = "bs-popover", Be = new RegExp("(^|\\s)" + Qe + "\\S+", "g"), Ve = l({}, zn.Default, { placement: "right", trigger: "click", content: "", template: '<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-header"></h3><div class="popover-body"></div></div>' }), Ye = l({}, zn.DefaultType, { content: "(string|element|function)" }), ze = "fade", Ze = ".popover-header", Ge = ".popover-body", $e = { HIDE: "hide" + Ke, HIDDEN: "hidden" + Ke, SHOW: (Je = "show") + Ke, SHOWN: "shown" + Ke, INSERTED: "inserted" + Ke, CLICK: "click" + Ke, FOCUSIN: "focusin" + Ke, FOCUSOUT: "focusout" + Ke, MOUSEENTER: "mouseenter" + Ke, MOUSELEAVE: "mouseleave" + Ke }, Xe = function (t) { var e, n; function i() { return t.apply(this, arguments) || this } n = t, (e = i).prototype = Object.create(n.prototype), (e.prototype.constructor = e).__proto__ = n; var r = i.prototype; return r.isWithContent = function () { return this.getTitle() || this._getContent() }, r.addAttachmentClass = function (t) { Ue(this.getTipElement()).addClass(Qe + "-" + t) }, r.getTipElement = function () { return this.tip = this.tip || Ue(this.config.template)[0], this.tip }, r.setContent = function () { var t = Ue(this.getTipElement()); this.setElementContent(t.find(Ze), this.getTitle()); var e = this._getContent(); "function" == typeof e && (e = e.call(this.element)), this.setElementContent(t.find(Ge), e), t.removeClass(ze + " " + Je) }, r._getContent = function () { return this.element.getAttribute("data-content") || this.config.content }, r._cleanTipClass = function () { var t = Ue(this.getTipElement()), e = t.attr("class").match(Be); null !== e && 0 < e.length && t.removeClass(e.join("")) }, i._jQueryInterface = function (n) { return this.each(function () { var t = Ue(this).data(Fe), e = "object" == typeof n ? n : null; if ((t || !/destroy|hide/.test(n)) && (t || (t = new i(this, e), Ue(this).data(Fe, t)), "string" == typeof n)) { if ("undefined" == typeof t[n]) throw new TypeError('No method named "' + n + '"'); t[n]() } }) }, s(i, null, [{ key: "VERSION", get: function () { return "4.1.3" } }, { key: "Default", get: function () { return Ve } }, { key: "NAME", get: function () { return qe } }, { key: "DATA_KEY", get: function () { return Fe } }, { key: "Event", get: function () { return $e } }, { key: "EVENT_KEY", get: function () { return Ke } }, { key: "DefaultType", get: function () { return Ye } }]), i }(zn), Ue.fn[qe] = Xe._jQueryInterface, Ue.fn[qe].Constructor = Xe, Ue.fn[qe].noConflict = function () { return Ue.fn[qe] = Me, Xe._jQueryInterface }, Xe), Zn = (en = "scrollspy", rn = "." + (nn = "bs.scrollspy"), on = (tn = e).fn[en], sn = { offset: 10, method: "auto", target: "" }, an = { offset: "number", method: "string", target: "(string|element)" }, ln = { ACTIVATE: "activate" + rn, SCROLL: "scroll" + rn, LOAD_DATA_API: "load" + rn + ".data-api" }, cn = "dropdown-item", hn = "active", un = '[data-spy="scroll"]', fn = ".active", dn = ".nav, .list-group", gn = ".nav-link", _n = ".nav-item", mn = ".list-group-item", pn = ".dropdown", vn = ".dropdown-item", yn = ".dropdown-toggle", En = "offset", Cn = "position", Tn = function () { function n(t, e) { var n = this; this._element = t, this._scrollElement = "BODY" === t.tagName ? window : t, this._config = this._getConfig(e), this._selector = this._config.target + " " + gn + "," + this._config.target + " " + mn + "," + this._config.target + " " + vn, this._offsets = [], this._targets = [], this._activeTarget = null, this._scrollHeight = 0, tn(this._scrollElement).on(ln.SCROLL, function (t) { return n._process(t) }), this.refresh(), this._process() } var t = n.prototype; return t.refresh = function () { var e = this, t = this._scrollElement === this._scrollElement.window ? En : Cn, r = "auto" === this._config.method ? t : this._config.method, o = r === Cn ? this._getScrollTop() : 0; this._offsets = [], this._targets = [], this._scrollHeight = this._getScrollHeight(), [].slice.call(document.querySelectorAll(this._selector)).map(function (t) { var e, n = Fn.getSelectorFromElement(t); if (n && (e = document.querySelector(n)), e) { var i = e.getBoundingClientRect(); if (i.width || i.height) return [tn(e)[r]().top + o, n] } return null }).filter(function (t) { return t }).sort(function (t, e) { return t[0] - e[0] }).forEach(function (t) { e._offsets.push(t[0]), e._targets.push(t[1]) }) }, t.dispose = function () { tn.removeData(this._element, nn), tn(this._scrollElement).off(rn), this._element = null, this._scrollElement = null, this._config = null, this._selector = null, this._offsets = null, this._targets = null, this._activeTarget = null, this._scrollHeight = null }, t._getConfig = function (t) { if ("string" != typeof (t = l({}, sn, "object" == typeof t && t ? t : {})).target) { var e = tn(t.target).attr("id"); e || (e = Fn.getUID(en), tn(t.target).attr("id", e)), t.target = "#" + e } return Fn.typeCheckConfig(en, t, an), t }, t._getScrollTop = function () { return this._scrollElement === window ? this._scrollElement.pageYOffset : this._scrollElement.scrollTop }, t._getScrollHeight = function () { return this._scrollElement.scrollHeight || Math.max(document.body.scrollHeight, document.documentElement.scrollHeight) }, t._getOffsetHeight = function () { return this._scrollElement === window ? window.innerHeight : this._scrollElement.getBoundingClientRect().height }, t._process = function () { var t = this._getScrollTop() + this._config.offset, e = this._getScrollHeight(), n = this._config.offset + e - this._getOffsetHeight(); if (this._scrollHeight !== e && this.refresh(), n <= t) { var i = this._targets[this._targets.length - 1]; this._activeTarget !== i && this._activate(i) } else { if (this._activeTarget && t < this._offsets[0] && 0 < this._offsets[0]) return this._activeTarget = null, void this._clear(); for (var r = this._offsets.length; r--;) { this._activeTarget !== this._targets[r] && t >= this._offsets[r] && ("undefined" == typeof this._offsets[r + 1] || t < this._offsets[r + 1]) && this._activate(this._targets[r]) } } }, t._activate = function (e) { this._activeTarget = e, this._clear(); var t = this._selector.split(","); t = t.map(function (t) { return t + '[data-target="' + e + '"],' + t + '[href="' + e + '"]' }); var n = tn([].slice.call(document.querySelectorAll(t.join(",")))); n.hasClass(cn) ? (n.closest(pn).find(yn).addClass(hn), n.addClass(hn)) : (n.addClass(hn), n.parents(dn).prev(gn + ", " + mn).addClass(hn), n.parents(dn).prev(_n).children(gn).addClass(hn)), tn(this._scrollElement).trigger(ln.ACTIVATE, { relatedTarget: e }) }, t._clear = function () { var t = [].slice.call(document.querySelectorAll(this._selector)); tn(t).filter(fn).removeClass(hn) }, n._jQueryInterface = function (e) { return this.each(function () { var t = tn(this).data(nn); if (t || (t = new n(this, "object" == typeof e && e), tn(this).data(nn, t)), "string" == typeof e) { if ("undefined" == typeof t[e]) throw new TypeError('No method named "' + e + '"'); t[e]() } }) }, s(n, null, [{ key: "VERSION", get: function () { return "4.1.3" } }, { key: "Default", get: function () { return sn } }]), n }(), tn(window).on(ln.LOAD_DATA_API, function () { for (var t = [].slice.call(document.querySelectorAll(un)), e = t.length; e--;) { var n = tn(t[e]); Tn._jQueryInterface.call(n, n.data()) } }), tn.fn[en] = Tn._jQueryInterface, tn.fn[en].Constructor = Tn, tn.fn[en].noConflict = function () { return tn.fn[en] = on, Tn._jQueryInterface }, Tn), Gn = (In = "." + (Sn = "bs.tab"), An = (bn = e).fn.tab, Dn = { HIDE: "hide" + In, HIDDEN: "hidden" + In, SHOW: "show" + In, SHOWN: "shown" + In, CLICK_DATA_API: "click" + In + ".data-api" }, wn = "dropdown-menu", Nn = "active", On = "disabled", kn = "fade", Pn = "show", jn = ".dropdown", Hn = ".nav, .list-group", Ln = ".active", Rn = "> li > .active", xn = '[data-toggle="tab"], [data-toggle="pill"], [data-toggle="list"]', Wn = ".dropdown-toggle", Un = "> .dropdown-menu .active", qn = function () { function i(t) { this._element = t } var t = i.prototype; return t.show = function () { var n = this; if (!(this._element.parentNode && this._element.parentNode.nodeType === Node.ELEMENT_NODE && bn(this._element).hasClass(Nn) || bn(this._element).hasClass(On))) { var t, i, e = bn(this._element).closest(Hn)[0], r = Fn.getSelectorFromElement(this._element); if (e) { var o = "UL" === e.nodeName ? Rn : Ln; i = (i = bn.makeArray(bn(e).find(o)))[i.length - 1] } var s = bn.Event(Dn.HIDE, { relatedTarget: this._element }), a = bn.Event(Dn.SHOW, { relatedTarget: i }); if (i && bn(i).trigger(s), bn(this._element).trigger(a), !a.isDefaultPrevented() && !s.isDefaultPrevented()) { r && (t = document.querySelector(r)), this._activate(this._element, e); var l = function () { var t = bn.Event(Dn.HIDDEN, { relatedTarget: n._element }), e = bn.Event(Dn.SHOWN, { relatedTarget: i }); bn(i).trigger(t), bn(n._element).trigger(e) }; t ? this._activate(t, t.parentNode, l) : l() } } }, t.dispose = function () { bn.removeData(this._element, Sn), this._element = null }, t._activate = function (t, e, n) { var i = this, r = ("UL" === e.nodeName ? bn(e).find(Rn) : bn(e).children(Ln))[0], o = n && r && bn(r).hasClass(kn), s = function () { return i._transitionComplete(t, r, n) }; if (r && o) { var a = Fn.getTransitionDurationFromElement(r); bn(r).one(Fn.TRANSITION_END, s).emulateTransitionEnd(a) } else s() }, t._transitionComplete = function (t, e, n) { if (e) { bn(e).removeClass(Pn + " " + Nn); var i = bn(e.parentNode).find(Un)[0]; i && bn(i).removeClass(Nn), "tab" === e.getAttribute("role") && e.setAttribute("aria-selected", !1) } if (bn(t).addClass(Nn), "tab" === t.getAttribute("role") && t.setAttribute("aria-selected", !0), Fn.reflow(t), bn(t).addClass(Pn), t.parentNode && bn(t.parentNode).hasClass(wn)) { var r = bn(t).closest(jn)[0]; if (r) { var o = [].slice.call(r.querySelectorAll(Wn)); bn(o).addClass(Nn) } t.setAttribute("aria-expanded", !0) } n && n() }, i._jQueryInterface = function (n) { return this.each(function () { var t = bn(this), e = t.data(Sn); if (e || (e = new i(this), t.data(Sn, e)), "string" == typeof n) { if ("undefined" == typeof e[n]) throw new TypeError('No method named "' + n + '"'); e[n]() } }) }, s(i, null, [{ key: "VERSION", get: function () { return "4.1.3" } }]), i }(), bn(document).on(Dn.CLICK_DATA_API, xn, function (t) { t.preventDefault(), qn._jQueryInterface.call(bn(this), "show") }), bn.fn.tab = qn._jQueryInterface, bn.fn.tab.Constructor = qn, bn.fn.tab.noConflict = function () { return bn.fn.tab = An, qn._jQueryInterface }, qn); !function (t) { if ("undefined" == typeof t) throw new TypeError("Bootstrap's JavaScript requires jQuery. jQuery must be included before Bootstrap's JavaScript."); var e = t.fn.jquery.split(" ")[0].split("."); if (e[0] < 2 && e[1] < 9 || 1 === e[0] && 9 === e[1] && e[2] < 1 || 4 <= e[0]) throw new Error("Bootstrap's JavaScript requires at least jQuery v1.9.1 but less than v4.0.0") }(e), t.Util = Fn, t.Alert = Kn, t.Button = Mn, t.Carousel = Qn, t.Collapse = Bn, t.Dropdown = Vn, t.Modal = Yn, t.Popover = Jn, t.Scrollspy = Zn, t.Tab = Gn, t.Tooltip = zn, Object.defineProperty(t, "__esModule", { value: !0 }) });
//# sourceMappingURL=bootstrap.min.js.map

//dropdown js
!function (X, Y, G, J) { "use strict"; Y = void 0 !== Y && Y.Math == Math ? Y : "undefined" != typeof self && self.Math == Math ? self : Function("return this")(), X.fn.dropdown = function (z) { var P, H = X(this), j = X(G), N = H.selector || "", U = "ontouchstart" in G.documentElement, K = (new Date).getTime(), W = [], B = z, $ = "string" == typeof B, Q = [].slice.call(arguments, 1); return H.each(function (n) { var e, t, i, a, o, s, r, m, h = X.isPlainObject(z) ? X.extend(!0, {}, X.fn.dropdown.settings, z) : X.extend({}, X.fn.dropdown.settings), g = h.className, c = h.message, l = h.fields, p = h.keys, b = h.metadata, u = h.namespace, d = h.regExp, w = h.selector, v = h.error, f = h.templates, x = "." + u, C = "module-" + u, S = X(this), y = X(h.context), A = S.find(w.text), T = S.find(w.search), k = S.find(w.sizer), L = S.find(w.input), I = S.find(w.icon), D = 0 < S.prev().find(w.text).length ? S.prev().find(w.text) : S.prev(), q = S.children(w.menu), R = q.find(w.item), O = !1, V = !1, E = !1, M = this, F = S.data(C); m = { initialize: function () { m.debug("Initializing dropdown", h), m.is.alreadySetup() ? m.setup.reference() : (m.setup.layout(), h.values && m.change.values(h.values), m.refreshData(), m.save.defaults(), m.restore.selected(), m.create.id(), m.bind.events(), m.observeChanges(), m.instantiate()) }, instantiate: function () { m.verbose("Storing instance of dropdown", m), F = m, S.data(C, m) }, destroy: function () { m.verbose("Destroying previous dropdown", S), m.remove.tabbable(), S.off(x).removeData(C), q.off(x), j.off(a), m.disconnect.menuObserver(), m.disconnect.selectObserver() }, observeChanges: function () { "MutationObserver" in Y && (s = new MutationObserver(m.event.select.mutation), r = new MutationObserver(m.event.menu.mutation), m.debug("Setting up mutation observer", s, r), m.observe.select(), m.observe.menu()) }, disconnect: { menuObserver: function () { r && r.disconnect() }, selectObserver: function () { s && s.disconnect() } }, observe: { select: function () { m.has.input() && s.observe(S[0], { childList: !0, subtree: !0 }) }, menu: function () { m.has.menu() && r.observe(q[0], { childList: !0, subtree: !0 }) } }, create: { id: function () { o = (Math.random().toString(16) + "000000000").substr(2, 8), a = "." + o, m.verbose("Creating unique id for element", o) }, userChoice: function (e) { var n, i, a; return !!(e = e || m.get.userValues()) && (e = X.isArray(e) ? e : [e], X.each(e, function (e, t) { !1 === m.get.item(t) && (a = h.templates.addition(m.add.variables(c.addResult, t)), i = X("<div />").html(a).attr("data-" + b.value, t).attr("data-" + b.text, t).addClass(g.addition).addClass(g.item), h.hideAdditions && i.addClass(g.hidden), n = n === J ? i : n.add(i), m.verbose("Creating user choices for value", t, i)) }), n) }, userLabels: function (e) { var t = m.get.userValues(); t && (m.debug("Adding user labels", t), X.each(t, function (e, t) { m.verbose("Adding custom user value"), m.add.label(t, t) })) }, menu: function () { q = X("<div />").addClass(g.menu).appendTo(S) }, sizer: function () { k = X("<span />").addClass(g.sizer).insertAfter(T) } }, search: function (e) { e = e !== J ? e : m.get.query(), m.verbose("Searching for query", e), m.has.minCharacters(e) ? m.filter(e) : m.hide() }, select: { firstUnfiltered: function () { m.verbose("Selecting first non-filtered element"), m.remove.selectedItem(), R.not(w.unselectable).not(w.addition + w.hidden).eq(0).addClass(g.selected) }, nextAvailable: function (e) { var t = (e = e.eq(0)).nextAll(w.item).not(w.unselectable).eq(0), n = e.prevAll(w.item).not(w.unselectable).eq(0); 0 < t.length ? (m.verbose("Moving selection to", t), t.addClass(g.selected)) : (m.verbose("Moving selection to", n), n.addClass(g.selected)) } }, setup: { api: function () { var e = { debug: h.debug, urlData: { value: m.get.value(), query: m.get.query() }, on: !1 }; m.verbose("First request, initializing API"), S.api(e) }, layout: function () { S.is("select") && (m.setup.select(), m.setup.returnedObject()), m.has.menu() || m.create.menu(), m.is.search() && !m.has.search() && (m.verbose("Adding search input"), T = X("<input />").addClass(g.search).prop("autocomplete", "off").insertBefore(A)), m.is.multiple() && m.is.searchSelection() && !m.has.sizer() && m.create.sizer(), h.allowTab && m.set.tabbable() }, select: function () { var e = m.get.selectValues(); m.debug("Dropdown initialized on a select", e), S.is("select") && (L = S), 0 < L.parent(w.dropdown).length ? (m.debug("UI dropdown already exists. Creating dropdown menu only"), S = L.closest(w.dropdown), m.has.menu() || m.create.menu(), q = S.children(w.menu), m.setup.menu(e)) : (m.debug("Creating entire dropdown from select"), S = X("<div />").attr("class", L.attr("class")).addClass(g.selection).addClass(g.dropdown).html(f.dropdown(e)).insertBefore(L), L.hasClass(g.multiple) && !1 === L.prop("multiple") && (m.error(v.missingMultiple), L.prop("multiple", !0)), L.is("[multiple]") && m.set.multiple(), L.prop("disabled") && (m.debug("Disabling dropdown"), S.addClass(g.disabled)), L.removeAttr("class").detach().prependTo(S)), m.refresh() }, menu: function (e) { q.html(f.menu(e, l)), R = q.find(w.item) }, reference: function () { m.debug("Dropdown behavior was called on select, replacing with closest dropdown"), S = S.parent(w.dropdown), F = S.data(C), M = S.get(0), m.refresh(), m.setup.returnedObject() }, returnedObject: function () { var e = H.slice(0, n), t = H.slice(n + 1); H = e.add(S).add(t) } }, refresh: function () { m.refreshSelectors(), m.refreshData() }, refreshItems: function () { R = q.find(w.item) }, refreshSelectors: function () { m.verbose("Refreshing selector cache"), A = S.find(w.text), T = S.find(w.search), L = S.find(w.input), I = S.find(w.icon), D = 0 < S.prev().find(w.text).length ? S.prev().find(w.text) : S.prev(), q = S.children(w.menu), R = q.find(w.item) }, refreshData: function () { m.verbose("Refreshing cached metadata"), R.removeData(b.text).removeData(b.value) }, clearData: function () { m.verbose("Clearing metadata"), R.removeData(b.text).removeData(b.value), S.removeData(b.defaultText).removeData(b.defaultValue).removeData(b.placeholderText) }, toggle: function () { m.verbose("Toggling menu visibility"), m.is.active() ? m.hide() : m.show() }, show: function (e) { if (e = X.isFunction(e) ? e : function () { }, !m.can.show() && m.is.remote() && (m.debug("No API results retrieved, searching before show"), m.queryRemote(m.get.query(), m.show)), m.can.show() && !m.is.active()) { if (m.debug("Showing dropdown"), !m.has.message() || m.has.maxSelections() || m.has.allResultsFiltered() || m.remove.message(), m.is.allFiltered()) return !0; !1 !== h.onShow.call(M) && m.animate.show(function () { m.can.click() && m.bind.intent(), m.has.menuSearch() && m.focusSearch(), m.set.visible(), e.call(M) }) } }, hide: function (e) { e = X.isFunction(e) ? e : function () { }, m.is.active() && !m.is.animatingOutward() && (m.debug("Hiding dropdown"), !1 !== h.onHide.call(M) && m.animate.hide(function () { m.remove.visible(), e.call(M) })) }, hideOthers: function () { m.verbose("Finding other dropdowns to hide"), H.not(S).has(w.menu + "." + g.visible).dropdown("hide") }, hideMenu: function () { m.verbose("Hiding menu  instantaneously"), m.remove.active(), m.remove.visible(), q.transition("hide") }, hideSubMenus: function () { var e = q.children(w.item).find(w.menu); m.verbose("Hiding sub menus", e), e.transition("hide") }, bind: { events: function () { U && m.bind.touchEvents(), m.bind.keyboardEvents(), m.bind.inputEvents(), m.bind.mouseEvents() }, touchEvents: function () { m.debug("Touch device detected binding additional touch events"), m.is.searchSelection() || m.is.single() && S.on("touchstart" + x, m.event.test.toggle), q.on("touchstart" + x, w.item, m.event.item.mouseenter) }, keyboardEvents: function () { m.verbose("Binding keyboard events"), S.on("keydown" + x, m.event.keydown), m.has.search() && S.on(m.get.inputEvent() + x, w.search, m.event.input), m.is.multiple() && j.on("keydown" + a, m.event.document.keydown) }, inputEvents: function () { m.verbose("Binding input change events"), S.on("change" + x, w.input, m.event.change) }, mouseEvents: function () { m.verbose("Binding mouse events"), m.is.multiple() && S.on("click" + x, w.label, m.event.label.click).on("click" + x, w.remove, m.event.remove.click), m.is.searchSelection() ? (S.on("mousedown" + x, m.event.mousedown).on("mouseup" + x, m.event.mouseup).on("mousedown" + x, w.menu, m.event.menu.mousedown).on("mouseup" + x, w.menu, m.event.menu.mouseup).on("click" + x, w.icon, m.event.icon.click).on("focus" + x, w.search, m.event.search.focus).on("click" + x, w.search, m.event.search.focus).on("blur" + x, w.search, m.event.search.blur).on("click" + x, w.text, m.event.text.focus), m.is.multiple() && S.on("click" + x, m.event.click)) : ("click" == h.on ? S.on("click" + x, m.event.test.toggle) : "hover" == h.on ? S.on("mouseenter" + x, m.delay.show).on("mouseleave" + x, m.delay.hide) : S.on(h.on + x, m.toggle), S.on("click" + x, w.icon, m.event.icon.click).on("mousedown" + x, m.event.mousedown).on("mouseup" + x, m.event.mouseup).on("focus" + x, m.event.focus), m.has.menuSearch() ? S.on("blur" + x, w.search, m.event.search.blur) : S.on("blur" + x, m.event.blur)), q.on("mouseenter" + x, w.item, m.event.item.mouseenter).on("mouseleave" + x, w.item, m.event.item.mouseleave).on("click" + x, w.item, m.event.item.click) }, intent: function () { m.verbose("Binding hide intent event to document"), U && j.on("touchstart" + a, m.event.test.touch).on("touchmove" + a, m.event.test.touch), j.on("click" + a, m.event.test.hide) } }, unbind: { intent: function () { m.verbose("Removing hide intent event from document"), U && j.off("touchstart" + a).off("touchmove" + a), j.off("click" + a) } }, filter: function (e) { var t = e !== J ? e : m.get.query(), n = function () { m.is.multiple() && m.filterActive(), (e || !e && 0 == m.get.activeItem().length) && m.select.firstUnfiltered(), m.has.allResultsFiltered() ? h.onNoResults.call(M, t) ? h.allowAdditions ? h.hideAdditions && (m.verbose("User addition with no menu, setting empty style"), m.set.empty(), m.hideMenu()) : (m.verbose("All items filtered, showing message", t), m.add.message(c.noResults)) : (m.verbose("All items filtered, hiding dropdown", t), m.hideMenu()) : (m.remove.empty(), m.remove.message()), h.allowAdditions && m.add.userSuggestion(e), m.is.searchSelection() && m.can.show() && m.is.focusedOnSearch() && m.show() }; h.useLabels && m.has.maxSelections() || (h.apiSettings ? m.can.useAPI() ? m.queryRemote(t, function () { h.filterRemoteData && m.filterItems(t), n() }) : m.error(v.noAPI) : (m.filterItems(t), n())) }, queryRemote: function (e, n) { var t = { errorDuration: !1, cache: "local", throttle: h.throttle, urlData: { query: e }, onError: function () { m.add.message(c.serverError), n() }, onFailure: function () { m.add.message(c.serverError), n() }, onSuccess: function (e) { var t = e[l.remoteValues]; X.isArray(t) && 0 < t.length ? (m.remove.message(), m.setup.menu({ values: e[l.remoteValues] })) : m.add.message(c.noResults), n() } }; S.api("get request") || m.setup.api(), t = X.extend(!0, {}, t, h.apiSettings), S.api("setting", t).api("query") }, filterItems: function (e) { var i = e !== J ? e : m.get.query(), a = null, t = m.escape.string(i), o = new RegExp("^" + t, "igm"); m.has.query() && (a = [], m.verbose("Searching for matching values", i), R.each(function () { var e, t, n = X(this); if ("both" == h.match || "text" == h.match) { if (-1 !== (e = String(m.get.choiceText(n, !1))).search(o)) return a.push(this), !0; if ("exact" === h.fullTextSearch && m.exactSearch(i, e)) return a.push(this), !0; if (!0 === h.fullTextSearch && m.fuzzySearch(i, e)) return a.push(this), !0 } if ("both" == h.match || "value" == h.match) { if (-1 !== (t = String(m.get.choiceValue(n, e))).search(o)) return a.push(this), !0; if ("exact" === h.fullTextSearch && m.exactSearch(i, t)) return a.push(this), !0; if (!0 === h.fullTextSearch && m.fuzzySearch(i, t)) return a.push(this), !0 } })), m.debug("Showing only matched items", i), m.remove.filteredItem(), a && R.not(a).addClass(g.filtered) }, fuzzySearch: function (e, t) { var n = t.length, i = e.length; if (e = e.toLowerCase(), t = t.toLowerCase(), n < i) return !1; if (i === n) return e === t; e: for (var a = 0, o = 0; a < i; a++) { for (var s = e.charCodeAt(a); o < n;)if (t.charCodeAt(o++) === s) continue e; return !1 } return !0 }, exactSearch: function (e, t) { return e = e.toLowerCase(), -1 < (t = t.toLowerCase()).indexOf(e) }, filterActive: function () { h.useLabels && R.filter("." + g.active).addClass(g.filtered) }, focusSearch: function (e) { m.has.search() && !m.is.focusedOnSearch() && (e ? (S.off("focus" + x, w.search), T.focus(), S.on("focus" + x, w.search, m.event.search.focus)) : T.focus()) }, forceSelection: function () { var e = R.not(g.filtered).filter("." + g.selected).eq(0), t = R.not(g.filtered).filter("." + g.active).eq(0), n = 0 < e.length ? e : t; if (0 < n.length && !m.is.multiple()) return m.debug("Forcing partial selection to selected item", n), void m.event.item.click.call(n, {}, !0); h.allowAdditions && m.set.selected(m.get.query()), m.remove.searchTerm() }, change: { values: function (e) { h.allowAdditions || m.clear(), m.debug("Creating dropdown with specified values", e), m.setup.menu({ values: e }), X.each(e, function (e, t) { if (1 == t.selected) return m.debug("Setting initial selection to", t.value), m.set.selected(t.value), !0 }) } }, event: { change: function () { E || (m.debug("Input changed, updating selection"), m.set.selected()) }, focus: function () { h.showOnFocus && !O && m.is.hidden() && !t && m.show() }, blur: function (e) { t = G.activeElement === this, O || t || (m.remove.activeLabel(), m.hide()) }, mousedown: function () { m.is.searchSelection() ? i = !0 : O = !0 }, mouseup: function () { m.is.searchSelection() ? i = !1 : O = !1 }, click: function (e) { X(e.target).is(S) && (m.is.focusedOnSearch() ? m.show() : m.focusSearch()) }, search: { focus: function () { O = !0, m.is.multiple() && m.remove.activeLabel(), h.showOnFocus && m.search() }, blur: function (e) { t = G.activeElement === this, m.is.searchSelection() && !i && (V || t || (h.forceSelection && m.forceSelection(), m.hide())), i = !1 } }, icon: { click: function (e) { I.hasClass(g.clear) ? m.clear() : m.can.click() && m.toggle() } }, text: { focus: function (e) { O = !0, m.focusSearch() } }, input: function (e) { (m.is.multiple() || m.is.searchSelection()) && m.set.filtered(), clearTimeout(m.timer), m.timer = setTimeout(m.search, h.delay.search) }, label: { click: function (e) { var t = X(this), n = S.find(w.label), i = n.filter("." + g.active), a = t.nextAll("." + g.active), o = t.prevAll("." + g.active), s = 0 < a.length ? t.nextUntil(a).add(i).add(t) : t.prevUntil(o).add(i).add(t); e.shiftKey ? (i.removeClass(g.active), s.addClass(g.active)) : e.ctrlKey ? t.toggleClass(g.active) : (i.removeClass(g.active), t.addClass(g.active)), h.onLabelSelect.apply(this, n.filter("." + g.active)) } }, remove: { click: function () { var e = X(this).parent(); e.hasClass(g.active) ? m.remove.activeLabels() : m.remove.activeLabels(e) } }, test: { toggle: function (e) { var t = m.is.multiple() ? m.show : m.toggle; m.is.bubbledLabelClick(e) || m.is.bubbledIconClick(e) || m.determine.eventOnElement(e, t) && e.preventDefault() }, touch: function (e) { m.determine.eventOnElement(e, function () { "touchstart" == e.type ? m.timer = setTimeout(function () { m.hide() }, h.delay.touch) : "touchmove" == e.type && clearTimeout(m.timer) }), e.stopPropagation() }, hide: function (e) { m.determine.eventInModule(e, m.hide) } }, select: { mutation: function (e) { m.debug("<select> modified, recreating menu"); var n = !1; X.each(e, function (e, t) { if (X(t.target).is("select") || X(t.addedNodes).is("select")) return n = !0 }), n && (m.disconnect.selectObserver(), m.refresh(), m.setup.select(), m.set.selected(), m.observe.select()) } }, menu: { mutation: function (e) { var t = e[0], n = t.addedNodes ? X(t.addedNodes[0]) : X(!1), i = t.removedNodes ? X(t.removedNodes[0]) : X(!1), a = n.add(i), o = a.is(w.addition) || 0 < a.closest(w.addition).length, s = a.is(w.message) || 0 < a.closest(w.message).length; o || s ? (m.debug("Updating item selector cache"), m.refreshItems()) : (m.debug("Menu modified, updating selector cache"), m.refresh()) }, mousedown: function () { V = !0 }, mouseup: function () { V = !1 } }, item: { mouseenter: function (e) { var t = X(e.target), n = X(this), i = n.children(w.menu), a = n.siblings(w.item).children(w.menu), o = 0 < i.length; !(0 < i.find(t).length) && o && (clearTimeout(m.itemTimer), m.itemTimer = setTimeout(function () { m.verbose("Showing sub-menu", i), X.each(a, function () { m.animate.hide(!1, X(this)) }), m.animate.show(!1, i) }, h.delay.show), e.preventDefault()) }, mouseleave: function (e) { var t = X(this).children(w.menu); 0 < t.length && (clearTimeout(m.itemTimer), m.itemTimer = setTimeout(function () { m.verbose("Hiding sub-menu", t), m.animate.hide(!1, t) }, h.delay.hide)) }, click: function (e, t) { var n = X(this), i = X(e ? e.target : ""), a = n.find(w.menu), o = m.get.choiceText(n), s = m.get.choiceValue(n, o), r = 0 < a.length, l = 0 < a.find(i).length; m.has.menuSearch() && X(G.activeElement).blur(), l || r && !h.allowCategorySelection || (m.is.searchSelection() && (h.allowAdditions && m.remove.userAddition(), m.remove.searchTerm(), m.is.focusedOnSearch() || 1 == t || m.focusSearch(!0)), h.useLabels || (m.remove.filteredItem(), m.set.scrollPosition(n)), m.determine.selectAction.call(this, o, s)) } }, document: { keydown: function (e) { var t = e.which; if (m.is.inObject(t, p)) { var n = S.find(w.label), i = n.filter("." + g.active), a = (i.data(b.value), n.index(i)), o = n.length, s = 0 < i.length, r = 1 < i.length, l = 0 === a, c = a + 1 == o, u = m.is.searchSelection(), d = m.is.focusedOnSearch(), v = m.is.focused(), f = d && 0 === m.get.caretPosition(); if (u && !s && !d) return; t == p.leftArrow ? !v && !f || s ? s && (e.shiftKey ? m.verbose("Adding previous label to selection") : (m.verbose("Selecting previous label"), n.removeClass(g.active)), l && !r ? i.addClass(g.active) : i.prev(w.siblingLabel).addClass(g.active).end(), e.preventDefault()) : (m.verbose("Selecting previous label"), n.last().addClass(g.active)) : t == p.rightArrow ? (v && !s && n.first().addClass(g.active), s && (e.shiftKey ? m.verbose("Adding next label to selection") : (m.verbose("Selecting next label"), n.removeClass(g.active)), c ? u ? d ? n.removeClass(g.active) : m.focusSearch() : r ? i.next(w.siblingLabel).addClass(g.active) : i.addClass(g.active) : i.next(w.siblingLabel).addClass(g.active), e.preventDefault())) : t == p.deleteKey || t == p.backspace ? s ? (m.verbose("Removing active labels"), c && u && !d && m.focusSearch(), i.last().next(w.siblingLabel).addClass(g.active), m.remove.activeLabels(i), e.preventDefault()) : f && !s && t == p.backspace && (m.verbose("Removing last label on input backspace"), i = n.last().addClass(g.active), m.remove.activeLabels(i)) : i.removeClass(g.active) } } }, keydown: function (e) { var t = e.which; if (m.is.inObject(t, p)) { var n, i = R.not(w.unselectable).filter("." + g.selected).eq(0), a = q.children("." + g.active).eq(0), o = 0 < i.length ? i : a, s = 0 < o.length ? o.siblings(":not(." + g.filtered + ")").addBack() : q.children(":not(." + g.filtered + ")"), r = o.children(w.menu), l = o.closest(w.menu), c = l.hasClass(g.visible) || l.hasClass(g.animating) || 0 < l.parent(w.menu).length, u = 0 < r.length, d = 0 < o.length, v = 0 < o.not(w.unselectable).length, f = t == p.delimiter && h.allowAdditions && m.is.multiple(); if (h.allowAdditions && h.hideAdditions && (t == p.enter || f) && v && (m.verbose("Selecting item from keyboard shortcut", o), m.event.item.click.call(o, e), m.is.searchSelection() && m.remove.searchTerm()), m.is.visible()) { if ((t == p.enter || f) && (t == p.enter && d && u && !h.allowCategorySelection ? (m.verbose("Pressed enter on unselectable category, opening sub menu"), t = p.rightArrow) : v && (m.verbose("Selecting item from keyboard shortcut", o), m.event.item.click.call(o, e), m.is.searchSelection() && m.remove.searchTerm()), e.preventDefault()), d && (t == p.leftArrow && l[0] !== q[0] && (m.verbose("Left key pressed, closing sub-menu"), m.animate.hide(!1, l), o.removeClass(g.selected), l.closest(w.item).addClass(g.selected), e.preventDefault()), t == p.rightArrow && u && (m.verbose("Right key pressed, opening sub-menu"), m.animate.show(!1, r), o.removeClass(g.selected), r.find(w.item).eq(0).addClass(g.selected), e.preventDefault())), t == p.upArrow) { if (n = d && c ? o.prevAll(w.item + ":not(" + w.unselectable + ")").eq(0) : R.eq(0), s.index(n) < 0) return m.verbose("Up key pressed but reached top of current menu"), void e.preventDefault(); m.verbose("Up key pressed, changing active item"), o.removeClass(g.selected), n.addClass(g.selected), m.set.scrollPosition(n), h.selectOnKeydown && m.is.single() && m.set.selectedItem(n), e.preventDefault() } if (t == p.downArrow) { if (0 === (n = d && c ? n = o.nextAll(w.item + ":not(" + w.unselectable + ")").eq(0) : R.eq(0)).length) return m.verbose("Down key pressed but reached bottom of current menu"), void e.preventDefault(); m.verbose("Down key pressed, changing active item"), R.removeClass(g.selected), n.addClass(g.selected), m.set.scrollPosition(n), h.selectOnKeydown && m.is.single() && m.set.selectedItem(n), e.preventDefault() } t == p.pageUp && (m.scrollPage("up"), e.preventDefault()), t == p.pageDown && (m.scrollPage("down"), e.preventDefault()), t == p.escape && (m.verbose("Escape key pressed, closing dropdown"), m.hide()) } else f && e.preventDefault(), t != p.downArrow || m.is.visible() || (m.verbose("Down key pressed, showing dropdown"), m.show(), e.preventDefault()) } else m.has.search() || m.set.selectedLetter(String.fromCharCode(t)) } }, trigger: { change: function () { var e = G.createEvent("HTMLEvents"), t = L[0]; t && (m.verbose("Triggering native change event"), e.initEvent("change", !0, !1), t.dispatchEvent(e)) } }, determine: { selectAction: function (e, t) { m.verbose("Determining action", h.action), X.isFunction(m.action[h.action]) ? (m.verbose("Triggering preset action", h.action, e, t), m.action[h.action].call(M, e, t, this)) : X.isFunction(h.action) ? (m.verbose("Triggering user action", h.action, e, t), h.action.call(M, e, t, this)) : m.error(v.action, h.action) }, eventInModule: function (e, t) { var n = X(e.target), i = 0 < n.closest(G.documentElement).length, a = 0 < n.closest(S).length; return t = X.isFunction(t) ? t : function () { }, i && !a ? (m.verbose("Triggering event", t), t(), !0) : (m.verbose("Event occurred in dropdown, canceling callback"), !1) }, eventOnElement: function (e, t) { var n = X(e.target), i = n.closest(w.siblingLabel), a = G.body.contains(e.target), o = 0 === S.find(i).length, s = 0 === n.closest(q).length; return t = X.isFunction(t) ? t : function () { }, a && o && s ? (m.verbose("Triggering event", t), t(), !0) : (m.verbose("Event occurred in dropdown menu, canceling callback"), !1) } }, action: { nothing: function () { }, activate: function (e, t, n) { if (t = t !== J ? t : e, m.can.activate(X(n))) { if (m.set.selected(t, X(n)), m.is.multiple() && !m.is.allFiltered()) return; m.hideAndClear() } }, select: function (e, t, n) { if (t = t !== J ? t : e, m.can.activate(X(n))) { if (m.set.value(t, e, X(n)), m.is.multiple() && !m.is.allFiltered()) return; m.hideAndClear() } }, combo: function (e, t, n) { t = t !== J ? t : e, m.set.selected(t, X(n)), m.hideAndClear() }, hide: function (e, t, n) { m.set.value(t, e, X(n)), m.hideAndClear() } }, get: { id: function () { return o }, defaultText: function () { return S.data(b.defaultText) }, defaultValue: function () { return S.data(b.defaultValue) }, placeholderText: function () { return "auto" != h.placeholder && "string" == typeof h.placeholder ? h.placeholder : S.data(b.placeholderText) || "" }, text: function () { return A.text() }, query: function () { return X.trim(T.val()) }, searchWidth: function (e) { return e = e !== J ? e : T.val(), k.text(e), Math.ceil(k.width() + 1) }, selectionCount: function () { var e = m.get.values(); return m.is.multiple() ? X.isArray(e) ? e.length : 0 : "" !== m.get.value() ? 1 : 0 }, transition: function (e) { return "auto" == h.transition ? m.is.upward(e) ? "slide up" : "slide down" : h.transition }, userValues: function () { var e = m.get.values(); return !!e && (e = X.isArray(e) ? e : [e], X.grep(e, function (e) { return !1 === m.get.item(e) })) }, uniqueArray: function (n) { return X.grep(n, function (e, t) { return X.inArray(e, n) === t }) }, caretPosition: function () { var e, t, n = T.get(0); return "selectionStart" in n ? n.selectionStart : G.selection ? (n.focus(), t = (e = G.selection.createRange()).text.length, e.moveStart("character", -n.value.length), e.text.length - t) : void 0 }, value: function () { var e = 0 < L.length ? L.val() : S.data(b.value), t = X.isArray(e) && 1 === e.length && "" === e[0]; return e === J || t ? "" : e }, values: function () { var e = m.get.value(); return "" === e ? "" : !m.has.selectInput() && m.is.multiple() ? "string" == typeof e ? e.split(h.delimiter) : "" : e }, remoteValues: function () { var e = m.get.values(), i = !1; return e && ("string" == typeof e && (e = [e]), X.each(e, function (e, t) { var n = m.read.remoteData(t); m.verbose("Restoring value from session data", n, t), n && (i || (i = {}), i[t] = n) })), i }, choiceText: function (e, t) { if (t = t !== J ? t : h.preserveHTML, e) return 0 < e.find(w.menu).length && (m.verbose("Retrieving text of element with sub-menu"), (e = e.clone()).find(w.menu).remove(), e.find(w.menuIcon).remove()), e.data(b.text) !== J ? e.data(b.text) : t ? X.trim(e.html()) : X.trim(e.text()) }, choiceValue: function (e, t) { return t = t || m.get.choiceText(e), !!e && (e.data(b.value) !== J ? String(e.data(b.value)) : "string" == typeof t ? X.trim(t.toLowerCase()) : String(t)) }, inputEvent: function () { var e = T[0]; return !!e && (e.oninput !== J ? "input" : e.onpropertychange !== J ? "propertychange" : "keyup") }, selectValues: function () { var a = { values: [] }; return S.find("option").each(function () { var e = X(this), t = e.html(), n = e.attr("disabled"), i = e.attr("value") !== J ? e.attr("value") : t; "auto" === h.placeholder && "" === i ? a.placeholder = t : a.values.push({ name: t, value: i, disabled: n }) }), h.placeholder && "auto" !== h.placeholder && (m.debug("Setting placeholder value to", h.placeholder), a.placeholder = h.placeholder), h.sortSelect ? (a.values.sort(function (e, t) { return e.name > t.name ? 1 : -1 }), m.debug("Retrieved and sorted values from select", a)) : m.debug("Retrieved values from select", a), a }, activeItem: function () { return R.filter("." + g.active) }, selectedItem: function () { var e = R.not(w.unselectable).filter("." + g.selected); return 0 < e.length ? e : R.eq(0) }, itemWithAdditions: function (e) { var t = m.get.item(e), n = m.create.userChoice(e); return n && 0 < n.length && (t = 0 < t.length ? t.add(n) : n), t }, item: function (i, a) { var e, o, s = !1; return i = i !== J ? i : m.get.values() !== J ? m.get.values() : m.get.text(), e = o ? 0 < i.length : i !== J && null !== i, o = m.is.multiple() && X.isArray(i), a = "" === i || 0 === i || (a || !1), e && R.each(function () { var e = X(this), t = m.get.choiceText(e), n = m.get.choiceValue(e, t); if (null !== n && n !== J) if (o) -1 === X.inArray(String(n), i) && -1 === X.inArray(t, i) || (s = s ? s.add(e) : e); else if (a) { if (m.verbose("Ambiguous dropdown value using strict type check", e, i), n === i || t === i) return s = e, !0 } else if (String(n) == String(i) || t == i) return m.verbose("Found select item by value", n, i), s = e, !0 }), s } }, check: { maxSelections: function (e) { return !h.maxSelections || ((e = e !== J ? e : m.get.selectionCount()) >= h.maxSelections ? (m.debug("Maximum selection count reached"), h.useLabels && (R.addClass(g.filtered), m.add.message(c.maxSelections)), !0) : (m.verbose("No longer at maximum selection count"), m.remove.message(), m.remove.filteredItem(), m.is.searchSelection() && m.filterItems(), !1)) } }, restore: { defaults: function () { m.clear(), m.restore.defaultText(), m.restore.defaultValue() }, defaultText: function () { var e = m.get.defaultText(); e === m.get.placeholderText ? (m.debug("Restoring default placeholder text", e), m.set.placeholderText(e)) : (m.debug("Restoring default text", e), m.set.text(e)) }, placeholderText: function () { m.set.placeholderText() }, defaultValue: function () { var e = m.get.defaultValue(); e !== J && (m.debug("Restoring default value", e), "" !== e ? (m.set.value(e), m.set.selected()) : (m.remove.activeItem(), m.remove.selectedItem())) }, labels: function () { h.allowAdditions && (h.useLabels || (m.error(v.labels), h.useLabels = !0), m.debug("Restoring selected values"), m.create.userLabels()), m.check.maxSelections() }, selected: function () { m.restore.values(), m.is.multiple() ? (m.debug("Restoring previously selected values and labels"), m.restore.labels()) : m.debug("Restoring previously selected values") }, values: function () { m.set.initialLoad(), h.apiSettings && h.saveRemoteData && m.get.remoteValues() ? m.restore.remoteValues() : m.set.selected(), m.remove.initialLoad() }, remoteValues: function () { var e = m.get.remoteValues(); m.debug("Recreating selected from session data", e), e && (m.is.single() ? X.each(e, function (e, t) { m.set.text(t) }) : X.each(e, function (e, t) { m.add.label(e, t) })) } }, read: { remoteData: function (e) { var t; if (Y.Storage !== J) return (t = sessionStorage.getItem(e)) !== J && t; m.error(v.noStorage) } }, save: { defaults: function () { m.save.defaultText(), m.save.placeholderText(), m.save.defaultValue() }, defaultValue: function () { var e = m.get.value(); m.verbose("Saving default value as", e), S.data(b.defaultValue, e) }, defaultText: function () { var e = m.get.text(); m.verbose("Saving default text as", e), S.data(b.defaultText, e) }, placeholderText: function () { var e; !1 !== h.placeholder && A.hasClass(g.placeholder) && (e = m.get.text(), m.verbose("Saving placeholder text as", e), S.data(b.placeholderText, e)) }, remoteData: function (e, t) { Y.Storage !== J ? (m.verbose("Saving remote data to session storage", t, e), sessionStorage.setItem(t, e)) : m.error(v.noStorage) } }, clear: function () { m.is.multiple() && h.useLabels ? m.remove.labels() : (m.remove.activeItem(), m.remove.selectedItem()), m.set.placeholderText(), m.clearValue() }, clearValue: function () { m.set.value("") }, scrollPage: function (e, t) { var n, i, a = t || m.get.selectedItem(), o = a.closest(w.menu), s = o.outerHeight(), r = o.scrollTop(), l = R.eq(0).outerHeight(), c = Math.floor(s / l), u = (o.prop("scrollHeight"), "up" == e ? r - l * c : r + l * c), d = R.not(w.unselectable); i = "up" == e ? d.index(a) - c : d.index(a) + c, 0 < (n = ("up" == e ? 0 <= i : i < d.length) ? d.eq(i) : "up" == e ? d.first() : d.last()).length && (m.debug("Scrolling page", e, n), a.removeClass(g.selected), n.addClass(g.selected), h.selectOnKeydown && m.is.single() && m.set.selectedItem(n), o.scrollTop(u)) }, set: { filtered: function () { var e = m.is.multiple(), t = m.is.searchSelection(), n = e && t, i = t ? m.get.query() : "", a = "string" == typeof i && 0 < i.length, o = m.get.searchWidth(), s = "" !== i; e && a && (m.verbose("Adjusting input width", o, h.glyphWidth), T.css("width", o)), a || n && s ? (m.verbose("Hiding placeholder text"), A.addClass(g.filtered)) : (!e || n && !s) && (m.verbose("Showing placeholder text"), A.removeClass(g.filtered)) }, empty: function () { S.addClass(g.empty) }, loading: function () { S.addClass(g.loading) }, placeholderText: function (e) { e = e || m.get.placeholderText(), m.debug("Setting placeholder text", e), m.set.text(e), A.addClass(g.placeholder) }, tabbable: function () { m.is.searchSelection() ? (m.debug("Added tabindex to searchable dropdown"), T.val("").attr("tabindex", 0), q.attr("tabindex", -1)) : (m.debug("Added tabindex to dropdown"), S.attr("tabindex") === J && (S.attr("tabindex", 0), q.attr("tabindex", -1))) }, initialLoad: function () { m.verbose("Setting initial load"), e = !0 }, activeItem: function (e) { h.allowAdditions && 0 < e.filter(w.addition).length ? e.addClass(g.filtered) : e.addClass(g.active) }, partialSearch: function (e) { var t = m.get.query().length; T.val(e.substr(0, t)) }, scrollPosition: function (e, t) { var n, i, a, o, s, r; n = (e = e || m.get.selectedItem()).closest(w.menu), i = e && 0 < e.length, t = t !== J && t, e && 0 < n.length && i && (e.position().top, n.addClass(g.loading), a = (o = n.scrollTop()) - n.offset().top + e.offset().top, t || (r = o + n.height() < a + 5, s = a - 5 < o), m.debug("Scrolling to active item", a), (t || s || r) && n.scrollTop(a), n.removeClass(g.loading)) }, text: function (e) { "select" !== h.action && ("combo" == h.action ? (m.debug("Changing combo button text", e, D), h.preserveHTML ? D.html(e) : D.text(e)) : (e !== m.get.placeholderText() && A.removeClass(g.placeholder), m.debug("Changing text", e, A), A.removeClass(g.filtered), h.preserveHTML ? A.html(e) : A.text(e))) }, selectedItem: function (e) { var t = m.get.choiceValue(e), n = m.get.choiceText(e, !1), i = m.get.choiceText(e, !0); m.debug("Setting user selection to item", e), m.remove.activeItem(), m.set.partialSearch(n), m.set.activeItem(e), m.set.selected(t, e), m.set.text(i) }, selectedLetter: function (e) { var t, n = R.filter("." + g.selected), i = 0 < n.length && m.has.firstLetter(n, e), a = !1; i && (t = n.nextAll(R).eq(0), m.has.firstLetter(t, e) && (a = t)), a || R.each(function () { if (m.has.firstLetter(X(this), e)) return a = X(this), !1 }), a && (m.verbose("Scrolling to next value with letter", e), m.set.scrollPosition(a), n.removeClass(g.selected), a.addClass(g.selected), h.selectOnKeydown && m.is.single() && m.set.selectedItem(a)) }, direction: function (e) { "auto" == h.direction ? (m.remove.upward(), m.can.openDownward(e) ? m.remove.upward(e) : m.set.upward(e), m.is.leftward(e) || m.can.openRightward(e) || m.set.leftward(e)) : "upward" == h.direction && m.set.upward(e) }, upward: function (e) { (e || S).addClass(g.upward) }, leftward: function (e) { (e || q).addClass(g.leftward) }, value: function (e, t, n) { var i = m.escape.value(e), a = 0 < L.length, o = m.get.values(), s = e !== J ? String(e) : e; if (a) { if (!h.allowReselection && s == o && (m.verbose("Skipping value update already same value", e, o), !m.is.initialLoad())) return; m.is.single() && m.has.selectInput() && m.can.extendSelect() && (m.debug("Adding user option", e), m.add.optionValue(e)), m.debug("Updating input value", i, o), E = !0, L.val(i), !1 === h.fireOnInit && m.is.initialLoad() ? m.debug("Input native change event ignored on initial load") : m.trigger.change(), E = !1 } else m.verbose("Storing value in metadata", i, L), i !== o && S.data(b.value, s); m.is.single() && h.clearable && (i ? m.set.clearable() : m.remove.clearable()), !1 === h.fireOnInit && m.is.initialLoad() ? m.verbose("No callback on initial load", h.onChange) : h.onChange.call(M, e, t, n) }, active: function () { S.addClass(g.active) }, multiple: function () { S.addClass(g.multiple) }, visible: function () { S.addClass(g.visible) }, exactly: function (e, t) { m.debug("Setting selected to exact values"), m.clear(), m.set.selected(e, t) }, selected: function (e, r) { var l = m.is.multiple(); (r = h.allowAdditions ? r || m.get.itemWithAdditions(e) : r || m.get.item(e)) && (m.debug("Setting selected menu item to", r), m.is.multiple() && m.remove.searchWidth(), m.is.single() ? (m.remove.activeItem(), m.remove.selectedItem()) : h.useLabels && m.remove.selectedItem(), r.each(function () { var e = X(this), t = m.get.choiceText(e), n = m.get.choiceValue(e, t), i = e.hasClass(g.filtered), a = e.hasClass(g.active), o = e.hasClass(g.addition), s = l && 1 == r.length; l ? !a || o ? (h.apiSettings && h.saveRemoteData && m.save.remoteData(t, n), h.useLabels ? (m.add.label(n, t, s), m.add.value(n, t, e), m.set.activeItem(e), m.filterActive(), m.select.nextAvailable(r)) : (m.add.value(n, t, e), m.set.text(m.add.variables(c.count)), m.set.activeItem(e))) : i || (m.debug("Selected active value, removing label"), m.remove.selected(n)) : (h.apiSettings && h.saveRemoteData && m.save.remoteData(t, n), m.set.text(t), m.set.value(n, t, e), e.addClass(g.active).addClass(g.selected)) })) }, clearable: function () { I.addClass(g.clear) } }, add: { label: function (e, t, n) { var i, a = m.is.searchSelection() ? T : A, o = m.escape.value(e); h.ignoreCase && (o = o.toLowerCase()), i = X("<a />").addClass(g.label).attr("data-" + b.value, o).html(f.label(o, t)), i = h.onLabelCreate.call(i, o, t), m.has.label(e) ? m.debug("User selection already exists, skipping", o) : (h.label.variation && i.addClass(h.label.variation), !0 === n ? (m.debug("Animating in label", i), i.addClass(g.hidden).insertBefore(a).transition(h.label.transition, h.label.duration)) : (m.debug("Adding selection label", i), i.insertBefore(a))) }, message: function (e) { var t = q.children(w.message), n = h.templates.message(m.add.variables(e)); 0 < t.length ? t.html(n) : t = X("<div/>").html(n).addClass(g.message).appendTo(q) }, optionValue: function (e) { var t = m.escape.value(e); 0 < L.find('option[value="' + m.escape.string(t) + '"]').length || (m.disconnect.selectObserver(), m.is.single() && (m.verbose("Removing previous user addition"), L.find("option." + g.addition).remove()), X("<option/>").prop("value", t).addClass(g.addition).html(e).appendTo(L), m.verbose("Adding user addition as an <option>", e), m.observe.select()) }, userSuggestion: function (e) { var t, n = q.children(w.addition), i = m.get.item(e), a = i && i.not(w.addition).length, o = 0 < n.length; h.useLabels && m.has.maxSelections() || ("" === e || a ? n.remove() : (o ? (n.data(b.value, e).data(b.text, e).attr("data-" + b.value, e).attr("data-" + b.text, e).removeClass(g.filtered), h.hideAdditions || (t = h.templates.addition(m.add.variables(c.addResult, e)), n.html(t)), m.verbose("Replacing user suggestion with new value", n)) : ((n = m.create.userChoice(e)).prependTo(q), m.verbose("Adding item choice to menu corresponding with user choice addition", n)), h.hideAdditions && !m.is.allFiltered() || n.addClass(g.selected).siblings().removeClass(g.selected), m.refreshItems())) }, variables: function (e, t) { var n, i, a = -1 !== e.search("{count}"), o = -1 !== e.search("{maxCount}"), s = -1 !== e.search("{term}"); return m.verbose("Adding templated variables to message", e), a && (n = m.get.selectionCount(), e = e.replace("{count}", n)), o && (n = m.get.selectionCount(), e = e.replace("{maxCount}", h.maxSelections)), s && (i = t || m.get.query(), e = e.replace("{term}", i)), e }, value: function (e, t, n) { var i, a = m.get.values(); m.has.value(e) ? m.debug("Value already selected") : "" !== e ? (i = X.isArray(a) ? (i = a.concat([e]), m.get.uniqueArray(i)) : [e], m.has.selectInput() ? m.can.extendSelect() && (m.debug("Adding value to select", e, i, L), m.add.optionValue(e)) : (i = i.join(h.delimiter), m.debug("Setting hidden input to delimited value", i, L)), !1 === h.fireOnInit && m.is.initialLoad() ? m.verbose("Skipping onadd callback on initial load", h.onAdd) : h.onAdd.call(M, e, t, n), m.set.value(i, e, t, n), m.check.maxSelections()) : m.debug("Cannot select blank values from multiselect") } }, remove: { active: function () { S.removeClass(g.active) }, activeLabel: function () { S.find(w.label).removeClass(g.active) }, empty: function () { S.removeClass(g.empty) }, loading: function () { S.removeClass(g.loading) }, initialLoad: function () { e = !1 }, upward: function (e) { (e || S).removeClass(g.upward) }, leftward: function (e) { (e || q).removeClass(g.leftward) }, visible: function () { S.removeClass(g.visible) }, activeItem: function () { R.removeClass(g.active) }, filteredItem: function () { h.useLabels && m.has.maxSelections() || (h.useLabels && m.is.multiple() ? R.not("." + g.active).removeClass(g.filtered) : R.removeClass(g.filtered), m.remove.empty()) }, optionValue: function (e) { var t = m.escape.value(e), n = L.find('option[value="' + m.escape.string(t) + '"]'); 0 < n.length && n.hasClass(g.addition) && (s && (s.disconnect(), m.verbose("Temporarily disconnecting mutation observer")), n.remove(), m.verbose("Removing user addition as an <option>", t), s && s.observe(L[0], { childList: !0, subtree: !0 })) }, message: function () { q.children(w.message).remove() }, searchWidth: function () { T.css("width", "") }, searchTerm: function () { m.verbose("Cleared search term"), T.val(""), m.set.filtered() }, userAddition: function () { R.filter(w.addition).remove() }, selected: function (e, t) { if (!(t = h.allowAdditions ? t || m.get.itemWithAdditions(e) : t || m.get.item(e))) return !1; t.each(function () { var e = X(this), t = m.get.choiceText(e), n = m.get.choiceValue(e, t); m.is.multiple() ? h.useLabels ? (m.remove.value(n, t, e), m.remove.label(n)) : (m.remove.value(n, t, e), 0 === m.get.selectionCount() ? m.set.placeholderText() : m.set.text(m.add.variables(c.count))) : m.remove.value(n, t, e), e.removeClass(g.filtered).removeClass(g.active), h.useLabels && e.removeClass(g.selected) }) }, selectedItem: function () { R.removeClass(g.selected) }, value: function (e, t, n) { var i, a = m.get.values(); m.has.selectInput() ? (m.verbose("Input is <select> removing selected option", e), i = m.remove.arrayValue(e, a), m.remove.optionValue(e)) : (m.verbose("Removing from delimited values", e), i = (i = m.remove.arrayValue(e, a)).join(h.delimiter)), !1 === h.fireOnInit && m.is.initialLoad() ? m.verbose("No callback on initial load", h.onRemove) : h.onRemove.call(M, e, t, n), m.set.value(i, t, n), m.check.maxSelections() }, arrayValue: function (t, e) { return X.isArray(e) || (e = [e]), e = X.grep(e, function (e) { return t != e }), m.verbose("Removed value from delimited string", t, e), e }, label: function (e, t) { var n = S.find(w.label).filter("[data-" + b.value + '="' + m.escape.string(e) + '"]'); m.verbose("Removing label", n), n.remove() }, activeLabels: function (e) { e = e || S.find(w.label).filter("." + g.active), m.verbose("Removing active label selections", e), m.remove.labels(e) }, labels: function (e) { e = e || S.find(w.label), m.verbose("Removing labels", e), e.each(function () { var e = X(this), t = e.data(b.value), n = t !== J ? String(t) : t, i = m.is.userValue(n); !1 !== h.onLabelRemove.call(e, t) ? (m.remove.message(), i ? (m.remove.value(n), m.remove.label(n)) : m.remove.selected(n)) : m.debug("Label remove callback cancelled removal") }) }, tabbable: function () { m.is.searchSelection() ? (m.debug("Searchable dropdown initialized"), T.removeAttr("tabindex")) : (m.debug("Simple selection dropdown initialized"), S.removeAttr("tabindex")), q.removeAttr("tabindex") }, clearable: function () { I.removeClass(g.clear) } }, has: { menuSearch: function () { return m.has.search() && 0 < T.closest(q).length }, search: function () { return 0 < T.length }, sizer: function () { return 0 < k.length }, selectInput: function () { return L.is("select") }, minCharacters: function (e) { return !h.minCharacters || (e = e !== J ? String(e) : String(m.get.query())).length >= h.minCharacters }, firstLetter: function (e, t) { var n; return !(!e || 0 === e.length || "string" != typeof t) && (n = m.get.choiceText(e, !1), (t = t.toLowerCase()) == String(n).charAt(0).toLowerCase()) }, input: function () { return 0 < L.length }, items: function () { return 0 < R.length }, menu: function () { return 0 < q.length }, message: function () { return 0 !== q.children(w.message).length }, label: function (e) { var t = m.escape.value(e), n = S.find(w.label); return h.ignoreCase && (t = t.toLowerCase()), 0 < n.filter("[data-" + b.value + '="' + m.escape.string(t) + '"]').length }, maxSelections: function () { return h.maxSelections && m.get.selectionCount() >= h.maxSelections }, allResultsFiltered: function () { var e = R.not(w.addition); return e.filter(w.unselectable).length === e.length }, userSuggestion: function () { return 0 < q.children(w.addition).length }, query: function () { return "" !== m.get.query() }, value: function (e) { return h.ignoreCase ? m.has.valueIgnoringCase(e) : m.has.valueMatchingCase(e) }, valueMatchingCase: function (e) { var t = m.get.values(); return !!(X.isArray(t) ? t && -1 !== X.inArray(e, t) : t == e) }, valueIgnoringCase: function (n) { var e = m.get.values(), i = !1; return X.isArray(e) || (e = [e]), X.each(e, function (e, t) { if (String(n).toLowerCase() == String(t).toLowerCase()) return !(i = !0) }), i } }, is: { active: function () { return S.hasClass(g.active) }, animatingInward: function () { return q.transition("is inward") }, animatingOutward: function () { return q.transition("is outward") }, bubbledLabelClick: function (e) { return X(e.target).is("select, input") && 0 < S.closest("label").length }, bubbledIconClick: function (e) { return 0 < X(e.target).closest(I).length }, alreadySetup: function () { return S.is("select") && S.parent(w.dropdown).data(C) !== J && 0 === S.prev().length }, animating: function (e) { return e ? e.transition && e.transition("is animating") : q.transition && q.transition("is animating") }, leftward: function (e) { return (e || q).hasClass(g.leftward) }, disabled: function () { return S.hasClass(g.disabled) }, focused: function () { return G.activeElement === S[0] }, focusedOnSearch: function () { return G.activeElement === T[0] }, allFiltered: function () { return (m.is.multiple() || m.has.search()) && !(0 == h.hideAdditions && m.has.userSuggestion()) && !m.has.message() && m.has.allResultsFiltered() }, hidden: function (e) { return !m.is.visible(e) }, initialLoad: function () { return e }, inObject: function (n, e) { var i = !1; return X.each(e, function (e, t) { if (t == n) return i = !0 }), i }, multiple: function () { return S.hasClass(g.multiple) }, remote: function () { return h.apiSettings && m.can.useAPI() }, single: function () { return !m.is.multiple() }, selectMutation: function (e) { var n = !1; return X.each(e, function (e, t) { if (t.target && X(t.target).is("select")) return n = !0 }), n }, search: function () { return S.hasClass(g.search) }, searchSelection: function () { return m.has.search() && 1 === T.parent(w.dropdown).length }, selection: function () { return S.hasClass(g.selection) }, userValue: function (e) { return -1 !== X.inArray(e, m.get.userValues()) }, upward: function (e) { return (e || S).hasClass(g.upward) }, visible: function (e) { return e ? e.hasClass(g.visible) : q.hasClass(g.visible) }, verticallyScrollableContext: function () { var e = y.get(0) !== Y && y.css("overflow-y"); return "auto" == e || "scroll" == e }, horizontallyScrollableContext: function () { var e = y.get(0) !== Y && y.css("overflow-X"); return "auto" == e || "scroll" == e } }, can: { activate: function (e) { return !!h.useLabels || (!m.has.maxSelections() || !(!m.has.maxSelections() || !e.hasClass(g.active))) }, openDownward: function (e) { var t, n, i = e || q, a = !0; return i.addClass(g.loading), n = { context: { offset: y.get(0) === Y ? { top: 0, left: 0 } : y.offset(), scrollTop: y.scrollTop(), height: y.outerHeight() }, menu: { offset: i.offset(), height: i.outerHeight() } }, m.is.verticallyScrollableContext() && (n.menu.offset.top += n.context.scrollTop), a = (t = { above: n.context.scrollTop <= n.menu.offset.top - n.context.offset.top - n.menu.height, below: n.context.scrollTop + n.context.height >= n.menu.offset.top - n.context.offset.top + n.menu.height }).below ? (m.verbose("Dropdown can fit in context downward", t), !0) : t.below || t.above ? (m.verbose("Dropdown cannot fit below, opening upward", t), !1) : (m.verbose("Dropdown cannot fit in either direction, favoring downward", t), !0), i.removeClass(g.loading), a }, openRightward: function (e) { var t, n, i = e || q, a = !0; return i.addClass(g.loading), n = { context: { offset: y.get(0) === Y ? { top: 0, left: 0 } : y.offset(), scrollLeft: y.scrollLeft(), width: y.outerWidth() }, menu: { offset: i.offset(), width: i.outerWidth() } }, m.is.horizontallyScrollableContext() && (n.menu.offset.left += n.context.scrollLeft), (t = n.menu.offset.left - n.context.offset.left + n.menu.width >= n.context.scrollLeft + n.context.width) && (m.verbose("Dropdown cannot fit in context rightward", t), a = !1), i.removeClass(g.loading), a }, click: function () { return U || "click" == h.on }, extendSelect: function () { return h.allowAdditions || h.apiSettings }, show: function () { return !m.is.disabled() && (m.has.items() || m.has.message()) }, useAPI: function () { return X.fn.api !== J } }, animate: { show: function (e, t) { var n, i = t || q, a = t ? function () { } : function () { m.hideSubMenus(), m.hideOthers(), m.set.active() }; e = X.isFunction(e) ? e : function () { }, m.verbose("Doing menu show animation", i), m.set.direction(t), n = m.get.transition(t), m.is.selection() && m.set.scrollPosition(m.get.selectedItem(), !0), (m.is.hidden(i) || m.is.animating(i)) && ("none" == n ? (a(), i.transition("show"), e.call(M)) : X.fn.transition !== J && S.transition("is supported") ? i.transition({ animation: n + " in", debug: h.debug, verbose: h.verbose, duration: h.duration, queue: !0, onStart: a, onComplete: function () { e.call(M) } }) : m.error(v.noTransition, n)) }, hide: function (e, t) { var n = t || q, i = (t ? h.duration : h.duration, t ? function () { } : function () { m.can.click() && m.unbind.intent(), m.remove.active() }), a = m.get.transition(t); e = X.isFunction(e) ? e : function () { }, (m.is.visible(n) || m.is.animating(n)) && (m.verbose("Doing menu hide animation", n), "none" == a ? (i(), n.transition("hide"), e.call(M)) : X.fn.transition !== J && S.transition("is supported") ? n.transition({ animation: a + " out", duration: h.duration, debug: h.debug, verbose: h.verbose, queue: !1, onStart: i, onComplete: function () { e.call(M) } }) : m.error(v.transition)) } }, hideAndClear: function () { m.remove.searchTerm(), m.has.maxSelections() || (m.has.search() ? m.hide(function () { m.remove.filteredItem() }) : m.hide()) }, delay: { show: function () { m.verbose("Delaying show event to ensure user intent"), clearTimeout(m.timer), m.timer = setTimeout(m.show, h.delay.show) }, hide: function () { m.verbose("Delaying hide event to ensure user intent"), clearTimeout(m.timer), m.timer = setTimeout(m.hide, h.delay.hide) } }, escape: { value: function (e) { var t = X.isArray(e), n = "string" == typeof e, i = !n && !t, a = n && -1 !== e.search(d.quote), o = []; return i || !a ? e : (m.debug("Encoding quote values for use in select", e), t ? (X.each(e, function (e, t) { o.push(t.replace(d.quote, "&quot;")) }), o) : e.replace(d.quote, "&quot;")) }, string: function (e) { return (e = String(e)).replace(d.escape, "\\$&") } }, setting: function (e, t) { if (m.debug("Changing setting", e, t), X.isPlainObject(e)) X.extend(!0, h, e); else { if (t === J) return h[e]; X.isPlainObject(h[e]) ? X.extend(!0, h[e], t) : h[e] = t } }, internal: function (e, t) { if (X.isPlainObject(e)) X.extend(!0, m, e); else { if (t === J) return m[e]; m[e] = t } }, debug: function () { !h.silent && h.debug && (h.performance ? m.performance.log(arguments) : (m.debug = Function.prototype.bind.call(console.info, console, h.name + ":"), m.debug.apply(console, arguments))) }, verbose: function () { !h.silent && h.verbose && h.debug && (h.performance ? m.performance.log(arguments) : (m.verbose = Function.prototype.bind.call(console.info, console, h.name + ":"), m.verbose.apply(console, arguments))) }, error: function () { h.silent || (m.error = Function.prototype.bind.call(console.error, console, h.name + ":"), m.error.apply(console, arguments)) }, performance: { log: function (e) { var t, n; h.performance && (n = (t = (new Date).getTime()) - (K || t), K = t, W.push({ Name: e[0], Arguments: [].slice.call(e, 1) || "", Element: M, "Execution Time": n })), clearTimeout(m.performance.timer), m.performance.timer = setTimeout(m.performance.display, 500) }, display: function () { var e = h.name + ":", n = 0; K = !1, clearTimeout(m.performance.timer), X.each(W, function (e, t) { n += t["Execution Time"] }), e += " " + n + "ms", N && (e += " '" + N + "'"), (console.group !== J || console.table !== J) && 0 < W.length && (console.groupCollapsed(e), console.table ? console.table(W) : X.each(W, function (e, t) { console.log(t.Name + ": " + t["Execution Time"] + "ms") }), console.groupEnd()), W = [] } }, invoke: function (i, e, t) { var a, o, n, s = F; return e = e || Q, t = M || t, "string" == typeof i && s !== J && (i = i.split(/[\. ]/), a = i.length - 1, X.each(i, function (e, t) { var n = e != a ? t + i[e + 1].charAt(0).toUpperCase() + i[e + 1].slice(1) : i; if (X.isPlainObject(s[n]) && e != a) s = s[n]; else { if (s[n] !== J) return o = s[n], !1; if (!X.isPlainObject(s[t]) || e == a) return s[t] !== J ? o = s[t] : m.error(v.method, i), !1; s = s[t] } })), X.isFunction(o) ? n = o.apply(t, e) : o !== J && (n = o), X.isArray(P) ? P.push(n) : P !== J ? P = [P, n] : n !== J && (P = n), o } }, $ ? (F === J && m.initialize(), m.invoke(B)) : (F !== J && F.invoke("destroy"), m.initialize()) }), P !== J ? P : H }, X.fn.dropdown.settings = { silent: !1, debug: !1, verbose: !1, performance: !0, on: "click", action: "activate", values: !1, clearable: !1, apiSettings: !1, selectOnKeydown: !0, minCharacters: 0, filterRemoteData: !1, saveRemoteData: !0, throttle: 200, context: Y, direction: "auto", keepOnScreen: !0, match: "both", fullTextSearch: !1, placeholder: "auto", preserveHTML: !0, sortSelect: !1, forceSelection: !0, allowAdditions: !1, ignoreCase: !1, hideAdditions: !0, maxSelections: !1, useLabels: !0, delimiter: ",", showOnFocus: !0, allowReselection: !1, allowTab: !0, allowCategorySelection: !1, fireOnInit: !1, transition: "auto", duration: 200, glyphWidth: 1.037, label: { transition: "scale", duration: 200, variation: !1 }, delay: { hide: 300, show: 200, search: 20, touch: 50 }, onChange: function (e, t, n) { }, onAdd: function (e, t, n) { }, onRemove: function (e, t, n) { }, onLabelSelect: function (e) { }, onLabelCreate: function (e, t) { return X(this) }, onLabelRemove: function (e) { return !0 }, onNoResults: function (e) { return !0 }, onShow: function () { }, onHide: function () { }, name: "Dropdown", namespace: "dropdown", message: { addResult: "Add <b>{term}</b>", count: "{count} selected", maxSelections: "Max {maxCount} selections", noResults: "No results found.", serverError: "There was an error contacting the server" }, error: { action: "You called a dropdown action that was not defined", alreadySetup: "Once a select has been initialized behaviors must be called on the created ui dropdown", labels: "Allowing user additions currently requires the use of labels.", missingMultiple: "<select> requires multiple property to be set to correctly preserve multiple values", method: "The method you called is not defined.", noAPI: "The API module is required to load resources remotely", noStorage: "Saving remote data requires session storage", noTransition: "This module requires ui transitions <https://github.com/Semantic-Org/UI-Transition>" }, regExp: { escape: /[-[\]{}()*+?.,\\^$|#\s]/g, quote: /"/g }, metadata: { defaultText: "defaultText", defaultValue: "defaultValue", placeholderText: "placeholder", text: "text", value: "value" }, fields: { remoteValues: "results", values: "values", disabled: "disabled", name: "name", value: "value", text: "text" }, keys: { backspace: 8, delimiter: 188, deleteKey: 46, enter: 13, escape: 27, pageUp: 33, pageDown: 34, leftArrow: 37, upArrow: 38, rightArrow: 39, downArrow: 40 }, selector: { addition: ".addition", dropdown: ".ui.dropdown", hidden: ".hidden", icon: "> .dropdown.icon", input: '> input[type="hidden"], > select', item: ".item", label: "> .label", remove: "> .label > .delete.icon", siblingLabel: ".label", menu: ".menu", message: ".message", menuIcon: ".dropdown.icon", search: "input.search, .menu > .search > input, .menu input.search", sizer: "> input.sizer", text: "> .text:not(.icon)", unselectable: ".disabled, .filtered" }, className: { active: "active", addition: "addition", animating: "animating", clear: "clear", disabled: "disabled", empty: "empty", dropdown: "ui dropdown", filtered: "filtered", hidden: "hidden transition", item: "item", label: "ui label", loading: "loading", menu: "menu", message: "message", multiple: "multiple", placeholder: "default", sizer: "sizer", search: "search", selected: "selected", selection: "selection", upward: "upward", leftward: "left", visible: "visible" } }, X.fn.dropdown.settings.templates = { dropdown: function (e) { var t = e.placeholder || !1, n = (e.values, ""); return n += '<i class="dropdown icon"></i>', e.placeholder ? n += '<div class="default text">' + t + "</div>" : n += '<div class="text"></div>', n += '<div class="menu">', X.each(e.values, function (e, t) { n += t.disabled ? '<div class="disabled item" data-value="' + t.value + '">' + t.name + "</div>" : '<div class="item" data-value="' + t.value + '">' + t.name + "</div>" }), n += "</div>" }, menu: function (e, a) { var t = e[a.values] || {}, o = ""; return X.each(t, function (e, t) { var n = t[a.text] ? 'data-text="' + t[a.text] + '"' : "", i = t[a.disabled] ? "disabled " : ""; o += '<div class="' + i + 'item" data-value="' + t[a.value] + '"' + n + ">", o += t[a.name], o += "</div>" }), o }, label: function (e, t) { return t + '<i class="delete icon"></i>' }, message: function (e) { return e }, addition: function (e) { return e } } }(jQuery, window, document);

//jquery ui js
/*! jQuery UI - v1.10.4 - 2014-01-17
* http://jqueryui.com
* Includes: jquery.ui.core.js, jquery.ui.widget.js, jquery.ui.mouse.js, jquery.ui.position.js, jquery.ui.accordion.js, jquery.ui.autocomplete.js, jquery.ui.button.js, jquery.ui.datepicker.js, jquery.ui.dialog.js, jquery.ui.draggable.js, jquery.ui.droppable.js, jquery.ui.effect.js, jquery.ui.effect-blind.js, jquery.ui.effect-bounce.js, jquery.ui.effect-clip.js, jquery.ui.effect-drop.js, jquery.ui.effect-explode.js, jquery.ui.effect-fade.js, jquery.ui.effect-fold.js, jquery.ui.effect-highlight.js, jquery.ui.effect-pulsate.js, jquery.ui.effect-scale.js, jquery.ui.effect-shake.js, jquery.ui.effect-slide.js, jquery.ui.effect-transfer.js, jquery.ui.menu.js, jquery.ui.progressbar.js, jquery.ui.resizable.js, jquery.ui.selectable.js, jquery.ui.slider.js, jquery.ui.sortable.js, jquery.ui.spinner.js, jquery.ui.tabs.js, jquery.ui.tooltip.js
* Copyright 2014 jQuery Foundation and other contributors; Licensed MIT */

(function ($, undefined) {

    var uuid = 0,
        runiqueId = /^ui-id-\d+$/;

    // $.ui might exist from components with no dependencies, e.g., $.ui.position
    $.ui = $.ui || {};

    $.extend($.ui, {
        version: "1.10.4",

        keyCode: {
            BACKSPACE: 8,
            COMMA: 188,
            DELETE: 46,
            DOWN: 40,
            END: 35,
            ENTER: 13,
            ESCAPE: 27,
            HOME: 36,
            LEFT: 37,
            NUMPAD_ADD: 107,
            NUMPAD_DECIMAL: 110,
            NUMPAD_DIVIDE: 111,
            NUMPAD_ENTER: 108,
            NUMPAD_MULTIPLY: 106,
            NUMPAD_SUBTRACT: 109,
            PAGE_DOWN: 34,
            PAGE_UP: 33,
            PERIOD: 190,
            RIGHT: 39,
            SPACE: 32,
            TAB: 9,
            UP: 38
        }
    });

    // plugins
    $.fn.extend({
        focus: (function (orig) {
            return function (delay, fn) {
                return typeof delay === "number" ?
                    this.each(function () {
                        var elem = this;
                        setTimeout(function () {
                            $(elem).focus();
                            if (fn) {
                                fn.call(elem);
                            }
                        }, delay);
                    }) :
                    orig.apply(this, arguments);
            };
        })($.fn.focus),

        scrollParent: function () {
            var scrollParent;
            if (($.ui.ie && (/(static|relative)/).test(this.css("position"))) || (/absolute/).test(this.css("position"))) {
                scrollParent = this.parents().filter(function () {
                    return (/(relative|absolute|fixed)/).test($.css(this, "position")) && (/(auto|scroll)/).test($.css(this, "overflow") + $.css(this, "overflow-y") + $.css(this, "overflow-x"));
                }).eq(0);
            } else {
                scrollParent = this.parents().filter(function () {
                    return (/(auto|scroll)/).test($.css(this, "overflow") + $.css(this, "overflow-y") + $.css(this, "overflow-x"));
                }).eq(0);
            }

            return (/fixed/).test(this.css("position")) || !scrollParent.length ? $(document) : scrollParent;
        },

        zIndex: function (zIndex) {
            if (zIndex !== undefined) {
                return this.css("zIndex", zIndex);
            }

            if (this.length) {
                var elem = $(this[0]), position, value;
                while (elem.length && elem[0] !== document) {
                    // Ignore z-index if position is set to a value where z-index is ignored by the browser
                    // This makes behavior of this function consistent across browsers
                    // WebKit always returns auto if the element is positioned
                    position = elem.css("position");
                    if (position === "absolute" || position === "relative" || position === "fixed") {
                        // IE returns 0 when zIndex is not specified
                        // other browsers return a string
                        // we ignore the case of nested elements with an explicit value of 0
                        // <div style="z-index: -10;"><div style="z-index: 0;"></div></div>
                        value = parseInt(elem.css("zIndex"), 10);
                        if (!isNaN(value) && value !== 0) {
                            return value;
                        }
                    }
                    elem = elem.parent();
                }
            }

            return 0;
        },

        uniqueId: function () {
            return this.each(function () {
                if (!this.id) {
                    this.id = "ui-id-" + (++uuid);
                }
            });
        },

        removeUniqueId: function () {
            return this.each(function () {
                if (runiqueId.test(this.id)) {
                    $(this).removeAttr("id");
                }
            });
        }
    });

    // selectors
    function focusable(element, isTabIndexNotNaN) {
        var map, mapName, img,
            nodeName = element.nodeName.toLowerCase();
        if ("area" === nodeName) {
            map = element.parentNode;
            mapName = map.name;
            if (!element.href || !mapName || map.nodeName.toLowerCase() !== "map") {
                return false;
            }
            img = $("img[usemap=#" + mapName + "]")[0];
            return !!img && visible(img);
        }
        return (/input|select|textarea|button|object/.test(nodeName) ?
            !element.disabled :
            "a" === nodeName ?
                element.href || isTabIndexNotNaN :
                isTabIndexNotNaN) &&
            // the element and all of its ancestors must be visible
            visible(element);
    }

    function visible(element) {
        return $.expr.filters.visible(element) &&
            !$(element).parents().addBack().filter(function () {
                return $.css(this, "visibility") === "hidden";
            }).length;
    }

    $.extend($.expr[":"], {
        data: $.expr.createPseudo ?
            $.expr.createPseudo(function (dataName) {
                return function (elem) {
                    return !!$.data(elem, dataName);
                };
            }) :
            // support: jQuery <1.8
            function (elem, i, match) {
                return !!$.data(elem, match[3]);
            },

        focusable: function (element) {
            return focusable(element, !isNaN($.attr(element, "tabindex")));
        },

        tabbable: function (element) {
            var tabIndex = $.attr(element, "tabindex"),
                isTabIndexNaN = isNaN(tabIndex);
            return (isTabIndexNaN || tabIndex >= 0) && focusable(element, !isTabIndexNaN);
        }
    });

    // support: jQuery <1.8
    if (!$("<a>").outerWidth(1).jquery) {
        $.each(["Width", "Height"], function (i, name) {
            var side = name === "Width" ? ["Left", "Right"] : ["Top", "Bottom"],
                type = name.toLowerCase(),
                orig = {
                    innerWidth: $.fn.innerWidth,
                    innerHeight: $.fn.innerHeight,
                    outerWidth: $.fn.outerWidth,
                    outerHeight: $.fn.outerHeight
                };

            function reduce(elem, size, border, margin) {
                $.each(side, function () {
                    size -= parseFloat($.css(elem, "padding" + this)) || 0;
                    if (border) {
                        size -= parseFloat($.css(elem, "border" + this + "Width")) || 0;
                    }
                    if (margin) {
                        size -= parseFloat($.css(elem, "margin" + this)) || 0;
                    }
                });
                return size;
            }

            $.fn["inner" + name] = function (size) {
                if (size === undefined) {
                    return orig["inner" + name].call(this);
                }

                return this.each(function () {
                    $(this).css(type, reduce(this, size) + "px");
                });
            };

            $.fn["outer" + name] = function (size, margin) {
                if (typeof size !== "number") {
                    return orig["outer" + name].call(this, size);
                }

                return this.each(function () {
                    $(this).css(type, reduce(this, size, true, margin) + "px");
                });
            };
        });
    }

    // support: jQuery <1.8
    if (!$.fn.addBack) {
        $.fn.addBack = function (selector) {
            return this.add(selector == null ?
                this.prevObject : this.prevObject.filter(selector)
            );
        };
    }

    // support: jQuery 1.6.1, 1.6.2 (http://bugs.jquery.com/ticket/9413)
    if ($("<a>").data("a-b", "a").removeData("a-b").data("a-b")) {
        $.fn.removeData = (function (removeData) {
            return function (key) {
                if (arguments.length) {
                    return removeData.call(this, $.camelCase(key));
                } else {
                    return removeData.call(this);
                }
            };
        })($.fn.removeData);
    }





    // deprecated
    $.ui.ie = !!/msie [\w.]+/.exec(navigator.userAgent.toLowerCase());

    $.support.selectstart = "onselectstart" in document.createElement("div");
    $.fn.extend({
        disableSelection: function () {
            return this.bind(($.support.selectstart ? "selectstart" : "mousedown") +
                ".ui-disableSelection", function (event) {
                    event.preventDefault();
                });
        },

        enableSelection: function () {
            return this.unbind(".ui-disableSelection");
        }
    });

    $.extend($.ui, {
        // $.ui.plugin is deprecated. Use $.widget() extensions instead.
        plugin: {
            add: function (module, option, set) {
                var i,
                    proto = $.ui[module].prototype;
                for (i in set) {
                    proto.plugins[i] = proto.plugins[i] || [];
                    proto.plugins[i].push([option, set[i]]);
                }
            },
            call: function (instance, name, args) {
                var i,
                    set = instance.plugins[name];
                if (!set || !instance.element[0].parentNode || instance.element[0].parentNode.nodeType === 11) {
                    return;
                }

                for (i = 0; i < set.length; i++) {
                    if (instance.options[set[i][0]]) {
                        set[i][1].apply(instance.element, args);
                    }
                }
            }
        },

        // only used by resizable
        hasScroll: function (el, a) {

            //If overflow is hidden, the element might have extra content, but the user wants to hide it
            if ($(el).css("overflow") === "hidden") {
                return false;
            }

            var scroll = (a && a === "left") ? "scrollLeft" : "scrollTop",
                has = false;

            if (el[scroll] > 0) {
                return true;
            }

            // TODO: determine which cases actually cause this to happen
            // if the element doesn't have the scroll set, see if it's possible to
            // set the scroll
            el[scroll] = 1;
            has = (el[scroll] > 0);
            el[scroll] = 0;
            return has;
        }
    });

})(jQuery);
(function ($, undefined) {

    var uuid = 0,
        slice = Array.prototype.slice,
        _cleanData = $.cleanData;
    $.cleanData = function (elems) {
        for (var i = 0, elem; (elem = elems[i]) != null; i++) {
            try {
                $(elem).triggerHandler("remove");
                // http://bugs.jquery.com/ticket/8235
            } catch (e) { }
        }
        _cleanData(elems);
    };

    $.widget = function (name, base, prototype) {
        var fullName, existingConstructor, constructor, basePrototype,
            // proxiedPrototype allows the provided prototype to remain unmodified
            // so that it can be used as a mixin for multiple widgets (#8876)
            proxiedPrototype = {},
            namespace = name.split(".")[0];

        name = name.split(".")[1];
        fullName = namespace + "-" + name;

        if (!prototype) {
            prototype = base;
            base = $.Widget;
        }

        // create selector for plugin
        $.expr[":"][fullName.toLowerCase()] = function (elem) {
            return !!$.data(elem, fullName);
        };

        $[namespace] = $[namespace] || {};
        existingConstructor = $[namespace][name];
        constructor = $[namespace][name] = function (options, element) {
            // allow instantiation without "new" keyword
            if (!this._createWidget) {
                return new constructor(options, element);
            }

            // allow instantiation without initializing for simple inheritance
            // must use "new" keyword (the code above always passes args)
            if (arguments.length) {
                this._createWidget(options, element);
            }
        };
        // extend with the existing constructor to carry over any static properties
        $.extend(constructor, existingConstructor, {
            version: prototype.version,
            // copy the object used to create the prototype in case we need to
            // redefine the widget later
            _proto: $.extend({}, prototype),
            // track widgets that inherit from this widget in case this widget is
            // redefined after a widget inherits from it
            _childConstructors: []
        });

        basePrototype = new base();
        // we need to make the options hash a property directly on the new instance
        // otherwise we'll modify the options hash on the prototype that we're
        // inheriting from
        basePrototype.options = $.widget.extend({}, basePrototype.options);
        $.each(prototype, function (prop, value) {
            if (!$.isFunction(value)) {
                proxiedPrototype[prop] = value;
                return;
            }
            proxiedPrototype[prop] = (function () {
                var _super = function () {
                    return base.prototype[prop].apply(this, arguments);
                },
                    _superApply = function (args) {
                        return base.prototype[prop].apply(this, args);
                    };
                return function () {
                    var __super = this._super,
                        __superApply = this._superApply,
                        returnValue;

                    this._super = _super;
                    this._superApply = _superApply;

                    returnValue = value.apply(this, arguments);

                    this._super = __super;
                    this._superApply = __superApply;

                    return returnValue;
                };
            })();
        });
        constructor.prototype = $.widget.extend(basePrototype, {
            // TODO: remove support for widgetEventPrefix
            // always use the name + a colon as the prefix, e.g., draggable:start
            // don't prefix for widgets that aren't DOM-based
            widgetEventPrefix: existingConstructor ? (basePrototype.widgetEventPrefix || name) : name
        }, proxiedPrototype, {
                constructor: constructor,
                namespace: namespace,
                widgetName: name,
                widgetFullName: fullName
            });

        // If this widget is being redefined then we need to find all widgets that
        // are inheriting from it and redefine all of them so that they inherit from
        // the new version of this widget. We're essentially trying to replace one
        // level in the prototype chain.
        if (existingConstructor) {
            $.each(existingConstructor._childConstructors, function (i, child) {
                var childPrototype = child.prototype;

                // redefine the child widget using the same prototype that was
                // originally used, but inherit from the new version of the base
                $.widget(childPrototype.namespace + "." + childPrototype.widgetName, constructor, child._proto);
            });
            // remove the list of existing child constructors from the old constructor
            // so the old child constructors can be garbage collected
            delete existingConstructor._childConstructors;
        } else {
            base._childConstructors.push(constructor);
        }

        $.widget.bridge(name, constructor);
    };

    $.widget.extend = function (target) {
        var input = slice.call(arguments, 1),
            inputIndex = 0,
            inputLength = input.length,
            key,
            value;
        for (; inputIndex < inputLength; inputIndex++) {
            for (key in input[inputIndex]) {
                value = input[inputIndex][key];
                if (input[inputIndex].hasOwnProperty(key) && value !== undefined) {
                    // Clone objects
                    if ($.isPlainObject(value)) {
                        target[key] = $.isPlainObject(target[key]) ?
                            $.widget.extend({}, target[key], value) :
                            // Don't extend strings, arrays, etc. with objects
                            $.widget.extend({}, value);
                        // Copy everything else by reference
                    } else {
                        target[key] = value;
                    }
                }
            }
        }
        return target;
    };

    $.widget.bridge = function (name, object) {
        var fullName = object.prototype.widgetFullName || name;
        $.fn[name] = function (options) {
            var isMethodCall = typeof options === "string",
                args = slice.call(arguments, 1),
                returnValue = this;

            // allow multiple hashes to be passed on init
            options = !isMethodCall && args.length ?
                $.widget.extend.apply(null, [options].concat(args)) :
                options;

            if (isMethodCall) {
                this.each(function () {
                    var methodValue,
                        instance = $.data(this, fullName);
                    if (!instance) {
                        return $.error("cannot call methods on " + name + " prior to initialization; " +
                            "attempted to call method '" + options + "'");
                    }
                    if (!$.isFunction(instance[options]) || options.charAt(0) === "_") {
                        return $.error("no such method '" + options + "' for " + name + " widget instance");
                    }
                    methodValue = instance[options].apply(instance, args);
                    if (methodValue !== instance && methodValue !== undefined) {
                        returnValue = methodValue && methodValue.jquery ?
                            returnValue.pushStack(methodValue.get()) :
                            methodValue;
                        return false;
                    }
                });
            } else {
                this.each(function () {
                    var instance = $.data(this, fullName);
                    if (instance) {
                        instance.option(options || {})._init();
                    } else {
                        $.data(this, fullName, new object(options, this));
                    }
                });
            }

            return returnValue;
        };
    };

    $.Widget = function ( /* options, element */) { };
    $.Widget._childConstructors = [];

    $.Widget.prototype = {
        widgetName: "widget",
        widgetEventPrefix: "",
        defaultElement: "<div>",
        options: {
            disabled: false,

            // callbacks
            create: null
        },
        _createWidget: function (options, element) {
            element = $(element || this.defaultElement || this)[0];
            this.element = $(element);
            this.uuid = uuid++;
            this.eventNamespace = "." + this.widgetName + this.uuid;
            this.options = $.widget.extend({},
                this.options,
                this._getCreateOptions(),
                options);

            this.bindings = $();
            this.hoverable = $();
            this.focusable = $();

            if (element !== this) {
                $.data(element, this.widgetFullName, this);
                this._on(true, this.element, {
                    remove: function (event) {
                        if (event.target === element) {
                            this.destroy();
                        }
                    }
                });
                this.document = $(element.style ?
                    // element within the document
                    element.ownerDocument :
                    // element is window or document
                    element.document || element);
                this.window = $(this.document[0].defaultView || this.document[0].parentWindow);
            }

            this._create();
            this._trigger("create", null, this._getCreateEventData());
            this._init();
        },
        _getCreateOptions: $.noop,
        _getCreateEventData: $.noop,
        _create: $.noop,
        _init: $.noop,

        destroy: function () {
            this._destroy();
            // we can probably remove the unbind calls in 2.0
            // all event bindings should go through this._on()
            this.element
                .unbind(this.eventNamespace)
                // 1.9 BC for #7810
                // TODO remove dual storage
                .removeData(this.widgetName)
                .removeData(this.widgetFullName)
                // support: jquery <1.6.3
                // http://bugs.jquery.com/ticket/9413
                .removeData($.camelCase(this.widgetFullName));
            this.widget()
                .unbind(this.eventNamespace)
                .removeAttr("aria-disabled")
                .removeClass(
                    this.widgetFullName + "-disabled " +
                    "ui-state-disabled");

            // clean up events and states
            this.bindings.unbind(this.eventNamespace);
            this.hoverable.removeClass("ui-state-hover");
            this.focusable.removeClass("ui-state-focus");
        },
        _destroy: $.noop,

        widget: function () {
            return this.element;
        },

        option: function (key, value) {
            var options = key,
                parts,
                curOption,
                i;

            if (arguments.length === 0) {
                // don't return a reference to the internal hash
                return $.widget.extend({}, this.options);
            }

            if (typeof key === "string") {
                // handle nested keys, e.g., "foo.bar" => { foo: { bar: ___ } }
                options = {};
                parts = key.split(".");
                key = parts.shift();
                if (parts.length) {
                    curOption = options[key] = $.widget.extend({}, this.options[key]);
                    for (i = 0; i < parts.length - 1; i++) {
                        curOption[parts[i]] = curOption[parts[i]] || {};
                        curOption = curOption[parts[i]];
                    }
                    key = parts.pop();
                    if (arguments.length === 1) {
                        return curOption[key] === undefined ? null : curOption[key];
                    }
                    curOption[key] = value;
                } else {
                    if (arguments.length === 1) {
                        return this.options[key] === undefined ? null : this.options[key];
                    }
                    options[key] = value;
                }
            }

            this._setOptions(options);

            return this;
        },
        _setOptions: function (options) {
            var key;

            for (key in options) {
                this._setOption(key, options[key]);
            }

            return this;
        },
        _setOption: function (key, value) {
            this.options[key] = value;

            if (key === "disabled") {
                this.widget()
                    .toggleClass(this.widgetFullName + "-disabled ui-state-disabled", !!value)
                    .attr("aria-disabled", value);
                this.hoverable.removeClass("ui-state-hover");
                this.focusable.removeClass("ui-state-focus");
            }

            return this;
        },

        enable: function () {
            return this._setOption("disabled", false);
        },
        disable: function () {
            return this._setOption("disabled", true);
        },

        _on: function (suppressDisabledCheck, element, handlers) {
            var delegateElement,
                instance = this;

            // no suppressDisabledCheck flag, shuffle arguments
            if (typeof suppressDisabledCheck !== "boolean") {
                handlers = element;
                element = suppressDisabledCheck;
                suppressDisabledCheck = false;
            }

            // no element argument, shuffle and use this.element
            if (!handlers) {
                handlers = element;
                element = this.element;
                delegateElement = this.widget();
            } else {
                // accept selectors, DOM elements
                element = delegateElement = $(element);
                this.bindings = this.bindings.add(element);
            }

            $.each(handlers, function (event, handler) {
                function handlerProxy() {
                    // allow widgets to customize the disabled handling
                    // - disabled as an array instead of boolean
                    // - disabled class as method for disabling individual parts
                    if (!suppressDisabledCheck &&
                        (instance.options.disabled === true ||
                            $(this).hasClass("ui-state-disabled"))) {
                        return;
                    }
                    return (typeof handler === "string" ? instance[handler] : handler)
                        .apply(instance, arguments);
                }

                // copy the guid so direct unbinding works
                if (typeof handler !== "string") {
                    handlerProxy.guid = handler.guid =
                        handler.guid || handlerProxy.guid || $.guid++;
                }

                var match = event.match(/^(\w+)\s*(.*)$/),
                    eventName = match[1] + instance.eventNamespace,
                    selector = match[2];
                if (selector) {
                    delegateElement.delegate(selector, eventName, handlerProxy);
                } else {
                    element.bind(eventName, handlerProxy);
                }
            });
        },

        _off: function (element, eventName) {
            eventName = (eventName || "").split(" ").join(this.eventNamespace + " ") + this.eventNamespace;
            element.unbind(eventName).undelegate(eventName);
        },

        _delay: function (handler, delay) {
            function handlerProxy() {
                return (typeof handler === "string" ? instance[handler] : handler)
                    .apply(instance, arguments);
            }
            var instance = this;
            return setTimeout(handlerProxy, delay || 0);
        },

        _hoverable: function (element) {
            this.hoverable = this.hoverable.add(element);
            this._on(element, {
                mouseenter: function (event) {
                    $(event.currentTarget).addClass("ui-state-hover");
                },
                mouseleave: function (event) {
                    $(event.currentTarget).removeClass("ui-state-hover");
                }
            });
        },

        _focusable: function (element) {
            this.focusable = this.focusable.add(element);
            this._on(element, {
                focusin: function (event) {
                    $(event.currentTarget).addClass("ui-state-focus");
                },
                focusout: function (event) {
                    $(event.currentTarget).removeClass("ui-state-focus");
                }
            });
        },

        _trigger: function (type, event, data) {
            var prop, orig,
                callback = this.options[type];

            data = data || {};
            event = $.Event(event);
            event.type = (type === this.widgetEventPrefix ?
                type :
                this.widgetEventPrefix + type).toLowerCase();
            // the original event may come from any element
            // so we need to reset the target on the new event
            event.target = this.element[0];

            // copy original event properties over to the new event
            orig = event.originalEvent;
            if (orig) {
                for (prop in orig) {
                    if (!(prop in event)) {
                        event[prop] = orig[prop];
                    }
                }
            }

            this.element.trigger(event, data);
            return !($.isFunction(callback) &&
                callback.apply(this.element[0], [event].concat(data)) === false ||
                event.isDefaultPrevented());
        }
    };

    $.each({ show: "fadeIn", hide: "fadeOut" }, function (method, defaultEffect) {
        $.Widget.prototype["_" + method] = function (element, options, callback) {
            if (typeof options === "string") {
                options = { effect: options };
            }
            var hasOptions,
                effectName = !options ?
                    method :
                    options === true || typeof options === "number" ?
                        defaultEffect :
                        options.effect || defaultEffect;
            options = options || {};
            if (typeof options === "number") {
                options = { duration: options };
            }
            hasOptions = !$.isEmptyObject(options);
            options.complete = callback;
            if (options.delay) {
                element.delay(options.delay);
            }
            if (hasOptions && $.effects && $.effects.effect[effectName]) {
                element[method](options);
            } else if (effectName !== method && element[effectName]) {
                element[effectName](options.duration, options.easing, callback);
            } else {
                element.queue(function (next) {
                    $(this)[method]();
                    if (callback) {
                        callback.call(element[0]);
                    }
                    next();
                });
            }
        };
    });

})(jQuery);
(function ($, undefined) {

    var mouseHandled = false;
    $(document).mouseup(function () {
        mouseHandled = false;
    });

    $.widget("ui.mouse", {
        version: "1.10.4",
        options: {
            cancel: "input,textarea,button,select,option",
            distance: 1,
            delay: 0
        },
        _mouseInit: function () {
            var that = this;

            this.element
                .bind("mousedown." + this.widgetName, function (event) {
                    return that._mouseDown(event);
                })
                .bind("click." + this.widgetName, function (event) {
                    if (true === $.data(event.target, that.widgetName + ".preventClickEvent")) {
                        $.removeData(event.target, that.widgetName + ".preventClickEvent");
                        event.stopImmediatePropagation();
                        return false;
                    }
                });

            this.started = false;
        },

        // TODO: make sure destroying one instance of mouse doesn't mess with
        // other instances of mouse
        _mouseDestroy: function () {
            this.element.unbind("." + this.widgetName);
            if (this._mouseMoveDelegate) {
                $(document)
                    .unbind("mousemove." + this.widgetName, this._mouseMoveDelegate)
                    .unbind("mouseup." + this.widgetName, this._mouseUpDelegate);
            }
        },

        _mouseDown: function (event) {
            // don't let more than one widget handle mouseStart
            if (mouseHandled) { return; }

            // we may have missed mouseup (out of window)
            (this._mouseStarted && this._mouseUp(event));

            this._mouseDownEvent = event;

            var that = this,
                btnIsLeft = (event.which === 1),
                // event.target.nodeName works around a bug in IE 8 with
                // disabled inputs (#7620)
                elIsCancel = (typeof this.options.cancel === "string" && event.target.nodeName ? $(event.target).closest(this.options.cancel).length : false);
            if (!btnIsLeft || elIsCancel || !this._mouseCapture(event)) {
                return true;
            }

            this.mouseDelayMet = !this.options.delay;
            if (!this.mouseDelayMet) {
                this._mouseDelayTimer = setTimeout(function () {
                    that.mouseDelayMet = true;
                }, this.options.delay);
            }

            if (this._mouseDistanceMet(event) && this._mouseDelayMet(event)) {
                this._mouseStarted = (this._mouseStart(event) !== false);
                if (!this._mouseStarted) {
                    event.preventDefault();
                    return true;
                }
            }

            // Click event may never have fired (Gecko & Opera)
            if (true === $.data(event.target, this.widgetName + ".preventClickEvent")) {
                $.removeData(event.target, this.widgetName + ".preventClickEvent");
            }

            // these delegates are required to keep context
            this._mouseMoveDelegate = function (event) {
                return that._mouseMove(event);
            };
            this._mouseUpDelegate = function (event) {
                return that._mouseUp(event);
            };
            $(document)
                .bind("mousemove." + this.widgetName, this._mouseMoveDelegate)
                .bind("mouseup." + this.widgetName, this._mouseUpDelegate);

            event.preventDefault();

            mouseHandled = true;
            return true;
        },

        _mouseMove: function (event) {
            // IE mouseup check - mouseup happened when mouse was out of window
            if ($.ui.ie && (!document.documentMode || document.documentMode < 9) && !event.button) {
                return this._mouseUp(event);
            }

            if (this._mouseStarted) {
                this._mouseDrag(event);
                return event.preventDefault();
            }

            if (this._mouseDistanceMet(event) && this._mouseDelayMet(event)) {
                this._mouseStarted =
                    (this._mouseStart(this._mouseDownEvent, event) !== false);
                (this._mouseStarted ? this._mouseDrag(event) : this._mouseUp(event));
            }

            return !this._mouseStarted;
        },

        _mouseUp: function (event) {
            $(document)
                .unbind("mousemove." + this.widgetName, this._mouseMoveDelegate)
                .unbind("mouseup." + this.widgetName, this._mouseUpDelegate);

            if (this._mouseStarted) {
                this._mouseStarted = false;

                if (event.target === this._mouseDownEvent.target) {
                    $.data(event.target, this.widgetName + ".preventClickEvent", true);
                }

                this._mouseStop(event);
            }

            return false;
        },

        _mouseDistanceMet: function (event) {
            return (Math.max(
                Math.abs(this._mouseDownEvent.pageX - event.pageX),
                Math.abs(this._mouseDownEvent.pageY - event.pageY)
            ) >= this.options.distance
            );
        },

        _mouseDelayMet: function (/* event */) {
            return this.mouseDelayMet;
        },

        // These are placeholder methods, to be overriden by extending plugin
        _mouseStart: function (/* event */) { },
        _mouseDrag: function (/* event */) { },
        _mouseStop: function (/* event */) { },
        _mouseCapture: function (/* event */) { return true; }
    });

})(jQuery);
(function ($, undefined) {

    $.ui = $.ui || {};

    var cachedScrollbarWidth,
        max = Math.max,
        abs = Math.abs,
        round = Math.round,
        rhorizontal = /left|center|right/,
        rvertical = /top|center|bottom/,
        roffset = /[\+\-]\d+(\.[\d]+)?%?/,
        rposition = /^\w+/,
        rpercent = /%$/,
        _position = $.fn.position;

    function getOffsets(offsets, width, height) {
        return [
            parseFloat(offsets[0]) * (rpercent.test(offsets[0]) ? width / 100 : 1),
            parseFloat(offsets[1]) * (rpercent.test(offsets[1]) ? height / 100 : 1)
        ];
    }

    function parseCss(element, property) {
        return parseInt($.css(element, property), 10) || 0;
    }

    function getDimensions(elem) {
        var raw = elem[0];
        if (raw.nodeType === 9) {
            return {
                width: elem.width(),
                height: elem.height(),
                offset: { top: 0, left: 0 }
            };
        }
        if ($.isWindow(raw)) {
            return {
                width: elem.width(),
                height: elem.height(),
                offset: { top: elem.scrollTop(), left: elem.scrollLeft() }
            };
        }
        if (raw.preventDefault) {
            return {
                width: 0,
                height: 0,
                offset: { top: raw.pageY, left: raw.pageX }
            };
        }
        return {
            width: elem.outerWidth(),
            height: elem.outerHeight(),
            offset: elem.offset()
        };
    }

    $.position = {
        scrollbarWidth: function () {
            if (cachedScrollbarWidth !== undefined) {
                return cachedScrollbarWidth;
            }
            var w1, w2,
                div = $("<div style='display:block;position:absolute;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>"),
                innerDiv = div.children()[0];

            $("body").append(div);
            w1 = innerDiv.offsetWidth;
            div.css("overflow", "scroll");

            w2 = innerDiv.offsetWidth;

            if (w1 === w2) {
                w2 = div[0].clientWidth;
            }

            div.remove();

            return (cachedScrollbarWidth = w1 - w2);
        },
        getScrollInfo: function (within) {
            var overflowX = within.isWindow || within.isDocument ? "" :
                within.element.css("overflow-x"),
                overflowY = within.isWindow || within.isDocument ? "" :
                    within.element.css("overflow-y"),
                hasOverflowX = overflowX === "scroll" ||
                    (overflowX === "auto" && within.width < within.element[0].scrollWidth),
                hasOverflowY = overflowY === "scroll" ||
                    (overflowY === "auto" && within.height < within.element[0].scrollHeight);
            return {
                width: hasOverflowY ? $.position.scrollbarWidth() : 0,
                height: hasOverflowX ? $.position.scrollbarWidth() : 0
            };
        },
        getWithinInfo: function (element) {
            var withinElement = $(element || window),
                isWindow = $.isWindow(withinElement[0]),
                isDocument = !!withinElement[0] && withinElement[0].nodeType === 9;
            return {
                element: withinElement,
                isWindow: isWindow,
                isDocument: isDocument,
                offset: withinElement.offset() || { left: 0, top: 0 },
                scrollLeft: withinElement.scrollLeft(),
                scrollTop: withinElement.scrollTop(),
                width: isWindow ? withinElement.width() : withinElement.outerWidth(),
                height: isWindow ? withinElement.height() : withinElement.outerHeight()
            };
        }
    };

    $.fn.position = function (options) {
        if (!options || !options.of) {
            return _position.apply(this, arguments);
        }

        // make a copy, we don't want to modify arguments
        options = $.extend({}, options);

        var atOffset, targetWidth, targetHeight, targetOffset, basePosition, dimensions,
            target = $(options.of),
            within = $.position.getWithinInfo(options.within),
            scrollInfo = $.position.getScrollInfo(within),
            collision = (options.collision || "flip").split(" "),
            offsets = {};

        dimensions = getDimensions(target);
        if (target[0].preventDefault) {
            // force left top to allow flipping
            options.at = "left top";
        }
        targetWidth = dimensions.width;
        targetHeight = dimensions.height;
        targetOffset = dimensions.offset;
        // clone to reuse original targetOffset later
        basePosition = $.extend({}, targetOffset);

        // force my and at to have valid horizontal and vertical positions
        // if a value is missing or invalid, it will be converted to center
        $.each(["my", "at"], function () {
            var pos = (options[this] || "").split(" "),
                horizontalOffset,
                verticalOffset;

            if (pos.length === 1) {
                pos = rhorizontal.test(pos[0]) ?
                    pos.concat(["center"]) :
                    rvertical.test(pos[0]) ?
                        ["center"].concat(pos) :
                        ["center", "center"];
            }
            pos[0] = rhorizontal.test(pos[0]) ? pos[0] : "center";
            pos[1] = rvertical.test(pos[1]) ? pos[1] : "center";

            // calculate offsets
            horizontalOffset = roffset.exec(pos[0]);
            verticalOffset = roffset.exec(pos[1]);
            offsets[this] = [
                horizontalOffset ? horizontalOffset[0] : 0,
                verticalOffset ? verticalOffset[0] : 0
            ];

            // reduce to just the positions without the offsets
            options[this] = [
                rposition.exec(pos[0])[0],
                rposition.exec(pos[1])[0]
            ];
        });

        // normalize collision option
        if (collision.length === 1) {
            collision[1] = collision[0];
        }

        if (options.at[0] === "right") {
            basePosition.left += targetWidth;
        } else if (options.at[0] === "center") {
            basePosition.left += targetWidth / 2;
        }

        if (options.at[1] === "bottom") {
            basePosition.top += targetHeight;
        } else if (options.at[1] === "center") {
            basePosition.top += targetHeight / 2;
        }

        atOffset = getOffsets(offsets.at, targetWidth, targetHeight);
        basePosition.left += atOffset[0];
        basePosition.top += atOffset[1];

        return this.each(function () {
            var collisionPosition, using,
                elem = $(this),
                elemWidth = elem.outerWidth(),
                elemHeight = elem.outerHeight(),
                marginLeft = parseCss(this, "marginLeft"),
                marginTop = parseCss(this, "marginTop"),
                collisionWidth = elemWidth + marginLeft + parseCss(this, "marginRight") + scrollInfo.width,
                collisionHeight = elemHeight + marginTop + parseCss(this, "marginBottom") + scrollInfo.height,
                position = $.extend({}, basePosition),
                myOffset = getOffsets(offsets.my, elem.outerWidth(), elem.outerHeight());

            if (options.my[0] === "right") {
                position.left -= elemWidth;
            } else if (options.my[0] === "center") {
                position.left -= elemWidth / 2;
            }

            if (options.my[1] === "bottom") {
                position.top -= elemHeight;
            } else if (options.my[1] === "center") {
                position.top -= elemHeight / 2;
            }

            position.left += myOffset[0];
            position.top += myOffset[1];

            // if the browser doesn't support fractions, then round for consistent results
            if (!$.support.offsetFractions) {
                position.left = round(position.left);
                position.top = round(position.top);
            }

            collisionPosition = {
                marginLeft: marginLeft,
                marginTop: marginTop
            };

            $.each(["left", "top"], function (i, dir) {
                if ($.ui.position[collision[i]]) {
                    $.ui.position[collision[i]][dir](position, {
                        targetWidth: targetWidth,
                        targetHeight: targetHeight,
                        elemWidth: elemWidth,
                        elemHeight: elemHeight,
                        collisionPosition: collisionPosition,
                        collisionWidth: collisionWidth,
                        collisionHeight: collisionHeight,
                        offset: [atOffset[0] + myOffset[0], atOffset[1] + myOffset[1]],
                        my: options.my,
                        at: options.at,
                        within: within,
                        elem: elem
                    });
                }
            });

            if (options.using) {
                // adds feedback as second argument to using callback, if present
                using = function (props) {
                    var left = targetOffset.left - position.left,
                        right = left + targetWidth - elemWidth,
                        top = targetOffset.top - position.top,
                        bottom = top + targetHeight - elemHeight,
                        feedback = {
                            target: {
                                element: target,
                                left: targetOffset.left,
                                top: targetOffset.top,
                                width: targetWidth,
                                height: targetHeight
                            },
                            element: {
                                element: elem,
                                left: position.left,
                                top: position.top,
                                width: elemWidth,
                                height: elemHeight
                            },
                            horizontal: right < 0 ? "left" : left > 0 ? "right" : "center",
                            vertical: bottom < 0 ? "top" : top > 0 ? "bottom" : "middle"
                        };
                    if (targetWidth < elemWidth && abs(left + right) < targetWidth) {
                        feedback.horizontal = "center";
                    }
                    if (targetHeight < elemHeight && abs(top + bottom) < targetHeight) {
                        feedback.vertical = "middle";
                    }
                    if (max(abs(left), abs(right)) > max(abs(top), abs(bottom))) {
                        feedback.important = "horizontal";
                    } else {
                        feedback.important = "vertical";
                    }
                    options.using.call(this, props, feedback);
                };
            }

            elem.offset($.extend(position, { using: using }));
        });
    };

    $.ui.position = {
        fit: {
            left: function (position, data) {
                var within = data.within,
                    withinOffset = within.isWindow ? within.scrollLeft : within.offset.left,
                    outerWidth = within.width,
                    collisionPosLeft = position.left - data.collisionPosition.marginLeft,
                    overLeft = withinOffset - collisionPosLeft,
                    overRight = collisionPosLeft + data.collisionWidth - outerWidth - withinOffset,
                    newOverRight;

                // element is wider than within
                if (data.collisionWidth > outerWidth) {
                    // element is initially over the left side of within
                    if (overLeft > 0 && overRight <= 0) {
                        newOverRight = position.left + overLeft + data.collisionWidth - outerWidth - withinOffset;
                        position.left += overLeft - newOverRight;
                        // element is initially over right side of within
                    } else if (overRight > 0 && overLeft <= 0) {
                        position.left = withinOffset;
                        // element is initially over both left and right sides of within
                    } else {
                        if (overLeft > overRight) {
                            position.left = withinOffset + outerWidth - data.collisionWidth;
                        } else {
                            position.left = withinOffset;
                        }
                    }
                    // too far left -> align with left edge
                } else if (overLeft > 0) {
                    position.left += overLeft;
                    // too far right -> align with right edge
                } else if (overRight > 0) {
                    position.left -= overRight;
                    // adjust based on position and margin
                } else {
                    position.left = max(position.left - collisionPosLeft, position.left);
                }
            },
            top: function (position, data) {
                var within = data.within,
                    withinOffset = within.isWindow ? within.scrollTop : within.offset.top,
                    outerHeight = data.within.height,
                    collisionPosTop = position.top - data.collisionPosition.marginTop,
                    overTop = withinOffset - collisionPosTop,
                    overBottom = collisionPosTop + data.collisionHeight - outerHeight - withinOffset,
                    newOverBottom;

                // element is taller than within
                if (data.collisionHeight > outerHeight) {
                    // element is initially over the top of within
                    if (overTop > 0 && overBottom <= 0) {
                        newOverBottom = position.top + overTop + data.collisionHeight - outerHeight - withinOffset;
                        position.top += overTop - newOverBottom;
                        // element is initially over bottom of within
                    } else if (overBottom > 0 && overTop <= 0) {
                        position.top = withinOffset;
                        // element is initially over both top and bottom of within
                    } else {
                        if (overTop > overBottom) {
                            position.top = withinOffset + outerHeight - data.collisionHeight;
                        } else {
                            position.top = withinOffset;
                        }
                    }
                    // too far up -> align with top
                } else if (overTop > 0) {
                    position.top += overTop;
                    // too far down -> align with bottom edge
                } else if (overBottom > 0) {
                    position.top -= overBottom;
                    // adjust based on position and margin
                } else {
                    position.top = max(position.top - collisionPosTop, position.top);
                }
            }
        },
        flip: {
            left: function (position, data) {
                var within = data.within,
                    withinOffset = within.offset.left + within.scrollLeft,
                    outerWidth = within.width,
                    offsetLeft = within.isWindow ? within.scrollLeft : within.offset.left,
                    collisionPosLeft = position.left - data.collisionPosition.marginLeft,
                    overLeft = collisionPosLeft - offsetLeft,
                    overRight = collisionPosLeft + data.collisionWidth - outerWidth - offsetLeft,
                    myOffset = data.my[0] === "left" ?
                        -data.elemWidth :
                        data.my[0] === "right" ?
                            data.elemWidth :
                            0,
                    atOffset = data.at[0] === "left" ?
                        data.targetWidth :
                        data.at[0] === "right" ?
                            -data.targetWidth :
                            0,
                    offset = -2 * data.offset[0],
                    newOverRight,
                    newOverLeft;

                if (overLeft < 0) {
                    newOverRight = position.left + myOffset + atOffset + offset + data.collisionWidth - outerWidth - withinOffset;
                    if (newOverRight < 0 || newOverRight < abs(overLeft)) {
                        position.left += myOffset + atOffset + offset;
                    }
                }
                else if (overRight > 0) {
                    newOverLeft = position.left - data.collisionPosition.marginLeft + myOffset + atOffset + offset - offsetLeft;
                    if (newOverLeft > 0 || abs(newOverLeft) < overRight) {
                        position.left += myOffset + atOffset + offset;
                    }
                }
            },
            top: function (position, data) {
                var within = data.within,
                    withinOffset = within.offset.top + within.scrollTop,
                    outerHeight = within.height,
                    offsetTop = within.isWindow ? within.scrollTop : within.offset.top,
                    collisionPosTop = position.top - data.collisionPosition.marginTop,
                    overTop = collisionPosTop - offsetTop,
                    overBottom = collisionPosTop + data.collisionHeight - outerHeight - offsetTop,
                    top = data.my[1] === "top",
                    myOffset = top ?
                        -data.elemHeight :
                        data.my[1] === "bottom" ?
                            data.elemHeight :
                            0,
                    atOffset = data.at[1] === "top" ?
                        data.targetHeight :
                        data.at[1] === "bottom" ?
                            -data.targetHeight :
                            0,
                    offset = -2 * data.offset[1],
                    newOverTop,
                    newOverBottom;
                if (overTop < 0) {
                    newOverBottom = position.top + myOffset + atOffset + offset + data.collisionHeight - outerHeight - withinOffset;
                    if ((position.top + myOffset + atOffset + offset) > overTop && (newOverBottom < 0 || newOverBottom < abs(overTop))) {
                        position.top += myOffset + atOffset + offset;
                    }
                }
                else if (overBottom > 0) {
                    newOverTop = position.top - data.collisionPosition.marginTop + myOffset + atOffset + offset - offsetTop;
                    if ((position.top + myOffset + atOffset + offset) > overBottom && (newOverTop > 0 || abs(newOverTop) < overBottom)) {
                        position.top += myOffset + atOffset + offset;
                    }
                }
            }
        },
        flipfit: {
            left: function () {
                $.ui.position.flip.left.apply(this, arguments);
                $.ui.position.fit.left.apply(this, arguments);
            },
            top: function () {
                $.ui.position.flip.top.apply(this, arguments);
                $.ui.position.fit.top.apply(this, arguments);
            }
        }
    };

    // fraction support test
    (function () {
        var testElement, testElementParent, testElementStyle, offsetLeft, i,
            body = document.getElementsByTagName("body")[0],
            div = document.createElement("div");

        //Create a "fake body" for testing based on method used in jQuery.support
        testElement = document.createElement(body ? "div" : "body");
        testElementStyle = {
            visibility: "hidden",
            width: 0,
            height: 0,
            border: 0,
            margin: 0,
            background: "none"
        };
        if (body) {
            $.extend(testElementStyle, {
                position: "absolute",
                left: "-1000px",
                top: "-1000px"
            });
        }
        for (i in testElementStyle) {
            testElement.style[i] = testElementStyle[i];
        }
        testElement.appendChild(div);
        testElementParent = body || document.documentElement;
        testElementParent.insertBefore(testElement, testElementParent.firstChild);

        div.style.cssText = "position: absolute; left: 10.7432222px;";

        offsetLeft = $(div).offset().left;
        $.support.offsetFractions = offsetLeft > 10 && offsetLeft < 11;

        testElement.innerHTML = "";
        testElementParent.removeChild(testElement);
    })();

}(jQuery));
(function ($, undefined) {

    var uid = 0,
        hideProps = {},
        showProps = {};

    hideProps.height = hideProps.paddingTop = hideProps.paddingBottom =
        hideProps.borderTopWidth = hideProps.borderBottomWidth = "hide";
    showProps.height = showProps.paddingTop = showProps.paddingBottom =
        showProps.borderTopWidth = showProps.borderBottomWidth = "show";

    $.widget("ui.accordion", {
        version: "1.10.4",
        options: {
            active: 0,
            animate: {},
            collapsible: false,
            event: "click",
            header: "> li > :first-child,> :not(li):even",
            heightStyle: "auto",
            icons: {
                activeHeader: "ui-icon-triangle-1-s",
                header: "ui-icon-triangle-1-e"
            },

            // callbacks
            activate: null,
            beforeActivate: null
        },

        _create: function () {
            var options = this.options;
            this.prevShow = this.prevHide = $();
            this.element.addClass("ui-accordion ui-widget ui-helper-reset")
                // ARIA
                .attr("role", "tablist");

            // don't allow collapsible: false and active: false / null
            if (!options.collapsible && (options.active === false || options.active == null)) {
                options.active = 0;
            }

            this._processPanels();
            // handle negative values
            if (options.active < 0) {
                options.active += this.headers.length;
            }
            this._refresh();
        },

        _getCreateEventData: function () {
            return {
                header: this.active,
                panel: !this.active.length ? $() : this.active.next(),
                content: !this.active.length ? $() : this.active.next()
            };
        },

        _createIcons: function () {
            var icons = this.options.icons;
            if (icons) {
                $("<span>")
                    .addClass("ui-accordion-header-icon ui-icon " + icons.header)
                    .prependTo(this.headers);
                this.active.children(".ui-accordion-header-icon")
                    .removeClass(icons.header)
                    .addClass(icons.activeHeader);
                this.headers.addClass("ui-accordion-icons");
            }
        },

        _destroyIcons: function () {
            this.headers
                .removeClass("ui-accordion-icons")
                .children(".ui-accordion-header-icon")
                .remove();
        },

        _destroy: function () {
            var contents;

            // clean up main element
            this.element
                .removeClass("ui-accordion ui-widget ui-helper-reset")
                .removeAttr("role");

            // clean up headers
            this.headers
                .removeClass("ui-accordion-header ui-accordion-header-active ui-helper-reset ui-state-default ui-corner-all ui-state-active ui-state-disabled ui-corner-top")
                .removeAttr("role")
                .removeAttr("aria-expanded")
                .removeAttr("aria-selected")
                .removeAttr("aria-controls")
                .removeAttr("tabIndex")
                .each(function () {
                    if (/^ui-accordion/.test(this.id)) {
                        this.removeAttribute("id");
                    }
                });
            this._destroyIcons();

            // clean up content panels
            contents = this.headers.next()
                .css("display", "")
                .removeAttr("role")
                .removeAttr("aria-hidden")
                .removeAttr("aria-labelledby")
                .removeClass("ui-helper-reset ui-widget-content ui-corner-bottom ui-accordion-content ui-accordion-content-active ui-state-disabled")
                .each(function () {
                    if (/^ui-accordion/.test(this.id)) {
                        this.removeAttribute("id");
                    }
                });
            if (this.options.heightStyle !== "content") {
                contents.css("height", "");
            }
        },

        _setOption: function (key, value) {
            if (key === "active") {
                // _activate() will handle invalid values and update this.options
                this._activate(value);
                return;
            }

            if (key === "event") {
                if (this.options.event) {
                    this._off(this.headers, this.options.event);
                }
                this._setupEvents(value);
            }

            this._super(key, value);

            // setting collapsible: false while collapsed; open first panel
            if (key === "collapsible" && !value && this.options.active === false) {
                this._activate(0);
            }

            if (key === "icons") {
                this._destroyIcons();
                if (value) {
                    this._createIcons();
                }
            }

            // #5332 - opacity doesn't cascade to positioned elements in IE
            // so we need to add the disabled class to the headers and panels
            if (key === "disabled") {
                this.headers.add(this.headers.next())
                    .toggleClass("ui-state-disabled", !!value);
            }
        },

        _keydown: function (event) {
            if (event.altKey || event.ctrlKey) {
                return;
            }

            var keyCode = $.ui.keyCode,
                length = this.headers.length,
                currentIndex = this.headers.index(event.target),
                toFocus = false;

            switch (event.keyCode) {
                case keyCode.RIGHT:
                case keyCode.DOWN:
                    toFocus = this.headers[(currentIndex + 1) % length];
                    break;
                case keyCode.LEFT:
                case keyCode.UP:
                    toFocus = this.headers[(currentIndex - 1 + length) % length];
                    break;
                case keyCode.SPACE:
                case keyCode.ENTER:
                    this._eventHandler(event);
                    break;
                case keyCode.HOME:
                    toFocus = this.headers[0];
                    break;
                case keyCode.END:
                    toFocus = this.headers[length - 1];
                    break;
            }

            if (toFocus) {
                $(event.target).attr("tabIndex", -1);
                $(toFocus).attr("tabIndex", 0);
                toFocus.focus();
                event.preventDefault();
            }
        },

        _panelKeyDown: function (event) {
            if (event.keyCode === $.ui.keyCode.UP && event.ctrlKey) {
                $(event.currentTarget).prev().focus();
            }
        },

        refresh: function () {
            var options = this.options;
            this._processPanels();

            // was collapsed or no panel
            if ((options.active === false && options.collapsible === true) || !this.headers.length) {
                options.active = false;
                this.active = $();
                // active false only when collapsible is true
            } else if (options.active === false) {
                this._activate(0);
                // was active, but active panel is gone
            } else if (this.active.length && !$.contains(this.element[0], this.active[0])) {
                // all remaining panel are disabled
                if (this.headers.length === this.headers.find(".ui-state-disabled").length) {
                    options.active = false;
                    this.active = $();
                    // activate previous panel
                } else {
                    this._activate(Math.max(0, options.active - 1));
                }
                // was active, active panel still exists
            } else {
                // make sure active index is correct
                options.active = this.headers.index(this.active);
            }

            this._destroyIcons();

            this._refresh();
        },

        _processPanels: function () {
            this.headers = this.element.find(this.options.header)
                .addClass("ui-accordion-header ui-helper-reset ui-state-default ui-corner-all");

            this.headers.next()
                .addClass("ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom")
                .filter(":not(.ui-accordion-content-active)")
                .hide();
        },

        _refresh: function () {
            var maxHeight,
                options = this.options,
                heightStyle = options.heightStyle,
                parent = this.element.parent(),
                accordionId = this.accordionId = "ui-accordion-" +
                    (this.element.attr("id") || ++uid);

            this.active = this._findActive(options.active)
                .addClass("ui-accordion-header-active ui-state-active ui-corner-top")
                .removeClass("ui-corner-all");
            this.active.next()
                .addClass("ui-accordion-content-active")
                .show();

            this.headers
                .attr("role", "tab")
                .each(function (i) {
                    var header = $(this),
                        headerId = header.attr("id"),
                        panel = header.next(),
                        panelId = panel.attr("id");
                    if (!headerId) {
                        headerId = accordionId + "-header-" + i;
                        header.attr("id", headerId);
                    }
                    if (!panelId) {
                        panelId = accordionId + "-panel-" + i;
                        panel.attr("id", panelId);
                    }
                    header.attr("aria-controls", panelId);
                    panel.attr("aria-labelledby", headerId);
                })
                .next()
                .attr("role", "tabpanel");

            this.headers
                .not(this.active)
                .attr({
                    "aria-selected": "false",
                    "aria-expanded": "false",
                    tabIndex: -1
                })
                .next()
                .attr({
                    "aria-hidden": "true"
                })
                .hide();

            // make sure at least one header is in the tab order
            if (!this.active.length) {
                this.headers.eq(0).attr("tabIndex", 0);
            } else {
                this.active.attr({
                    "aria-selected": "true",
                    "aria-expanded": "true",
                    tabIndex: 0
                })
                    .next()
                    .attr({
                        "aria-hidden": "false"
                    });
            }

            this._createIcons();

            this._setupEvents(options.event);

            if (heightStyle === "fill") {
                maxHeight = parent.height();
                this.element.siblings(":visible").each(function () {
                    var elem = $(this),
                        position = elem.css("position");

                    if (position === "absolute" || position === "fixed") {
                        return;
                    }
                    maxHeight -= elem.outerHeight(true);
                });

                this.headers.each(function () {
                    maxHeight -= $(this).outerHeight(true);
                });

                this.headers.next()
                    .each(function () {
                        $(this).height(Math.max(0, maxHeight -
                            $(this).innerHeight() + $(this).height()));
                    })
                    .css("overflow", "auto");
            } else if (heightStyle === "auto") {
                maxHeight = 0;
                this.headers.next()
                    .each(function () {
                        maxHeight = Math.max(maxHeight, $(this).css("height", "").height());
                    })
                    .height(maxHeight);
            }
        },

        _activate: function (index) {
            var active = this._findActive(index)[0];

            // trying to activate the already active panel
            if (active === this.active[0]) {
                return;
            }

            // trying to collapse, simulate a click on the currently active header
            active = active || this.active[0];

            this._eventHandler({
                target: active,
                currentTarget: active,
                preventDefault: $.noop
            });
        },

        _findActive: function (selector) {
            return typeof selector === "number" ? this.headers.eq(selector) : $();
        },

        _setupEvents: function (event) {
            var events = {
                keydown: "_keydown"
            };
            if (event) {
                $.each(event.split(" "), function (index, eventName) {
                    events[eventName] = "_eventHandler";
                });
            }

            this._off(this.headers.add(this.headers.next()));
            this._on(this.headers, events);
            this._on(this.headers.next(), { keydown: "_panelKeyDown" });
            this._hoverable(this.headers);
            this._focusable(this.headers);
        },

        _eventHandler: function (event) {
            var options = this.options,
                active = this.active,
                clicked = $(event.currentTarget),
                clickedIsActive = clicked[0] === active[0],
                collapsing = clickedIsActive && options.collapsible,
                toShow = collapsing ? $() : clicked.next(),
                toHide = active.next(),
                eventData = {
                    oldHeader: active,
                    oldPanel: toHide,
                    newHeader: collapsing ? $() : clicked,
                    newPanel: toShow
                };

            event.preventDefault();

            if (
                // click on active header, but not collapsible
                (clickedIsActive && !options.collapsible) ||
                // allow canceling activation
                (this._trigger("beforeActivate", event, eventData) === false)) {
                return;
            }

            options.active = collapsing ? false : this.headers.index(clicked);

            // when the call to ._toggle() comes after the class changes
            // it causes a very odd bug in IE 8 (see #6720)
            this.active = clickedIsActive ? $() : clicked;
            this._toggle(eventData);

            // switch classes
            // corner classes on the previously active header stay after the animation
            active.removeClass("ui-accordion-header-active ui-state-active");
            if (options.icons) {
                active.children(".ui-accordion-header-icon")
                    .removeClass(options.icons.activeHeader)
                    .addClass(options.icons.header);
            }

            if (!clickedIsActive) {
                clicked
                    .removeClass("ui-corner-all")
                    .addClass("ui-accordion-header-active ui-state-active ui-corner-top");
                if (options.icons) {
                    clicked.children(".ui-accordion-header-icon")
                        .removeClass(options.icons.header)
                        .addClass(options.icons.activeHeader);
                }

                clicked
                    .next()
                    .addClass("ui-accordion-content-active");
            }
        },

        _toggle: function (data) {
            var toShow = data.newPanel,
                toHide = this.prevShow.length ? this.prevShow : data.oldPanel;

            // handle activating a panel during the animation for another activation
            this.prevShow.add(this.prevHide).stop(true, true);
            this.prevShow = toShow;
            this.prevHide = toHide;

            if (this.options.animate) {
                this._animate(toShow, toHide, data);
            } else {
                toHide.hide();
                toShow.show();
                this._toggleComplete(data);
            }

            toHide.attr({
                "aria-hidden": "true"
            });
            toHide.prev().attr("aria-selected", "false");
            // if we're switching panels, remove the old header from the tab order
            // if we're opening from collapsed state, remove the previous header from the tab order
            // if we're collapsing, then keep the collapsing header in the tab order
            if (toShow.length && toHide.length) {
                toHide.prev().attr({
                    "tabIndex": -1,
                    "aria-expanded": "false"
                });
            } else if (toShow.length) {
                this.headers.filter(function () {
                    return $(this).attr("tabIndex") === 0;
                })
                    .attr("tabIndex", -1);
            }

            toShow
                .attr("aria-hidden", "false")
                .prev()
                .attr({
                    "aria-selected": "true",
                    tabIndex: 0,
                    "aria-expanded": "true"
                });
        },

        _animate: function (toShow, toHide, data) {
            var total, easing, duration,
                that = this,
                adjust = 0,
                down = toShow.length &&
                    (!toHide.length || (toShow.index() < toHide.index())),
                animate = this.options.animate || {},
                options = down && animate.down || animate,
                complete = function () {
                    that._toggleComplete(data);
                };

            if (typeof options === "number") {
                duration = options;
            }
            if (typeof options === "string") {
                easing = options;
            }
            // fall back from options to animation in case of partial down settings
            easing = easing || options.easing || animate.easing;
            duration = duration || options.duration || animate.duration;

            if (!toHide.length) {
                return toShow.animate(showProps, duration, easing, complete);
            }
            if (!toShow.length) {
                return toHide.animate(hideProps, duration, easing, complete);
            }

            total = toShow.show().outerHeight();
            toHide.animate(hideProps, {
                duration: duration,
                easing: easing,
                step: function (now, fx) {
                    fx.now = Math.round(now);
                }
            });
            toShow
                .hide()
                .animate(showProps, {
                    duration: duration,
                    easing: easing,
                    complete: complete,
                    step: function (now, fx) {
                        fx.now = Math.round(now);
                        if (fx.prop !== "height") {
                            adjust += fx.now;
                        } else if (that.options.heightStyle !== "content") {
                            fx.now = Math.round(total - toHide.outerHeight() - adjust);
                            adjust = 0;
                        }
                    }
                });
        },

        _toggleComplete: function (data) {
            var toHide = data.oldPanel;

            toHide
                .removeClass("ui-accordion-content-active")
                .prev()
                .removeClass("ui-corner-top")
                .addClass("ui-corner-all");

            // Work around for rendering bug in IE (#5421)
            if (toHide.length) {
                toHide.parent()[0].className = toHide.parent()[0].className;
            }
            this._trigger("activate", null, data);
        }
    });

})(jQuery);
(function ($, undefined) {

    $.widget("ui.autocomplete", {
        version: "1.10.4",
        defaultElement: "<input>",
        options: {
            appendTo: null,
            autoFocus: false,
            delay: 300,
            minLength: 1,
            position: {
                my: "left top",
                at: "left bottom",
                collision: "none"
            },
            source: null,

            // callbacks
            change: null,
            close: null,
            focus: null,
            open: null,
            response: null,
            search: null,
            select: null
        },

        requestIndex: 0,
        pending: 0,

        _create: function () {
            // Some browsers only repeat keydown events, not keypress events,
            // so we use the suppressKeyPress flag to determine if we've already
            // handled the keydown event. #7269
            // Unfortunately the code for & in keypress is the same as the up arrow,
            // so we use the suppressKeyPressRepeat flag to avoid handling keypress
            // events when we know the keydown event was used to modify the
            // search term. #7799
            var suppressKeyPress, suppressKeyPressRepeat, suppressInput,
                nodeName = this.element[0].nodeName.toLowerCase(),
                isTextarea = nodeName === "textarea",
                isInput = nodeName === "input";

            this.isMultiLine =
                // Textareas are always multi-line
                isTextarea ? true :
                    // Inputs are always single-line, even if inside a contentEditable element
                    // IE also treats inputs as contentEditable
                    isInput ? false :
                        // All other element types are determined by whether or not they're contentEditable
                        this.element.prop("isContentEditable");

            this.valueMethod = this.element[isTextarea || isInput ? "val" : "text"];
            this.isNewMenu = true;

            this.element
                .addClass("ui-autocomplete-input")
                .attr("autocomplete", "off");

            this._on(this.element, {
                keydown: function (event) {
                    if (this.element.prop("readOnly")) {
                        suppressKeyPress = true;
                        suppressInput = true;
                        suppressKeyPressRepeat = true;
                        return;
                    }

                    suppressKeyPress = false;
                    suppressInput = false;
                    suppressKeyPressRepeat = false;
                    var keyCode = $.ui.keyCode;
                    switch (event.keyCode) {
                        case keyCode.PAGE_UP:
                            suppressKeyPress = true;
                            this._move("previousPage", event);
                            break;
                        case keyCode.PAGE_DOWN:
                            suppressKeyPress = true;
                            this._move("nextPage", event);
                            break;
                        case keyCode.UP:
                            suppressKeyPress = true;
                            this._keyEvent("previous", event);
                            break;
                        case keyCode.DOWN:
                            suppressKeyPress = true;
                            this._keyEvent("next", event);
                            break;
                        case keyCode.ENTER:
                        case keyCode.NUMPAD_ENTER:
                            // when menu is open and has focus
                            if (this.menu.active) {
                                // #6055 - Opera still allows the keypress to occur
                                // which causes forms to submit
                                suppressKeyPress = true;
                                event.preventDefault();
                                this.menu.select(event);
                            }
                            break;
                        case keyCode.TAB:
                            if (this.menu.active) {
                                this.menu.select(event);
                            }
                            break;
                        case keyCode.ESCAPE:
                            if (this.menu.element.is(":visible")) {
                                this._value(this.term);
                                this.close(event);
                                // Different browsers have different default behavior for escape
                                // Single press can mean undo or clear
                                // Double press in IE means clear the whole form
                                event.preventDefault();
                            }
                            break;
                        default:
                            suppressKeyPressRepeat = true;
                            // search timeout should be triggered before the input value is changed
                            this._searchTimeout(event);
                            break;
                    }
                },
                keypress: function (event) {
                    if (suppressKeyPress) {
                        suppressKeyPress = false;
                        if (!this.isMultiLine || this.menu.element.is(":visible")) {
                            event.preventDefault();
                        }
                        return;
                    }
                    if (suppressKeyPressRepeat) {
                        return;
                    }

                    // replicate some key handlers to allow them to repeat in Firefox and Opera
                    var keyCode = $.ui.keyCode;
                    switch (event.keyCode) {
                        case keyCode.PAGE_UP:
                            this._move("previousPage", event);
                            break;
                        case keyCode.PAGE_DOWN:
                            this._move("nextPage", event);
                            break;
                        case keyCode.UP:
                            this._keyEvent("previous", event);
                            break;
                        case keyCode.DOWN:
                            this._keyEvent("next", event);
                            break;
                    }
                },
                input: function (event) {
                    if (suppressInput) {
                        suppressInput = false;
                        event.preventDefault();
                        return;
                    }
                    this._searchTimeout(event);
                },
                focus: function () {
                    this.selectedItem = null;
                    this.previous = this._value();
                },
                blur: function (event) {
                    if (this.cancelBlur) {
                        delete this.cancelBlur;
                        return;
                    }

                    clearTimeout(this.searching);
                    this.close(event);
                    this._change(event);
                }
            });

            this._initSource();
            this.menu = $("<ul>")
                .addClass("ui-autocomplete ui-front")
                .appendTo(this._appendTo())
                .menu({
                    // disable ARIA support, the live region takes care of that
                    role: null
                })
                .hide()
                .data("ui-menu");

            this._on(this.menu.element, {
                mousedown: function (event) {
                    // prevent moving focus out of the text field
                    event.preventDefault();

                    // IE doesn't prevent moving focus even with event.preventDefault()
                    // so we set a flag to know when we should ignore the blur event
                    this.cancelBlur = true;
                    this._delay(function () {
                        delete this.cancelBlur;
                    });

                    // clicking on the scrollbar causes focus to shift to the body
                    // but we can't detect a mouseup or a click immediately afterward
                    // so we have to track the next mousedown and close the menu if
                    // the user clicks somewhere outside of the autocomplete
                    var menuElement = this.menu.element[0];
                    if (!$(event.target).closest(".ui-menu-item").length) {
                        this._delay(function () {
                            var that = this;
                            this.document.one("mousedown", function (event) {
                                if (event.target !== that.element[0] &&
                                    event.target !== menuElement &&
                                    !$.contains(menuElement, event.target)) {
                                    that.close();
                                }
                            });
                        });
                    }
                },
                menufocus: function (event, ui) {
                    // support: Firefox
                    // Prevent accidental activation of menu items in Firefox (#7024 #9118)
                    if (this.isNewMenu) {
                        this.isNewMenu = false;
                        if (event.originalEvent && /^mouse/.test(event.originalEvent.type)) {
                            this.menu.blur();

                            this.document.one("mousemove", function () {
                                $(event.target).trigger(event.originalEvent);
                            });

                            return;
                        }
                    }

                    var item = ui.item.data("ui-autocomplete-item");
                    if (false !== this._trigger("focus", event, { item: item })) {
                        // use value to match what will end up in the input, if it was a key event
                        if (event.originalEvent && /^key/.test(event.originalEvent.type)) {
                            this._value(item.value);
                        }
                    } else {
                        // Normally the input is populated with the item's value as the
                        // menu is navigated, causing screen readers to notice a change and
                        // announce the item. Since the focus event was canceled, this doesn't
                        // happen, so we update the live region so that screen readers can
                        // still notice the change and announce it.
                        this.liveRegion.text(item.value);
                    }
                },
                menuselect: function (event, ui) {
                    var item = ui.item.data("ui-autocomplete-item"),
                        previous = this.previous;

                    // only trigger when focus was lost (click on menu)
                    if (this.element[0] !== this.document[0].activeElement) {
                        this.element.focus();
                        this.previous = previous;
                        // #6109 - IE triggers two focus events and the second
                        // is asynchronous, so we need to reset the previous
                        // term synchronously and asynchronously :-(
                        this._delay(function () {
                            this.previous = previous;
                            this.selectedItem = item;
                        });
                    }

                    if (false !== this._trigger("select", event, { item: item })) {
                        this._value(item.value);
                    }
                    // reset the term after the select event
                    // this allows custom select handling to work properly
                    this.term = this._value();

                    this.close(event);
                    this.selectedItem = item;
                }
            });

            this.liveRegion = $("<span>", {
                role: "status",
                "aria-live": "polite"
            })
                .addClass("ui-helper-hidden-accessible")
                .insertBefore(this.element);

            // turning off autocomplete prevents the browser from remembering the
            // value when navigating through history, so we re-enable autocomplete
            // if the page is unloaded before the widget is destroyed. #7790
            this._on(this.window, {
                beforeunload: function () {
                    this.element.removeAttr("autocomplete");
                }
            });
        },

        _destroy: function () {
            clearTimeout(this.searching);
            this.element
                .removeClass("ui-autocomplete-input")
                .removeAttr("autocomplete");
            this.menu.element.remove();
            this.liveRegion.remove();
        },

        _setOption: function (key, value) {
            this._super(key, value);
            if (key === "source") {
                this._initSource();
            }
            if (key === "appendTo") {
                this.menu.element.appendTo(this._appendTo());
            }
            if (key === "disabled" && value && this.xhr) {
                this.xhr.abort();
            }
        },

        _appendTo: function () {
            var element = this.options.appendTo;

            if (element) {
                element = element.jquery || element.nodeType ?
                    $(element) :
                    this.document.find(element).eq(0);
            }

            if (!element) {
                element = this.element.closest(".ui-front");
            }

            if (!element.length) {
                element = this.document[0].body;
            }

            return element;
        },

        _initSource: function () {
            var array, url,
                that = this;
            if ($.isArray(this.options.source)) {
                array = this.options.source;
                this.source = function (request, response) {
                    response($.ui.autocomplete.filter(array, request.term));
                };
            } else if (typeof this.options.source === "string") {
                url = this.options.source;
                this.source = function (request, response) {
                    if (that.xhr) {
                        that.xhr.abort();
                    }
                    that.xhr = $.ajax({
                        url: url,
                        data: request,
                        dataType: "json",
                        success: function (data) {
                            response(data);
                        },
                        error: function () {
                            response([]);
                        }
                    });
                };
            } else {
                this.source = this.options.source;
            }
        },

        _searchTimeout: function (event) {
            clearTimeout(this.searching);
            this.searching = this._delay(function () {
                // only search if the value has changed
                if (this.term !== this._value()) {
                    this.selectedItem = null;
                    this.search(null, event);
                }
            }, this.options.delay);
        },

        search: function (value, event) {
            value = value != null ? value : this._value();

            // always save the actual value, not the one passed as an argument
            this.term = this._value();

            if (value.length < this.options.minLength) {
                return this.close(event);
            }

            if (this._trigger("search", event) === false) {
                return;
            }

            return this._search(value);
        },

        _search: function (value) {
            this.pending++;
            this.element.addClass("ui-autocomplete-loading");
            this.cancelSearch = false;

            this.source({ term: value }, this._response());
        },

        _response: function () {
            var index = ++this.requestIndex;

            return $.proxy(function (content) {
                if (index === this.requestIndex) {
                    this.__response(content);
                }

                this.pending--;
                if (!this.pending) {
                    this.element.removeClass("ui-autocomplete-loading");
                }
            }, this);
        },

        __response: function (content) {
            if (content) {
                content = this._normalize(content);
            }
            this._trigger("response", null, { content: content });
            if (!this.options.disabled && content && content.length && !this.cancelSearch) {
                this._suggest(content);
                this._trigger("open");
            } else {
                // use ._close() instead of .close() so we don't cancel future searches
                this._close();
            }
        },

        close: function (event) {
            this.cancelSearch = true;
            this._close(event);
        },

        _close: function (event) {
            if (this.menu.element.is(":visible")) {
                this.menu.element.hide();
                this.menu.blur();
                this.isNewMenu = true;
                this._trigger("close", event);
            }
        },

        _change: function (event) {
            if (this.previous !== this._value()) {
                this._trigger("change", event, { item: this.selectedItem });
            }
        },

        _normalize: function (items) {
            // assume all items have the right format when the first item is complete
            if (items.length && items[0].label && items[0].value) {
                return items;
            }
            return $.map(items, function (item) {
                if (typeof item === "string") {
                    return {
                        label: item,
                        value: item
                    };
                }
                return $.extend({
                    label: item.label || item.value,
                    value: item.value || item.label
                }, item);
            });
        },

        _suggest: function (items) {
            var ul = this.menu.element.empty();
            this._renderMenu(ul, items);
            this.isNewMenu = true;
            this.menu.refresh();

            // size and position menu
            ul.show();
            this._resizeMenu();
            ul.position($.extend({
                of: this.element
            }, this.options.position));

            if (this.options.autoFocus) {
                this.menu.next();
            }
        },

        _resizeMenu: function () {
            var ul = this.menu.element;
            ul.outerWidth(Math.max(
                // Firefox wraps long text (possibly a rounding bug)
                // so we add 1px to avoid the wrapping (#7513)
                ul.width("").outerWidth() + 1,
                this.element.outerWidth()
            ));
        },

        _renderMenu: function (ul, items) {
            var that = this;
            $.each(items, function (index, item) {
                that._renderItemData(ul, item);
            });
        },

        _renderItemData: function (ul, item) {
            return this._renderItem(ul, item).data("ui-autocomplete-item", item);
        },

        _renderItem: function (ul, item) {
            return $("<li>")
                .append($("<a>").text(item.label))
                .appendTo(ul);
        },

        _move: function (direction, event) {
            if (!this.menu.element.is(":visible")) {
                this.search(null, event);
                return;
            }
            if (this.menu.isFirstItem() && /^previous/.test(direction) ||
                this.menu.isLastItem() && /^next/.test(direction)) {
                this._value(this.term);
                this.menu.blur();
                return;
            }
            this.menu[direction](event);
        },

        widget: function () {
            return this.menu.element;
        },

        _value: function () {
            return this.valueMethod.apply(this.element, arguments);
        },

        _keyEvent: function (keyEvent, event) {
            if (!this.isMultiLine || this.menu.element.is(":visible")) {
                this._move(keyEvent, event);

                // prevents moving cursor to beginning/end of the text field in some browsers
                event.preventDefault();
            }
        }
    });

    $.extend($.ui.autocomplete, {
        escapeRegex: function (value) {
            return value.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&");
        },
        filter: function (array, term) {
            var matcher = new RegExp($.ui.autocomplete.escapeRegex(term), "i");
            return $.grep(array, function (value) {
                return matcher.test(value.label || value.value || value);
            });
        }
    });


    // live region extension, adding a `messages` option
    // NOTE: This is an experimental API. We are still investigating
    // a full solution for string manipulation and internationalization.
    $.widget("ui.autocomplete", $.ui.autocomplete, {
        options: {
            messages: {
                noResults: "No search results.",
                results: function (amount) {
                    return amount + (amount > 1 ? " results are" : " result is") +
                        " available, use up and down arrow keys to navigate.";
                }
            }
        },

        __response: function (content) {
            var message;
            this._superApply(arguments);
            if (this.options.disabled || this.cancelSearch) {
                return;
            }
            if (content && content.length) {
                message = this.options.messages.results(content.length);
            } else {
                message = this.options.messages.noResults;
            }
            this.liveRegion.text(message);
        }
    });

}(jQuery));
(function ($, undefined) {

    var lastActive,
        baseClasses = "ui-button ui-widget ui-state-default ui-corner-all",
        typeClasses = "ui-button-icons-only ui-button-icon-only ui-button-text-icons ui-button-text-icon-primary ui-button-text-icon-secondary ui-button-text-only",
        formResetHandler = function () {
            var form = $(this);
            setTimeout(function () {
                form.find(":ui-button").button("refresh");
            }, 1);
        },
        radioGroup = function (radio) {
            var name = radio.name,
                form = radio.form,
                radios = $([]);
            if (name) {
                name = name.replace(/'/g, "\\'");
                if (form) {
                    radios = $(form).find("[name='" + name + "']");
                } else {
                    radios = $("[name='" + name + "']", radio.ownerDocument)
                        .filter(function () {
                            return !this.form;
                        });
                }
            }
            return radios;
        };

    $.widget("ui.button", {
        version: "1.10.4",
        defaultElement: "<button>",
        options: {
            disabled: null,
            text: true,
            label: null,
            icons: {
                primary: null,
                secondary: null
            }
        },
        _create: function () {
            this.element.closest("form")
                .unbind("reset" + this.eventNamespace)
                .bind("reset" + this.eventNamespace, formResetHandler);

            if (typeof this.options.disabled !== "boolean") {
                this.options.disabled = !!this.element.prop("disabled");
            } else {
                this.element.prop("disabled", this.options.disabled);
            }

            this._determineButtonType();
            this.hasTitle = !!this.buttonElement.attr("title");

            var that = this,
                options = this.options,
                toggleButton = this.type === "checkbox" || this.type === "radio",
                activeClass = !toggleButton ? "ui-state-active" : "";

            if (options.label === null) {
                options.label = (this.type === "input" ? this.buttonElement.val() : this.buttonElement.html());
            }

            this._hoverable(this.buttonElement);

            this.buttonElement
                .addClass(baseClasses)
                .attr("role", "button")
                .bind("mouseenter" + this.eventNamespace, function () {
                    if (options.disabled) {
                        return;
                    }
                    if (this === lastActive) {
                        $(this).addClass("ui-state-active");
                    }
                })
                .bind("mouseleave" + this.eventNamespace, function () {
                    if (options.disabled) {
                        return;
                    }
                    $(this).removeClass(activeClass);
                })
                .bind("click" + this.eventNamespace, function (event) {
                    if (options.disabled) {
                        event.preventDefault();
                        event.stopImmediatePropagation();
                    }
                });

            // Can't use _focusable() because the element that receives focus
            // and the element that gets the ui-state-focus class are different
            this._on({
                focus: function () {
                    this.buttonElement.addClass("ui-state-focus");
                },
                blur: function () {
                    this.buttonElement.removeClass("ui-state-focus");
                }
            });

            if (toggleButton) {
                this.element.bind("change" + this.eventNamespace, function () {
                    that.refresh();
                });
            }

            if (this.type === "checkbox") {
                this.buttonElement.bind("click" + this.eventNamespace, function () {
                    if (options.disabled) {
                        return false;
                    }
                });
            } else if (this.type === "radio") {
                this.buttonElement.bind("click" + this.eventNamespace, function () {
                    if (options.disabled) {
                        return false;
                    }
                    $(this).addClass("ui-state-active");
                    that.buttonElement.attr("aria-pressed", "true");

                    var radio = that.element[0];
                    radioGroup(radio)
                        .not(radio)
                        .map(function () {
                            return $(this).button("widget")[0];
                        })
                        .removeClass("ui-state-active")
                        .attr("aria-pressed", "false");
                });
            } else {
                this.buttonElement
                    .bind("mousedown" + this.eventNamespace, function () {
                        if (options.disabled) {
                            return false;
                        }
                        $(this).addClass("ui-state-active");
                        lastActive = this;
                        that.document.one("mouseup", function () {
                            lastActive = null;
                        });
                    })
                    .bind("mouseup" + this.eventNamespace, function () {
                        if (options.disabled) {
                            return false;
                        }
                        $(this).removeClass("ui-state-active");
                    })
                    .bind("keydown" + this.eventNamespace, function (event) {
                        if (options.disabled) {
                            return false;
                        }
                        if (event.keyCode === $.ui.keyCode.SPACE || event.keyCode === $.ui.keyCode.ENTER) {
                            $(this).addClass("ui-state-active");
                        }
                    })
                    // see #8559, we bind to blur here in case the button element loses
                    // focus between keydown and keyup, it would be left in an "active" state
                    .bind("keyup" + this.eventNamespace + " blur" + this.eventNamespace, function () {
                        $(this).removeClass("ui-state-active");
                    });

                if (this.buttonElement.is("a")) {
                    this.buttonElement.keyup(function (event) {
                        if (event.keyCode === $.ui.keyCode.SPACE) {
                            // TODO pass through original event correctly (just as 2nd argument doesn't work)
                            $(this).click();
                        }
                    });
                }
            }

            // TODO: pull out $.Widget's handling for the disabled option into
            // $.Widget.prototype._setOptionDisabled so it's easy to proxy and can
            // be overridden by individual plugins
            this._setOption("disabled", options.disabled);
            this._resetButton();
        },

        _determineButtonType: function () {
            var ancestor, labelSelector, checked;

            if (this.element.is("[type=checkbox]")) {
                this.type = "checkbox";
            } else if (this.element.is("[type=radio]")) {
                this.type = "radio";
            } else if (this.element.is("input")) {
                this.type = "input";
            } else {
                this.type = "button";
            }

            if (this.type === "checkbox" || this.type === "radio") {
                // we don't search against the document in case the element
                // is disconnected from the DOM
                ancestor = this.element.parents().last();
                labelSelector = "label[for='" + this.element.attr("id") + "']";
                this.buttonElement = ancestor.find(labelSelector);
                if (!this.buttonElement.length) {
                    ancestor = ancestor.length ? ancestor.siblings() : this.element.siblings();
                    this.buttonElement = ancestor.filter(labelSelector);
                    if (!this.buttonElement.length) {
                        this.buttonElement = ancestor.find(labelSelector);
                    }
                }
                this.element.addClass("ui-helper-hidden-accessible");

                checked = this.element.is(":checked");
                if (checked) {
                    this.buttonElement.addClass("ui-state-active");
                }
                this.buttonElement.prop("aria-pressed", checked);
            } else {
                this.buttonElement = this.element;
            }
        },

        widget: function () {
            return this.buttonElement;
        },

        _destroy: function () {
            this.element
                .removeClass("ui-helper-hidden-accessible");
            this.buttonElement
                .removeClass(baseClasses + " ui-state-active " + typeClasses)
                .removeAttr("role")
                .removeAttr("aria-pressed")
                .html(this.buttonElement.find(".ui-button-text").html());

            if (!this.hasTitle) {
                this.buttonElement.removeAttr("title");
            }
        },

        _setOption: function (key, value) {
            this._super(key, value);
            if (key === "disabled") {
                this.element.prop("disabled", !!value);
                if (value) {
                    this.buttonElement.removeClass("ui-state-focus");
                }
                return;
            }
            this._resetButton();
        },

        refresh: function () {
            //See #8237 & #8828
            var isDisabled = this.element.is("input, button") ? this.element.is(":disabled") : this.element.hasClass("ui-button-disabled");

            if (isDisabled !== this.options.disabled) {
                this._setOption("disabled", isDisabled);
            }
            if (this.type === "radio") {
                radioGroup(this.element[0]).each(function () {
                    if ($(this).is(":checked")) {
                        $(this).button("widget")
                            .addClass("ui-state-active")
                            .attr("aria-pressed", "true");
                    } else {
                        $(this).button("widget")
                            .removeClass("ui-state-active")
                            .attr("aria-pressed", "false");
                    }
                });
            } else if (this.type === "checkbox") {
                if (this.element.is(":checked")) {
                    this.buttonElement
                        .addClass("ui-state-active")
                        .attr("aria-pressed", "true");
                } else {
                    this.buttonElement
                        .removeClass("ui-state-active")
                        .attr("aria-pressed", "false");
                }
            }
        },

        _resetButton: function () {
            if (this.type === "input") {
                if (this.options.label) {
                    this.element.val(this.options.label);
                }
                return;
            }
            var buttonElement = this.buttonElement.removeClass(typeClasses),
                buttonText = $("<span></span>", this.document[0])
                    .addClass("ui-button-text")
                    .html(this.options.label)
                    .appendTo(buttonElement.empty())
                    .text(),
                icons = this.options.icons,
                multipleIcons = icons.primary && icons.secondary,
                buttonClasses = [];

            if (icons.primary || icons.secondary) {
                if (this.options.text) {
                    buttonClasses.push("ui-button-text-icon" + (multipleIcons ? "s" : (icons.primary ? "-primary" : "-secondary")));
                }

                if (icons.primary) {
                    buttonElement.prepend("<span class='ui-button-icon-primary ui-icon " + icons.primary + "'></span>");
                }

                if (icons.secondary) {
                    buttonElement.append("<span class='ui-button-icon-secondary ui-icon " + icons.secondary + "'></span>");
                }

                if (!this.options.text) {
                    buttonClasses.push(multipleIcons ? "ui-button-icons-only" : "ui-button-icon-only");

                    if (!this.hasTitle) {
                        buttonElement.attr("title", $.trim(buttonText));
                    }
                }
            } else {
                buttonClasses.push("ui-button-text-only");
            }
            buttonElement.addClass(buttonClasses.join(" "));
        }
    });

    $.widget("ui.buttonset", {
        version: "1.10.4",
        options: {
            items: "button, input[type=button], input[type=submit], input[type=reset], input[type=checkbox], input[type=radio], a, :data(ui-button)"
        },

        _create: function () {
            this.element.addClass("ui-buttonset");
        },

        _init: function () {
            this.refresh();
        },

        _setOption: function (key, value) {
            if (key === "disabled") {
                this.buttons.button("option", key, value);
            }

            this._super(key, value);
        },

        refresh: function () {
            var rtl = this.element.css("direction") === "rtl";

            this.buttons = this.element.find(this.options.items)
                .filter(":ui-button")
                .button("refresh")
                .end()
                .not(":ui-button")
                .button()
                .end()
                .map(function () {
                    return $(this).button("widget")[0];
                })
                .removeClass("ui-corner-all ui-corner-left ui-corner-right")
                .filter(":first")
                .addClass(rtl ? "ui-corner-right" : "ui-corner-left")
                .end()
                .filter(":last")
                .addClass(rtl ? "ui-corner-left" : "ui-corner-right")
                .end()
                .end();
        },

        _destroy: function () {
            this.element.removeClass("ui-buttonset");
            this.buttons
                .map(function () {
                    return $(this).button("widget")[0];
                })
                .removeClass("ui-corner-left ui-corner-right")
                .end()
                .button("destroy");
        }
    });

}(jQuery));
(function ($, undefined) {

    $.extend($.ui, { datepicker: { version: "1.10.4" } });

    var PROP_NAME = "datepicker",
        instActive;

    /* Date picker manager.
       Use the singleton instance of this class, $.datepicker, to interact with the date picker.
       Settings for (groups of) date pickers are maintained in an instance object,
       allowing multiple different settings on the same page. */

    function Datepicker() {
        this._curInst = null; // The current instance in use
        this._keyEvent = false; // If the last event was a key event
        this._disabledInputs = []; // List of date picker inputs that have been disabled
        this._datepickerShowing = false; // True if the popup picker is showing , false if not
        this._inDialog = false; // True if showing within a "dialog", false if not
        this._mainDivId = "ui-datepicker-div"; // The ID of the main datepicker division
        this._inlineClass = "ui-datepicker-inline"; // The name of the inline marker class
        this._appendClass = "ui-datepicker-append"; // The name of the append marker class
        this._triggerClass = "ui-datepicker-trigger"; // The name of the trigger marker class
        this._dialogClass = "ui-datepicker-dialog"; // The name of the dialog marker class
        this._disableClass = "ui-datepicker-disabled"; // The name of the disabled covering marker class
        this._unselectableClass = "ui-datepicker-unselectable"; // The name of the unselectable cell marker class
        this._currentClass = "ui-datepicker-current-day"; // The name of the current day marker class
        this._dayOverClass = "ui-datepicker-days-cell-over"; // The name of the day hover marker class
        this.regional = []; // Available regional settings, indexed by language code
        this.regional[""] = { // Default regional settings
            closeText: "Done", // Display text for close link
            prevText: "Prev", // Display text for previous month link
            nextText: "Next", // Display text for next month link
            currentText: "Today", // Display text for current month link
            monthNames: ["January", "February", "March", "April", "May", "June",
                "July", "August", "September", "October", "November", "December"], // Names of months for drop-down and formatting
            monthNamesShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], // For formatting
            dayNames: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], // For formatting
            dayNamesShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], // For formatting
            dayNamesMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"], // Column headings for days starting at Sunday
            weekHeader: "Wk", // Column header for week of the year
            dateFormat: "mm/dd/yy", // See format options on parseDate
            firstDay: 0, // The first day of the week, Sun = 0, Mon = 1, ...
            isRTL: false, // True if right-to-left language, false if left-to-right
            showMonthAfterYear: false, // True if the year select precedes month, false for month then year
            yearSuffix: "" // Additional text to append to the year in the month headers
        };
        this._defaults = { // Global defaults for all the date picker instances
            showOn: "focus", // "focus" for popup on focus,
            // "button" for trigger button, or "both" for either
            showAnim: "fadeIn", // Name of jQuery animation for popup
            showOptions: {}, // Options for enhanced animations
            defaultDate: null, // Used when field is blank: actual date,
            // +/-number for offset from today, null for today
            appendText: "", // Display text following the input box, e.g. showing the format
            buttonText: "...", // Text for trigger button
            buttonImage: "", // URL for trigger button image
            buttonImageOnly: false, // True if the image appears alone, false if it appears on a button
            hideIfNoPrevNext: false, // True to hide next/previous month links
            // if not applicable, false to just disable them
            navigationAsDateFormat: false, // True if date formatting applied to prev/today/next links
            gotoCurrent: false, // True if today link goes back to current selection instead
            changeMonth: false, // True if month can be selected directly, false if only prev/next
            changeYear: false, // True if year can be selected directly, false if only prev/next
            yearRange: "c-10:c+10", // Range of years to display in drop-down,
            // either relative to today's year (-nn:+nn), relative to currently displayed year
            // (c-nn:c+nn), absolute (nnnn:nnnn), or a combination of the above (nnnn:-n)
            showOtherMonths: false, // True to show dates in other months, false to leave blank
            selectOtherMonths: false, // True to allow selection of dates in other months, false for unselectable
            showWeek: false, // True to show week of the year, false to not show it
            calculateWeek: this.iso8601Week, // How to calculate the week of the year,
            // takes a Date and returns the number of the week for it
            shortYearCutoff: "+10", // Short year values < this are in the current century,
            // > this are in the previous century,
            // string value starting with "+" for current year + value
            minDate: null, // The earliest selectable date, or null for no limit
            maxDate: null, // The latest selectable date, or null for no limit
            duration: "fast", // Duration of display/closure
            beforeShowDay: null, // Function that takes a date and returns an array with
            // [0] = true if selectable, false if not, [1] = custom CSS class name(s) or "",
            // [2] = cell title (optional), e.g. $.datepicker.noWeekends
            beforeShow: null, // Function that takes an input field and
            // returns a set of custom settings for the date picker
            onSelect: null, // Define a callback function when a date is selected
            onChangeMonthYear: null, // Define a callback function when the month or year is changed
            onClose: null, // Define a callback function when the datepicker is closed
            numberOfMonths: 1, // Number of months to show at a time
            showCurrentAtPos: 0, // The position in multipe months at which to show the current month (starting at 0)
            stepMonths: 1, // Number of months to step back/forward
            stepBigMonths: 12, // Number of months to step back/forward for the big links
            altField: "", // Selector for an alternate field to store selected dates into
            altFormat: "", // The date format to use for the alternate field
            constrainInput: true, // The input is constrained by the current date format
            showButtonPanel: false, // True to show button panel, false to not show it
            autoSize: false, // True to size the input for the date format, false to leave as is
            disabled: false // The initial disabled state
        };
        $.extend(this._defaults, this.regional[""]);
        this.dpDiv = bindHover($("<div id='" + this._mainDivId + "' class='ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>"));
    }

    $.extend(Datepicker.prototype, {
        /* Class name added to elements to indicate already configured with a date picker. */
        markerClassName: "hasDatepicker",

        //Keep track of the maximum number of rows displayed (see #7043)
        maxRows: 4,

        // TODO rename to "widget" when switching to widget factory
        _widgetDatepicker: function () {
            return this.dpDiv;
        },

        /* Override the default settings for all instances of the date picker.
         * @param  settings  object - the new settings to use as defaults (anonymous object)
         * @return the manager object
         */
        setDefaults: function (settings) {
            extendRemove(this._defaults, settings || {});
            return this;
        },

        /* Attach the date picker to a jQuery selection.
         * @param  target	element - the target input field or division or span
         * @param  settings  object - the new settings to use for this date picker instance (anonymous)
         */
        _attachDatepicker: function (target, settings) {
            var nodeName, inline, inst;
            nodeName = target.nodeName.toLowerCase();
            inline = (nodeName === "div" || nodeName === "span");
            if (!target.id) {
                this.uuid += 1;
                target.id = "dp" + this.uuid;
            }
            inst = this._newInst($(target), inline);
            inst.settings = $.extend({}, settings || {});
            if (nodeName === "input") {
                this._connectDatepicker(target, inst);
            } else if (inline) {
                this._inlineDatepicker(target, inst);
            }
        },

        /* Create a new instance object. */
        _newInst: function (target, inline) {
            var id = target[0].id.replace(/([^A-Za-z0-9_\-])/g, "\\\\$1"); // escape jQuery meta chars
            return {
                id: id, input: target, // associated target
                selectedDay: 0, selectedMonth: 0, selectedYear: 0, // current selection
                drawMonth: 0, drawYear: 0, // month being drawn
                inline: inline, // is datepicker inline or not
                dpDiv: (!inline ? this.dpDiv : // presentation div
                    bindHover($("<div class='" + this._inlineClass + " ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>")))
            };
        },

        /* Attach the date picker to an input field. */
        _connectDatepicker: function (target, inst) {
            var input = $(target);
            inst.append = $([]);
            inst.trigger = $([]);
            if (input.hasClass(this.markerClassName)) {
                return;
            }
            this._attachments(input, inst);
            input.addClass(this.markerClassName).keydown(this._doKeyDown).
                keypress(this._doKeyPress).keyup(this._doKeyUp);
            this._autoSize(inst);
            $.data(target, PROP_NAME, inst);
            //If disabled option is true, disable the datepicker once it has been attached to the input (see ticket #5665)
            if (inst.settings.disabled) {
                this._disableDatepicker(target);
            }
        },

        /* Make attachments based on settings. */
        _attachments: function (input, inst) {
            var showOn, buttonText, buttonImage,
                appendText = this._get(inst, "appendText"),
                isRTL = this._get(inst, "isRTL");

            if (inst.append) {
                inst.append.remove();
            }
            if (appendText) {
                inst.append = $("<span class='" + this._appendClass + "'>" + appendText + "</span>");
                input[isRTL ? "before" : "after"](inst.append);
            }

            input.unbind("focus", this._showDatepicker);

            if (inst.trigger) {
                inst.trigger.remove();
            }

            showOn = this._get(inst, "showOn");
            if (showOn === "focus" || showOn === "both") { // pop-up date picker when in the marked field
                input.focus(this._showDatepicker);
            }
            if (showOn === "button" || showOn === "both") { // pop-up date picker when button clicked
                buttonText = this._get(inst, "buttonText");
                buttonImage = this._get(inst, "buttonImage");
                inst.trigger = $(this._get(inst, "buttonImageOnly") ?
                    $("<img/>").addClass(this._triggerClass).
                        attr({ src: buttonImage, alt: buttonText, title: buttonText }) :
                    $("<button type='button'></button>").addClass(this._triggerClass).
                        html(!buttonImage ? buttonText : $("<img/>").attr(
                            { src: buttonImage, alt: buttonText, title: buttonText })));
                input[isRTL ? "before" : "after"](inst.trigger);
                inst.trigger.click(function () {
                    if ($.datepicker._datepickerShowing && $.datepicker._lastInput === input[0]) {
                        $.datepicker._hideDatepicker();
                    } else if ($.datepicker._datepickerShowing && $.datepicker._lastInput !== input[0]) {
                        $.datepicker._hideDatepicker();
                        $.datepicker._showDatepicker(input[0]);
                    } else {
                        $.datepicker._showDatepicker(input[0]);
                    }
                    return false;
                });
            }
        },

        /* Apply the maximum length for the date format. */
        _autoSize: function (inst) {
            if (this._get(inst, "autoSize") && !inst.inline) {
                var findMax, max, maxI, i,
                    date = new Date(2009, 12 - 1, 20), // Ensure double digits
                    dateFormat = this._get(inst, "dateFormat");

                if (dateFormat.match(/[DM]/)) {
                    findMax = function (names) {
                        max = 0;
                        maxI = 0;
                        for (i = 0; i < names.length; i++) {
                            if (names[i].length > max) {
                                max = names[i].length;
                                maxI = i;
                            }
                        }
                        return maxI;
                    };
                    date.setMonth(findMax(this._get(inst, (dateFormat.match(/MM/) ?
                        "monthNames" : "monthNamesShort"))));
                    date.setDate(findMax(this._get(inst, (dateFormat.match(/DD/) ?
                        "dayNames" : "dayNamesShort"))) + 20 - date.getDay());
                }
                inst.input.attr("size", this._formatDate(inst, date).length);
            }
        },

        /* Attach an inline date picker to a div. */
        _inlineDatepicker: function (target, inst) {
            var divSpan = $(target);
            if (divSpan.hasClass(this.markerClassName)) {
                return;
            }
            divSpan.addClass(this.markerClassName).append(inst.dpDiv);
            $.data(target, PROP_NAME, inst);
            this._setDate(inst, this._getDefaultDate(inst), true);
            this._updateDatepicker(inst);
            this._updateAlternate(inst);
            //If disabled option is true, disable the datepicker before showing it (see ticket #5665)
            if (inst.settings.disabled) {
                this._disableDatepicker(target);
            }
            // Set display:block in place of inst.dpDiv.show() which won't work on disconnected elements
            // http://bugs.jqueryui.com/ticket/7552 - A Datepicker created on a detached div has zero height
            inst.dpDiv.css("display", "block");
        },

        /* Pop-up the date picker in a "dialog" box.
         * @param  input element - ignored
         * @param  date	string or Date - the initial date to display
         * @param  onSelect  function - the function to call when a date is selected
         * @param  settings  object - update the dialog date picker instance's settings (anonymous object)
         * @param  pos int[2] - coordinates for the dialog's position within the screen or
         *					event - with x/y coordinates or
         *					leave empty for default (screen centre)
         * @return the manager object
         */
        _dialogDatepicker: function (input, date, onSelect, settings, pos) {
            var id, browserWidth, browserHeight, scrollX, scrollY,
                inst = this._dialogInst; // internal instance

            if (!inst) {
                this.uuid += 1;
                id = "dp" + this.uuid;
                this._dialogInput = $("<input type='text' id='" + id +
                    "' style='position: absolute; top: -100px; width: 0px;'/>");
                this._dialogInput.keydown(this._doKeyDown);
                $("body").append(this._dialogInput);
                inst = this._dialogInst = this._newInst(this._dialogInput, false);
                inst.settings = {};
                $.data(this._dialogInput[0], PROP_NAME, inst);
            }
            extendRemove(inst.settings, settings || {});
            date = (date && date.constructor === Date ? this._formatDate(inst, date) : date);
            this._dialogInput.val(date);

            this._pos = (pos ? (pos.length ? pos : [pos.pageX, pos.pageY]) : null);
            if (!this._pos) {
                browserWidth = document.documentElement.clientWidth;
                browserHeight = document.documentElement.clientHeight;
                scrollX = document.documentElement.scrollLeft || document.body.scrollLeft;
                scrollY = document.documentElement.scrollTop || document.body.scrollTop;
                this._pos = // should use actual width/height below
                    [(browserWidth / 2) - 100 + scrollX, (browserHeight / 2) - 150 + scrollY];
            }

            // move input on screen for focus, but hidden behind dialog
            this._dialogInput.css("left", (this._pos[0] + 20) + "px").css("top", this._pos[1] + "px");
            inst.settings.onSelect = onSelect;
            this._inDialog = true;
            this.dpDiv.addClass(this._dialogClass);
            this._showDatepicker(this._dialogInput[0]);
            if ($.blockUI) {
                $.blockUI(this.dpDiv);
            }
            $.data(this._dialogInput[0], PROP_NAME, inst);
            return this;
        },

        /* Detach a datepicker from its control.
         * @param  target	element - the target input field or division or span
         */
        _destroyDatepicker: function (target) {
            var nodeName,
                $target = $(target),
                inst = $.data(target, PROP_NAME);

            if (!$target.hasClass(this.markerClassName)) {
                return;
            }

            nodeName = target.nodeName.toLowerCase();
            $.removeData(target, PROP_NAME);
            if (nodeName === "input") {
                inst.append.remove();
                inst.trigger.remove();
                $target.removeClass(this.markerClassName).
                    unbind("focus", this._showDatepicker).
                    unbind("keydown", this._doKeyDown).
                    unbind("keypress", this._doKeyPress).
                    unbind("keyup", this._doKeyUp);
            } else if (nodeName === "div" || nodeName === "span") {
                $target.removeClass(this.markerClassName).empty();
            }
        },

        /* Enable the date picker to a jQuery selection.
         * @param  target	element - the target input field or division or span
         */
        _enableDatepicker: function (target) {
            var nodeName, inline,
                $target = $(target),
                inst = $.data(target, PROP_NAME);

            if (!$target.hasClass(this.markerClassName)) {
                return;
            }

            nodeName = target.nodeName.toLowerCase();
            if (nodeName === "input") {
                target.disabled = false;
                inst.trigger.filter("button").
                    each(function () { this.disabled = false; }).end().
                    filter("img").css({ opacity: "1.0", cursor: "" });
            } else if (nodeName === "div" || nodeName === "span") {
                inline = $target.children("." + this._inlineClass);
                inline.children().removeClass("ui-state-disabled");
                inline.find("select.ui-datepicker-month, select.ui-datepicker-year").
                    prop("disabled", false);
            }
            this._disabledInputs = $.map(this._disabledInputs,
                function (value) { return (value === target ? null : value); }); // delete entry
        },

        /* Disable the date picker to a jQuery selection.
         * @param  target	element - the target input field or division or span
         */
        _disableDatepicker: function (target) {
            var nodeName, inline,
                $target = $(target),
                inst = $.data(target, PROP_NAME);

            if (!$target.hasClass(this.markerClassName)) {
                return;
            }

            nodeName = target.nodeName.toLowerCase();
            if (nodeName === "input") {
                target.disabled = true;
                inst.trigger.filter("button").
                    each(function () { this.disabled = true; }).end().
                    filter("img").css({ opacity: "0.5", cursor: "default" });
            } else if (nodeName === "div" || nodeName === "span") {
                inline = $target.children("." + this._inlineClass);
                inline.children().addClass("ui-state-disabled");
                inline.find("select.ui-datepicker-month, select.ui-datepicker-year").
                    prop("disabled", true);
            }
            this._disabledInputs = $.map(this._disabledInputs,
                function (value) { return (value === target ? null : value); }); // delete entry
            this._disabledInputs[this._disabledInputs.length] = target;
        },

        /* Is the first field in a jQuery collection disabled as a datepicker?
         * @param  target	element - the target input field or division or span
         * @return boolean - true if disabled, false if enabled
         */
        _isDisabledDatepicker: function (target) {
            if (!target) {
                return false;
            }
            for (var i = 0; i < this._disabledInputs.length; i++) {
                if (this._disabledInputs[i] === target) {
                    return true;
                }
            }
            return false;
        },

        /* Retrieve the instance data for the target control.
         * @param  target  element - the target input field or division or span
         * @return  object - the associated instance data
         * @throws  error if a jQuery problem getting data
         */
        _getInst: function (target) {
            try {
                return $.data(target, PROP_NAME);
            }
            catch (err) {
                throw "Missing instance data for this datepicker";
            }
        },

        /* Update or retrieve the settings for a date picker attached to an input field or division.
         * @param  target  element - the target input field or division or span
         * @param  name	object - the new settings to update or
         *				string - the name of the setting to change or retrieve,
         *				when retrieving also "all" for all instance settings or
         *				"defaults" for all global defaults
         * @param  value   any - the new value for the setting
         *				(omit if above is an object or to retrieve a value)
         */
        _optionDatepicker: function (target, name, value) {
            var settings, date, minDate, maxDate,
                inst = this._getInst(target);

            if (arguments.length === 2 && typeof name === "string") {
                return (name === "defaults" ? $.extend({}, $.datepicker._defaults) :
                    (inst ? (name === "all" ? $.extend({}, inst.settings) :
                        this._get(inst, name)) : null));
            }

            settings = name || {};
            if (typeof name === "string") {
                settings = {};
                settings[name] = value;
            }

            if (inst) {
                if (this._curInst === inst) {
                    this._hideDatepicker();
                }

                date = this._getDateDatepicker(target, true);
                minDate = this._getMinMaxDate(inst, "min");
                maxDate = this._getMinMaxDate(inst, "max");
                extendRemove(inst.settings, settings);
                // reformat the old minDate/maxDate values if dateFormat changes and a new minDate/maxDate isn't provided
                if (minDate !== null && settings.dateFormat !== undefined && settings.minDate === undefined) {
                    inst.settings.minDate = this._formatDate(inst, minDate);
                }
                if (maxDate !== null && settings.dateFormat !== undefined && settings.maxDate === undefined) {
                    inst.settings.maxDate = this._formatDate(inst, maxDate);
                }
                if ("disabled" in settings) {
                    if (settings.disabled) {
                        this._disableDatepicker(target);
                    } else {
                        this._enableDatepicker(target);
                    }
                }
                this._attachments($(target), inst);
                this._autoSize(inst);
                this._setDate(inst, date);
                this._updateAlternate(inst);
                this._updateDatepicker(inst);
            }
        },

        // change method deprecated
        _changeDatepicker: function (target, name, value) {
            this._optionDatepicker(target, name, value);
        },

        /* Redraw the date picker attached to an input field or division.
         * @param  target  element - the target input field or division or span
         */
        _refreshDatepicker: function (target) {
            var inst = this._getInst(target);
            if (inst) {
                this._updateDatepicker(inst);
            }
        },

        /* Set the dates for a jQuery selection.
         * @param  target element - the target input field or division or span
         * @param  date	Date - the new date
         */
        _setDateDatepicker: function (target, date) {
            var inst = this._getInst(target);
            if (inst) {
                this._setDate(inst, date);
                this._updateDatepicker(inst);
                this._updateAlternate(inst);
            }
        },

        /* Get the date(s) for the first entry in a jQuery selection.
         * @param  target element - the target input field or division or span
         * @param  noDefault boolean - true if no default date is to be used
         * @return Date - the current date
         */
        _getDateDatepicker: function (target, noDefault) {
            var inst = this._getInst(target);
            if (inst && !inst.inline) {
                this._setDateFromField(inst, noDefault);
            }
            return (inst ? this._getDate(inst) : null);
        },

        /* Handle keystrokes. */
        _doKeyDown: function (event) {
            var onSelect, dateStr, sel,
                inst = $.datepicker._getInst(event.target),
                handled = true,
                isRTL = inst.dpDiv.is(".ui-datepicker-rtl");

            inst._keyEvent = true;
            if ($.datepicker._datepickerShowing) {
                switch (event.keyCode) {
                    case 9: $.datepicker._hideDatepicker();
                        handled = false;
                        break; // hide on tab out
                    case 13: sel = $("td." + $.datepicker._dayOverClass + ":not(." +
                        $.datepicker._currentClass + ")", inst.dpDiv);
                        if (sel[0]) {
                            $.datepicker._selectDay(event.target, inst.selectedMonth, inst.selectedYear, sel[0]);
                        }

                        onSelect = $.datepicker._get(inst, "onSelect");
                        if (onSelect) {
                            dateStr = $.datepicker._formatDate(inst);

                            // trigger custom callback
                            onSelect.apply((inst.input ? inst.input[0] : null), [dateStr, inst]);
                        } else {
                            $.datepicker._hideDatepicker();
                        }

                        return false; // don't submit the form
                    case 27: $.datepicker._hideDatepicker();
                        break; // hide on escape
                    case 33: $.datepicker._adjustDate(event.target, (event.ctrlKey ?
                        -$.datepicker._get(inst, "stepBigMonths") :
                        -$.datepicker._get(inst, "stepMonths")), "M");
                        break; // previous month/year on page up/+ ctrl
                    case 34: $.datepicker._adjustDate(event.target, (event.ctrlKey ?
                        +$.datepicker._get(inst, "stepBigMonths") :
                        +$.datepicker._get(inst, "stepMonths")), "M");
                        break; // next month/year on page down/+ ctrl
                    case 35: if (event.ctrlKey || event.metaKey) {
                        $.datepicker._clearDate(event.target);
                    }
                        handled = event.ctrlKey || event.metaKey;
                        break; // clear on ctrl or command +end
                    case 36: if (event.ctrlKey || event.metaKey) {
                        $.datepicker._gotoToday(event.target);
                    }
                        handled = event.ctrlKey || event.metaKey;
                        break; // current on ctrl or command +home
                    case 37: if (event.ctrlKey || event.metaKey) {
                        $.datepicker._adjustDate(event.target, (isRTL ? +1 : -1), "D");
                    }
                        handled = event.ctrlKey || event.metaKey;
                        // -1 day on ctrl or command +left
                        if (event.originalEvent.altKey) {
                            $.datepicker._adjustDate(event.target, (event.ctrlKey ?
                                -$.datepicker._get(inst, "stepBigMonths") :
                                -$.datepicker._get(inst, "stepMonths")), "M");
                        }
                        // next month/year on alt +left on Mac
                        break;
                    case 38: if (event.ctrlKey || event.metaKey) {
                        $.datepicker._adjustDate(event.target, -7, "D");
                    }
                        handled = event.ctrlKey || event.metaKey;
                        break; // -1 week on ctrl or command +up
                    case 39: if (event.ctrlKey || event.metaKey) {
                        $.datepicker._adjustDate(event.target, (isRTL ? -1 : +1), "D");
                    }
                        handled = event.ctrlKey || event.metaKey;
                        // +1 day on ctrl or command +right
                        if (event.originalEvent.altKey) {
                            $.datepicker._adjustDate(event.target, (event.ctrlKey ?
                                +$.datepicker._get(inst, "stepBigMonths") :
                                +$.datepicker._get(inst, "stepMonths")), "M");
                        }
                        // next month/year on alt +right
                        break;
                    case 40: if (event.ctrlKey || event.metaKey) {
                        $.datepicker._adjustDate(event.target, +7, "D");
                    }
                        handled = event.ctrlKey || event.metaKey;
                        break; // +1 week on ctrl or command +down
                    default: handled = false;
                }
            } else if (event.keyCode === 36 && event.ctrlKey) { // display the date picker on ctrl+home
                $.datepicker._showDatepicker(this);
            } else {
                handled = false;
            }

            if (handled) {
                event.preventDefault();
                event.stopPropagation();
            }
        },

        /* Filter entered characters - based on date format. */
        _doKeyPress: function (event) {
            var chars, chr,
                inst = $.datepicker._getInst(event.target);

            if ($.datepicker._get(inst, "constrainInput")) {
                chars = $.datepicker._possibleChars($.datepicker._get(inst, "dateFormat"));
                chr = String.fromCharCode(event.charCode == null ? event.keyCode : event.charCode);
                return event.ctrlKey || event.metaKey || (chr < " " || !chars || chars.indexOf(chr) > -1);
            }
        },

        /* Synchronise manual entry and field/alternate field. */
        _doKeyUp: function (event) {
            var date,
                inst = $.datepicker._getInst(event.target);

            if (inst.input.val() !== inst.lastVal) {
                try {
                    date = $.datepicker.parseDate($.datepicker._get(inst, "dateFormat"),
                        (inst.input ? inst.input.val() : null),
                        $.datepicker._getFormatConfig(inst));

                    if (date) { // only if valid
                        $.datepicker._setDateFromField(inst);
                        $.datepicker._updateAlternate(inst);
                        $.datepicker._updateDatepicker(inst);
                    }
                }
                catch (err) {
                }
            }
            return true;
        },

        /* Pop-up the date picker for a given input field.
         * If false returned from beforeShow event handler do not show.
         * @param  input  element - the input field attached to the date picker or
         *					event - if triggered by focus
         */
        _showDatepicker: function (input) {
            input = input.target || input;
            if (input.nodeName.toLowerCase() !== "input") { // find from button/image trigger
                input = $("input", input.parentNode)[0];
            }

            if ($.datepicker._isDisabledDatepicker(input) || $.datepicker._lastInput === input) { // already here
                return;
            }

            var inst, beforeShow, beforeShowSettings, isFixed,
                offset, showAnim, duration;

            inst = $.datepicker._getInst(input);
            if ($.datepicker._curInst && $.datepicker._curInst !== inst) {
                $.datepicker._curInst.dpDiv.stop(true, true);
                if (inst && $.datepicker._datepickerShowing) {
                    $.datepicker._hideDatepicker($.datepicker._curInst.input[0]);
                }
            }

            beforeShow = $.datepicker._get(inst, "beforeShow");
            beforeShowSettings = beforeShow ? beforeShow.apply(input, [input, inst]) : {};
            if (beforeShowSettings === false) {
                return;
            }
            extendRemove(inst.settings, beforeShowSettings);

            inst.lastVal = null;
            $.datepicker._lastInput = input;
            $.datepicker._setDateFromField(inst);

            if ($.datepicker._inDialog) { // hide cursor
                input.value = "";
            }
            if (!$.datepicker._pos) { // position below input
                $.datepicker._pos = $.datepicker._findPos(input);
                $.datepicker._pos[1] += input.offsetHeight; // add the height
            }

            isFixed = false;
            $(input).parents().each(function () {
                isFixed |= $(this).css("position") === "fixed";
                return !isFixed;
            });

            offset = { left: $.datepicker._pos[0], top: $.datepicker._pos[1] };
            $.datepicker._pos = null;
            //to avoid flashes on Firefox
            inst.dpDiv.empty();
            // determine sizing offscreen
            inst.dpDiv.css({ position: "absolute", display: "block", top: "-1000px" });
            $.datepicker._updateDatepicker(inst);
            // fix width for dynamic number of date pickers
            // and adjust position before showing
            offset = $.datepicker._checkOffset(inst, offset, isFixed);
            inst.dpDiv.css({
                position: ($.datepicker._inDialog && $.blockUI ?
                    "static" : (isFixed ? "fixed" : "absolute")), display: "none",
                left: offset.left + "px", top: offset.top + "px"
            });

            if (!inst.inline) {
                showAnim = $.datepicker._get(inst, "showAnim");
                duration = $.datepicker._get(inst, "duration");
                inst.dpDiv.zIndex($(input).zIndex() + 1);
                $.datepicker._datepickerShowing = true;

                if ($.effects && $.effects.effect[showAnim]) {
                    inst.dpDiv.show(showAnim, $.datepicker._get(inst, "showOptions"), duration);
                } else {
                    inst.dpDiv[showAnim || "show"](showAnim ? duration : null);
                }

                if ($.datepicker._shouldFocusInput(inst)) {
                    inst.input.focus();
                }

                $.datepicker._curInst = inst;
            }
        },

        /* Generate the date picker content. */
        _updateDatepicker: function (inst) {
            this.maxRows = 4; //Reset the max number of rows being displayed (see #7043)
            instActive = inst; // for delegate hover events
            inst.dpDiv.empty().append(this._generateHTML(inst));
            this._attachHandlers(inst);
            inst.dpDiv.find("." + this._dayOverClass + " a").mouseover();

            var origyearshtml,
                numMonths = this._getNumberOfMonths(inst),
                cols = numMonths[1],
                width = 17;

            inst.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width("");
            if (cols > 1) {
                inst.dpDiv.addClass("ui-datepicker-multi-" + cols).css("width", (width * cols) + "em");
            }
            inst.dpDiv[(numMonths[0] !== 1 || numMonths[1] !== 1 ? "add" : "remove") +
                "Class"]("ui-datepicker-multi");
            inst.dpDiv[(this._get(inst, "isRTL") ? "add" : "remove") +
                "Class"]("ui-datepicker-rtl");

            if (inst === $.datepicker._curInst && $.datepicker._datepickerShowing && $.datepicker._shouldFocusInput(inst)) {
                inst.input.focus();
            }

            // deffered render of the years select (to avoid flashes on Firefox)
            if (inst.yearshtml) {
                origyearshtml = inst.yearshtml;
                setTimeout(function () {
                    //assure that inst.yearshtml didn't change.
                    if (origyearshtml === inst.yearshtml && inst.yearshtml) {
                        inst.dpDiv.find("select.ui-datepicker-year:first").replaceWith(inst.yearshtml);
                    }
                    origyearshtml = inst.yearshtml = null;
                }, 0);
            }
        },

        // #6694 - don't focus the input if it's already focused
        // this breaks the change event in IE
        // Support: IE and jQuery <1.9
        _shouldFocusInput: function (inst) {
            return inst.input && inst.input.is(":visible") && !inst.input.is(":disabled") && !inst.input.is(":focus");
        },

        /* Check positioning to remain on screen. */
        _checkOffset: function (inst, offset, isFixed) {
            var dpWidth = inst.dpDiv.outerWidth(),
                dpHeight = inst.dpDiv.outerHeight(),
                inputWidth = inst.input ? inst.input.outerWidth() : 0,
                inputHeight = inst.input ? inst.input.outerHeight() : 0,
                viewWidth = document.documentElement.clientWidth + (isFixed ? 0 : $(document).scrollLeft()),
                viewHeight = document.documentElement.clientHeight + (isFixed ? 0 : $(document).scrollTop());

            offset.left -= (this._get(inst, "isRTL") ? (dpWidth - inputWidth) : 0);
            offset.left -= (isFixed && offset.left === inst.input.offset().left) ? $(document).scrollLeft() : 0;
            offset.top -= (isFixed && offset.top === (inst.input.offset().top + inputHeight)) ? $(document).scrollTop() : 0;

            // now check if datepicker is showing outside window viewport - move to a better place if so.
            offset.left -= Math.min(offset.left, (offset.left + dpWidth > viewWidth && viewWidth > dpWidth) ?
                Math.abs(offset.left + dpWidth - viewWidth) : 0);
            offset.top -= Math.min(offset.top, (offset.top + dpHeight > viewHeight && viewHeight > dpHeight) ?
                Math.abs(dpHeight + inputHeight) : 0);

            return offset;
        },

        /* Find an object's position on the screen. */
        _findPos: function (obj) {
            var position,
                inst = this._getInst(obj),
                isRTL = this._get(inst, "isRTL");

            while (obj && (obj.type === "hidden" || obj.nodeType !== 1 || $.expr.filters.hidden(obj))) {
                obj = obj[isRTL ? "previousSibling" : "nextSibling"];
            }

            position = $(obj).offset();
            return [position.left, position.top];
        },

        /* Hide the date picker from view.
         * @param  input  element - the input field attached to the date picker
         */
        _hideDatepicker: function (input) {
            var showAnim, duration, postProcess, onClose,
                inst = this._curInst;

            if (!inst || (input && inst !== $.data(input, PROP_NAME))) {
                return;
            }

            if (this._datepickerShowing) {
                showAnim = this._get(inst, "showAnim");
                duration = this._get(inst, "duration");
                postProcess = function () {
                    $.datepicker._tidyDialog(inst);
                };

                // DEPRECATED: after BC for 1.8.x $.effects[ showAnim ] is not needed
                if ($.effects && ($.effects.effect[showAnim] || $.effects[showAnim])) {
                    inst.dpDiv.hide(showAnim, $.datepicker._get(inst, "showOptions"), duration, postProcess);
                } else {
                    inst.dpDiv[(showAnim === "slideDown" ? "slideUp" :
                        (showAnim === "fadeIn" ? "fadeOut" : "hide"))]((showAnim ? duration : null), postProcess);
                }

                if (!showAnim) {
                    postProcess();
                }
                this._datepickerShowing = false;

                onClose = this._get(inst, "onClose");
                if (onClose) {
                    onClose.apply((inst.input ? inst.input[0] : null), [(inst.input ? inst.input.val() : ""), inst]);
                }

                this._lastInput = null;
                if (this._inDialog) {
                    this._dialogInput.css({ position: "absolute", left: "0", top: "-100px" });
                    if ($.blockUI) {
                        $.unblockUI();
                        $("body").append(this.dpDiv);
                    }
                }
                this._inDialog = false;
            }
        },

        /* Tidy up after a dialog display. */
        _tidyDialog: function (inst) {
            inst.dpDiv.removeClass(this._dialogClass).unbind(".ui-datepicker-calendar");
        },

        /* Close date picker if clicked elsewhere. */
        _checkExternalClick: function (event) {
            if (!$.datepicker._curInst) {
                return;
            }

            var $target = $(event.target),
                inst = $.datepicker._getInst($target[0]);

            if ((($target[0].id !== $.datepicker._mainDivId &&
                $target.parents("#" + $.datepicker._mainDivId).length === 0 &&
                !$target.hasClass($.datepicker.markerClassName) &&
                !$target.closest("." + $.datepicker._triggerClass).length &&
                $.datepicker._datepickerShowing && !($.datepicker._inDialog && $.blockUI))) ||
                ($target.hasClass($.datepicker.markerClassName) && $.datepicker._curInst !== inst)) {
                $.datepicker._hideDatepicker();
            }
        },

        /* Adjust one of the date sub-fields. */
        _adjustDate: function (id, offset, period) {
            var target = $(id),
                inst = this._getInst(target[0]);

            if (this._isDisabledDatepicker(target[0])) {
                return;
            }
            this._adjustInstDate(inst, offset +
                (period === "M" ? this._get(inst, "showCurrentAtPos") : 0), // undo positioning
                period);
            this._updateDatepicker(inst);
        },

        /* Action for current link. */
        _gotoToday: function (id) {
            var date,
                target = $(id),
                inst = this._getInst(target[0]);

            if (this._get(inst, "gotoCurrent") && inst.currentDay) {
                inst.selectedDay = inst.currentDay;
                inst.drawMonth = inst.selectedMonth = inst.currentMonth;
                inst.drawYear = inst.selectedYear = inst.currentYear;
            } else {
                date = new Date();
                inst.selectedDay = date.getDate();
                inst.drawMonth = inst.selectedMonth = date.getMonth();
                inst.drawYear = inst.selectedYear = date.getFullYear();
            }
            this._notifyChange(inst);
            this._adjustDate(target);
        },

        /* Action for selecting a new month/year. */
        _selectMonthYear: function (id, select, period) {
            var target = $(id),
                inst = this._getInst(target[0]);

            inst["selected" + (period === "M" ? "Month" : "Year")] =
                inst["draw" + (period === "M" ? "Month" : "Year")] =
                parseInt(select.options[select.selectedIndex].value, 10);

            this._notifyChange(inst);
            this._adjustDate(target);
        },

        /* Action for selecting a day. */
        _selectDay: function (id, month, year, td) {
            var inst,
                target = $(id);

            if ($(td).hasClass(this._unselectableClass) || this._isDisabledDatepicker(target[0])) {
                return;
            }

            inst = this._getInst(target[0]);
            inst.selectedDay = inst.currentDay = $("a", td).html();
            inst.selectedMonth = inst.currentMonth = month;
            inst.selectedYear = inst.currentYear = year;
            this._selectDate(id, this._formatDate(inst,
                inst.currentDay, inst.currentMonth, inst.currentYear));
        },

        /* Erase the input field and hide the date picker. */
        _clearDate: function (id) {
            var target = $(id);
            this._selectDate(target, "");
        },

        /* Update the input field with the selected date. */
        _selectDate: function (id, dateStr) {
            var onSelect,
                target = $(id),
                inst = this._getInst(target[0]);

            dateStr = (dateStr != null ? dateStr : this._formatDate(inst));
            if (inst.input) {
                inst.input.val(dateStr);
            }
            this._updateAlternate(inst);

            onSelect = this._get(inst, "onSelect");
            if (onSelect) {
                onSelect.apply((inst.input ? inst.input[0] : null), [dateStr, inst]);  // trigger custom callback
            } else if (inst.input) {
                inst.input.trigger("change"); // fire the change event
            }

            if (inst.inline) {
                this._updateDatepicker(inst);
            } else {
                this._hideDatepicker();
                this._lastInput = inst.input[0];
                if (typeof (inst.input[0]) !== "object") {
                    inst.input.focus(); // restore focus
                }
                this._lastInput = null;
            }
        },

        /* Update any alternate field to synchronise with the main field. */
        _updateAlternate: function (inst) {
            var altFormat, date, dateStr,
                altField = this._get(inst, "altField");

            if (altField) { // update alternate field too
                altFormat = this._get(inst, "altFormat") || this._get(inst, "dateFormat");
                date = this._getDate(inst);
                dateStr = this.formatDate(altFormat, date, this._getFormatConfig(inst));
                $(altField).each(function () { $(this).val(dateStr); });
            }
        },

        /* Set as beforeShowDay function to prevent selection of weekends.
         * @param  date  Date - the date to customise
         * @return [boolean, string] - is this date selectable?, what is its CSS class?
         */
        noWeekends: function (date) {
            var day = date.getDay();
            return [(day > 0 && day < 6), ""];
        },

        /* Set as calculateWeek to determine the week of the year based on the ISO 8601 definition.
         * @param  date  Date - the date to get the week for
         * @return  number - the number of the week within the year that contains this date
         */
        iso8601Week: function (date) {
            var time,
                checkDate = new Date(date.getTime());

            // Find Thursday of this week starting on Monday
            checkDate.setDate(checkDate.getDate() + 4 - (checkDate.getDay() || 7));

            time = checkDate.getTime();
            checkDate.setMonth(0); // Compare with Jan 1
            checkDate.setDate(1);
            return Math.floor(Math.round((time - checkDate) / 86400000) / 7) + 1;
        },

        /* Parse a string value into a date object.
         * See formatDate below for the possible formats.
         *
         * @param  format string - the expected format of the date
         * @param  value string - the date in the above format
         * @param  settings Object - attributes include:
         *					shortYearCutoff  number - the cutoff year for determining the century (optional)
         *					dayNamesShort	string[7] - abbreviated names of the days from Sunday (optional)
         *					dayNames		string[7] - names of the days from Sunday (optional)
         *					monthNamesShort string[12] - abbreviated names of the months (optional)
         *					monthNames		string[12] - names of the months (optional)
         * @return  Date - the extracted date value or null if value is blank
         */
        parseDate: function (format, value, settings) {
            if (format == null || value == null) {
                throw "Invalid arguments";
            }

            value = (typeof value === "object" ? value.toString() : value + "");
            if (value === "") {
                return null;
            }

            var iFormat, dim, extra,
                iValue = 0,
                shortYearCutoffTemp = (settings ? settings.shortYearCutoff : null) || this._defaults.shortYearCutoff,
                shortYearCutoff = (typeof shortYearCutoffTemp !== "string" ? shortYearCutoffTemp :
                    new Date().getFullYear() % 100 + parseInt(shortYearCutoffTemp, 10)),
                dayNamesShort = (settings ? settings.dayNamesShort : null) || this._defaults.dayNamesShort,
                dayNames = (settings ? settings.dayNames : null) || this._defaults.dayNames,
                monthNamesShort = (settings ? settings.monthNamesShort : null) || this._defaults.monthNamesShort,
                monthNames = (settings ? settings.monthNames : null) || this._defaults.monthNames,
                year = -1,
                month = -1,
                day = -1,
                doy = -1,
                literal = false,
                date,
                // Check whether a format character is doubled
                lookAhead = function (match) {
                    var matches = (iFormat + 1 < format.length && format.charAt(iFormat + 1) === match);
                    if (matches) {
                        iFormat++;
                    }
                    return matches;
                },
                // Extract a number from the string value
                getNumber = function (match) {
                    var isDoubled = lookAhead(match),
                        size = (match === "@" ? 14 : (match === "!" ? 20 :
                            (match === "y" && isDoubled ? 4 : (match === "o" ? 3 : 2)))),
                        digits = new RegExp("^\\d{1," + size + "}"),
                        num = value.substring(iValue).match(digits);
                    if (!num) {
                        throw "Missing number at position " + iValue;
                    }
                    iValue += num[0].length;
                    return parseInt(num[0], 10);
                },
                // Extract a name from the string value and convert to an index
                getName = function (match, shortNames, longNames) {
                    var index = -1,
                        names = $.map(lookAhead(match) ? longNames : shortNames, function (v, k) {
                            return [[k, v]];
                        }).sort(function (a, b) {
                            return -(a[1].length - b[1].length);
                        });

                    $.each(names, function (i, pair) {
                        var name = pair[1];
                        if (value.substr(iValue, name.length).toLowerCase() === name.toLowerCase()) {
                            index = pair[0];
                            iValue += name.length;
                            return false;
                        }
                    });
                    if (index !== -1) {
                        return index + 1;
                    } else {
                        throw "Unknown name at position " + iValue;
                    }
                },
                // Confirm that a literal character matches the string value
                checkLiteral = function () {
                    if (value.charAt(iValue) !== format.charAt(iFormat)) {
                        throw "Unexpected literal at position " + iValue;
                    }
                    iValue++;
                };

            for (iFormat = 0; iFormat < format.length; iFormat++) {
                if (literal) {
                    if (format.charAt(iFormat) === "'" && !lookAhead("'")) {
                        literal = false;
                    } else {
                        checkLiteral();
                    }
                } else {
                    switch (format.charAt(iFormat)) {
                        case "d":
                            day = getNumber("d");
                            break;
                        case "D":
                            getName("D", dayNamesShort, dayNames);
                            break;
                        case "o":
                            doy = getNumber("o");
                            break;
                        case "m":
                            month = getNumber("m");
                            break;
                        case "M":
                            month = getName("M", monthNamesShort, monthNames);
                            break;
                        case "y":
                            year = getNumber("y");
                            break;
                        case "@":
                            date = new Date(getNumber("@"));
                            year = date.getFullYear();
                            month = date.getMonth() + 1;
                            day = date.getDate();
                            break;
                        case "!":
                            date = new Date((getNumber("!") - this._ticksTo1970) / 10000);
                            year = date.getFullYear();
                            month = date.getMonth() + 1;
                            day = date.getDate();
                            break;
                        case "'":
                            if (lookAhead("'")) {
                                checkLiteral();
                            } else {
                                literal = true;
                            }
                            break;
                        default:
                            checkLiteral();
                    }
                }
            }

            if (iValue < value.length) {
                extra = value.substr(iValue);
                if (!/^\s+/.test(extra)) {
                    throw "Extra/unparsed characters found in date: " + extra;
                }
            }

            if (year === -1) {
                year = new Date().getFullYear();
            } else if (year < 100) {
                year += new Date().getFullYear() - new Date().getFullYear() % 100 +
                    (year <= shortYearCutoff ? 0 : -100);
            }

            if (doy > -1) {
                month = 1;
                day = doy;
                do {
                    dim = this._getDaysInMonth(year, month - 1);
                    if (day <= dim) {
                        break;
                    }
                    month++;
                    day -= dim;
                } while (true);
            }

            date = this._daylightSavingAdjust(new Date(year, month - 1, day));
            if (date.getFullYear() !== year || date.getMonth() + 1 !== month || date.getDate() !== day) {
                throw "Invalid date"; // E.g. 31/02/00
            }
            return date;
        },

        /* Standard date formats. */
        ATOM: "yy-mm-dd", // RFC 3339 (ISO 8601)
        COOKIE: "D, dd M yy",
        ISO_8601: "yy-mm-dd",
        RFC_822: "D, d M y",
        RFC_850: "DD, dd-M-y",
        RFC_1036: "D, d M y",
        RFC_1123: "D, d M yy",
        RFC_2822: "D, d M yy",
        RSS: "D, d M y", // RFC 822
        TICKS: "!",
        TIMESTAMP: "@",
        W3C: "yy-mm-dd", // ISO 8601

        _ticksTo1970: (((1970 - 1) * 365 + Math.floor(1970 / 4) - Math.floor(1970 / 100) +
            Math.floor(1970 / 400)) * 24 * 60 * 60 * 10000000),

        /* Format a date object into a string value.
         * The format can be combinations of the following:
         * d  - day of month (no leading zero)
         * dd - day of month (two digit)
         * o  - day of year (no leading zeros)
         * oo - day of year (three digit)
         * D  - day name short
         * DD - day name long
         * m  - month of year (no leading zero)
         * mm - month of year (two digit)
         * M  - month name short
         * MM - month name long
         * y  - year (two digit)
         * yy - year (four digit)
         * @ - Unix timestamp (ms since 01/01/1970)
         * ! - Windows ticks (100ns since 01/01/0001)
         * "..." - literal text
         * '' - single quote
         *
         * @param  format string - the desired format of the date
         * @param  date Date - the date value to format
         * @param  settings Object - attributes include:
         *					dayNamesShort	string[7] - abbreviated names of the days from Sunday (optional)
         *					dayNames		string[7] - names of the days from Sunday (optional)
         *					monthNamesShort string[12] - abbreviated names of the months (optional)
         *					monthNames		string[12] - names of the months (optional)
         * @return  string - the date in the above format
         */
        formatDate: function (format, date, settings) {
            if (!date) {
                return "";
            }

            var iFormat,
                dayNamesShort = (settings ? settings.dayNamesShort : null) || this._defaults.dayNamesShort,
                dayNames = (settings ? settings.dayNames : null) || this._defaults.dayNames,
                monthNamesShort = (settings ? settings.monthNamesShort : null) || this._defaults.monthNamesShort,
                monthNames = (settings ? settings.monthNames : null) || this._defaults.monthNames,
                // Check whether a format character is doubled
                lookAhead = function (match) {
                    var matches = (iFormat + 1 < format.length && format.charAt(iFormat + 1) === match);
                    if (matches) {
                        iFormat++;
                    }
                    return matches;
                },
                // Format a number, with leading zero if necessary
                formatNumber = function (match, value, len) {
                    var num = "" + value;
                    if (lookAhead(match)) {
                        while (num.length < len) {
                            num = "0" + num;
                        }
                    }
                    return num;
                },
                // Format a name, short or long as requested
                formatName = function (match, value, shortNames, longNames) {
                    return (lookAhead(match) ? longNames[value] : shortNames[value]);
                },
                output = "",
                literal = false;

            if (date) {
                for (iFormat = 0; iFormat < format.length; iFormat++) {
                    if (literal) {
                        if (format.charAt(iFormat) === "'" && !lookAhead("'")) {
                            literal = false;
                        } else {
                            output += format.charAt(iFormat);
                        }
                    } else {
                        switch (format.charAt(iFormat)) {
                            case "d":
                                output += formatNumber("d", date.getDate(), 2);
                                break;
                            case "D":
                                output += formatName("D", date.getDay(), dayNamesShort, dayNames);
                                break;
                            case "o":
                                output += formatNumber("o",
                                    Math.round((new Date(date.getFullYear(), date.getMonth(), date.getDate()).getTime() - new Date(date.getFullYear(), 0, 0).getTime()) / 86400000), 3);
                                break;
                            case "m":
                                output += formatNumber("m", date.getMonth() + 1, 2);
                                break;
                            case "M":
                                output += formatName("M", date.getMonth(), monthNamesShort, monthNames);
                                break;
                            case "y":
                                output += (lookAhead("y") ? date.getFullYear() :
                                    (date.getYear() % 100 < 10 ? "0" : "") + date.getYear() % 100);
                                break;
                            case "@":
                                output += date.getTime();
                                break;
                            case "!":
                                output += date.getTime() * 10000 + this._ticksTo1970;
                                break;
                            case "'":
                                if (lookAhead("'")) {
                                    output += "'";
                                } else {
                                    literal = true;
                                }
                                break;
                            default:
                                output += format.charAt(iFormat);
                        }
                    }
                }
            }
            return output;
        },

        /* Extract all possible characters from the date format. */
        _possibleChars: function (format) {
            var iFormat,
                chars = "",
                literal = false,
                // Check whether a format character is doubled
                lookAhead = function (match) {
                    var matches = (iFormat + 1 < format.length && format.charAt(iFormat + 1) === match);
                    if (matches) {
                        iFormat++;
                    }
                    return matches;
                };

            for (iFormat = 0; iFormat < format.length; iFormat++) {
                if (literal) {
                    if (format.charAt(iFormat) === "'" && !lookAhead("'")) {
                        literal = false;
                    } else {
                        chars += format.charAt(iFormat);
                    }
                } else {
                    switch (format.charAt(iFormat)) {
                        case "d": case "m": case "y": case "@":
                            chars += "0123456789";
                            break;
                        case "D": case "M":
                            return null; // Accept anything
                        case "'":
                            if (lookAhead("'")) {
                                chars += "'";
                            } else {
                                literal = true;
                            }
                            break;
                        default:
                            chars += format.charAt(iFormat);
                    }
                }
            }
            return chars;
        },

        /* Get a setting value, defaulting if necessary. */
        _get: function (inst, name) {
            return inst.settings[name] !== undefined ?
                inst.settings[name] : this._defaults[name];
        },

        /* Parse existing date and initialise date picker. */
        _setDateFromField: function (inst, noDefault) {
            if (inst.input.val() === inst.lastVal) {
                return;
            }

            var dateFormat = this._get(inst, "dateFormat"),
                dates = inst.lastVal = inst.input ? inst.input.val() : null,
                defaultDate = this._getDefaultDate(inst),
                date = defaultDate,
                settings = this._getFormatConfig(inst);

            try {
                date = this.parseDate(dateFormat, dates, settings) || defaultDate;
            } catch (event) {
                dates = (noDefault ? "" : dates);
            }
            inst.selectedDay = date.getDate();
            inst.drawMonth = inst.selectedMonth = date.getMonth();
            inst.drawYear = inst.selectedYear = date.getFullYear();
            inst.currentDay = (dates ? date.getDate() : 0);
            inst.currentMonth = (dates ? date.getMonth() : 0);
            inst.currentYear = (dates ? date.getFullYear() : 0);
            this._adjustInstDate(inst);
        },

        /* Retrieve the default date shown on opening. */
        _getDefaultDate: function (inst) {
            return this._restrictMinMax(inst,
                this._determineDate(inst, this._get(inst, "defaultDate"), new Date()));
        },

        /* A date may be specified as an exact value or a relative one. */
        _determineDate: function (inst, date, defaultDate) {
            var offsetNumeric = function (offset) {
                var date = new Date();
                date.setDate(date.getDate() + offset);
                return date;
            },
                offsetString = function (offset) {
                    try {
                        return $.datepicker.parseDate($.datepicker._get(inst, "dateFormat"),
                            offset, $.datepicker._getFormatConfig(inst));
                    }
                    catch (e) {
                        // Ignore
                    }

                    var date = (offset.toLowerCase().match(/^c/) ?
                        $.datepicker._getDate(inst) : null) || new Date(),
                        year = date.getFullYear(),
                        month = date.getMonth(),
                        day = date.getDate(),
                        pattern = /([+\-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g,
                        matches = pattern.exec(offset);

                    while (matches) {
                        switch (matches[2] || "d") {
                            case "d": case "D":
                                day += parseInt(matches[1], 10); break;
                            case "w": case "W":
                                day += parseInt(matches[1], 10) * 7; break;
                            case "m": case "M":
                                month += parseInt(matches[1], 10);
                                day = Math.min(day, $.datepicker._getDaysInMonth(year, month));
                                break;
                            case "y": case "Y":
                                year += parseInt(matches[1], 10);
                                day = Math.min(day, $.datepicker._getDaysInMonth(year, month));
                                break;
                        }
                        matches = pattern.exec(offset);
                    }
                    return new Date(year, month, day);
                },
                newDate = (date == null || date === "" ? defaultDate : (typeof date === "string" ? offsetString(date) :
                    (typeof date === "number" ? (isNaN(date) ? defaultDate : offsetNumeric(date)) : new Date(date.getTime()))));

            newDate = (newDate && newDate.toString() === "Invalid Date" ? defaultDate : newDate);
            if (newDate) {
                newDate.setHours(0);
                newDate.setMinutes(0);
                newDate.setSeconds(0);
                newDate.setMilliseconds(0);
            }
            return this._daylightSavingAdjust(newDate);
        },

        /* Handle switch to/from daylight saving.
         * Hours may be non-zero on daylight saving cut-over:
         * > 12 when midnight changeover, but then cannot generate
         * midnight datetime, so jump to 1AM, otherwise reset.
         * @param  date  (Date) the date to check
         * @return  (Date) the corrected date
         */
        _daylightSavingAdjust: function (date) {
            if (!date) {
                return null;
            }
            date.setHours(date.getHours() > 12 ? date.getHours() + 2 : 0);
            return date;
        },

        /* Set the date(s) directly. */
        _setDate: function (inst, date, noChange) {
            var clear = !date,
                origMonth = inst.selectedMonth,
                origYear = inst.selectedYear,
                newDate = this._restrictMinMax(inst, this._determineDate(inst, date, new Date()));

            inst.selectedDay = inst.currentDay = newDate.getDate();
            inst.drawMonth = inst.selectedMonth = inst.currentMonth = newDate.getMonth();
            inst.drawYear = inst.selectedYear = inst.currentYear = newDate.getFullYear();
            if ((origMonth !== inst.selectedMonth || origYear !== inst.selectedYear) && !noChange) {
                this._notifyChange(inst);
            }
            this._adjustInstDate(inst);
            if (inst.input) {
                inst.input.val(clear ? "" : this._formatDate(inst));
            }
        },

        /* Retrieve the date(s) directly. */
        _getDate: function (inst) {
            var startDate = (!inst.currentYear || (inst.input && inst.input.val() === "") ? null :
                this._daylightSavingAdjust(new Date(
                    inst.currentYear, inst.currentMonth, inst.currentDay)));
            return startDate;
        },

        /* Attach the onxxx handlers.  These are declared statically so
         * they work with static code transformers like Caja.
         */
        _attachHandlers: function (inst) {
            var stepMonths = this._get(inst, "stepMonths"),
                id = "#" + inst.id.replace(/\\\\/g, "\\");
            inst.dpDiv.find("[data-handler]").map(function () {
                var handler = {
                    prev: function () {
                        $.datepicker._adjustDate(id, -stepMonths, "M");
                    },
                    next: function () {
                        $.datepicker._adjustDate(id, +stepMonths, "M");
                    },
                    hide: function () {
                        $.datepicker._hideDatepicker();
                    },
                    today: function () {
                        $.datepicker._gotoToday(id);
                    },
                    selectDay: function () {
                        $.datepicker._selectDay(id, +this.getAttribute("data-month"), +this.getAttribute("data-year"), this);
                        return false;
                    },
                    selectMonth: function () {
                        $.datepicker._selectMonthYear(id, this, "M");
                        return false;
                    },
                    selectYear: function () {
                        $.datepicker._selectMonthYear(id, this, "Y");
                        return false;
                    }
                };
                $(this).bind(this.getAttribute("data-event"), handler[this.getAttribute("data-handler")]);
            });
        },

        /* Generate the HTML for the current state of the date picker. */
        _generateHTML: function (inst) {
            var maxDraw, prevText, prev, nextText, next, currentText, gotoDate,
                controls, buttonPanel, firstDay, showWeek, dayNames, dayNamesMin,
                monthNames, monthNamesShort, beforeShowDay, showOtherMonths,
                selectOtherMonths, defaultDate, html, dow, row, group, col, selectedDate,
                cornerClass, calender, thead, day, daysInMonth, leadDays, curRows, numRows,
                printDate, dRow, tbody, daySettings, otherMonth, unselectable,
                tempDate = new Date(),
                today = this._daylightSavingAdjust(
                    new Date(tempDate.getFullYear(), tempDate.getMonth(), tempDate.getDate())), // clear time
                isRTL = this._get(inst, "isRTL"),
                showButtonPanel = this._get(inst, "showButtonPanel"),
                hideIfNoPrevNext = this._get(inst, "hideIfNoPrevNext"),
                navigationAsDateFormat = this._get(inst, "navigationAsDateFormat"),
                numMonths = this._getNumberOfMonths(inst),
                showCurrentAtPos = this._get(inst, "showCurrentAtPos"),
                stepMonths = this._get(inst, "stepMonths"),
                isMultiMonth = (numMonths[0] !== 1 || numMonths[1] !== 1),
                currentDate = this._daylightSavingAdjust((!inst.currentDay ? new Date(9999, 9, 9) :
                    new Date(inst.currentYear, inst.currentMonth, inst.currentDay))),
                minDate = this._getMinMaxDate(inst, "min"),
                maxDate = this._getMinMaxDate(inst, "max"),
                drawMonth = inst.drawMonth - showCurrentAtPos,
                drawYear = inst.drawYear;

            if (drawMonth < 0) {
                drawMonth += 12;
                drawYear--;
            }
            if (maxDate) {
                maxDraw = this._daylightSavingAdjust(new Date(maxDate.getFullYear(),
                    maxDate.getMonth() - (numMonths[0] * numMonths[1]) + 1, maxDate.getDate()));
                maxDraw = (minDate && maxDraw < minDate ? minDate : maxDraw);
                while (this._daylightSavingAdjust(new Date(drawYear, drawMonth, 1)) > maxDraw) {
                    drawMonth--;
                    if (drawMonth < 0) {
                        drawMonth = 11;
                        drawYear--;
                    }
                }
            }
            inst.drawMonth = drawMonth;
            inst.drawYear = drawYear;

            prevText = this._get(inst, "prevText");
            prevText = (!navigationAsDateFormat ? prevText : this.formatDate(prevText,
                this._daylightSavingAdjust(new Date(drawYear, drawMonth - stepMonths, 1)),
                this._getFormatConfig(inst)));

            prev = (this._canAdjustMonth(inst, -1, drawYear, drawMonth) ?
                "<a class='ui-datepicker-prev ui-corner-all' data-handler='prev' data-event='click'" +
                " title='" + prevText + "'><span class='ui-icon ui-icon-circle-triangle-" + (isRTL ? "e" : "w") + "'>" + prevText + "</span></a>" :
                (hideIfNoPrevNext ? "" : "<a class='ui-datepicker-prev ui-corner-all ui-state-disabled' title='" + prevText + "'><span class='ui-icon ui-icon-circle-triangle-" + (isRTL ? "e" : "w") + "'>" + prevText + "</span></a>"));

            nextText = this._get(inst, "nextText");
            nextText = (!navigationAsDateFormat ? nextText : this.formatDate(nextText,
                this._daylightSavingAdjust(new Date(drawYear, drawMonth + stepMonths, 1)),
                this._getFormatConfig(inst)));

            next = (this._canAdjustMonth(inst, +1, drawYear, drawMonth) ?
                "<a class='ui-datepicker-next ui-corner-all' data-handler='next' data-event='click'" +
                " title='" + nextText + "'><span class='ui-icon ui-icon-circle-triangle-" + (isRTL ? "w" : "e") + "'>" + nextText + "</span></a>" :
                (hideIfNoPrevNext ? "" : "<a class='ui-datepicker-next ui-corner-all ui-state-disabled' title='" + nextText + "'><span class='ui-icon ui-icon-circle-triangle-" + (isRTL ? "w" : "e") + "'>" + nextText + "</span></a>"));

            currentText = this._get(inst, "currentText");
            gotoDate = (this._get(inst, "gotoCurrent") && inst.currentDay ? currentDate : today);
            currentText = (!navigationAsDateFormat ? currentText :
                this.formatDate(currentText, gotoDate, this._getFormatConfig(inst)));

            controls = (!inst.inline ? "<button type='button' class='ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all' data-handler='hide' data-event='click'>" +
                this._get(inst, "closeText") + "</button>" : "");

            buttonPanel = (showButtonPanel) ? "<div class='ui-datepicker-buttonpane ui-widget-content'>" + (isRTL ? controls : "") +
                (this._isInRange(inst, gotoDate) ? "<button type='button' class='ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all' data-handler='today' data-event='click'" +
                    ">" + currentText + "</button>" : "") + (isRTL ? "" : controls) + "</div>" : "";

            firstDay = parseInt(this._get(inst, "firstDay"), 10);
            firstDay = (isNaN(firstDay) ? 0 : firstDay);

            showWeek = this._get(inst, "showWeek");
            dayNames = this._get(inst, "dayNames");
            dayNamesMin = this._get(inst, "dayNamesMin");
            monthNames = this._get(inst, "monthNames");
            monthNamesShort = this._get(inst, "monthNamesShort");
            beforeShowDay = this._get(inst, "beforeShowDay");
            showOtherMonths = this._get(inst, "showOtherMonths");
            selectOtherMonths = this._get(inst, "selectOtherMonths");
            defaultDate = this._getDefaultDate(inst);
            html = "";
            dow;
            for (row = 0; row < numMonths[0]; row++) {
                group = "";
                this.maxRows = 4;
                for (col = 0; col < numMonths[1]; col++) {
                    selectedDate = this._daylightSavingAdjust(new Date(drawYear, drawMonth, inst.selectedDay));
                    cornerClass = " ui-corner-all";
                    calender = "";
                    if (isMultiMonth) {
                        calender += "<div class='ui-datepicker-group";
                        if (numMonths[1] > 1) {
                            switch (col) {
                                case 0: calender += " ui-datepicker-group-first";
                                    cornerClass = " ui-corner-" + (isRTL ? "right" : "left"); break;
                                case numMonths[1] - 1: calender += " ui-datepicker-group-last";
                                    cornerClass = " ui-corner-" + (isRTL ? "left" : "right"); break;
                                default: calender += " ui-datepicker-group-middle"; cornerClass = ""; break;
                            }
                        }
                        calender += "'>";
                    }
                    calender += "<div class='ui-datepicker-header ui-widget-header ui-helper-clearfix" + cornerClass + "'>" +
                        (/all|left/.test(cornerClass) && row === 0 ? (isRTL ? next : prev) : "") +
                        (/all|right/.test(cornerClass) && row === 0 ? (isRTL ? prev : next) : "") +
                        this._generateMonthYearHeader(inst, drawMonth, drawYear, minDate, maxDate,
                            row > 0 || col > 0, monthNames, monthNamesShort) + // draw month headers
                        "</div><table class='ui-datepicker-calendar'><thead>" +
                        "<tr>";
                    thead = (showWeek ? "<th class='ui-datepicker-week-col'>" + this._get(inst, "weekHeader") + "</th>" : "");
                    for (dow = 0; dow < 7; dow++) { // days of the week
                        day = (dow + firstDay) % 7;
                        thead += "<th" + ((dow + firstDay + 6) % 7 >= 5 ? " class='ui-datepicker-week-end'" : "") + ">" +
                            "<span title='" + dayNames[day] + "'>" + dayNamesMin[day] + "</span></th>";
                    }
                    calender += thead + "</tr></thead><tbody>";
                    daysInMonth = this._getDaysInMonth(drawYear, drawMonth);
                    if (drawYear === inst.selectedYear && drawMonth === inst.selectedMonth) {
                        inst.selectedDay = Math.min(inst.selectedDay, daysInMonth);
                    }
                    leadDays = (this._getFirstDayOfMonth(drawYear, drawMonth) - firstDay + 7) % 7;
                    curRows = Math.ceil((leadDays + daysInMonth) / 7); // calculate the number of rows to generate
                    numRows = (isMultiMonth ? this.maxRows > curRows ? this.maxRows : curRows : curRows); //If multiple months, use the higher number of rows (see #7043)
                    this.maxRows = numRows;
                    printDate = this._daylightSavingAdjust(new Date(drawYear, drawMonth, 1 - leadDays));
                    for (dRow = 0; dRow < numRows; dRow++) { // create date picker rows
                        calender += "<tr>";
                        tbody = (!showWeek ? "" : "<td class='ui-datepicker-week-col'>" +
                            this._get(inst, "calculateWeek")(printDate) + "</td>");
                        for (dow = 0; dow < 7; dow++) { // create date picker days
                            daySettings = (beforeShowDay ?
                                beforeShowDay.apply((inst.input ? inst.input[0] : null), [printDate]) : [true, ""]);
                            otherMonth = (printDate.getMonth() !== drawMonth);
                            unselectable = (otherMonth && !selectOtherMonths) || !daySettings[0] ||
                                (minDate && printDate < minDate) || (maxDate && printDate > maxDate);
                            tbody += "<td class='" +
                                ((dow + firstDay + 6) % 7 >= 5 ? " ui-datepicker-week-end" : "") + // highlight weekends
                                (otherMonth ? " ui-datepicker-other-month" : "") + // highlight days from other months
                                ((printDate.getTime() === selectedDate.getTime() && drawMonth === inst.selectedMonth && inst._keyEvent) || // user pressed key
                                    (defaultDate.getTime() === printDate.getTime() && defaultDate.getTime() === selectedDate.getTime()) ?
                                    // or defaultDate is current printedDate and defaultDate is selectedDate
                                    " " + this._dayOverClass : "") + // highlight selected day
                                (unselectable ? " " + this._unselectableClass + " ui-state-disabled" : "") +  // highlight unselectable days
                                (otherMonth && !showOtherMonths ? "" : " " + daySettings[1] + // highlight custom dates
                                    (printDate.getTime() === currentDate.getTime() ? " " + this._currentClass : "") + // highlight selected day
                                    (printDate.getTime() === today.getTime() ? " ui-datepicker-today" : "")) + "'" + // highlight today (if different)
                                ((!otherMonth || showOtherMonths) && daySettings[2] ? " title='" + daySettings[2].replace(/'/g, "&#39;") + "'" : "") + // cell title
                                (unselectable ? "" : " data-handler='selectDay' data-event='click' data-month='" + printDate.getMonth() + "' data-year='" + printDate.getFullYear() + "'") + ">" + // actions
                                (otherMonth && !showOtherMonths ? "&#xa0;" : // display for other months
                                    (unselectable ? "<span class='ui-state-default'>" + printDate.getDate() + "</span>" : "<a class='ui-state-default" +
                                        (printDate.getTime() === today.getTime() ? " ui-state-highlight" : "") +
                                        (printDate.getTime() === currentDate.getTime() ? " ui-state-active" : "") + // highlight selected day
                                        (otherMonth ? " ui-priority-secondary" : "") + // distinguish dates from other months
                                        "' href='#'>" + printDate.getDate() + "</a>")) + "</td>"; // display selectable date
                            printDate.setDate(printDate.getDate() + 1);
                            printDate = this._daylightSavingAdjust(printDate);
                        }
                        calender += tbody + "</tr>";
                    }
                    drawMonth++;
                    if (drawMonth > 11) {
                        drawMonth = 0;
                        drawYear++;
                    }
                    calender += "</tbody></table>" + (isMultiMonth ? "</div>" +
                        ((numMonths[0] > 0 && col === numMonths[1] - 1) ? "<div class='ui-datepicker-row-break'></div>" : "") : "");
                    group += calender;
                }
                html += group;
            }
            html += buttonPanel;
            inst._keyEvent = false;
            return html;
        },

        /* Generate the month and year header. */
        _generateMonthYearHeader: function (inst, drawMonth, drawYear, minDate, maxDate,
            secondary, monthNames, monthNamesShort) {

            var inMinYear, inMaxYear, month, years, thisYear, determineYear, year, endYear,
                changeMonth = this._get(inst, "changeMonth"),
                changeYear = this._get(inst, "changeYear"),
                showMonthAfterYear = this._get(inst, "showMonthAfterYear"),
                html = "<div class='ui-datepicker-title'>",
                monthHtml = "";

            // month selection
            if (secondary || !changeMonth) {
                monthHtml += "<span class='ui-datepicker-month'>" + monthNames[drawMonth] + "</span>";
            } else {
                inMinYear = (minDate && minDate.getFullYear() === drawYear);
                inMaxYear = (maxDate && maxDate.getFullYear() === drawYear);
                monthHtml += "<select class='ui-datepicker-month' data-handler='selectMonth' data-event='change'>";
                for (month = 0; month < 12; month++) {
                    if ((!inMinYear || month >= minDate.getMonth()) && (!inMaxYear || month <= maxDate.getMonth())) {
                        monthHtml += "<option value='" + month + "'" +
                            (month === drawMonth ? " selected='selected'" : "") +
                            ">" + monthNamesShort[month] + "</option>";
                    }
                }
                monthHtml += "</select>";
            }

            if (!showMonthAfterYear) {
                html += monthHtml + (secondary || !(changeMonth && changeYear) ? "&#xa0;" : "");
            }

            // year selection
            if (!inst.yearshtml) {
                inst.yearshtml = "";
                if (secondary || !changeYear) {
                    html += "<span class='ui-datepicker-year'>" + drawYear + "</span>";
                } else {
                    // determine range of years to display
                    years = this._get(inst, "yearRange").split(":");
                    thisYear = new Date().getFullYear();
                    determineYear = function (value) {
                        var year = (value.match(/c[+\-].*/) ? drawYear + parseInt(value.substring(1), 10) :
                            (value.match(/[+\-].*/) ? thisYear + parseInt(value, 10) :
                                parseInt(value, 10)));
                        return (isNaN(year) ? thisYear : year);
                    };
                    year = determineYear(years[0]);
                    endYear = Math.max(year, determineYear(years[1] || ""));
                    year = (minDate ? Math.max(year, minDate.getFullYear()) : year);
                    endYear = (maxDate ? Math.min(endYear, maxDate.getFullYear()) : endYear);
                    inst.yearshtml += "<select class='ui-datepicker-year' data-handler='selectYear' data-event='change'>";
                    for (; year <= endYear; year++) {
                        inst.yearshtml += "<option value='" + year + "'" +
                            (year === drawYear ? " selected='selected'" : "") +
                            ">" + year + "</option>";
                    }
                    inst.yearshtml += "</select>";

                    html += inst.yearshtml;
                    inst.yearshtml = null;
                }
            }

            html += this._get(inst, "yearSuffix");
            if (showMonthAfterYear) {
                html += (secondary || !(changeMonth && changeYear) ? "&#xa0;" : "") + monthHtml;
            }
            html += "</div>"; // Close datepicker_header
            return html;
        },

        /* Adjust one of the date sub-fields. */
        _adjustInstDate: function (inst, offset, period) {
            var year = inst.drawYear + (period === "Y" ? offset : 0),
                month = inst.drawMonth + (period === "M" ? offset : 0),
                day = Math.min(inst.selectedDay, this._getDaysInMonth(year, month)) + (period === "D" ? offset : 0),
                date = this._restrictMinMax(inst, this._daylightSavingAdjust(new Date(year, month, day)));

            inst.selectedDay = date.getDate();
            inst.drawMonth = inst.selectedMonth = date.getMonth();
            inst.drawYear = inst.selectedYear = date.getFullYear();
            if (period === "M" || period === "Y") {
                this._notifyChange(inst);
            }
        },

        /* Ensure a date is within any min/max bounds. */
        _restrictMinMax: function (inst, date) {
            var minDate = this._getMinMaxDate(inst, "min"),
                maxDate = this._getMinMaxDate(inst, "max"),
                newDate = (minDate && date < minDate ? minDate : date);
            return (maxDate && newDate > maxDate ? maxDate : newDate);
        },

        /* Notify change of month/year. */
        _notifyChange: function (inst) {
            var onChange = this._get(inst, "onChangeMonthYear");
            if (onChange) {
                onChange.apply((inst.input ? inst.input[0] : null),
                    [inst.selectedYear, inst.selectedMonth + 1, inst]);
            }
        },

        /* Determine the number of months to show. */
        _getNumberOfMonths: function (inst) {
            var numMonths = this._get(inst, "numberOfMonths");
            return (numMonths == null ? [1, 1] : (typeof numMonths === "number" ? [1, numMonths] : numMonths));
        },

        /* Determine the current maximum date - ensure no time components are set. */
        _getMinMaxDate: function (inst, minMax) {
            return this._determineDate(inst, this._get(inst, minMax + "Date"), null);
        },

        /* Find the number of days in a given month. */
        _getDaysInMonth: function (year, month) {
            return 32 - this._daylightSavingAdjust(new Date(year, month, 32)).getDate();
        },

        /* Find the day of the week of the first of a month. */
        _getFirstDayOfMonth: function (year, month) {
            return new Date(year, month, 1).getDay();
        },

        /* Determines if we should allow a "next/prev" month display change. */
        _canAdjustMonth: function (inst, offset, curYear, curMonth) {
            var numMonths = this._getNumberOfMonths(inst),
                date = this._daylightSavingAdjust(new Date(curYear,
                    curMonth + (offset < 0 ? offset : numMonths[0] * numMonths[1]), 1));

            if (offset < 0) {
                date.setDate(this._getDaysInMonth(date.getFullYear(), date.getMonth()));
            }
            return this._isInRange(inst, date);
        },

        /* Is the given date in the accepted range? */
        _isInRange: function (inst, date) {
            var yearSplit, currentYear,
                minDate = this._getMinMaxDate(inst, "min"),
                maxDate = this._getMinMaxDate(inst, "max"),
                minYear = null,
                maxYear = null,
                years = this._get(inst, "yearRange");
            if (years) {
                yearSplit = years.split(":");
                currentYear = new Date().getFullYear();
                minYear = parseInt(yearSplit[0], 10);
                maxYear = parseInt(yearSplit[1], 10);
                if (yearSplit[0].match(/[+\-].*/)) {
                    minYear += currentYear;
                }
                if (yearSplit[1].match(/[+\-].*/)) {
                    maxYear += currentYear;
                }
            }

            return ((!minDate || date.getTime() >= minDate.getTime()) &&
                (!maxDate || date.getTime() <= maxDate.getTime()) &&
                (!minYear || date.getFullYear() >= minYear) &&
                (!maxYear || date.getFullYear() <= maxYear));
        },

        /* Provide the configuration settings for formatting/parsing. */
        _getFormatConfig: function (inst) {
            var shortYearCutoff = this._get(inst, "shortYearCutoff");
            shortYearCutoff = (typeof shortYearCutoff !== "string" ? shortYearCutoff :
                new Date().getFullYear() % 100 + parseInt(shortYearCutoff, 10));
            return {
                shortYearCutoff: shortYearCutoff,
                dayNamesShort: this._get(inst, "dayNamesShort"), dayNames: this._get(inst, "dayNames"),
                monthNamesShort: this._get(inst, "monthNamesShort"), monthNames: this._get(inst, "monthNames")
            };
        },

        /* Format the given date for display. */
        _formatDate: function (inst, day, month, year) {
            if (!day) {
                inst.currentDay = inst.selectedDay;
                inst.currentMonth = inst.selectedMonth;
                inst.currentYear = inst.selectedYear;
            }
            var date = (day ? (typeof day === "object" ? day :
                this._daylightSavingAdjust(new Date(year, month, day))) :
                this._daylightSavingAdjust(new Date(inst.currentYear, inst.currentMonth, inst.currentDay)));
            return this.formatDate(this._get(inst, "dateFormat"), date, this._getFormatConfig(inst));
        }
    });

    /*
     * Bind hover events for datepicker elements.
     * Done via delegate so the binding only occurs once in the lifetime of the parent div.
     * Global instActive, set by _updateDatepicker allows the handlers to find their way back to the active picker.
     */
    function bindHover(dpDiv) {
        var selector = "button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";
        return dpDiv.delegate(selector, "mouseout", function () {
            $(this).removeClass("ui-state-hover");
            if (this.className.indexOf("ui-datepicker-prev") !== -1) {
                $(this).removeClass("ui-datepicker-prev-hover");
            }
            if (this.className.indexOf("ui-datepicker-next") !== -1) {
                $(this).removeClass("ui-datepicker-next-hover");
            }
        })
            .delegate(selector, "mouseover", function () {
                if (!$.datepicker._isDisabledDatepicker(instActive.inline ? dpDiv.parent()[0] : instActive.input[0])) {
                    $(this).parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover");
                    $(this).addClass("ui-state-hover");
                    if (this.className.indexOf("ui-datepicker-prev") !== -1) {
                        $(this).addClass("ui-datepicker-prev-hover");
                    }
                    if (this.className.indexOf("ui-datepicker-next") !== -1) {
                        $(this).addClass("ui-datepicker-next-hover");
                    }
                }
            });
    }

    /* jQuery extend now ignores nulls! */
    function extendRemove(target, props) {
        $.extend(target, props);
        for (var name in props) {
            if (props[name] == null) {
                target[name] = props[name];
            }
        }
        return target;
    }

    /* Invoke the datepicker functionality.
       @param  options  string - a command, optionally followed by additional parameters or
                        Object - settings for attaching new datepicker functionality
       @return  jQuery object */
    $.fn.datepicker = function (options) {

        /* Verify an empty collection wasn't passed - Fixes #6976 */
        if (!this.length) {
            return this;
        }

        /* Initialise the date picker. */
        if (!$.datepicker.initialized) {
            $(document).mousedown($.datepicker._checkExternalClick);
            $.datepicker.initialized = true;
        }

        /* Append datepicker main container to body if not exist. */
        if ($("#" + $.datepicker._mainDivId).length === 0) {
            $("body").append($.datepicker.dpDiv);
        }

        var otherArgs = Array.prototype.slice.call(arguments, 1);
        if (typeof options === "string" && (options === "isDisabled" || options === "getDate" || options === "widget")) {
            return $.datepicker["_" + options + "Datepicker"].
                apply($.datepicker, [this[0]].concat(otherArgs));
        }
        if (options === "option" && arguments.length === 2 && typeof arguments[1] === "string") {
            return $.datepicker["_" + options + "Datepicker"].
                apply($.datepicker, [this[0]].concat(otherArgs));
        }
        return this.each(function () {
            typeof options === "string" ?
                $.datepicker["_" + options + "Datepicker"].
                    apply($.datepicker, [this].concat(otherArgs)) :
                $.datepicker._attachDatepicker(this, options);
        });
    };

    $.datepicker = new Datepicker(); // singleton instance
    $.datepicker.initialized = false;
    $.datepicker.uuid = new Date().getTime();
    $.datepicker.version = "1.10.4";

})(jQuery);
(function ($, undefined) {

    var sizeRelatedOptions = {
        buttons: true,
        height: true,
        maxHeight: true,
        maxWidth: true,
        minHeight: true,
        minWidth: true,
        width: true
    },
        resizableRelatedOptions = {
            maxHeight: true,
            maxWidth: true,
            minHeight: true,
            minWidth: true
        };

    $.widget("ui.dialog", {
        version: "1.10.4",
        options: {
            appendTo: "body",
            autoOpen: true,
            buttons: [],
            closeOnEscape: true,
            closeText: "close",
            dialogClass: "",
            draggable: true,
            hide: null,
            height: "auto",
            maxHeight: null,
            maxWidth: null,
            minHeight: 150,
            minWidth: 150,
            modal: false,
            position: {
                my: "center",
                at: "center",
                of: window,
                collision: "fit",
                // Ensure the titlebar is always visible
                using: function (pos) {
                    var topOffset = $(this).css(pos).offset().top;
                    if (topOffset < 0) {
                        $(this).css("top", pos.top - topOffset);
                    }
                }
            },
            resizable: true,
            show: null,
            title: null,
            width: 300,

            // callbacks
            beforeClose: null,
            close: null,
            drag: null,
            dragStart: null,
            dragStop: null,
            focus: null,
            open: null,
            resize: null,
            resizeStart: null,
            resizeStop: null
        },

        _create: function () {
            this.originalCss = {
                display: this.element[0].style.display,
                width: this.element[0].style.width,
                minHeight: this.element[0].style.minHeight,
                maxHeight: this.element[0].style.maxHeight,
                height: this.element[0].style.height
            };
            this.originalPosition = {
                parent: this.element.parent(),
                index: this.element.parent().children().index(this.element)
            };
            this.originalTitle = this.element.attr("title");
            this.options.title = this.options.title || this.originalTitle;

            this._createWrapper();

            this.element
                .show()
                .removeAttr("title")
                .addClass("ui-dialog-content ui-widget-content")
                .appendTo(this.uiDialog);

            this._createTitlebar();
            this._createButtonPane();

            if (this.options.draggable && $.fn.draggable) {
                this._makeDraggable();
            }
            if (this.options.resizable && $.fn.resizable) {
                this._makeResizable();
            }

            this._isOpen = false;
        },

        _init: function () {
            if (this.options.autoOpen) {
                this.open();
            }
        },

        _appendTo: function () {
            var element = this.options.appendTo;
            if (element && (element.jquery || element.nodeType)) {
                return $(element);
            }
            return this.document.find(element || "body").eq(0);
        },

        _destroy: function () {
            var next,
                originalPosition = this.originalPosition;

            this._destroyOverlay();

            this.element
                .removeUniqueId()
                .removeClass("ui-dialog-content ui-widget-content")
                .css(this.originalCss)
                // Without detaching first, the following becomes really slow
                .detach();

            this.uiDialog.stop(true, true).remove();

            if (this.originalTitle) {
                this.element.attr("title", this.originalTitle);
            }

            next = originalPosition.parent.children().eq(originalPosition.index);
            // Don't try to place the dialog next to itself (#8613)
            if (next.length && next[0] !== this.element[0]) {
                next.before(this.element);
            } else {
                originalPosition.parent.append(this.element);
            }
        },

        widget: function () {
            return this.uiDialog;
        },

        disable: $.noop,
        enable: $.noop,

        close: function (event) {
            var activeElement,
                that = this;

            if (!this._isOpen || this._trigger("beforeClose", event) === false) {
                return;
            }

            this._isOpen = false;
            this._destroyOverlay();

            if (!this.opener.filter(":focusable").focus().length) {

                // support: IE9
                // IE9 throws an "Unspecified error" accessing document.activeElement from an <iframe>
                try {
                    activeElement = this.document[0].activeElement;

                    // Support: IE9, IE10
                    // If the <body> is blurred, IE will switch windows, see #4520
                    if (activeElement && activeElement.nodeName.toLowerCase() !== "body") {

                        // Hiding a focused element doesn't trigger blur in WebKit
                        // so in case we have nothing to focus on, explicitly blur the active element
                        // https://bugs.webkit.org/show_bug.cgi?id=47182
                        $(activeElement).blur();
                    }
                } catch (error) { }
            }

            this._hide(this.uiDialog, this.options.hide, function () {
                that._trigger("close", event);
            });
        },

        isOpen: function () {
            return this._isOpen;
        },

        moveToTop: function () {
            this._moveToTop();
        },

        _moveToTop: function (event, silent) {
            var moved = !!this.uiDialog.nextAll(":visible").insertBefore(this.uiDialog).length;
            if (moved && !silent) {
                this._trigger("focus", event);
            }
            return moved;
        },

        open: function () {
            var that = this;
            if (this._isOpen) {
                if (this._moveToTop()) {
                    this._focusTabbable();
                }
                return;
            }

            this._isOpen = true;
            this.opener = $(this.document[0].activeElement);

            this._size();
            this._position();
            this._createOverlay();
            this._moveToTop(null, true);
            this._show(this.uiDialog, this.options.show, function () {
                that._focusTabbable();
                that._trigger("focus");
            });

            this._trigger("open");
        },

        _focusTabbable: function () {
            // Set focus to the first match:
            // 1. First element inside the dialog matching [autofocus]
            // 2. Tabbable element inside the content element
            // 3. Tabbable element inside the buttonpane
            // 4. The close button
            // 5. The dialog itself
            var hasFocus = this.element.find("[autofocus]");
            if (!hasFocus.length) {
                hasFocus = this.element.find(":tabbable");
            }
            if (!hasFocus.length) {
                hasFocus = this.uiDialogButtonPane.find(":tabbable");
            }
            if (!hasFocus.length) {
                hasFocus = this.uiDialogTitlebarClose.filter(":tabbable");
            }
            if (!hasFocus.length) {
                hasFocus = this.uiDialog;
            }
            hasFocus.eq(0).focus();
        },

        _keepFocus: function (event) {
            function checkFocus() {
                var activeElement = this.document[0].activeElement,
                    isActive = this.uiDialog[0] === activeElement ||
                        $.contains(this.uiDialog[0], activeElement);
                if (!isActive) {
                    this._focusTabbable();
                }
            }
            event.preventDefault();
            checkFocus.call(this);
            // support: IE
            // IE <= 8 doesn't prevent moving focus even with event.preventDefault()
            // so we check again later
            this._delay(checkFocus);
        },

        _createWrapper: function () {
            this.uiDialog = $("<div>")
                .addClass("ui-dialog ui-widget ui-widget-content ui-corner-all ui-front " +
                    this.options.dialogClass)
                .hide()
                .attr({
                    // Setting tabIndex makes the div focusable
                    tabIndex: -1,
                    role: "dialog"
                })
                .appendTo(this._appendTo());

            this._on(this.uiDialog, {
                keydown: function (event) {
                    if (this.options.closeOnEscape && !event.isDefaultPrevented() && event.keyCode &&
                        event.keyCode === $.ui.keyCode.ESCAPE) {
                        event.preventDefault();
                        this.close(event);
                        return;
                    }

                    // prevent tabbing out of dialogs
                    if (event.keyCode !== $.ui.keyCode.TAB) {
                        return;
                    }
                    var tabbables = this.uiDialog.find(":tabbable"),
                        first = tabbables.filter(":first"),
                        last = tabbables.filter(":last");

                    if ((event.target === last[0] || event.target === this.uiDialog[0]) && !event.shiftKey) {
                        first.focus(1);
                        event.preventDefault();
                    } else if ((event.target === first[0] || event.target === this.uiDialog[0]) && event.shiftKey) {
                        last.focus(1);
                        event.preventDefault();
                    }
                },
                mousedown: function (event) {
                    if (this._moveToTop(event)) {
                        this._focusTabbable();
                    }
                }
            });

            // We assume that any existing aria-describedby attribute means
            // that the dialog content is marked up properly
            // otherwise we brute force the content as the description
            if (!this.element.find("[aria-describedby]").length) {
                this.uiDialog.attr({
                    "aria-describedby": this.element.uniqueId().attr("id")
                });
            }
        },

        _createTitlebar: function () {
            var uiDialogTitle;

            this.uiDialogTitlebar = $("<div>")
                .addClass("ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix")
                .prependTo(this.uiDialog);
            this._on(this.uiDialogTitlebar, {
                mousedown: function (event) {
                    // Don't prevent click on close button (#8838)
                    // Focusing a dialog that is partially scrolled out of view
                    // causes the browser to scroll it into view, preventing the click event
                    if (!$(event.target).closest(".ui-dialog-titlebar-close")) {
                        // Dialog isn't getting focus when dragging (#8063)
                        this.uiDialog.focus();
                    }
                }
            });

            // support: IE
            // Use type="button" to prevent enter keypresses in textboxes from closing the
            // dialog in IE (#9312)
            this.uiDialogTitlebarClose = $("<button type='button'></button>")
                .button({
                    label: this.options.closeText,
                    icons: {
                        primary: "ui-icon-closethick"
                    },
                    text: false
                })
                .addClass("ui-dialog-titlebar-close")
                .appendTo(this.uiDialogTitlebar);
            this._on(this.uiDialogTitlebarClose, {
                click: function (event) {
                    event.preventDefault();
                    this.close(event);
                }
            });

            uiDialogTitle = $("<span>")
                .uniqueId()
                .addClass("ui-dialog-title")
                .prependTo(this.uiDialogTitlebar);
            this._title(uiDialogTitle);

            this.uiDialog.attr({
                "aria-labelledby": uiDialogTitle.attr("id")
            });
        },

        _title: function (title) {
            if (!this.options.title) {
                title.html("&#160;");
            }
            title.text(this.options.title);
        },

        _createButtonPane: function () {
            this.uiDialogButtonPane = $("<div>")
                .addClass("ui-dialog-buttonpane ui-widget-content ui-helper-clearfix");

            this.uiButtonSet = $("<div>")
                .addClass("ui-dialog-buttonset")
                .appendTo(this.uiDialogButtonPane);

            this._createButtons();
        },

        _createButtons: function () {
            var that = this,
                buttons = this.options.buttons;

            // if we already have a button pane, remove it
            this.uiDialogButtonPane.remove();
            this.uiButtonSet.empty();

            if ($.isEmptyObject(buttons) || ($.isArray(buttons) && !buttons.length)) {
                this.uiDialog.removeClass("ui-dialog-buttons");
                return;
            }

            $.each(buttons, function (name, props) {
                var click, buttonOptions;
                props = $.isFunction(props) ?
                    { click: props, text: name } :
                    props;
                // Default to a non-submitting button
                props = $.extend({ type: "button" }, props);
                // Change the context for the click callback to be the main element
                click = props.click;
                props.click = function () {
                    click.apply(that.element[0], arguments);
                };
                buttonOptions = {
                    icons: props.icons,
                    text: props.showText
                };
                delete props.icons;
                delete props.showText;
                $("<button></button>", props)
                    .button(buttonOptions)
                    .appendTo(that.uiButtonSet);
            });
            this.uiDialog.addClass("ui-dialog-buttons");
            this.uiDialogButtonPane.appendTo(this.uiDialog);
        },

        _makeDraggable: function () {
            var that = this,
                options = this.options;

            function filteredUi(ui) {
                return {
                    position: ui.position,
                    offset: ui.offset
                };
            }

            this.uiDialog.draggable({
                cancel: ".ui-dialog-content, .ui-dialog-titlebar-close",
                handle: ".ui-dialog-titlebar",
                containment: "document",
                start: function (event, ui) {
                    $(this).addClass("ui-dialog-dragging");
                    that._blockFrames();
                    that._trigger("dragStart", event, filteredUi(ui));
                },
                drag: function (event, ui) {
                    that._trigger("drag", event, filteredUi(ui));
                },
                stop: function (event, ui) {
                    options.position = [
                        ui.position.left - that.document.scrollLeft(),
                        ui.position.top - that.document.scrollTop()
                    ];
                    $(this).removeClass("ui-dialog-dragging");
                    that._unblockFrames();
                    that._trigger("dragStop", event, filteredUi(ui));
                }
            });
        },

        _makeResizable: function () {
            var that = this,
                options = this.options,
                handles = options.resizable,
                // .ui-resizable has position: relative defined in the stylesheet
                // but dialogs have to use absolute or fixed positioning
                position = this.uiDialog.css("position"),
                resizeHandles = typeof handles === "string" ?
                    handles :
                    "n,e,s,w,se,sw,ne,nw";

            function filteredUi(ui) {
                return {
                    originalPosition: ui.originalPosition,
                    originalSize: ui.originalSize,
                    position: ui.position,
                    size: ui.size
                };
            }

            this.uiDialog.resizable({
                cancel: ".ui-dialog-content",
                containment: "document",
                alsoResize: this.element,
                maxWidth: options.maxWidth,
                maxHeight: options.maxHeight,
                minWidth: options.minWidth,
                minHeight: this._minHeight(),
                handles: resizeHandles,
                start: function (event, ui) {
                    $(this).addClass("ui-dialog-resizing");
                    that._blockFrames();
                    that._trigger("resizeStart", event, filteredUi(ui));
                },
                resize: function (event, ui) {
                    that._trigger("resize", event, filteredUi(ui));
                },
                stop: function (event, ui) {
                    options.height = $(this).height();
                    options.width = $(this).width();
                    $(this).removeClass("ui-dialog-resizing");
                    that._unblockFrames();
                    that._trigger("resizeStop", event, filteredUi(ui));
                }
            })
                .css("position", position);
        },

        _minHeight: function () {
            var options = this.options;

            return options.height === "auto" ?
                options.minHeight :
                Math.min(options.minHeight, options.height);
        },

        _position: function () {
            // Need to show the dialog to get the actual offset in the position plugin
            var isVisible = this.uiDialog.is(":visible");
            if (!isVisible) {
                this.uiDialog.show();
            }
            this.uiDialog.position(this.options.position);
            if (!isVisible) {
                this.uiDialog.hide();
            }
        },

        _setOptions: function (options) {
            var that = this,
                resize = false,
                resizableOptions = {};

            $.each(options, function (key, value) {
                that._setOption(key, value);

                if (key in sizeRelatedOptions) {
                    resize = true;
                }
                if (key in resizableRelatedOptions) {
                    resizableOptions[key] = value;
                }
            });

            if (resize) {
                this._size();
                this._position();
            }
            if (this.uiDialog.is(":data(ui-resizable)")) {
                this.uiDialog.resizable("option", resizableOptions);
            }
        },

        _setOption: function (key, value) {
            var isDraggable, isResizable,
                uiDialog = this.uiDialog;

            if (key === "dialogClass") {
                uiDialog
                    .removeClass(this.options.dialogClass)
                    .addClass(value);
            }

            if (key === "disabled") {
                return;
            }

            this._super(key, value);

            if (key === "appendTo") {
                this.uiDialog.appendTo(this._appendTo());
            }

            if (key === "buttons") {
                this._createButtons();
            }

            if (key === "closeText") {
                this.uiDialogTitlebarClose.button({
                    // Ensure that we always pass a string
                    label: "" + value
                });
            }

            if (key === "draggable") {
                isDraggable = uiDialog.is(":data(ui-draggable)");
                if (isDraggable && !value) {
                    uiDialog.draggable("destroy");
                }

                if (!isDraggable && value) {
                    this._makeDraggable();
                }
            }

            if (key === "position") {
                this._position();
            }

            if (key === "resizable") {
                // currently resizable, becoming non-resizable
                isResizable = uiDialog.is(":data(ui-resizable)");
                if (isResizable && !value) {
                    uiDialog.resizable("destroy");
                }

                // currently resizable, changing handles
                if (isResizable && typeof value === "string") {
                    uiDialog.resizable("option", "handles", value);
                }

                // currently non-resizable, becoming resizable
                if (!isResizable && value !== false) {
                    this._makeResizable();
                }
            }

            if (key === "title") {
                this._title(this.uiDialogTitlebar.find(".ui-dialog-title"));
            }
        },

        _size: function () {
            // If the user has resized the dialog, the .ui-dialog and .ui-dialog-content
            // divs will both have width and height set, so we need to reset them
            var nonContentHeight, minContentHeight, maxContentHeight,
                options = this.options;

            // Reset content sizing
            this.element.show().css({
                width: "auto",
                minHeight: 0,
                maxHeight: "none",
                height: 0
            });

            if (options.minWidth > options.width) {
                options.width = options.minWidth;
            }

            // reset wrapper sizing
            // determine the height of all the non-content elements
            nonContentHeight = this.uiDialog.css({
                height: "auto",
                width: options.width
            })
                .outerHeight();
            minContentHeight = Math.max(0, options.minHeight - nonContentHeight);
            maxContentHeight = typeof options.maxHeight === "number" ?
                Math.max(0, options.maxHeight - nonContentHeight) :
                "none";

            if (options.height === "auto") {
                this.element.css({
                    minHeight: minContentHeight,
                    maxHeight: maxContentHeight,
                    height: "auto"
                });
            } else {
                this.element.height(Math.max(0, options.height - nonContentHeight));
            }

            if (this.uiDialog.is(":data(ui-resizable)")) {
                this.uiDialog.resizable("option", "minHeight", this._minHeight());
            }
        },

        _blockFrames: function () {
            this.iframeBlocks = this.document.find("iframe").map(function () {
                var iframe = $(this);

                return $("<div>")
                    .css({
                        position: "absolute",
                        width: iframe.outerWidth(),
                        height: iframe.outerHeight()
                    })
                    .appendTo(iframe.parent())
                    .offset(iframe.offset())[0];
            });
        },

        _unblockFrames: function () {
            if (this.iframeBlocks) {
                this.iframeBlocks.remove();
                delete this.iframeBlocks;
            }
        },

        _allowInteraction: function (event) {
            if ($(event.target).closest(".ui-dialog").length) {
                return true;
            }

            // TODO: Remove hack when datepicker implements
            // the .ui-front logic (#8989)
            return !!$(event.target).closest(".ui-datepicker").length;
        },

        _createOverlay: function () {
            if (!this.options.modal) {
                return;
            }

            var that = this,
                widgetFullName = this.widgetFullName;
            if (!$.ui.dialog.overlayInstances) {
                // Prevent use of anchors and inputs.
                // We use a delay in case the overlay is created from an
                // event that we're going to be cancelling. (#2804)
                this._delay(function () {
                    // Handle .dialog().dialog("close") (#4065)
                    if ($.ui.dialog.overlayInstances) {
                        this.document.bind("focusin.dialog", function (event) {
                            if (!that._allowInteraction(event)) {
                                event.preventDefault();
                                $(".ui-dialog:visible:last .ui-dialog-content")
                                    .data(widgetFullName)._focusTabbable();
                            }
                        });
                    }
                });
            }

            this.overlay = $("<div>")
                .addClass("ui-widget-overlay ui-front")
                .appendTo(this._appendTo());
            this._on(this.overlay, {
                mousedown: "_keepFocus"
            });
            $.ui.dialog.overlayInstances++;
        },

        _destroyOverlay: function () {
            if (!this.options.modal) {
                return;
            }

            if (this.overlay) {
                $.ui.dialog.overlayInstances--;

                if (!$.ui.dialog.overlayInstances) {
                    this.document.unbind("focusin.dialog");
                }
                this.overlay.remove();
                this.overlay = null;
            }
        }
    });

    $.ui.dialog.overlayInstances = 0;

    // DEPRECATED
    if ($.uiBackCompat !== false) {
        // position option with array notation
        // just override with old implementation
        $.widget("ui.dialog", $.ui.dialog, {
            _position: function () {
                var position = this.options.position,
                    myAt = [],
                    offset = [0, 0],
                    isVisible;

                if (position) {
                    if (typeof position === "string" || (typeof position === "object" && "0" in position)) {
                        myAt = position.split ? position.split(" ") : [position[0], position[1]];
                        if (myAt.length === 1) {
                            myAt[1] = myAt[0];
                        }

                        $.each(["left", "top"], function (i, offsetPosition) {
                            if (+myAt[i] === myAt[i]) {
                                offset[i] = myAt[i];
                                myAt[i] = offsetPosition;
                            }
                        });

                        position = {
                            my: myAt[0] + (offset[0] < 0 ? offset[0] : "+" + offset[0]) + " " +
                                myAt[1] + (offset[1] < 0 ? offset[1] : "+" + offset[1]),
                            at: myAt.join(" ")
                        };
                    }

                    position = $.extend({}, $.ui.dialog.prototype.options.position, position);
                } else {
                    position = $.ui.dialog.prototype.options.position;
                }

                // need to show the dialog to get the actual offset in the position plugin
                isVisible = this.uiDialog.is(":visible");
                if (!isVisible) {
                    this.uiDialog.show();
                }
                this.uiDialog.position(position);
                if (!isVisible) {
                    this.uiDialog.hide();
                }
            }
        });
    }

}(jQuery));
(function ($, undefined) {

    $.widget("ui.draggable", $.ui.mouse, {
        version: "1.10.4",
        widgetEventPrefix: "drag",
        options: {
            addClasses: true,
            appendTo: "parent",
            axis: false,
            connectToSortable: false,
            containment: false,
            cursor: "auto",
            cursorAt: false,
            grid: false,
            handle: false,
            helper: "original",
            iframeFix: false,
            opacity: false,
            refreshPositions: false,
            revert: false,
            revertDuration: 500,
            scope: "default",
            scroll: true,
            scrollSensitivity: 20,
            scrollSpeed: 20,
            snap: false,
            snapMode: "both",
            snapTolerance: 20,
            stack: false,
            zIndex: false,

            // callbacks
            drag: null,
            start: null,
            stop: null
        },
        _create: function () {

            if (this.options.helper === "original" && !(/^(?:r|a|f)/).test(this.element.css("position"))) {
                this.element[0].style.position = "relative";
            }
            if (this.options.addClasses) {
                this.element.addClass("ui-draggable");
            }
            if (this.options.disabled) {
                this.element.addClass("ui-draggable-disabled");
            }

            this._mouseInit();

        },

        _destroy: function () {
            this.element.removeClass("ui-draggable ui-draggable-dragging ui-draggable-disabled");
            this._mouseDestroy();
        },

        _mouseCapture: function (event) {

            var o = this.options;

            // among others, prevent a drag on a resizable-handle
            if (this.helper || o.disabled || $(event.target).closest(".ui-resizable-handle").length > 0) {
                return false;
            }

            //Quit if we're not on a valid handle
            this.handle = this._getHandle(event);
            if (!this.handle) {
                return false;
            }

            $(o.iframeFix === true ? "iframe" : o.iframeFix).each(function () {
                $("<div class='ui-draggable-iframeFix' style='background: #fff;'></div>")
                    .css({
                        width: this.offsetWidth + "px", height: this.offsetHeight + "px",
                        position: "absolute", opacity: "0.001", zIndex: 1000
                    })
                    .css($(this).offset())
                    .appendTo("body");
            });

            return true;

        },

        _mouseStart: function (event) {

            var o = this.options;

            //Create and append the visible helper
            this.helper = this._createHelper(event);

            this.helper.addClass("ui-draggable-dragging");

            //Cache the helper size
            this._cacheHelperProportions();

            //If ddmanager is used for droppables, set the global draggable
            if ($.ui.ddmanager) {
                $.ui.ddmanager.current = this;
            }

            /*
             * - Position generation -
             * This block generates everything position related - it's the core of draggables.
             */

            //Cache the margins of the original element
            this._cacheMargins();

            //Store the helper's css position
            this.cssPosition = this.helper.css("position");
            this.scrollParent = this.helper.scrollParent();
            this.offsetParent = this.helper.offsetParent();
            this.offsetParentCssPosition = this.offsetParent.css("position");

            //The element's absolute position on the page minus margins
            this.offset = this.positionAbs = this.element.offset();
            this.offset = {
                top: this.offset.top - this.margins.top,
                left: this.offset.left - this.margins.left
            };

            //Reset scroll cache
            this.offset.scroll = false;

            $.extend(this.offset, {
                click: { //Where the click happened, relative to the element
                    left: event.pageX - this.offset.left,
                    top: event.pageY - this.offset.top
                },
                parent: this._getParentOffset(),
                relative: this._getRelativeOffset() //This is a relative to absolute position minus the actual position calculation - only used for relative positioned helper
            });

            //Generate the original position
            this.originalPosition = this.position = this._generatePosition(event);
            this.originalPageX = event.pageX;
            this.originalPageY = event.pageY;

            //Adjust the mouse offset relative to the helper if "cursorAt" is supplied
            (o.cursorAt && this._adjustOffsetFromHelper(o.cursorAt));

            //Set a containment if given in the options
            this._setContainment();

            //Trigger event + callbacks
            if (this._trigger("start", event) === false) {
                this._clear();
                return false;
            }

            //Recache the helper size
            this._cacheHelperProportions();

            //Prepare the droppable offsets
            if ($.ui.ddmanager && !o.dropBehaviour) {
                $.ui.ddmanager.prepareOffsets(this, event);
            }


            this._mouseDrag(event, true); //Execute the drag once - this causes the helper not to be visible before getting its correct position

            //If the ddmanager is used for droppables, inform the manager that dragging has started (see #5003)
            if ($.ui.ddmanager) {
                $.ui.ddmanager.dragStart(this, event);
            }

            return true;
        },

        _mouseDrag: function (event, noPropagation) {
            // reset any necessary cached properties (see #5009)
            if (this.offsetParentCssPosition === "fixed") {
                this.offset.parent = this._getParentOffset();
            }

            //Compute the helpers position
            this.position = this._generatePosition(event);
            this.positionAbs = this._convertPositionTo("absolute");

            //Call plugins and callbacks and use the resulting position if something is returned
            if (!noPropagation) {
                var ui = this._uiHash();
                if (this._trigger("drag", event, ui) === false) {
                    this._mouseUp({});
                    return false;
                }
                this.position = ui.position;
            }

            if (!this.options.axis || this.options.axis !== "y") {
                this.helper[0].style.left = this.position.left + "px";
            }
            if (!this.options.axis || this.options.axis !== "x") {
                this.helper[0].style.top = this.position.top + "px";
            }
            if ($.ui.ddmanager) {
                $.ui.ddmanager.drag(this, event);
            }

            return false;
        },

        _mouseStop: function (event) {

            //If we are using droppables, inform the manager about the drop
            var that = this,
                dropped = false;
            if ($.ui.ddmanager && !this.options.dropBehaviour) {
                dropped = $.ui.ddmanager.drop(this, event);
            }

            //if a drop comes from outside (a sortable)
            if (this.dropped) {
                dropped = this.dropped;
                this.dropped = false;
            }

            //if the original element is no longer in the DOM don't bother to continue (see #8269)
            if (this.options.helper === "original" && !$.contains(this.element[0].ownerDocument, this.element[0])) {
                return false;
            }

            if ((this.options.revert === "invalid" && !dropped) || (this.options.revert === "valid" && dropped) || this.options.revert === true || ($.isFunction(this.options.revert) && this.options.revert.call(this.element, dropped))) {
                $(this.helper).animate(this.originalPosition, parseInt(this.options.revertDuration, 10), function () {
                    if (that._trigger("stop", event) !== false) {
                        that._clear();
                    }
                });
            } else {
                if (this._trigger("stop", event) !== false) {
                    this._clear();
                }
            }

            return false;
        },

        _mouseUp: function (event) {
            //Remove frame helpers
            $("div.ui-draggable-iframeFix").each(function () {
                this.parentNode.removeChild(this);
            });

            //If the ddmanager is used for droppables, inform the manager that dragging has stopped (see #5003)
            if ($.ui.ddmanager) {
                $.ui.ddmanager.dragStop(this, event);
            }

            return $.ui.mouse.prototype._mouseUp.call(this, event);
        },

        cancel: function () {

            if (this.helper.is(".ui-draggable-dragging")) {
                this._mouseUp({});
            } else {
                this._clear();
            }

            return this;

        },

        _getHandle: function (event) {
            return this.options.handle ?
                !!$(event.target).closest(this.element.find(this.options.handle)).length :
                true;
        },

        _createHelper: function (event) {

            var o = this.options,
                helper = $.isFunction(o.helper) ? $(o.helper.apply(this.element[0], [event])) : (o.helper === "clone" ? this.element.clone().removeAttr("id") : this.element);

            if (!helper.parents("body").length) {
                helper.appendTo((o.appendTo === "parent" ? this.element[0].parentNode : o.appendTo));
            }

            if (helper[0] !== this.element[0] && !(/(fixed|absolute)/).test(helper.css("position"))) {
                helper.css("position", "absolute");
            }

            return helper;

        },

        _adjustOffsetFromHelper: function (obj) {
            if (typeof obj === "string") {
                obj = obj.split(" ");
            }
            if ($.isArray(obj)) {
                obj = { left: +obj[0], top: +obj[1] || 0 };
            }
            if ("left" in obj) {
                this.offset.click.left = obj.left + this.margins.left;
            }
            if ("right" in obj) {
                this.offset.click.left = this.helperProportions.width - obj.right + this.margins.left;
            }
            if ("top" in obj) {
                this.offset.click.top = obj.top + this.margins.top;
            }
            if ("bottom" in obj) {
                this.offset.click.top = this.helperProportions.height - obj.bottom + this.margins.top;
            }
        },

        _getParentOffset: function () {

            //Get the offsetParent and cache its position
            var po = this.offsetParent.offset();

            // This is a special case where we need to modify a offset calculated on start, since the following happened:
            // 1. The position of the helper is absolute, so it's position is calculated based on the next positioned parent
            // 2. The actual offset parent is a child of the scroll parent, and the scroll parent isn't the document, which means that
            //    the scroll is included in the initial calculation of the offset of the parent, and never recalculated upon drag
            if (this.cssPosition === "absolute" && this.scrollParent[0] !== document && $.contains(this.scrollParent[0], this.offsetParent[0])) {
                po.left += this.scrollParent.scrollLeft();
                po.top += this.scrollParent.scrollTop();
            }

            //This needs to be actually done for all browsers, since pageX/pageY includes this information
            //Ugly IE fix
            if ((this.offsetParent[0] === document.body) ||
                (this.offsetParent[0].tagName && this.offsetParent[0].tagName.toLowerCase() === "html" && $.ui.ie)) {
                po = { top: 0, left: 0 };
            }

            return {
                top: po.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0),
                left: po.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0)
            };

        },

        _getRelativeOffset: function () {

            if (this.cssPosition === "relative") {
                var p = this.element.position();
                return {
                    top: p.top - (parseInt(this.helper.css("top"), 10) || 0) + this.scrollParent.scrollTop(),
                    left: p.left - (parseInt(this.helper.css("left"), 10) || 0) + this.scrollParent.scrollLeft()
                };
            } else {
                return { top: 0, left: 0 };
            }

        },

        _cacheMargins: function () {
            this.margins = {
                left: (parseInt(this.element.css("marginLeft"), 10) || 0),
                top: (parseInt(this.element.css("marginTop"), 10) || 0),
                right: (parseInt(this.element.css("marginRight"), 10) || 0),
                bottom: (parseInt(this.element.css("marginBottom"), 10) || 0)
            };
        },

        _cacheHelperProportions: function () {
            this.helperProportions = {
                width: this.helper.outerWidth(),
                height: this.helper.outerHeight()
            };
        },

        _setContainment: function () {

            var over, c, ce,
                o = this.options;

            if (!o.containment) {
                this.containment = null;
                return;
            }

            if (o.containment === "window") {
                this.containment = [
                    $(window).scrollLeft() - this.offset.relative.left - this.offset.parent.left,
                    $(window).scrollTop() - this.offset.relative.top - this.offset.parent.top,
                    $(window).scrollLeft() + $(window).width() - this.helperProportions.width - this.margins.left,
                    $(window).scrollTop() + ($(window).height() || document.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top
                ];
                return;
            }

            if (o.containment === "document") {
                this.containment = [
                    0,
                    0,
                    $(document).width() - this.helperProportions.width - this.margins.left,
                    ($(document).height() || document.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top
                ];
                return;
            }

            if (o.containment.constructor === Array) {
                this.containment = o.containment;
                return;
            }

            if (o.containment === "parent") {
                o.containment = this.helper[0].parentNode;
            }

            c = $(o.containment);
            ce = c[0];

            if (!ce) {
                return;
            }

            over = c.css("overflow") !== "hidden";

            this.containment = [
                (parseInt(c.css("borderLeftWidth"), 10) || 0) + (parseInt(c.css("paddingLeft"), 10) || 0),
                (parseInt(c.css("borderTopWidth"), 10) || 0) + (parseInt(c.css("paddingTop"), 10) || 0),
                (over ? Math.max(ce.scrollWidth, ce.offsetWidth) : ce.offsetWidth) - (parseInt(c.css("borderRightWidth"), 10) || 0) - (parseInt(c.css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left - this.margins.right,
                (over ? Math.max(ce.scrollHeight, ce.offsetHeight) : ce.offsetHeight) - (parseInt(c.css("borderBottomWidth"), 10) || 0) - (parseInt(c.css("paddingBottom"), 10) || 0) - this.helperProportions.height - this.margins.top - this.margins.bottom
            ];
            this.relative_container = c;
        },

        _convertPositionTo: function (d, pos) {

            if (!pos) {
                pos = this.position;
            }

            var mod = d === "absolute" ? 1 : -1,
                scroll = this.cssPosition === "absolute" && !(this.scrollParent[0] !== document && $.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent;

            //Cache the scroll
            if (!this.offset.scroll) {
                this.offset.scroll = { top: scroll.scrollTop(), left: scroll.scrollLeft() };
            }

            return {
                top: (
                    pos.top +																// The absolute mouse position
                    this.offset.relative.top * mod +										// Only for relative positioned nodes: Relative offset from element to offset parent
                    this.offset.parent.top * mod -										// The offsetParent's offset without borders (offset + border)
                    ((this.cssPosition === "fixed" ? -this.scrollParent.scrollTop() : this.offset.scroll.top) * mod)
                ),
                left: (
                    pos.left +																// The absolute mouse position
                    this.offset.relative.left * mod +										// Only for relative positioned nodes: Relative offset from element to offset parent
                    this.offset.parent.left * mod -										// The offsetParent's offset without borders (offset + border)
                    ((this.cssPosition === "fixed" ? -this.scrollParent.scrollLeft() : this.offset.scroll.left) * mod)
                )
            };

        },

        _generatePosition: function (event) {

            var containment, co, top, left,
                o = this.options,
                scroll = this.cssPosition === "absolute" && !(this.scrollParent[0] !== document && $.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent,
                pageX = event.pageX,
                pageY = event.pageY;

            //Cache the scroll
            if (!this.offset.scroll) {
                this.offset.scroll = { top: scroll.scrollTop(), left: scroll.scrollLeft() };
            }

            /*
             * - Position constraining -
             * Constrain the position to a mix of grid, containment.
             */

            // If we are not dragging yet, we won't check for options
            if (this.originalPosition) {
                if (this.containment) {
                    if (this.relative_container) {
                        co = this.relative_container.offset();
                        containment = [
                            this.containment[0] + co.left,
                            this.containment[1] + co.top,
                            this.containment[2] + co.left,
                            this.containment[3] + co.top
                        ];
                    }
                    else {
                        containment = this.containment;
                    }

                    if (event.pageX - this.offset.click.left < containment[0]) {
                        pageX = containment[0] + this.offset.click.left;
                    }
                    if (event.pageY - this.offset.click.top < containment[1]) {
                        pageY = containment[1] + this.offset.click.top;
                    }
                    if (event.pageX - this.offset.click.left > containment[2]) {
                        pageX = containment[2] + this.offset.click.left;
                    }
                    if (event.pageY - this.offset.click.top > containment[3]) {
                        pageY = containment[3] + this.offset.click.top;
                    }
                }

                if (o.grid) {
                    //Check for grid elements set to 0 to prevent divide by 0 error causing invalid argument errors in IE (see ticket #6950)
                    top = o.grid[1] ? this.originalPageY + Math.round((pageY - this.originalPageY) / o.grid[1]) * o.grid[1] : this.originalPageY;
                    pageY = containment ? ((top - this.offset.click.top >= containment[1] || top - this.offset.click.top > containment[3]) ? top : ((top - this.offset.click.top >= containment[1]) ? top - o.grid[1] : top + o.grid[1])) : top;

                    left = o.grid[0] ? this.originalPageX + Math.round((pageX - this.originalPageX) / o.grid[0]) * o.grid[0] : this.originalPageX;
                    pageX = containment ? ((left - this.offset.click.left >= containment[0] || left - this.offset.click.left > containment[2]) ? left : ((left - this.offset.click.left >= containment[0]) ? left - o.grid[0] : left + o.grid[0])) : left;
                }

            }

            return {
                top: (
                    pageY -																	// The absolute mouse position
                    this.offset.click.top -												// Click offset (relative to the element)
                    this.offset.relative.top -												// Only for relative positioned nodes: Relative offset from element to offset parent
                    this.offset.parent.top +												// The offsetParent's offset without borders (offset + border)
                    (this.cssPosition === "fixed" ? -this.scrollParent.scrollTop() : this.offset.scroll.top)
                ),
                left: (
                    pageX -																	// The absolute mouse position
                    this.offset.click.left -												// Click offset (relative to the element)
                    this.offset.relative.left -												// Only for relative positioned nodes: Relative offset from element to offset parent
                    this.offset.parent.left +												// The offsetParent's offset without borders (offset + border)
                    (this.cssPosition === "fixed" ? -this.scrollParent.scrollLeft() : this.offset.scroll.left)
                )
            };

        },

        _clear: function () {
            this.helper.removeClass("ui-draggable-dragging");
            if (this.helper[0] !== this.element[0] && !this.cancelHelperRemoval) {
                this.helper.remove();
            }
            this.helper = null;
            this.cancelHelperRemoval = false;
        },

        // From now on bulk stuff - mainly helpers

        _trigger: function (type, event, ui) {
            ui = ui || this._uiHash();
            $.ui.plugin.call(this, type, [event, ui]);
            //The absolute position has to be recalculated after plugins
            if (type === "drag") {
                this.positionAbs = this._convertPositionTo("absolute");
            }
            return $.Widget.prototype._trigger.call(this, type, event, ui);
        },

        plugins: {},

        _uiHash: function () {
            return {
                helper: this.helper,
                position: this.position,
                originalPosition: this.originalPosition,
                offset: this.positionAbs
            };
        }

    });

    $.ui.plugin.add("draggable", "connectToSortable", {
        start: function (event, ui) {

            var inst = $(this).data("ui-draggable"), o = inst.options,
                uiSortable = $.extend({}, ui, { item: inst.element });
            inst.sortables = [];
            $(o.connectToSortable).each(function () {
                var sortable = $.data(this, "ui-sortable");
                if (sortable && !sortable.options.disabled) {
                    inst.sortables.push({
                        instance: sortable,
                        shouldRevert: sortable.options.revert
                    });
                    sortable.refreshPositions();	// Call the sortable's refreshPositions at drag start to refresh the containerCache since the sortable container cache is used in drag and needs to be up to date (this will ensure it's initialised as well as being kept in step with any changes that might have happened on the page).
                    sortable._trigger("activate", event, uiSortable);
                }
            });

        },
        stop: function (event, ui) {

            //If we are still over the sortable, we fake the stop event of the sortable, but also remove helper
            var inst = $(this).data("ui-draggable"),
                uiSortable = $.extend({}, ui, { item: inst.element });

            $.each(inst.sortables, function () {
                if (this.instance.isOver) {

                    this.instance.isOver = 0;

                    inst.cancelHelperRemoval = true; //Don't remove the helper in the draggable instance
                    this.instance.cancelHelperRemoval = false; //Remove it in the sortable instance (so sortable plugins like revert still work)

                    //The sortable revert is supported, and we have to set a temporary dropped variable on the draggable to support revert: "valid/invalid"
                    if (this.shouldRevert) {
                        this.instance.options.revert = this.shouldRevert;
                    }

                    //Trigger the stop of the sortable
                    this.instance._mouseStop(event);

                    this.instance.options.helper = this.instance.options._helper;

                    //If the helper has been the original item, restore properties in the sortable
                    if (inst.options.helper === "original") {
                        this.instance.currentItem.css({ top: "auto", left: "auto" });
                    }

                } else {
                    this.instance.cancelHelperRemoval = false; //Remove the helper in the sortable instance
                    this.instance._trigger("deactivate", event, uiSortable);
                }

            });

        },
        drag: function (event, ui) {

            var inst = $(this).data("ui-draggable"), that = this;

            $.each(inst.sortables, function () {

                var innermostIntersecting = false,
                    thisSortable = this;

                //Copy over some variables to allow calling the sortable's native _intersectsWith
                this.instance.positionAbs = inst.positionAbs;
                this.instance.helperProportions = inst.helperProportions;
                this.instance.offset.click = inst.offset.click;

                if (this.instance._intersectsWith(this.instance.containerCache)) {
                    innermostIntersecting = true;
                    $.each(inst.sortables, function () {
                        this.instance.positionAbs = inst.positionAbs;
                        this.instance.helperProportions = inst.helperProportions;
                        this.instance.offset.click = inst.offset.click;
                        if (this !== thisSortable &&
                            this.instance._intersectsWith(this.instance.containerCache) &&
                            $.contains(thisSortable.instance.element[0], this.instance.element[0])
                        ) {
                            innermostIntersecting = false;
                        }
                        return innermostIntersecting;
                    });
                }


                if (innermostIntersecting) {
                    //If it intersects, we use a little isOver variable and set it once, so our move-in stuff gets fired only once
                    if (!this.instance.isOver) {

                        this.instance.isOver = 1;
                        //Now we fake the start of dragging for the sortable instance,
                        //by cloning the list group item, appending it to the sortable and using it as inst.currentItem
                        //We can then fire the start event of the sortable with our passed browser event, and our own helper (so it doesn't create a new one)
                        this.instance.currentItem = $(that).clone().removeAttr("id").appendTo(this.instance.element).data("ui-sortable-item", true);
                        this.instance.options._helper = this.instance.options.helper; //Store helper option to later restore it
                        this.instance.options.helper = function () { return ui.helper[0]; };

                        event.target = this.instance.currentItem[0];
                        this.instance._mouseCapture(event, true);
                        this.instance._mouseStart(event, true, true);

                        //Because the browser event is way off the new appended portlet, we modify a couple of variables to reflect the changes
                        this.instance.offset.click.top = inst.offset.click.top;
                        this.instance.offset.click.left = inst.offset.click.left;
                        this.instance.offset.parent.left -= inst.offset.parent.left - this.instance.offset.parent.left;
                        this.instance.offset.parent.top -= inst.offset.parent.top - this.instance.offset.parent.top;

                        inst._trigger("toSortable", event);
                        inst.dropped = this.instance.element; //draggable revert needs that
                        //hack so receive/update callbacks work (mostly)
                        inst.currentItem = inst.element;
                        this.instance.fromOutside = inst;

                    }

                    //Provided we did all the previous steps, we can fire the drag event of the sortable on every draggable drag, when it intersects with the sortable
                    if (this.instance.currentItem) {
                        this.instance._mouseDrag(event);
                    }

                } else {

                    //If it doesn't intersect with the sortable, and it intersected before,
                    //we fake the drag stop of the sortable, but make sure it doesn't remove the helper by using cancelHelperRemoval
                    if (this.instance.isOver) {

                        this.instance.isOver = 0;
                        this.instance.cancelHelperRemoval = true;

                        //Prevent reverting on this forced stop
                        this.instance.options.revert = false;

                        // The out event needs to be triggered independently
                        this.instance._trigger("out", event, this.instance._uiHash(this.instance));

                        this.instance._mouseStop(event, true);
                        this.instance.options.helper = this.instance.options._helper;

                        //Now we remove our currentItem, the list group clone again, and the placeholder, and animate the helper back to it's original size
                        this.instance.currentItem.remove();
                        if (this.instance.placeholder) {
                            this.instance.placeholder.remove();
                        }

                        inst._trigger("fromSortable", event);
                        inst.dropped = false; //draggable revert needs that
                    }

                }

            });

        }
    });

    $.ui.plugin.add("draggable", "cursor", {
        start: function () {
            var t = $("body"), o = $(this).data("ui-draggable").options;
            if (t.css("cursor")) {
                o._cursor = t.css("cursor");
            }
            t.css("cursor", o.cursor);
        },
        stop: function () {
            var o = $(this).data("ui-draggable").options;
            if (o._cursor) {
                $("body").css("cursor", o._cursor);
            }
        }
    });

    $.ui.plugin.add("draggable", "opacity", {
        start: function (event, ui) {
            var t = $(ui.helper), o = $(this).data("ui-draggable").options;
            if (t.css("opacity")) {
                o._opacity = t.css("opacity");
            }
            t.css("opacity", o.opacity);
        },
        stop: function (event, ui) {
            var o = $(this).data("ui-draggable").options;
            if (o._opacity) {
                $(ui.helper).css("opacity", o._opacity);
            }
        }
    });

    $.ui.plugin.add("draggable", "scroll", {
        start: function () {
            var i = $(this).data("ui-draggable");
            if (i.scrollParent[0] !== document && i.scrollParent[0].tagName !== "HTML") {
                i.overflowOffset = i.scrollParent.offset();
            }
        },
        drag: function (event) {

            var i = $(this).data("ui-draggable"), o = i.options, scrolled = false;

            if (i.scrollParent[0] !== document && i.scrollParent[0].tagName !== "HTML") {

                if (!o.axis || o.axis !== "x") {
                    if ((i.overflowOffset.top + i.scrollParent[0].offsetHeight) - event.pageY < o.scrollSensitivity) {
                        i.scrollParent[0].scrollTop = scrolled = i.scrollParent[0].scrollTop + o.scrollSpeed;
                    } else if (event.pageY - i.overflowOffset.top < o.scrollSensitivity) {
                        i.scrollParent[0].scrollTop = scrolled = i.scrollParent[0].scrollTop - o.scrollSpeed;
                    }
                }

                if (!o.axis || o.axis !== "y") {
                    if ((i.overflowOffset.left + i.scrollParent[0].offsetWidth) - event.pageX < o.scrollSensitivity) {
                        i.scrollParent[0].scrollLeft = scrolled = i.scrollParent[0].scrollLeft + o.scrollSpeed;
                    } else if (event.pageX - i.overflowOffset.left < o.scrollSensitivity) {
                        i.scrollParent[0].scrollLeft = scrolled = i.scrollParent[0].scrollLeft - o.scrollSpeed;
                    }
                }

            } else {

                if (!o.axis || o.axis !== "x") {
                    if (event.pageY - $(document).scrollTop() < o.scrollSensitivity) {
                        scrolled = $(document).scrollTop($(document).scrollTop() - o.scrollSpeed);
                    } else if ($(window).height() - (event.pageY - $(document).scrollTop()) < o.scrollSensitivity) {
                        scrolled = $(document).scrollTop($(document).scrollTop() + o.scrollSpeed);
                    }
                }

                if (!o.axis || o.axis !== "y") {
                    if (event.pageX - $(document).scrollLeft() < o.scrollSensitivity) {
                        scrolled = $(document).scrollLeft($(document).scrollLeft() - o.scrollSpeed);
                    } else if ($(window).width() - (event.pageX - $(document).scrollLeft()) < o.scrollSensitivity) {
                        scrolled = $(document).scrollLeft($(document).scrollLeft() + o.scrollSpeed);
                    }
                }

            }

            if (scrolled !== false && $.ui.ddmanager && !o.dropBehaviour) {
                $.ui.ddmanager.prepareOffsets(i, event);
            }

        }
    });

    $.ui.plugin.add("draggable", "snap", {
        start: function () {

            var i = $(this).data("ui-draggable"),
                o = i.options;

            i.snapElements = [];

            $(o.snap.constructor !== String ? (o.snap.items || ":data(ui-draggable)") : o.snap).each(function () {
                var $t = $(this),
                    $o = $t.offset();
                if (this !== i.element[0]) {
                    i.snapElements.push({
                        item: this,
                        width: $t.outerWidth(), height: $t.outerHeight(),
                        top: $o.top, left: $o.left
                    });
                }
            });

        },
        drag: function (event, ui) {

            var ts, bs, ls, rs, l, r, t, b, i, first,
                inst = $(this).data("ui-draggable"),
                o = inst.options,
                d = o.snapTolerance,
                x1 = ui.offset.left, x2 = x1 + inst.helperProportions.width,
                y1 = ui.offset.top, y2 = y1 + inst.helperProportions.height;

            for (i = inst.snapElements.length - 1; i >= 0; i--) {

                l = inst.snapElements[i].left;
                r = l + inst.snapElements[i].width;
                t = inst.snapElements[i].top;
                b = t + inst.snapElements[i].height;

                if (x2 < l - d || x1 > r + d || y2 < t - d || y1 > b + d || !$.contains(inst.snapElements[i].item.ownerDocument, inst.snapElements[i].item)) {
                    if (inst.snapElements[i].snapping) {
                        (inst.options.snap.release && inst.options.snap.release.call(inst.element, event, $.extend(inst._uiHash(), { snapItem: inst.snapElements[i].item })));
                    }
                    inst.snapElements[i].snapping = false;
                    continue;
                }

                if (o.snapMode !== "inner") {
                    ts = Math.abs(t - y2) <= d;
                    bs = Math.abs(b - y1) <= d;
                    ls = Math.abs(l - x2) <= d;
                    rs = Math.abs(r - x1) <= d;
                    if (ts) {
                        ui.position.top = inst._convertPositionTo("relative", { top: t - inst.helperProportions.height, left: 0 }).top - inst.margins.top;
                    }
                    if (bs) {
                        ui.position.top = inst._convertPositionTo("relative", { top: b, left: 0 }).top - inst.margins.top;
                    }
                    if (ls) {
                        ui.position.left = inst._convertPositionTo("relative", { top: 0, left: l - inst.helperProportions.width }).left - inst.margins.left;
                    }
                    if (rs) {
                        ui.position.left = inst._convertPositionTo("relative", { top: 0, left: r }).left - inst.margins.left;
                    }
                }

                first = (ts || bs || ls || rs);

                if (o.snapMode !== "outer") {
                    ts = Math.abs(t - y1) <= d;
                    bs = Math.abs(b - y2) <= d;
                    ls = Math.abs(l - x1) <= d;
                    rs = Math.abs(r - x2) <= d;
                    if (ts) {
                        ui.position.top = inst._convertPositionTo("relative", { top: t, left: 0 }).top - inst.margins.top;
                    }
                    if (bs) {
                        ui.position.top = inst._convertPositionTo("relative", { top: b - inst.helperProportions.height, left: 0 }).top - inst.margins.top;
                    }
                    if (ls) {
                        ui.position.left = inst._convertPositionTo("relative", { top: 0, left: l }).left - inst.margins.left;
                    }
                    if (rs) {
                        ui.position.left = inst._convertPositionTo("relative", { top: 0, left: r - inst.helperProportions.width }).left - inst.margins.left;
                    }
                }

                if (!inst.snapElements[i].snapping && (ts || bs || ls || rs || first)) {
                    (inst.options.snap.snap && inst.options.snap.snap.call(inst.element, event, $.extend(inst._uiHash(), { snapItem: inst.snapElements[i].item })));
                }
                inst.snapElements[i].snapping = (ts || bs || ls || rs || first);

            }

        }
    });

    $.ui.plugin.add("draggable", "stack", {
        start: function () {
            var min,
                o = this.data("ui-draggable").options,
                group = $.makeArray($(o.stack)).sort(function (a, b) {
                    return (parseInt($(a).css("zIndex"), 10) || 0) - (parseInt($(b).css("zIndex"), 10) || 0);
                });

            if (!group.length) { return; }

            min = parseInt($(group[0]).css("zIndex"), 10) || 0;
            $(group).each(function (i) {
                $(this).css("zIndex", min + i);
            });
            this.css("zIndex", (min + group.length));
        }
    });

    $.ui.plugin.add("draggable", "zIndex", {
        start: function (event, ui) {
            var t = $(ui.helper), o = $(this).data("ui-draggable").options;
            if (t.css("zIndex")) {
                o._zIndex = t.css("zIndex");
            }
            t.css("zIndex", o.zIndex);
        },
        stop: function (event, ui) {
            var o = $(this).data("ui-draggable").options;
            if (o._zIndex) {
                $(ui.helper).css("zIndex", o._zIndex);
            }
        }
    });

})(jQuery);
(function ($, undefined) {

    function isOverAxis(x, reference, size) {
        return (x > reference) && (x < (reference + size));
    }

    $.widget("ui.droppable", {
        version: "1.10.4",
        widgetEventPrefix: "drop",
        options: {
            accept: "*",
            activeClass: false,
            addClasses: true,
            greedy: false,
            hoverClass: false,
            scope: "default",
            tolerance: "intersect",

            // callbacks
            activate: null,
            deactivate: null,
            drop: null,
            out: null,
            over: null
        },
        _create: function () {

            var proportions,
                o = this.options,
                accept = o.accept;

            this.isover = false;
            this.isout = true;

            this.accept = $.isFunction(accept) ? accept : function (d) {
                return d.is(accept);
            };

            this.proportions = function ( /* valueToWrite */) {
                if (arguments.length) {
                    // Store the droppable's proportions
                    proportions = arguments[0];
                } else {
                    // Retrieve or derive the droppable's proportions
                    return proportions ?
                        proportions :
                        proportions = {
                            width: this.element[0].offsetWidth,
                            height: this.element[0].offsetHeight
                        };
                }
            };

            // Add the reference and positions to the manager
            $.ui.ddmanager.droppables[o.scope] = $.ui.ddmanager.droppables[o.scope] || [];
            $.ui.ddmanager.droppables[o.scope].push(this);

            (o.addClasses && this.element.addClass("ui-droppable"));

        },

        _destroy: function () {
            var i = 0,
                drop = $.ui.ddmanager.droppables[this.options.scope];

            for (; i < drop.length; i++) {
                if (drop[i] === this) {
                    drop.splice(i, 1);
                }
            }

            this.element.removeClass("ui-droppable ui-droppable-disabled");
        },

        _setOption: function (key, value) {

            if (key === "accept") {
                this.accept = $.isFunction(value) ? value : function (d) {
                    return d.is(value);
                };
            }
            $.Widget.prototype._setOption.apply(this, arguments);
        },

        _activate: function (event) {
            var draggable = $.ui.ddmanager.current;
            if (this.options.activeClass) {
                this.element.addClass(this.options.activeClass);
            }
            if (draggable) {
                this._trigger("activate", event, this.ui(draggable));
            }
        },

        _deactivate: function (event) {
            var draggable = $.ui.ddmanager.current;
            if (this.options.activeClass) {
                this.element.removeClass(this.options.activeClass);
            }
            if (draggable) {
                this._trigger("deactivate", event, this.ui(draggable));
            }
        },

        _over: function (event) {

            var draggable = $.ui.ddmanager.current;

            // Bail if draggable and droppable are same element
            if (!draggable || (draggable.currentItem || draggable.element)[0] === this.element[0]) {
                return;
            }

            if (this.accept.call(this.element[0], (draggable.currentItem || draggable.element))) {
                if (this.options.hoverClass) {
                    this.element.addClass(this.options.hoverClass);
                }
                this._trigger("over", event, this.ui(draggable));
            }

        },

        _out: function (event) {

            var draggable = $.ui.ddmanager.current;

            // Bail if draggable and droppable are same element
            if (!draggable || (draggable.currentItem || draggable.element)[0] === this.element[0]) {
                return;
            }

            if (this.accept.call(this.element[0], (draggable.currentItem || draggable.element))) {
                if (this.options.hoverClass) {
                    this.element.removeClass(this.options.hoverClass);
                }
                this._trigger("out", event, this.ui(draggable));
            }

        },

        _drop: function (event, custom) {

            var draggable = custom || $.ui.ddmanager.current,
                childrenIntersection = false;

            // Bail if draggable and droppable are same element
            if (!draggable || (draggable.currentItem || draggable.element)[0] === this.element[0]) {
                return false;
            }

            this.element.find(":data(ui-droppable)").not(".ui-draggable-dragging").each(function () {
                var inst = $.data(this, "ui-droppable");
                if (
                    inst.options.greedy &&
                    !inst.options.disabled &&
                    inst.options.scope === draggable.options.scope &&
                    inst.accept.call(inst.element[0], (draggable.currentItem || draggable.element)) &&
                    $.ui.intersect(draggable, $.extend(inst, { offset: inst.element.offset() }), inst.options.tolerance)
                ) { childrenIntersection = true; return false; }
            });
            if (childrenIntersection) {
                return false;
            }

            if (this.accept.call(this.element[0], (draggable.currentItem || draggable.element))) {
                if (this.options.activeClass) {
                    this.element.removeClass(this.options.activeClass);
                }
                if (this.options.hoverClass) {
                    this.element.removeClass(this.options.hoverClass);
                }
                this._trigger("drop", event, this.ui(draggable));
                return this.element;
            }

            return false;

        },

        ui: function (c) {
            return {
                draggable: (c.currentItem || c.element),
                helper: c.helper,
                position: c.position,
                offset: c.positionAbs
            };
        }

    });

    $.ui.intersect = function (draggable, droppable, toleranceMode) {

        if (!droppable.offset) {
            return false;
        }

        var draggableLeft, draggableTop,
            x1 = (draggable.positionAbs || draggable.position.absolute).left,
            y1 = (draggable.positionAbs || draggable.position.absolute).top,
            x2 = x1 + draggable.helperProportions.width,
            y2 = y1 + draggable.helperProportions.height,
            l = droppable.offset.left,
            t = droppable.offset.top,
            r = l + droppable.proportions().width,
            b = t + droppable.proportions().height;

        switch (toleranceMode) {
            case "fit":
                return (l <= x1 && x2 <= r && t <= y1 && y2 <= b);
            case "intersect":
                return (l < x1 + (draggable.helperProportions.width / 2) && // Right Half
                    x2 - (draggable.helperProportions.width / 2) < r && // Left Half
                    t < y1 + (draggable.helperProportions.height / 2) && // Bottom Half
                    y2 - (draggable.helperProportions.height / 2) < b); // Top Half
            case "pointer":
                draggableLeft = ((draggable.positionAbs || draggable.position.absolute).left + (draggable.clickOffset || draggable.offset.click).left);
                draggableTop = ((draggable.positionAbs || draggable.position.absolute).top + (draggable.clickOffset || draggable.offset.click).top);
                return isOverAxis(draggableTop, t, droppable.proportions().height) && isOverAxis(draggableLeft, l, droppable.proportions().width);
            case "touch":
                return (
                    (y1 >= t && y1 <= b) ||	// Top edge touching
                    (y2 >= t && y2 <= b) ||	// Bottom edge touching
                    (y1 < t && y2 > b)		// Surrounded vertically
                ) && (
                        (x1 >= l && x1 <= r) ||	// Left edge touching
                        (x2 >= l && x2 <= r) ||	// Right edge touching
                        (x1 < l && x2 > r)		// Surrounded horizontally
                    );
            default:
                return false;
        }

    };

    /*
        This manager tracks offsets of draggables and droppables
    */
    $.ui.ddmanager = {
        current: null,
        droppables: { "default": [] },
        prepareOffsets: function (t, event) {

            var i, j,
                m = $.ui.ddmanager.droppables[t.options.scope] || [],
                type = event ? event.type : null, // workaround for #2317
                list = (t.currentItem || t.element).find(":data(ui-droppable)").addBack();

            droppablesLoop: for (i = 0; i < m.length; i++) {

                //No disabled and non-accepted
                if (m[i].options.disabled || (t && !m[i].accept.call(m[i].element[0], (t.currentItem || t.element)))) {
                    continue;
                }

                // Filter out elements in the current dragged item
                for (j = 0; j < list.length; j++) {
                    if (list[j] === m[i].element[0]) {
                        m[i].proportions().height = 0;
                        continue droppablesLoop;
                    }
                }

                m[i].visible = m[i].element.css("display") !== "none";
                if (!m[i].visible) {
                    continue;
                }

                //Activate the droppable if used directly from draggables
                if (type === "mousedown") {
                    m[i]._activate.call(m[i], event);
                }

                m[i].offset = m[i].element.offset();
                m[i].proportions({ width: m[i].element[0].offsetWidth, height: m[i].element[0].offsetHeight });

            }

        },
        drop: function (draggable, event) {

            var dropped = false;
            // Create a copy of the droppables in case the list changes during the drop (#9116)
            $.each(($.ui.ddmanager.droppables[draggable.options.scope] || []).slice(), function () {

                if (!this.options) {
                    return;
                }
                if (!this.options.disabled && this.visible && $.ui.intersect(draggable, this, this.options.tolerance)) {
                    dropped = this._drop.call(this, event) || dropped;
                }

                if (!this.options.disabled && this.visible && this.accept.call(this.element[0], (draggable.currentItem || draggable.element))) {
                    this.isout = true;
                    this.isover = false;
                    this._deactivate.call(this, event);
                }

            });
            return dropped;

        },
        dragStart: function (draggable, event) {
            //Listen for scrolling so that if the dragging causes scrolling the position of the droppables can be recalculated (see #5003)
            draggable.element.parentsUntil("body").bind("scroll.droppable", function () {
                if (!draggable.options.refreshPositions) {
                    $.ui.ddmanager.prepareOffsets(draggable, event);
                }
            });
        },
        drag: function (draggable, event) {

            //If you have a highly dynamic page, you might try this option. It renders positions every time you move the mouse.
            if (draggable.options.refreshPositions) {
                $.ui.ddmanager.prepareOffsets(draggable, event);
            }

            //Run through all droppables and check their positions based on specific tolerance options
            $.each($.ui.ddmanager.droppables[draggable.options.scope] || [], function () {

                if (this.options.disabled || this.greedyChild || !this.visible) {
                    return;
                }

                var parentInstance, scope, parent,
                    intersects = $.ui.intersect(draggable, this, this.options.tolerance),
                    c = !intersects && this.isover ? "isout" : (intersects && !this.isover ? "isover" : null);
                if (!c) {
                    return;
                }

                if (this.options.greedy) {
                    // find droppable parents with same scope
                    scope = this.options.scope;
                    parent = this.element.parents(":data(ui-droppable)").filter(function () {
                        return $.data(this, "ui-droppable").options.scope === scope;
                    });

                    if (parent.length) {
                        parentInstance = $.data(parent[0], "ui-droppable");
                        parentInstance.greedyChild = (c === "isover");
                    }
                }

                // we just moved into a greedy child
                if (parentInstance && c === "isover") {
                    parentInstance.isover = false;
                    parentInstance.isout = true;
                    parentInstance._out.call(parentInstance, event);
                }

                this[c] = true;
                this[c === "isout" ? "isover" : "isout"] = false;
                this[c === "isover" ? "_over" : "_out"].call(this, event);

                // we just moved out of a greedy child
                if (parentInstance && c === "isout") {
                    parentInstance.isout = false;
                    parentInstance.isover = true;
                    parentInstance._over.call(parentInstance, event);
                }
            });

        },
        dragStop: function (draggable, event) {
            draggable.element.parentsUntil("body").unbind("scroll.droppable");
            //Call prepareOffsets one final time since IE does not fire return scroll events when overflow was caused by drag (see #5003)
            if (!draggable.options.refreshPositions) {
                $.ui.ddmanager.prepareOffsets(draggable, event);
            }
        }
    };

})(jQuery);
(function ($, undefined) {

    var dataSpace = "ui-effects-";

    $.effects = {
        effect: {}
    };

    /*!
     * jQuery Color Animations v2.1.2
     * https://github.com/jquery/jquery-color
     *
     * Copyright 2013 jQuery Foundation and other contributors
     * Released under the MIT license.
     * http://jquery.org/license
     *
     * Date: Wed Jan 16 08:47:09 2013 -0600
     */
    (function (jQuery, undefined) {

        var stepHooks = "backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor",

            // plusequals test for += 100 -= 100
            rplusequals = /^([\-+])=\s*(\d+\.?\d*)/,
            // a set of RE's that can match strings and generate color tuples.
            stringParsers = [{
                re: /rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
                parse: function (execResult) {
                    return [
                        execResult[1],
                        execResult[2],
                        execResult[3],
                        execResult[4]
                    ];
                }
            }, {
                re: /rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
                parse: function (execResult) {
                    return [
                        execResult[1] * 2.55,
                        execResult[2] * 2.55,
                        execResult[3] * 2.55,
                        execResult[4]
                    ];
                }
            }, {
                // this regex ignores A-F because it's compared against an already lowercased string
                re: /#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/,
                parse: function (execResult) {
                    return [
                        parseInt(execResult[1], 16),
                        parseInt(execResult[2], 16),
                        parseInt(execResult[3], 16)
                    ];
                }
            }, {
                // this regex ignores A-F because it's compared against an already lowercased string
                re: /#([a-f0-9])([a-f0-9])([a-f0-9])/,
                parse: function (execResult) {
                    return [
                        parseInt(execResult[1] + execResult[1], 16),
                        parseInt(execResult[2] + execResult[2], 16),
                        parseInt(execResult[3] + execResult[3], 16)
                    ];
                }
            }, {
                re: /hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
                space: "hsla",
                parse: function (execResult) {
                    return [
                        execResult[1],
                        execResult[2] / 100,
                        execResult[3] / 100,
                        execResult[4]
                    ];
                }
            }],

            // jQuery.Color( )
            color = jQuery.Color = function (color, green, blue, alpha) {
                return new jQuery.Color.fn.parse(color, green, blue, alpha);
            },
            spaces = {
                rgba: {
                    props: {
                        red: {
                            idx: 0,
                            type: "byte"
                        },
                        green: {
                            idx: 1,
                            type: "byte"
                        },
                        blue: {
                            idx: 2,
                            type: "byte"
                        }
                    }
                },

                hsla: {
                    props: {
                        hue: {
                            idx: 0,
                            type: "degrees"
                        },
                        saturation: {
                            idx: 1,
                            type: "percent"
                        },
                        lightness: {
                            idx: 2,
                            type: "percent"
                        }
                    }
                }
            },
            propTypes = {
                "byte": {
                    floor: true,
                    max: 255
                },
                "percent": {
                    max: 1
                },
                "degrees": {
                    mod: 360,
                    floor: true
                }
            },
            support = color.support = {},

            // element for support tests
            supportElem = jQuery("<p>")[0],

            // colors = jQuery.Color.names
            colors,

            // local aliases of functions called often
            each = jQuery.each;

        // determine rgba support immediately
        supportElem.style.cssText = "background-color:rgba(1,1,1,.5)";
        support.rgba = supportElem.style.backgroundColor.indexOf("rgba") > -1;

        // define cache name and alpha properties
        // for rgba and hsla spaces
        each(spaces, function (spaceName, space) {
            space.cache = "_" + spaceName;
            space.props.alpha = {
                idx: 3,
                type: "percent",
                def: 1
            };
        });

        function clamp(value, prop, allowEmpty) {
            var type = propTypes[prop.type] || {};

            if (value == null) {
                return (allowEmpty || !prop.def) ? null : prop.def;
            }

            // ~~ is an short way of doing floor for positive numbers
            value = type.floor ? ~~value : parseFloat(value);

            // IE will pass in empty strings as value for alpha,
            // which will hit this case
            if (isNaN(value)) {
                return prop.def;
            }

            if (type.mod) {
                // we add mod before modding to make sure that negatives values
                // get converted properly: -10 -> 350
                return (value + type.mod) % type.mod;
            }

            // for now all property types without mod have min and max
            return 0 > value ? 0 : type.max < value ? type.max : value;
        }

        function stringParse(string) {
            var inst = color(),
                rgba = inst._rgba = [];

            string = string.toLowerCase();

            each(stringParsers, function (i, parser) {
                var parsed,
                    match = parser.re.exec(string),
                    values = match && parser.parse(match),
                    spaceName = parser.space || "rgba";

                if (values) {
                    parsed = inst[spaceName](values);

                    // if this was an rgba parse the assignment might happen twice
                    // oh well....
                    inst[spaces[spaceName].cache] = parsed[spaces[spaceName].cache];
                    rgba = inst._rgba = parsed._rgba;

                    // exit each( stringParsers ) here because we matched
                    return false;
                }
            });

            // Found a stringParser that handled it
            if (rgba.length) {

                // if this came from a parsed string, force "transparent" when alpha is 0
                // chrome, (and maybe others) return "transparent" as rgba(0,0,0,0)
                if (rgba.join() === "0,0,0,0") {
                    jQuery.extend(rgba, colors.transparent);
                }
                return inst;
            }

            // named colors
            return colors[string];
        }

        color.fn = jQuery.extend(color.prototype, {
            parse: function (red, green, blue, alpha) {
                if (red === undefined) {
                    this._rgba = [null, null, null, null];
                    return this;
                }
                if (red.jquery || red.nodeType) {
                    red = jQuery(red).css(green);
                    green = undefined;
                }

                var inst = this,
                    type = jQuery.type(red),
                    rgba = this._rgba = [];

                // more than 1 argument specified - assume ( red, green, blue, alpha )
                if (green !== undefined) {
                    red = [red, green, blue, alpha];
                    type = "array";
                }

                if (type === "string") {
                    return this.parse(stringParse(red) || colors._default);
                }

                if (type === "array") {
                    each(spaces.rgba.props, function (key, prop) {
                        rgba[prop.idx] = clamp(red[prop.idx], prop);
                    });
                    return this;
                }

                if (type === "object") {
                    if (red instanceof color) {
                        each(spaces, function (spaceName, space) {
                            if (red[space.cache]) {
                                inst[space.cache] = red[space.cache].slice();
                            }
                        });
                    } else {
                        each(spaces, function (spaceName, space) {
                            var cache = space.cache;
                            each(space.props, function (key, prop) {

                                // if the cache doesn't exist, and we know how to convert
                                if (!inst[cache] && space.to) {

                                    // if the value was null, we don't need to copy it
                                    // if the key was alpha, we don't need to copy it either
                                    if (key === "alpha" || red[key] == null) {
                                        return;
                                    }
                                    inst[cache] = space.to(inst._rgba);
                                }

                                // this is the only case where we allow nulls for ALL properties.
                                // call clamp with alwaysAllowEmpty
                                inst[cache][prop.idx] = clamp(red[key], prop, true);
                            });

                            // everything defined but alpha?
                            if (inst[cache] && jQuery.inArray(null, inst[cache].slice(0, 3)) < 0) {
                                // use the default of 1
                                inst[cache][3] = 1;
                                if (space.from) {
                                    inst._rgba = space.from(inst[cache]);
                                }
                            }
                        });
                    }
                    return this;
                }
            },
            is: function (compare) {
                var is = color(compare),
                    same = true,
                    inst = this;

                each(spaces, function (_, space) {
                    var localCache,
                        isCache = is[space.cache];
                    if (isCache) {
                        localCache = inst[space.cache] || space.to && space.to(inst._rgba) || [];
                        each(space.props, function (_, prop) {
                            if (isCache[prop.idx] != null) {
                                same = (isCache[prop.idx] === localCache[prop.idx]);
                                return same;
                            }
                        });
                    }
                    return same;
                });
                return same;
            },
            _space: function () {
                var used = [],
                    inst = this;
                each(spaces, function (spaceName, space) {
                    if (inst[space.cache]) {
                        used.push(spaceName);
                    }
                });
                return used.pop();
            },
            transition: function (other, distance) {
                var end = color(other),
                    spaceName = end._space(),
                    space = spaces[spaceName],
                    startColor = this.alpha() === 0 ? color("transparent") : this,
                    start = startColor[space.cache] || space.to(startColor._rgba),
                    result = start.slice();

                end = end[space.cache];
                each(space.props, function (key, prop) {
                    var index = prop.idx,
                        startValue = start[index],
                        endValue = end[index],
                        type = propTypes[prop.type] || {};

                    // if null, don't override start value
                    if (endValue === null) {
                        return;
                    }
                    // if null - use end
                    if (startValue === null) {
                        result[index] = endValue;
                    } else {
                        if (type.mod) {
                            if (endValue - startValue > type.mod / 2) {
                                startValue += type.mod;
                            } else if (startValue - endValue > type.mod / 2) {
                                startValue -= type.mod;
                            }
                        }
                        result[index] = clamp((endValue - startValue) * distance + startValue, prop);
                    }
                });
                return this[spaceName](result);
            },
            blend: function (opaque) {
                // if we are already opaque - return ourself
                if (this._rgba[3] === 1) {
                    return this;
                }

                var rgb = this._rgba.slice(),
                    a = rgb.pop(),
                    blend = color(opaque)._rgba;

                return color(jQuery.map(rgb, function (v, i) {
                    return (1 - a) * blend[i] + a * v;
                }));
            },
            toRgbaString: function () {
                var prefix = "rgba(",
                    rgba = jQuery.map(this._rgba, function (v, i) {
                        return v == null ? (i > 2 ? 1 : 0) : v;
                    });

                if (rgba[3] === 1) {
                    rgba.pop();
                    prefix = "rgb(";
                }

                return prefix + rgba.join() + ")";
            },
            toHslaString: function () {
                var prefix = "hsla(",
                    hsla = jQuery.map(this.hsla(), function (v, i) {
                        if (v == null) {
                            v = i > 2 ? 1 : 0;
                        }

                        // catch 1 and 2
                        if (i && i < 3) {
                            v = Math.round(v * 100) + "%";
                        }
                        return v;
                    });

                if (hsla[3] === 1) {
                    hsla.pop();
                    prefix = "hsl(";
                }
                return prefix + hsla.join() + ")";
            },
            toHexString: function (includeAlpha) {
                var rgba = this._rgba.slice(),
                    alpha = rgba.pop();

                if (includeAlpha) {
                    rgba.push(~~(alpha * 255));
                }

                return "#" + jQuery.map(rgba, function (v) {

                    // default to 0 when nulls exist
                    v = (v || 0).toString(16);
                    return v.length === 1 ? "0" + v : v;
                }).join("");
            },
            toString: function () {
                return this._rgba[3] === 0 ? "transparent" : this.toRgbaString();
            }
        });
        color.fn.parse.prototype = color.fn;

        // hsla conversions adapted from:
        // https://code.google.com/p/maashaack/source/browse/packages/graphics/trunk/src/graphics/colors/HUE2RGB.as?r=5021

        function hue2rgb(p, q, h) {
            h = (h + 1) % 1;
            if (h * 6 < 1) {
                return p + (q - p) * h * 6;
            }
            if (h * 2 < 1) {
                return q;
            }
            if (h * 3 < 2) {
                return p + (q - p) * ((2 / 3) - h) * 6;
            }
            return p;
        }

        spaces.hsla.to = function (rgba) {
            if (rgba[0] == null || rgba[1] == null || rgba[2] == null) {
                return [null, null, null, rgba[3]];
            }
            var r = rgba[0] / 255,
                g = rgba[1] / 255,
                b = rgba[2] / 255,
                a = rgba[3],
                max = Math.max(r, g, b),
                min = Math.min(r, g, b),
                diff = max - min,
                add = max + min,
                l = add * 0.5,
                h, s;

            if (min === max) {
                h = 0;
            } else if (r === max) {
                h = (60 * (g - b) / diff) + 360;
            } else if (g === max) {
                h = (60 * (b - r) / diff) + 120;
            } else {
                h = (60 * (r - g) / diff) + 240;
            }

            // chroma (diff) == 0 means greyscale which, by definition, saturation = 0%
            // otherwise, saturation is based on the ratio of chroma (diff) to lightness (add)
            if (diff === 0) {
                s = 0;
            } else if (l <= 0.5) {
                s = diff / add;
            } else {
                s = diff / (2 - add);
            }
            return [Math.round(h) % 360, s, l, a == null ? 1 : a];
        };

        spaces.hsla.from = function (hsla) {
            if (hsla[0] == null || hsla[1] == null || hsla[2] == null) {
                return [null, null, null, hsla[3]];
            }
            var h = hsla[0] / 360,
                s = hsla[1],
                l = hsla[2],
                a = hsla[3],
                q = l <= 0.5 ? l * (1 + s) : l + s - l * s,
                p = 2 * l - q;

            return [
                Math.round(hue2rgb(p, q, h + (1 / 3)) * 255),
                Math.round(hue2rgb(p, q, h) * 255),
                Math.round(hue2rgb(p, q, h - (1 / 3)) * 255),
                a
            ];
        };


        each(spaces, function (spaceName, space) {
            var props = space.props,
                cache = space.cache,
                to = space.to,
                from = space.from;

            // makes rgba() and hsla()
            color.fn[spaceName] = function (value) {

                // generate a cache for this space if it doesn't exist
                if (to && !this[cache]) {
                    this[cache] = to(this._rgba);
                }
                if (value === undefined) {
                    return this[cache].slice();
                }

                var ret,
                    type = jQuery.type(value),
                    arr = (type === "array" || type === "object") ? value : arguments,
                    local = this[cache].slice();

                each(props, function (key, prop) {
                    var val = arr[type === "object" ? key : prop.idx];
                    if (val == null) {
                        val = local[prop.idx];
                    }
                    local[prop.idx] = clamp(val, prop);
                });

                if (from) {
                    ret = color(from(local));
                    ret[cache] = local;
                    return ret;
                } else {
                    return color(local);
                }
            };

            // makes red() green() blue() alpha() hue() saturation() lightness()
            each(props, function (key, prop) {
                // alpha is included in more than one space
                if (color.fn[key]) {
                    return;
                }
                color.fn[key] = function (value) {
                    var vtype = jQuery.type(value),
                        fn = (key === "alpha" ? (this._hsla ? "hsla" : "rgba") : spaceName),
                        local = this[fn](),
                        cur = local[prop.idx],
                        match;

                    if (vtype === "undefined") {
                        return cur;
                    }

                    if (vtype === "function") {
                        value = value.call(this, cur);
                        vtype = jQuery.type(value);
                    }
                    if (value == null && prop.empty) {
                        return this;
                    }
                    if (vtype === "string") {
                        match = rplusequals.exec(value);
                        if (match) {
                            value = cur + parseFloat(match[2]) * (match[1] === "+" ? 1 : -1);
                        }
                    }
                    local[prop.idx] = value;
                    return this[fn](local);
                };
            });
        });

        // add cssHook and .fx.step function for each named hook.
        // accept a space separated string of properties
        color.hook = function (hook) {
            var hooks = hook.split(" ");
            each(hooks, function (i, hook) {
                jQuery.cssHooks[hook] = {
                    set: function (elem, value) {
                        var parsed, curElem,
                            backgroundColor = "";

                        if (value !== "transparent" && (jQuery.type(value) !== "string" || (parsed = stringParse(value)))) {
                            value = color(parsed || value);
                            if (!support.rgba && value._rgba[3] !== 1) {
                                curElem = hook === "backgroundColor" ? elem.parentNode : elem;
                                while (
                                    (backgroundColor === "" || backgroundColor === "transparent") &&
                                    curElem && curElem.style
                                ) {
                                    try {
                                        backgroundColor = jQuery.css(curElem, "backgroundColor");
                                        curElem = curElem.parentNode;
                                    } catch (e) {
                                    }
                                }

                                value = value.blend(backgroundColor && backgroundColor !== "transparent" ?
                                    backgroundColor :
                                    "_default");
                            }

                            value = value.toRgbaString();
                        }
                        try {
                            elem.style[hook] = value;
                        } catch (e) {
                            // wrapped to prevent IE from throwing errors on "invalid" values like 'auto' or 'inherit'
                        }
                    }
                };
                jQuery.fx.step[hook] = function (fx) {
                    if (!fx.colorInit) {
                        fx.start = color(fx.elem, hook);
                        fx.end = color(fx.end);
                        fx.colorInit = true;
                    }
                    jQuery.cssHooks[hook].set(fx.elem, fx.start.transition(fx.end, fx.pos));
                };
            });

        };

        color.hook(stepHooks);

        jQuery.cssHooks.borderColor = {
            expand: function (value) {
                var expanded = {};

                each(["Top", "Right", "Bottom", "Left"], function (i, part) {
                    expanded["border" + part + "Color"] = value;
                });
                return expanded;
            }
        };

        // Basic color names only.
        // Usage of any of the other color names requires adding yourself or including
        // jquery.color.svg-names.js.
        colors = jQuery.Color.names = {
            // 4.1. Basic color keywords
            aqua: "#00ffff",
            black: "#000000",
            blue: "#0000ff",
            fuchsia: "#ff00ff",
            gray: "#808080",
            green: "#008000",
            lime: "#00ff00",
            maroon: "#800000",
            navy: "#000080",
            olive: "#808000",
            purple: "#800080",
            red: "#ff0000",
            silver: "#c0c0c0",
            teal: "#008080",
            white: "#ffffff",
            yellow: "#ffff00",

            // 4.2.3. "transparent" color keyword
            transparent: [null, null, null, 0],

            _default: "#ffffff"
        };

    })(jQuery);


    /******************************************************************************/
    /****************************** CLASS ANIMATIONS ******************************/
    /******************************************************************************/
    (function () {

        var classAnimationActions = ["add", "remove", "toggle"],
            shorthandStyles = {
                border: 1,
                borderBottom: 1,
                borderColor: 1,
                borderLeft: 1,
                borderRight: 1,
                borderTop: 1,
                borderWidth: 1,
                margin: 1,
                padding: 1
            };

        $.each(["borderLeftStyle", "borderRightStyle", "borderBottomStyle", "borderTopStyle"], function (_, prop) {
            $.fx.step[prop] = function (fx) {
                if (fx.end !== "none" && !fx.setAttr || fx.pos === 1 && !fx.setAttr) {
                    jQuery.style(fx.elem, prop, fx.end);
                    fx.setAttr = true;
                }
            };
        });

        function getElementStyles(elem) {
            var key, len,
                style = elem.ownerDocument.defaultView ?
                    elem.ownerDocument.defaultView.getComputedStyle(elem, null) :
                    elem.currentStyle,
                styles = {};

            if (style && style.length && style[0] && style[style[0]]) {
                len = style.length;
                while (len--) {
                    key = style[len];
                    if (typeof style[key] === "string") {
                        styles[$.camelCase(key)] = style[key];
                    }
                }
                // support: Opera, IE <9
            } else {
                for (key in style) {
                    if (typeof style[key] === "string") {
                        styles[key] = style[key];
                    }
                }
            }

            return styles;
        }


        function styleDifference(oldStyle, newStyle) {
            var diff = {},
                name, value;

            for (name in newStyle) {
                value = newStyle[name];
                if (oldStyle[name] !== value) {
                    if (!shorthandStyles[name]) {
                        if ($.fx.step[name] || !isNaN(parseFloat(value))) {
                            diff[name] = value;
                        }
                    }
                }
            }

            return diff;
        }

        // support: jQuery <1.8
        if (!$.fn.addBack) {
            $.fn.addBack = function (selector) {
                return this.add(selector == null ?
                    this.prevObject : this.prevObject.filter(selector)
                );
            };
        }

        $.effects.animateClass = function (value, duration, easing, callback) {
            var o = $.speed(duration, easing, callback);

            return this.queue(function () {
                var animated = $(this),
                    baseClass = animated.attr("class") || "",
                    applyClassChange,
                    allAnimations = o.children ? animated.find("*").addBack() : animated;

                // map the animated objects to store the original styles.
                allAnimations = allAnimations.map(function () {
                    var el = $(this);
                    return {
                        el: el,
                        start: getElementStyles(this)
                    };
                });

                // apply class change
                applyClassChange = function () {
                    $.each(classAnimationActions, function (i, action) {
                        if (value[action]) {
                            animated[action + "Class"](value[action]);
                        }
                    });
                };
                applyClassChange();

                // map all animated objects again - calculate new styles and diff
                allAnimations = allAnimations.map(function () {
                    this.end = getElementStyles(this.el[0]);
                    this.diff = styleDifference(this.start, this.end);
                    return this;
                });

                // apply original class
                animated.attr("class", baseClass);

                // map all animated objects again - this time collecting a promise
                allAnimations = allAnimations.map(function () {
                    var styleInfo = this,
                        dfd = $.Deferred(),
                        opts = $.extend({}, o, {
                            queue: false,
                            complete: function () {
                                dfd.resolve(styleInfo);
                            }
                        });

                    this.el.animate(this.diff, opts);
                    return dfd.promise();
                });

                // once all animations have completed:
                $.when.apply($, allAnimations.get()).done(function () {

                    // set the final class
                    applyClassChange();

                    // for each animated element,
                    // clear all css properties that were animated
                    $.each(arguments, function () {
                        var el = this.el;
                        $.each(this.diff, function (key) {
                            el.css(key, "");
                        });
                    });

                    // this is guarnteed to be there if you use jQuery.speed()
                    // it also handles dequeuing the next anim...
                    o.complete.call(animated[0]);
                });
            });
        };

        $.fn.extend({
            addClass: (function (orig) {
                return function (classNames, speed, easing, callback) {
                    return speed ?
                        $.effects.animateClass.call(this,
                            { add: classNames }, speed, easing, callback) :
                        orig.apply(this, arguments);
                };
            })($.fn.addClass),

            removeClass: (function (orig) {
                return function (classNames, speed, easing, callback) {
                    return arguments.length > 1 ?
                        $.effects.animateClass.call(this,
                            { remove: classNames }, speed, easing, callback) :
                        orig.apply(this, arguments);
                };
            })($.fn.removeClass),

            toggleClass: (function (orig) {
                return function (classNames, force, speed, easing, callback) {
                    if (typeof force === "boolean" || force === undefined) {
                        if (!speed) {
                            // without speed parameter
                            return orig.apply(this, arguments);
                        } else {
                            return $.effects.animateClass.call(this,
                                (force ? { add: classNames } : { remove: classNames }),
                                speed, easing, callback);
                        }
                    } else {
                        // without force parameter
                        return $.effects.animateClass.call(this,
                            { toggle: classNames }, force, speed, easing);
                    }
                };
            })($.fn.toggleClass),

            switchClass: function (remove, add, speed, easing, callback) {
                return $.effects.animateClass.call(this, {
                    add: add,
                    remove: remove
                }, speed, easing, callback);
            }
        });

    })();

    /******************************************************************************/
    /*********************************** EFFECTS **********************************/
    /******************************************************************************/

    (function () {

        $.extend($.effects, {
            version: "1.10.4",

            // Saves a set of properties in a data storage
            save: function (element, set) {
                for (var i = 0; i < set.length; i++) {
                    if (set[i] !== null) {
                        element.data(dataSpace + set[i], element[0].style[set[i]]);
                    }
                }
            },

            // Restores a set of previously saved properties from a data storage
            restore: function (element, set) {
                var val, i;
                for (i = 0; i < set.length; i++) {
                    if (set[i] !== null) {
                        val = element.data(dataSpace + set[i]);
                        // support: jQuery 1.6.2
                        // http://bugs.jquery.com/ticket/9917
                        // jQuery 1.6.2 incorrectly returns undefined for any falsy value.
                        // We can't differentiate between "" and 0 here, so we just assume
                        // empty string since it's likely to be a more common value...
                        if (val === undefined) {
                            val = "";
                        }
                        element.css(set[i], val);
                    }
                }
            },

            setMode: function (el, mode) {
                if (mode === "toggle") {
                    mode = el.is(":hidden") ? "show" : "hide";
                }
                return mode;
            },

            // Translates a [top,left] array into a baseline value
            // this should be a little more flexible in the future to handle a string & hash
            getBaseline: function (origin, original) {
                var y, x;
                switch (origin[0]) {
                    case "top": y = 0; break;
                    case "middle": y = 0.5; break;
                    case "bottom": y = 1; break;
                    default: y = origin[0] / original.height;
                }
                switch (origin[1]) {
                    case "left": x = 0; break;
                    case "center": x = 0.5; break;
                    case "right": x = 1; break;
                    default: x = origin[1] / original.width;
                }
                return {
                    x: x,
                    y: y
                };
            },

            // Wraps the element around a wrapper that copies position properties
            createWrapper: function (element) {

                // if the element is already wrapped, return it
                if (element.parent().is(".ui-effects-wrapper")) {
                    return element.parent();
                }

                // wrap the element
                var props = {
                    width: element.outerWidth(true),
                    height: element.outerHeight(true),
                    "float": element.css("float")
                },
                    wrapper = $("<div></div>")
                        .addClass("ui-effects-wrapper")
                        .css({
                            fontSize: "100%",
                            background: "transparent",
                            border: "none",
                            margin: 0,
                            padding: 0
                        }),
                    // Store the size in case width/height are defined in % - Fixes #5245
                    size = {
                        width: element.width(),
                        height: element.height()
                    },
                    active = document.activeElement;

                // support: Firefox
                // Firefox incorrectly exposes anonymous content
                // https://bugzilla.mozilla.org/show_bug.cgi?id=561664
                try {
                    active.id;
                } catch (e) {
                    active = document.body;
                }

                element.wrap(wrapper);

                // Fixes #7595 - Elements lose focus when wrapped.
                if (element[0] === active || $.contains(element[0], active)) {
                    $(active).focus();
                }

                wrapper = element.parent(); //Hotfix for jQuery 1.4 since some change in wrap() seems to actually lose the reference to the wrapped element

                // transfer positioning properties to the wrapper
                if (element.css("position") === "static") {
                    wrapper.css({ position: "relative" });
                    element.css({ position: "relative" });
                } else {
                    $.extend(props, {
                        position: element.css("position"),
                        zIndex: element.css("z-index")
                    });
                    $.each(["top", "left", "bottom", "right"], function (i, pos) {
                        props[pos] = element.css(pos);
                        if (isNaN(parseInt(props[pos], 10))) {
                            props[pos] = "auto";
                        }
                    });
                    element.css({
                        position: "relative",
                        top: 0,
                        left: 0,
                        right: "auto",
                        bottom: "auto"
                    });
                }
                element.css(size);

                return wrapper.css(props).show();
            },

            removeWrapper: function (element) {
                var active = document.activeElement;

                if (element.parent().is(".ui-effects-wrapper")) {
                    element.parent().replaceWith(element);

                    // Fixes #7595 - Elements lose focus when wrapped.
                    if (element[0] === active || $.contains(element[0], active)) {
                        $(active).focus();
                    }
                }


                return element;
            },

            setTransition: function (element, list, factor, value) {
                value = value || {};
                $.each(list, function (i, x) {
                    var unit = element.cssUnit(x);
                    if (unit[0] > 0) {
                        value[x] = unit[0] * factor + unit[1];
                    }
                });
                return value;
            }
        });

        // return an effect options object for the given parameters:
        function _normalizeArguments(effect, options, speed, callback) {

            // allow passing all options as the first parameter
            if ($.isPlainObject(effect)) {
                options = effect;
                effect = effect.effect;
            }

            // convert to an object
            effect = { effect: effect };

            // catch (effect, null, ...)
            if (options == null) {
                options = {};
            }

            // catch (effect, callback)
            if ($.isFunction(options)) {
                callback = options;
                speed = null;
                options = {};
            }

            // catch (effect, speed, ?)
            if (typeof options === "number" || $.fx.speeds[options]) {
                callback = speed;
                speed = options;
                options = {};
            }

            // catch (effect, options, callback)
            if ($.isFunction(speed)) {
                callback = speed;
                speed = null;
            }

            // add options to effect
            if (options) {
                $.extend(effect, options);
            }

            speed = speed || options.duration;
            effect.duration = $.fx.off ? 0 :
                typeof speed === "number" ? speed :
                    speed in $.fx.speeds ? $.fx.speeds[speed] :
                        $.fx.speeds._default;

            effect.complete = callback || options.complete;

            return effect;
        }

        function standardAnimationOption(option) {
            // Valid standard speeds (nothing, number, named speed)
            if (!option || typeof option === "number" || $.fx.speeds[option]) {
                return true;
            }

            // Invalid strings - treat as "normal" speed
            if (typeof option === "string" && !$.effects.effect[option]) {
                return true;
            }

            // Complete callback
            if ($.isFunction(option)) {
                return true;
            }

            // Options hash (but not naming an effect)
            if (typeof option === "object" && !option.effect) {
                return true;
            }

            // Didn't match any standard API
            return false;
        }

        $.fn.extend({
            effect: function ( /* effect, options, speed, callback */) {
                var args = _normalizeArguments.apply(this, arguments),
                    mode = args.mode,
                    queue = args.queue,
                    effectMethod = $.effects.effect[args.effect];

                if ($.fx.off || !effectMethod) {
                    // delegate to the original method (e.g., .show()) if possible
                    if (mode) {
                        return this[mode](args.duration, args.complete);
                    } else {
                        return this.each(function () {
                            if (args.complete) {
                                args.complete.call(this);
                            }
                        });
                    }
                }

                function run(next) {
                    var elem = $(this),
                        complete = args.complete,
                        mode = args.mode;

                    function done() {
                        if ($.isFunction(complete)) {
                            complete.call(elem[0]);
                        }
                        if ($.isFunction(next)) {
                            next();
                        }
                    }

                    // If the element already has the correct final state, delegate to
                    // the core methods so the internal tracking of "olddisplay" works.
                    if (elem.is(":hidden") ? mode === "hide" : mode === "show") {
                        elem[mode]();
                        done();
                    } else {
                        effectMethod.call(elem[0], args, done);
                    }
                }

                return queue === false ? this.each(run) : this.queue(queue || "fx", run);
            },

            show: (function (orig) {
                return function (option) {
                    if (standardAnimationOption(option)) {
                        return orig.apply(this, arguments);
                    } else {
                        var args = _normalizeArguments.apply(this, arguments);
                        args.mode = "show";
                        return this.effect.call(this, args);
                    }
                };
            })($.fn.show),

            hide: (function (orig) {
                return function (option) {
                    if (standardAnimationOption(option)) {
                        return orig.apply(this, arguments);
                    } else {
                        var args = _normalizeArguments.apply(this, arguments);
                        args.mode = "hide";
                        return this.effect.call(this, args);
                    }
                };
            })($.fn.hide),

            toggle: (function (orig) {
                return function (option) {
                    if (standardAnimationOption(option) || typeof option === "boolean") {
                        return orig.apply(this, arguments);
                    } else {
                        var args = _normalizeArguments.apply(this, arguments);
                        args.mode = "toggle";
                        return this.effect.call(this, args);
                    }
                };
            })($.fn.toggle),

            // helper functions
            cssUnit: function (key) {
                var style = this.css(key),
                    val = [];

                $.each(["em", "px", "%", "pt"], function (i, unit) {
                    if (style.indexOf(unit) > 0) {
                        val = [parseFloat(style), unit];
                    }
                });
                return val;
            }
        });

    })();

    /******************************************************************************/
    /*********************************** EASING ***********************************/
    /******************************************************************************/

    (function () {

        // based on easing equations from Robert Penner (http://www.robertpenner.com/easing)

        var baseEasings = {};

        $.each(["Quad", "Cubic", "Quart", "Quint", "Expo"], function (i, name) {
            baseEasings[name] = function (p) {
                return Math.pow(p, i + 2);
            };
        });

        $.extend(baseEasings, {
            Sine: function (p) {
                return 1 - Math.cos(p * Math.PI / 2);
            },
            Circ: function (p) {
                return 1 - Math.sqrt(1 - p * p);
            },
            Elastic: function (p) {
                return p === 0 || p === 1 ? p :
                    -Math.pow(2, 8 * (p - 1)) * Math.sin(((p - 1) * 80 - 7.5) * Math.PI / 15);
            },
            Back: function (p) {
                return p * p * (3 * p - 2);
            },
            Bounce: function (p) {
                var pow2,
                    bounce = 4;

                while (p < ((pow2 = Math.pow(2, --bounce)) - 1) / 11) { }
                return 1 / Math.pow(4, 3 - bounce) - 7.5625 * Math.pow((pow2 * 3 - 2) / 22 - p, 2);
            }
        });

        $.each(baseEasings, function (name, easeIn) {
            $.easing["easeIn" + name] = easeIn;
            $.easing["easeOut" + name] = function (p) {
                return 1 - easeIn(1 - p);
            };
            $.easing["easeInOut" + name] = function (p) {
                return p < 0.5 ?
                    easeIn(p * 2) / 2 :
                    1 - easeIn(p * -2 + 2) / 2;
            };
        });

    })();

})(jQuery);
(function ($, undefined) {

    var rvertical = /up|down|vertical/,
        rpositivemotion = /up|left|vertical|horizontal/;

    $.effects.effect.blind = function (o, done) {
        // Create element
        var el = $(this),
            props = ["position", "top", "bottom", "left", "right", "height", "width"],
            mode = $.effects.setMode(el, o.mode || "hide"),
            direction = o.direction || "up",
            vertical = rvertical.test(direction),
            ref = vertical ? "height" : "width",
            ref2 = vertical ? "top" : "left",
            motion = rpositivemotion.test(direction),
            animation = {},
            show = mode === "show",
            wrapper, distance, margin;

        // if already wrapped, the wrapper's properties are my property. #6245
        if (el.parent().is(".ui-effects-wrapper")) {
            $.effects.save(el.parent(), props);
        } else {
            $.effects.save(el, props);
        }
        el.show();
        wrapper = $.effects.createWrapper(el).css({
            overflow: "hidden"
        });

        distance = wrapper[ref]();
        margin = parseFloat(wrapper.css(ref2)) || 0;

        animation[ref] = show ? distance : 0;
        if (!motion) {
            el
                .css(vertical ? "bottom" : "right", 0)
                .css(vertical ? "top" : "left", "auto")
                .css({ position: "absolute" });

            animation[ref2] = show ? margin : distance + margin;
        }

        // start at 0 if we are showing
        if (show) {
            wrapper.css(ref, 0);
            if (!motion) {
                wrapper.css(ref2, margin + distance);
            }
        }

        // Animate
        wrapper.animate(animation, {
            duration: o.duration,
            easing: o.easing,
            queue: false,
            complete: function () {
                if (mode === "hide") {
                    el.hide();
                }
                $.effects.restore(el, props);
                $.effects.removeWrapper(el);
                done();
            }
        });

    };

})(jQuery);
(function ($, undefined) {

    $.effects.effect.bounce = function (o, done) {
        var el = $(this),
            props = ["position", "top", "bottom", "left", "right", "height", "width"],

            // defaults:
            mode = $.effects.setMode(el, o.mode || "effect"),
            hide = mode === "hide",
            show = mode === "show",
            direction = o.direction || "up",
            distance = o.distance,
            times = o.times || 5,

            // number of internal animations
            anims = times * 2 + (show || hide ? 1 : 0),
            speed = o.duration / anims,
            easing = o.easing,

            // utility:
            ref = (direction === "up" || direction === "down") ? "top" : "left",
            motion = (direction === "up" || direction === "left"),
            i,
            upAnim,
            downAnim,

            // we will need to re-assemble the queue to stack our animations in place
            queue = el.queue(),
            queuelen = queue.length;

        // Avoid touching opacity to prevent clearType and PNG issues in IE
        if (show || hide) {
            props.push("opacity");
        }

        $.effects.save(el, props);
        el.show();
        $.effects.createWrapper(el); // Create Wrapper

        // default distance for the BIGGEST bounce is the outer Distance / 3
        if (!distance) {
            distance = el[ref === "top" ? "outerHeight" : "outerWidth"]() / 3;
        }

        if (show) {
            downAnim = { opacity: 1 };
            downAnim[ref] = 0;

            // if we are showing, force opacity 0 and set the initial position
            // then do the "first" animation
            el.css("opacity", 0)
                .css(ref, motion ? -distance * 2 : distance * 2)
                .animate(downAnim, speed, easing);
        }

        // start at the smallest distance if we are hiding
        if (hide) {
            distance = distance / Math.pow(2, times - 1);
        }

        downAnim = {};
        downAnim[ref] = 0;
        // Bounces up/down/left/right then back to 0 -- times * 2 animations happen here
        for (i = 0; i < times; i++) {
            upAnim = {};
            upAnim[ref] = (motion ? "-=" : "+=") + distance;

            el.animate(upAnim, speed, easing)
                .animate(downAnim, speed, easing);

            distance = hide ? distance * 2 : distance / 2;
        }

        // Last Bounce when Hiding
        if (hide) {
            upAnim = { opacity: 0 };
            upAnim[ref] = (motion ? "-=" : "+=") + distance;

            el.animate(upAnim, speed, easing);
        }

        el.queue(function () {
            if (hide) {
                el.hide();
            }
            $.effects.restore(el, props);
            $.effects.removeWrapper(el);
            done();
        });

        // inject all the animations we just queued to be first in line (after "inprogress")
        if (queuelen > 1) {
            queue.splice.apply(queue,
                [1, 0].concat(queue.splice(queuelen, anims + 1)));
        }
        el.dequeue();

    };

})(jQuery);
(function ($, undefined) {

    $.effects.effect.clip = function (o, done) {
        // Create element
        var el = $(this),
            props = ["position", "top", "bottom", "left", "right", "height", "width"],
            mode = $.effects.setMode(el, o.mode || "hide"),
            show = mode === "show",
            direction = o.direction || "vertical",
            vert = direction === "vertical",
            size = vert ? "height" : "width",
            position = vert ? "top" : "left",
            animation = {},
            wrapper, animate, distance;

        // Save & Show
        $.effects.save(el, props);
        el.show();

        // Create Wrapper
        wrapper = $.effects.createWrapper(el).css({
            overflow: "hidden"
        });
        animate = (el[0].tagName === "IMG") ? wrapper : el;
        distance = animate[size]();

        // Shift
        if (show) {
            animate.css(size, 0);
            animate.css(position, distance / 2);
        }

        // Create Animation Object:
        animation[size] = show ? distance : 0;
        animation[position] = show ? 0 : distance / 2;

        // Animate
        animate.animate(animation, {
            queue: false,
            duration: o.duration,
            easing: o.easing,
            complete: function () {
                if (!show) {
                    el.hide();
                }
                $.effects.restore(el, props);
                $.effects.removeWrapper(el);
                done();
            }
        });

    };

})(jQuery);
(function ($, undefined) {

    $.effects.effect.drop = function (o, done) {

        var el = $(this),
            props = ["position", "top", "bottom", "left", "right", "opacity", "height", "width"],
            mode = $.effects.setMode(el, o.mode || "hide"),
            show = mode === "show",
            direction = o.direction || "left",
            ref = (direction === "up" || direction === "down") ? "top" : "left",
            motion = (direction === "up" || direction === "left") ? "pos" : "neg",
            animation = {
                opacity: show ? 1 : 0
            },
            distance;

        // Adjust
        $.effects.save(el, props);
        el.show();
        $.effects.createWrapper(el);

        distance = o.distance || el[ref === "top" ? "outerHeight" : "outerWidth"](true) / 2;

        if (show) {
            el
                .css("opacity", 0)
                .css(ref, motion === "pos" ? -distance : distance);
        }

        // Animation
        animation[ref] = (show ?
            (motion === "pos" ? "+=" : "-=") :
            (motion === "pos" ? "-=" : "+=")) +
            distance;

        // Animate
        el.animate(animation, {
            queue: false,
            duration: o.duration,
            easing: o.easing,
            complete: function () {
                if (mode === "hide") {
                    el.hide();
                }
                $.effects.restore(el, props);
                $.effects.removeWrapper(el);
                done();
            }
        });
    };

})(jQuery);
(function ($, undefined) {

    $.effects.effect.explode = function (o, done) {

        var rows = o.pieces ? Math.round(Math.sqrt(o.pieces)) : 3,
            cells = rows,
            el = $(this),
            mode = $.effects.setMode(el, o.mode || "hide"),
            show = mode === "show",

            // show and then visibility:hidden the element before calculating offset
            offset = el.show().css("visibility", "hidden").offset(),

            // width and height of a piece
            width = Math.ceil(el.outerWidth() / cells),
            height = Math.ceil(el.outerHeight() / rows),
            pieces = [],

            // loop
            i, j, left, top, mx, my;

        // children animate complete:
        function childComplete() {
            pieces.push(this);
            if (pieces.length === rows * cells) {
                animComplete();
            }
        }

        // clone the element for each row and cell.
        for (i = 0; i < rows; i++) { // ===>
            top = offset.top + i * height;
            my = i - (rows - 1) / 2;

            for (j = 0; j < cells; j++) { // |||
                left = offset.left + j * width;
                mx = j - (cells - 1) / 2;

                // Create a clone of the now hidden main element that will be absolute positioned
                // within a wrapper div off the -left and -top equal to size of our pieces
                el
                    .clone()
                    .appendTo("body")
                    .wrap("<div></div>")
                    .css({
                        position: "absolute",
                        visibility: "visible",
                        left: -j * width,
                        top: -i * height
                    })

                    // select the wrapper - make it overflow: hidden and absolute positioned based on
                    // where the original was located +left and +top equal to the size of pieces
                    .parent()
                    .addClass("ui-effects-explode")
                    .css({
                        position: "absolute",
                        overflow: "hidden",
                        width: width,
                        height: height,
                        left: left + (show ? mx * width : 0),
                        top: top + (show ? my * height : 0),
                        opacity: show ? 0 : 1
                    }).animate({
                        left: left + (show ? 0 : mx * width),
                        top: top + (show ? 0 : my * height),
                        opacity: show ? 1 : 0
                    }, o.duration || 500, o.easing, childComplete);
            }
        }

        function animComplete() {
            el.css({
                visibility: "visible"
            });
            $(pieces).remove();
            if (!show) {
                el.hide();
            }
            done();
        }
    };

})(jQuery);
(function ($, undefined) {

    $.effects.effect.fade = function (o, done) {
        var el = $(this),
            mode = $.effects.setMode(el, o.mode || "toggle");

        el.animate({
            opacity: mode
        }, {
                queue: false,
                duration: o.duration,
                easing: o.easing,
                complete: done
            });
    };

})(jQuery);
(function ($, undefined) {

    $.effects.effect.fold = function (o, done) {

        // Create element
        var el = $(this),
            props = ["position", "top", "bottom", "left", "right", "height", "width"],
            mode = $.effects.setMode(el, o.mode || "hide"),
            show = mode === "show",
            hide = mode === "hide",
            size = o.size || 15,
            percent = /([0-9]+)%/.exec(size),
            horizFirst = !!o.horizFirst,
            widthFirst = show !== horizFirst,
            ref = widthFirst ? ["width", "height"] : ["height", "width"],
            duration = o.duration / 2,
            wrapper, distance,
            animation1 = {},
            animation2 = {};

        $.effects.save(el, props);
        el.show();

        // Create Wrapper
        wrapper = $.effects.createWrapper(el).css({
            overflow: "hidden"
        });
        distance = widthFirst ?
            [wrapper.width(), wrapper.height()] :
            [wrapper.height(), wrapper.width()];

        if (percent) {
            size = parseInt(percent[1], 10) / 100 * distance[hide ? 0 : 1];
        }
        if (show) {
            wrapper.css(horizFirst ? {
                height: 0,
                width: size
            } : {
                    height: size,
                    width: 0
                });
        }

        // Animation
        animation1[ref[0]] = show ? distance[0] : size;
        animation2[ref[1]] = show ? distance[1] : 0;

        // Animate
        wrapper
            .animate(animation1, duration, o.easing)
            .animate(animation2, duration, o.easing, function () {
                if (hide) {
                    el.hide();
                }
                $.effects.restore(el, props);
                $.effects.removeWrapper(el);
                done();
            });

    };

})(jQuery);
(function ($, undefined) {

    $.effects.effect.highlight = function (o, done) {
        var elem = $(this),
            props = ["backgroundImage", "backgroundColor", "opacity"],
            mode = $.effects.setMode(elem, o.mode || "show"),
            animation = {
                backgroundColor: elem.css("backgroundColor")
            };

        if (mode === "hide") {
            animation.opacity = 0;
        }

        $.effects.save(elem, props);

        elem
            .show()
            .css({
                backgroundImage: "none",
                backgroundColor: o.color || "#ffff99"
            })
            .animate(animation, {
                queue: false,
                duration: o.duration,
                easing: o.easing,
                complete: function () {
                    if (mode === "hide") {
                        elem.hide();
                    }
                    $.effects.restore(elem, props);
                    done();
                }
            });
    };

})(jQuery);
(function ($, undefined) {

    $.effects.effect.pulsate = function (o, done) {
        var elem = $(this),
            mode = $.effects.setMode(elem, o.mode || "show"),
            show = mode === "show",
            hide = mode === "hide",
            showhide = (show || mode === "hide"),

            // showing or hiding leaves of the "last" animation
            anims = ((o.times || 5) * 2) + (showhide ? 1 : 0),
            duration = o.duration / anims,
            animateTo = 0,
            queue = elem.queue(),
            queuelen = queue.length,
            i;

        if (show || !elem.is(":visible")) {
            elem.css("opacity", 0).show();
            animateTo = 1;
        }

        // anims - 1 opacity "toggles"
        for (i = 1; i < anims; i++) {
            elem.animate({
                opacity: animateTo
            }, duration, o.easing);
            animateTo = 1 - animateTo;
        }

        elem.animate({
            opacity: animateTo
        }, duration, o.easing);

        elem.queue(function () {
            if (hide) {
                elem.hide();
            }
            done();
        });

        // We just queued up "anims" animations, we need to put them next in the queue
        if (queuelen > 1) {
            queue.splice.apply(queue,
                [1, 0].concat(queue.splice(queuelen, anims + 1)));
        }
        elem.dequeue();
    };

})(jQuery);
(function ($, undefined) {

    $.effects.effect.puff = function (o, done) {
        var elem = $(this),
            mode = $.effects.setMode(elem, o.mode || "hide"),
            hide = mode === "hide",
            percent = parseInt(o.percent, 10) || 150,
            factor = percent / 100,
            original = {
                height: elem.height(),
                width: elem.width(),
                outerHeight: elem.outerHeight(),
                outerWidth: elem.outerWidth()
            };

        $.extend(o, {
            effect: "scale",
            queue: false,
            fade: true,
            mode: mode,
            complete: done,
            percent: hide ? percent : 100,
            from: hide ?
                original :
                {
                    height: original.height * factor,
                    width: original.width * factor,
                    outerHeight: original.outerHeight * factor,
                    outerWidth: original.outerWidth * factor
                }
        });

        elem.effect(o);
    };

    $.effects.effect.scale = function (o, done) {

        // Create element
        var el = $(this),
            options = $.extend(true, {}, o),
            mode = $.effects.setMode(el, o.mode || "effect"),
            percent = parseInt(o.percent, 10) ||
                (parseInt(o.percent, 10) === 0 ? 0 : (mode === "hide" ? 0 : 100)),
            direction = o.direction || "both",
            origin = o.origin,
            original = {
                height: el.height(),
                width: el.width(),
                outerHeight: el.outerHeight(),
                outerWidth: el.outerWidth()
            },
            factor = {
                y: direction !== "horizontal" ? (percent / 100) : 1,
                x: direction !== "vertical" ? (percent / 100) : 1
            };

        // We are going to pass this effect to the size effect:
        options.effect = "size";
        options.queue = false;
        options.complete = done;

        // Set default origin and restore for show/hide
        if (mode !== "effect") {
            options.origin = origin || ["middle", "center"];
            options.restore = true;
        }

        options.from = o.from || (mode === "show" ? {
            height: 0,
            width: 0,
            outerHeight: 0,
            outerWidth: 0
        } : original);
        options.to = {
            height: original.height * factor.y,
            width: original.width * factor.x,
            outerHeight: original.outerHeight * factor.y,
            outerWidth: original.outerWidth * factor.x
        };

        // Fade option to support puff
        if (options.fade) {
            if (mode === "show") {
                options.from.opacity = 0;
                options.to.opacity = 1;
            }
            if (mode === "hide") {
                options.from.opacity = 1;
                options.to.opacity = 0;
            }
        }

        // Animate
        el.effect(options);

    };

    $.effects.effect.size = function (o, done) {

        // Create element
        var original, baseline, factor,
            el = $(this),
            props0 = ["position", "top", "bottom", "left", "right", "width", "height", "overflow", "opacity"],

            // Always restore
            props1 = ["position", "top", "bottom", "left", "right", "overflow", "opacity"],

            // Copy for children
            props2 = ["width", "height", "overflow"],
            cProps = ["fontSize"],
            vProps = ["borderTopWidth", "borderBottomWidth", "paddingTop", "paddingBottom"],
            hProps = ["borderLeftWidth", "borderRightWidth", "paddingLeft", "paddingRight"],

            // Set options
            mode = $.effects.setMode(el, o.mode || "effect"),
            restore = o.restore || mode !== "effect",
            scale = o.scale || "both",
            origin = o.origin || ["middle", "center"],
            position = el.css("position"),
            props = restore ? props0 : props1,
            zero = {
                height: 0,
                width: 0,
                outerHeight: 0,
                outerWidth: 0
            };

        if (mode === "show") {
            el.show();
        }
        original = {
            height: el.height(),
            width: el.width(),
            outerHeight: el.outerHeight(),
            outerWidth: el.outerWidth()
        };

        if (o.mode === "toggle" && mode === "show") {
            el.from = o.to || zero;
            el.to = o.from || original;
        } else {
            el.from = o.from || (mode === "show" ? zero : original);
            el.to = o.to || (mode === "hide" ? zero : original);
        }

        // Set scaling factor
        factor = {
            from: {
                y: el.from.height / original.height,
                x: el.from.width / original.width
            },
            to: {
                y: el.to.height / original.height,
                x: el.to.width / original.width
            }
        };

        // Scale the css box
        if (scale === "box" || scale === "both") {

            // Vertical props scaling
            if (factor.from.y !== factor.to.y) {
                props = props.concat(vProps);
                el.from = $.effects.setTransition(el, vProps, factor.from.y, el.from);
                el.to = $.effects.setTransition(el, vProps, factor.to.y, el.to);
            }

            // Horizontal props scaling
            if (factor.from.x !== factor.to.x) {
                props = props.concat(hProps);
                el.from = $.effects.setTransition(el, hProps, factor.from.x, el.from);
                el.to = $.effects.setTransition(el, hProps, factor.to.x, el.to);
            }
        }

        // Scale the content
        if (scale === "content" || scale === "both") {

            // Vertical props scaling
            if (factor.from.y !== factor.to.y) {
                props = props.concat(cProps).concat(props2);
                el.from = $.effects.setTransition(el, cProps, factor.from.y, el.from);
                el.to = $.effects.setTransition(el, cProps, factor.to.y, el.to);
            }
        }

        $.effects.save(el, props);
        el.show();
        $.effects.createWrapper(el);
        el.css("overflow", "hidden").css(el.from);

        // Adjust
        if (origin) { // Calculate baseline shifts
            baseline = $.effects.getBaseline(origin, original);
            el.from.top = (original.outerHeight - el.outerHeight()) * baseline.y;
            el.from.left = (original.outerWidth - el.outerWidth()) * baseline.x;
            el.to.top = (original.outerHeight - el.to.outerHeight) * baseline.y;
            el.to.left = (original.outerWidth - el.to.outerWidth) * baseline.x;
        }
        el.css(el.from); // set top & left

        // Animate
        if (scale === "content" || scale === "both") { // Scale the children

            // Add margins/font-size
            vProps = vProps.concat(["marginTop", "marginBottom"]).concat(cProps);
            hProps = hProps.concat(["marginLeft", "marginRight"]);
            props2 = props0.concat(vProps).concat(hProps);

            el.find("*[width]").each(function () {
                var child = $(this),
                    c_original = {
                        height: child.height(),
                        width: child.width(),
                        outerHeight: child.outerHeight(),
                        outerWidth: child.outerWidth()
                    };
                if (restore) {
                    $.effects.save(child, props2);
                }

                child.from = {
                    height: c_original.height * factor.from.y,
                    width: c_original.width * factor.from.x,
                    outerHeight: c_original.outerHeight * factor.from.y,
                    outerWidth: c_original.outerWidth * factor.from.x
                };
                child.to = {
                    height: c_original.height * factor.to.y,
                    width: c_original.width * factor.to.x,
                    outerHeight: c_original.height * factor.to.y,
                    outerWidth: c_original.width * factor.to.x
                };

                // Vertical props scaling
                if (factor.from.y !== factor.to.y) {
                    child.from = $.effects.setTransition(child, vProps, factor.from.y, child.from);
                    child.to = $.effects.setTransition(child, vProps, factor.to.y, child.to);
                }

                // Horizontal props scaling
                if (factor.from.x !== factor.to.x) {
                    child.from = $.effects.setTransition(child, hProps, factor.from.x, child.from);
                    child.to = $.effects.setTransition(child, hProps, factor.to.x, child.to);
                }

                // Animate children
                child.css(child.from);
                child.animate(child.to, o.duration, o.easing, function () {

                    // Restore children
                    if (restore) {
                        $.effects.restore(child, props2);
                    }
                });
            });
        }

        // Animate
        el.animate(el.to, {
            queue: false,
            duration: o.duration,
            easing: o.easing,
            complete: function () {
                if (el.to.opacity === 0) {
                    el.css("opacity", el.from.opacity);
                }
                if (mode === "hide") {
                    el.hide();
                }
                $.effects.restore(el, props);
                if (!restore) {

                    // we need to calculate our new positioning based on the scaling
                    if (position === "static") {
                        el.css({
                            position: "relative",
                            top: el.to.top,
                            left: el.to.left
                        });
                    } else {
                        $.each(["top", "left"], function (idx, pos) {
                            el.css(pos, function (_, str) {
                                var val = parseInt(str, 10),
                                    toRef = idx ? el.to.left : el.to.top;

                                // if original was "auto", recalculate the new value from wrapper
                                if (str === "auto") {
                                    return toRef + "px";
                                }

                                return val + toRef + "px";
                            });
                        });
                    }
                }

                $.effects.removeWrapper(el);
                done();
            }
        });

    };

})(jQuery);
(function ($, undefined) {

    $.effects.effect.shake = function (o, done) {

        var el = $(this),
            props = ["position", "top", "bottom", "left", "right", "height", "width"],
            mode = $.effects.setMode(el, o.mode || "effect"),
            direction = o.direction || "left",
            distance = o.distance || 20,
            times = o.times || 3,
            anims = times * 2 + 1,
            speed = Math.round(o.duration / anims),
            ref = (direction === "up" || direction === "down") ? "top" : "left",
            positiveMotion = (direction === "up" || direction === "left"),
            animation = {},
            animation1 = {},
            animation2 = {},
            i,

            // we will need to re-assemble the queue to stack our animations in place
            queue = el.queue(),
            queuelen = queue.length;

        $.effects.save(el, props);
        el.show();
        $.effects.createWrapper(el);

        // Animation
        animation[ref] = (positiveMotion ? "-=" : "+=") + distance;
        animation1[ref] = (positiveMotion ? "+=" : "-=") + distance * 2;
        animation2[ref] = (positiveMotion ? "-=" : "+=") + distance * 2;

        // Animate
        el.animate(animation, speed, o.easing);

        // Shakes
        for (i = 1; i < times; i++) {
            el.animate(animation1, speed, o.easing).animate(animation2, speed, o.easing);
        }
        el
            .animate(animation1, speed, o.easing)
            .animate(animation, speed / 2, o.easing)
            .queue(function () {
                if (mode === "hide") {
                    el.hide();
                }
                $.effects.restore(el, props);
                $.effects.removeWrapper(el);
                done();
            });

        // inject all the animations we just queued to be first in line (after "inprogress")
        if (queuelen > 1) {
            queue.splice.apply(queue,
                [1, 0].concat(queue.splice(queuelen, anims + 1)));
        }
        el.dequeue();

    };

})(jQuery);
(function ($, undefined) {

    $.effects.effect.slide = function (o, done) {

        // Create element
        var el = $(this),
            props = ["position", "top", "bottom", "left", "right", "width", "height"],
            mode = $.effects.setMode(el, o.mode || "show"),
            show = mode === "show",
            direction = o.direction || "left",
            ref = (direction === "up" || direction === "down") ? "top" : "left",
            positiveMotion = (direction === "up" || direction === "left"),
            distance,
            animation = {};

        // Adjust
        $.effects.save(el, props);
        el.show();
        distance = o.distance || el[ref === "top" ? "outerHeight" : "outerWidth"](true);

        $.effects.createWrapper(el).css({
            overflow: "hidden"
        });

        if (show) {
            el.css(ref, positiveMotion ? (isNaN(distance) ? "-" + distance : -distance) : distance);
        }

        // Animation
        animation[ref] = (show ?
            (positiveMotion ? "+=" : "-=") :
            (positiveMotion ? "-=" : "+=")) +
            distance;

        // Animate
        el.animate(animation, {
            queue: false,
            duration: o.duration,
            easing: o.easing,
            complete: function () {
                if (mode === "hide") {
                    el.hide();
                }
                $.effects.restore(el, props);
                $.effects.removeWrapper(el);
                done();
            }
        });
    };

})(jQuery);
(function ($, undefined) {

    $.effects.effect.transfer = function (o, done) {
        var elem = $(this),
            target = $(o.to),
            targetFixed = target.css("position") === "fixed",
            body = $("body"),
            fixTop = targetFixed ? body.scrollTop() : 0,
            fixLeft = targetFixed ? body.scrollLeft() : 0,
            endPosition = target.offset(),
            animation = {
                top: endPosition.top - fixTop,
                left: endPosition.left - fixLeft,
                height: target.innerHeight(),
                width: target.innerWidth()
            },
            startPosition = elem.offset(),
            transfer = $("<div class='ui-effects-transfer'></div>")
                .appendTo(document.body)
                .addClass(o.className)
                .css({
                    top: startPosition.top - fixTop,
                    left: startPosition.left - fixLeft,
                    height: elem.innerHeight(),
                    width: elem.innerWidth(),
                    position: targetFixed ? "fixed" : "absolute"
                })
                .animate(animation, o.duration, o.easing, function () {
                    transfer.remove();
                    done();
                });
    };

})(jQuery);
(function ($, undefined) {

    $.widget("ui.menu", {
        version: "1.10.4",
        defaultElement: "<ul>",
        delay: 300,
        options: {
            icons: {
                submenu: "ui-icon-carat-1-e"
            },
            menus: "ul",
            position: {
                my: "left top",
                at: "right top"
            },
            role: "menu",

            // callbacks
            blur: null,
            focus: null,
            select: null
        },

        _create: function () {
            this.activeMenu = this.element;
            // flag used to prevent firing of the click handler
            // as the event bubbles up through nested menus
            this.mouseHandled = false;
            this.element
                .uniqueId()
                .addClass("ui-menu ui-widget ui-widget-content ui-corner-all")
                .toggleClass("ui-menu-icons", !!this.element.find(".ui-icon").length)
                .attr({
                    role: this.options.role,
                    tabIndex: 0
                })
                // need to catch all clicks on disabled menu
                // not possible through _on
                .bind("click" + this.eventNamespace, $.proxy(function (event) {
                    if (this.options.disabled) {
                        event.preventDefault();
                    }
                }, this));

            if (this.options.disabled) {
                this.element
                    .addClass("ui-state-disabled")
                    .attr("aria-disabled", "true");
            }

            this._on({
                // Prevent focus from sticking to links inside menu after clicking
                // them (focus should always stay on UL during navigation).
                "mousedown .ui-menu-item > a": function (event) {
                    event.preventDefault();
                },
                "click .ui-state-disabled > a": function (event) {
                    event.preventDefault();
                },
                "click .ui-menu-item:has(a)": function (event) {
                    var target = $(event.target).closest(".ui-menu-item");
                    if (!this.mouseHandled && target.not(".ui-state-disabled").length) {
                        this.select(event);

                        // Only set the mouseHandled flag if the event will bubble, see #9469.
                        if (!event.isPropagationStopped()) {
                            this.mouseHandled = true;
                        }

                        // Open submenu on click
                        if (target.has(".ui-menu").length) {
                            this.expand(event);
                        } else if (!this.element.is(":focus") && $(this.document[0].activeElement).closest(".ui-menu").length) {

                            // Redirect focus to the menu
                            this.element.trigger("focus", [true]);

                            // If the active item is on the top level, let it stay active.
                            // Otherwise, blur the active item since it is no longer visible.
                            if (this.active && this.active.parents(".ui-menu").length === 1) {
                                clearTimeout(this.timer);
                            }
                        }
                    }
                },
                "mouseenter .ui-menu-item": function (event) {
                    var target = $(event.currentTarget);
                    // Remove ui-state-active class from siblings of the newly focused menu item
                    // to avoid a jump caused by adjacent elements both having a class with a border
                    target.siblings().children(".ui-state-active").removeClass("ui-state-active");
                    this.focus(event, target);
                },
                mouseleave: "collapseAll",
                "mouseleave .ui-menu": "collapseAll",
                focus: function (event, keepActiveItem) {
                    // If there's already an active item, keep it active
                    // If not, activate the first item
                    var item = this.active || this.element.children(".ui-menu-item").eq(0);

                    if (!keepActiveItem) {
                        this.focus(event, item);
                    }
                },
                blur: function (event) {
                    this._delay(function () {
                        if (!$.contains(this.element[0], this.document[0].activeElement)) {
                            this.collapseAll(event);
                        }
                    });
                },
                keydown: "_keydown"
            });

            this.refresh();

            // Clicks outside of a menu collapse any open menus
            this._on(this.document, {
                click: function (event) {
                    if (!$(event.target).closest(".ui-menu").length) {
                        this.collapseAll(event);
                    }

                    // Reset the mouseHandled flag
                    this.mouseHandled = false;
                }
            });
        },

        _destroy: function () {
            // Destroy (sub)menus
            this.element
                .removeAttr("aria-activedescendant")
                .find(".ui-menu").addBack()
                .removeClass("ui-menu ui-widget ui-widget-content ui-corner-all ui-menu-icons")
                .removeAttr("role")
                .removeAttr("tabIndex")
                .removeAttr("aria-labelledby")
                .removeAttr("aria-expanded")
                .removeAttr("aria-hidden")
                .removeAttr("aria-disabled")
                .removeUniqueId()
                .show();

            // Destroy menu items
            this.element.find(".ui-menu-item")
                .removeClass("ui-menu-item")
                .removeAttr("role")
                .removeAttr("aria-disabled")
                .children("a")
                .removeUniqueId()
                .removeClass("ui-corner-all ui-state-hover")
                .removeAttr("tabIndex")
                .removeAttr("role")
                .removeAttr("aria-haspopup")
                .children().each(function () {
                    var elem = $(this);
                    if (elem.data("ui-menu-submenu-carat")) {
                        elem.remove();
                    }
                });

            // Destroy menu dividers
            this.element.find(".ui-menu-divider").removeClass("ui-menu-divider ui-widget-content");
        },

        _keydown: function (event) {
            var match, prev, character, skip, regex,
                preventDefault = true;

            function escape(value) {
                return value.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&");
            }

            switch (event.keyCode) {
                case $.ui.keyCode.PAGE_UP:
                    this.previousPage(event);
                    break;
                case $.ui.keyCode.PAGE_DOWN:
                    this.nextPage(event);
                    break;
                case $.ui.keyCode.HOME:
                    this._move("first", "first", event);
                    break;
                case $.ui.keyCode.END:
                    this._move("last", "last", event);
                    break;
                case $.ui.keyCode.UP:
                    this.previous(event);
                    break;
                case $.ui.keyCode.DOWN:
                    this.next(event);
                    break;
                case $.ui.keyCode.LEFT:
                    this.collapse(event);
                    break;
                case $.ui.keyCode.RIGHT:
                    if (this.active && !this.active.is(".ui-state-disabled")) {
                        this.expand(event);
                    }
                    break;
                case $.ui.keyCode.ENTER:
                case $.ui.keyCode.SPACE:
                    this._activate(event);
                    break;
                case $.ui.keyCode.ESCAPE:
                    this.collapse(event);
                    break;
                default:
                    preventDefault = false;
                    prev = this.previousFilter || "";
                    character = String.fromCharCode(event.keyCode);
                    skip = false;

                    clearTimeout(this.filterTimer);

                    if (character === prev) {
                        skip = true;
                    } else {
                        character = prev + character;
                    }

                    regex = new RegExp("^" + escape(character), "i");
                    match = this.activeMenu.children(".ui-menu-item").filter(function () {
                        return regex.test($(this).children("a").text());
                    });
                    match = skip && match.index(this.active.next()) !== -1 ?
                        this.active.nextAll(".ui-menu-item") :
                        match;

                    // If no matches on the current filter, reset to the last character pressed
                    // to move down the menu to the first item that starts with that character
                    if (!match.length) {
                        character = String.fromCharCode(event.keyCode);
                        regex = new RegExp("^" + escape(character), "i");
                        match = this.activeMenu.children(".ui-menu-item").filter(function () {
                            return regex.test($(this).children("a").text());
                        });
                    }

                    if (match.length) {
                        this.focus(event, match);
                        if (match.length > 1) {
                            this.previousFilter = character;
                            this.filterTimer = this._delay(function () {
                                delete this.previousFilter;
                            }, 1000);
                        } else {
                            delete this.previousFilter;
                        }
                    } else {
                        delete this.previousFilter;
                    }
            }

            if (preventDefault) {
                event.preventDefault();
            }
        },

        _activate: function (event) {
            if (!this.active.is(".ui-state-disabled")) {
                if (this.active.children("a[aria-haspopup='true']").length) {
                    this.expand(event);
                } else {
                    this.select(event);
                }
            }
        },

        refresh: function () {
            var menus,
                icon = this.options.icons.submenu,
                submenus = this.element.find(this.options.menus);

            this.element.toggleClass("ui-menu-icons", !!this.element.find(".ui-icon").length);

            // Initialize nested menus
            submenus.filter(":not(.ui-menu)")
                .addClass("ui-menu ui-widget ui-widget-content ui-corner-all")
                .hide()
                .attr({
                    role: this.options.role,
                    "aria-hidden": "true",
                    "aria-expanded": "false"
                })
                .each(function () {
                    var menu = $(this),
                        item = menu.prev("a"),
                        submenuCarat = $("<span>")
                            .addClass("ui-menu-icon ui-icon " + icon)
                            .data("ui-menu-submenu-carat", true);

                    item
                        .attr("aria-haspopup", "true")
                        .prepend(submenuCarat);
                    menu.attr("aria-labelledby", item.attr("id"));
                });

            menus = submenus.add(this.element);

            // Don't refresh list items that are already adapted
            menus.children(":not(.ui-menu-item):has(a)")
                .addClass("ui-menu-item")
                .attr("role", "presentation")
                .children("a")
                .uniqueId()
                .addClass("ui-corner-all")
                .attr({
                    tabIndex: -1,
                    role: this._itemRole()
                });

            // Initialize unlinked menu-items containing spaces and/or dashes only as dividers
            menus.children(":not(.ui-menu-item)").each(function () {
                var item = $(this);
                // hyphen, em dash, en dash
                if (!/[^\-\u2014\u2013\s]/.test(item.text())) {
                    item.addClass("ui-widget-content ui-menu-divider");
                }
            });

            // Add aria-disabled attribute to any disabled menu item
            menus.children(".ui-state-disabled").attr("aria-disabled", "true");

            // If the active item has been removed, blur the menu
            if (this.active && !$.contains(this.element[0], this.active[0])) {
                this.blur();
            }
        },

        _itemRole: function () {
            return {
                menu: "menuitem",
                listbox: "option"
            }[this.options.role];
        },

        _setOption: function (key, value) {
            if (key === "icons") {
                this.element.find(".ui-menu-icon")
                    .removeClass(this.options.icons.submenu)
                    .addClass(value.submenu);
            }
            this._super(key, value);
        },

        focus: function (event, item) {
            var nested, focused;
            this.blur(event, event && event.type === "focus");

            this._scrollIntoView(item);

            this.active = item.first();
            focused = this.active.children("a").addClass("ui-state-focus");
            // Only update aria-activedescendant if there's a role
            // otherwise we assume focus is managed elsewhere
            if (this.options.role) {
                this.element.attr("aria-activedescendant", focused.attr("id"));
            }

            // Highlight active parent menu item, if any
            this.active
                .parent()
                .closest(".ui-menu-item")
                .children("a:first")
                .addClass("ui-state-active");

            if (event && event.type === "keydown") {
                this._close();
            } else {
                this.timer = this._delay(function () {
                    this._close();
                }, this.delay);
            }

            nested = item.children(".ui-menu");
            if (nested.length && event && (/^mouse/.test(event.type))) {
                this._startOpening(nested);
            }
            this.activeMenu = item.parent();

            this._trigger("focus", event, { item: item });
        },

        _scrollIntoView: function (item) {
            var borderTop, paddingTop, offset, scroll, elementHeight, itemHeight;
            if (this._hasScroll()) {
                borderTop = parseFloat($.css(this.activeMenu[0], "borderTopWidth")) || 0;
                paddingTop = parseFloat($.css(this.activeMenu[0], "paddingTop")) || 0;
                offset = item.offset().top - this.activeMenu.offset().top - borderTop - paddingTop;
                scroll = this.activeMenu.scrollTop();
                elementHeight = this.activeMenu.height();
                itemHeight = item.height();

                if (offset < 0) {
                    this.activeMenu.scrollTop(scroll + offset);
                } else if (offset + itemHeight > elementHeight) {
                    this.activeMenu.scrollTop(scroll + offset - elementHeight + itemHeight);
                }
            }
        },

        blur: function (event, fromFocus) {
            if (!fromFocus) {
                clearTimeout(this.timer);
            }

            if (!this.active) {
                return;
            }

            this.active.children("a").removeClass("ui-state-focus");
            this.active = null;

            this._trigger("blur", event, { item: this.active });
        },

        _startOpening: function (submenu) {
            clearTimeout(this.timer);

            // Don't open if already open fixes a Firefox bug that caused a .5 pixel
            // shift in the submenu position when mousing over the carat icon
            if (submenu.attr("aria-hidden") !== "true") {
                return;
            }

            this.timer = this._delay(function () {
                this._close();
                this._open(submenu);
            }, this.delay);
        },

        _open: function (submenu) {
            var position = $.extend({
                of: this.active
            }, this.options.position);

            clearTimeout(this.timer);
            this.element.find(".ui-menu").not(submenu.parents(".ui-menu"))
                .hide()
                .attr("aria-hidden", "true");

            submenu
                .show()
                .removeAttr("aria-hidden")
                .attr("aria-expanded", "true")
                .position(position);
        },

        collapseAll: function (event, all) {
            clearTimeout(this.timer);
            this.timer = this._delay(function () {
                // If we were passed an event, look for the submenu that contains the event
                var currentMenu = all ? this.element :
                    $(event && event.target).closest(this.element.find(".ui-menu"));

                // If we found no valid submenu ancestor, use the main menu to close all sub menus anyway
                if (!currentMenu.length) {
                    currentMenu = this.element;
                }

                this._close(currentMenu);

                this.blur(event);
                this.activeMenu = currentMenu;
            }, this.delay);
        },

        // With no arguments, closes the currently active menu - if nothing is active
        // it closes all menus.  If passed an argument, it will search for menus BELOW
        _close: function (startMenu) {
            if (!startMenu) {
                startMenu = this.active ? this.active.parent() : this.element;
            }

            startMenu
                .find(".ui-menu")
                .hide()
                .attr("aria-hidden", "true")
                .attr("aria-expanded", "false")
                .end()
                .find("a.ui-state-active")
                .removeClass("ui-state-active");
        },

        collapse: function (event) {
            var newItem = this.active &&
                this.active.parent().closest(".ui-menu-item", this.element);
            if (newItem && newItem.length) {
                this._close();
                this.focus(event, newItem);
            }
        },

        expand: function (event) {
            var newItem = this.active &&
                this.active
                    .children(".ui-menu ")
                    .children(".ui-menu-item")
                    .first();

            if (newItem && newItem.length) {
                this._open(newItem.parent());

                // Delay so Firefox will not hide activedescendant change in expanding submenu from AT
                this._delay(function () {
                    this.focus(event, newItem);
                });
            }
        },

        next: function (event) {
            this._move("next", "first", event);
        },

        previous: function (event) {
            this._move("prev", "last", event);
        },

        isFirstItem: function () {
            return this.active && !this.active.prevAll(".ui-menu-item").length;
        },

        isLastItem: function () {
            return this.active && !this.active.nextAll(".ui-menu-item").length;
        },

        _move: function (direction, filter, event) {
            var next;
            if (this.active) {
                if (direction === "first" || direction === "last") {
                    next = this.active
                    [direction === "first" ? "prevAll" : "nextAll"](".ui-menu-item")
                        .eq(-1);
                } else {
                    next = this.active
                    [direction + "All"](".ui-menu-item")
                        .eq(0);
                }
            }
            if (!next || !next.length || !this.active) {
                next = this.activeMenu.children(".ui-menu-item")[filter]();
            }

            this.focus(event, next);
        },

        nextPage: function (event) {
            var item, base, height;

            if (!this.active) {
                this.next(event);
                return;
            }
            if (this.isLastItem()) {
                return;
            }
            if (this._hasScroll()) {
                base = this.active.offset().top;
                height = this.element.height();
                this.active.nextAll(".ui-menu-item").each(function () {
                    item = $(this);
                    return item.offset().top - base - height < 0;
                });

                this.focus(event, item);
            } else {
                this.focus(event, this.activeMenu.children(".ui-menu-item")
                [!this.active ? "first" : "last"]());
            }
        },

        previousPage: function (event) {
            var item, base, height;
            if (!this.active) {
                this.next(event);
                return;
            }
            if (this.isFirstItem()) {
                return;
            }
            if (this._hasScroll()) {
                base = this.active.offset().top;
                height = this.element.height();
                this.active.prevAll(".ui-menu-item").each(function () {
                    item = $(this);
                    return item.offset().top - base + height > 0;
                });

                this.focus(event, item);
            } else {
                this.focus(event, this.activeMenu.children(".ui-menu-item").first());
            }
        },

        _hasScroll: function () {
            return this.element.outerHeight() < this.element.prop("scrollHeight");
        },

        select: function (event) {
            // TODO: It should never be possible to not have an active item at this
            // point, but the tests don't trigger mouseenter before click.
            this.active = this.active || $(event.target).closest(".ui-menu-item");
            var ui = { item: this.active };
            if (!this.active.has(".ui-menu").length) {
                this.collapseAll(event, true);
            }
            this._trigger("select", event, ui);
        }
    });

}(jQuery));
(function ($, undefined) {

    $.widget("ui.progressbar", {
        version: "1.10.4",
        options: {
            max: 100,
            value: 0,

            change: null,
            complete: null
        },

        min: 0,

        _create: function () {
            // Constrain initial value
            this.oldValue = this.options.value = this._constrainedValue();

            this.element
                .addClass("ui-progressbar ui-widget ui-widget-content ui-corner-all")
                .attr({
                    // Only set static values, aria-valuenow and aria-valuemax are
                    // set inside _refreshValue()
                    role: "progressbar",
                    "aria-valuemin": this.min
                });

            this.valueDiv = $("<div class='ui-progressbar-value ui-widget-header ui-corner-left'></div>")
                .appendTo(this.element);

            this._refreshValue();
        },

        _destroy: function () {
            this.element
                .removeClass("ui-progressbar ui-widget ui-widget-content ui-corner-all")
                .removeAttr("role")
                .removeAttr("aria-valuemin")
                .removeAttr("aria-valuemax")
                .removeAttr("aria-valuenow");

            this.valueDiv.remove();
        },

        value: function (newValue) {
            if (newValue === undefined) {
                return this.options.value;
            }

            this.options.value = this._constrainedValue(newValue);
            this._refreshValue();
        },

        _constrainedValue: function (newValue) {
            if (newValue === undefined) {
                newValue = this.options.value;
            }

            this.indeterminate = newValue === false;

            // sanitize value
            if (typeof newValue !== "number") {
                newValue = 0;
            }

            return this.indeterminate ? false :
                Math.min(this.options.max, Math.max(this.min, newValue));
        },

        _setOptions: function (options) {
            // Ensure "value" option is set after other values (like max)
            var value = options.value;
            delete options.value;

            this._super(options);

            this.options.value = this._constrainedValue(value);
            this._refreshValue();
        },

        _setOption: function (key, value) {
            if (key === "max") {
                // Don't allow a max less than min
                value = Math.max(this.min, value);
            }

            this._super(key, value);
        },

        _percentage: function () {
            return this.indeterminate ? 100 : 100 * (this.options.value - this.min) / (this.options.max - this.min);
        },

        _refreshValue: function () {
            var value = this.options.value,
                percentage = this._percentage();

            this.valueDiv
                .toggle(this.indeterminate || value > this.min)
                .toggleClass("ui-corner-right", value === this.options.max)
                .width(percentage.toFixed(0) + "%");

            this.element.toggleClass("ui-progressbar-indeterminate", this.indeterminate);

            if (this.indeterminate) {
                this.element.removeAttr("aria-valuenow");
                if (!this.overlayDiv) {
                    this.overlayDiv = $("<div class='ui-progressbar-overlay'></div>").appendTo(this.valueDiv);
                }
            } else {
                this.element.attr({
                    "aria-valuemax": this.options.max,
                    "aria-valuenow": value
                });
                if (this.overlayDiv) {
                    this.overlayDiv.remove();
                    this.overlayDiv = null;
                }
            }

            if (this.oldValue !== value) {
                this.oldValue = value;
                this._trigger("change");
            }
            if (value === this.options.max) {
                this._trigger("complete");
            }
        }
    });

})(jQuery);
(function ($, undefined) {

    function num(v) {
        return parseInt(v, 10) || 0;
    }

    function isNumber(value) {
        return !isNaN(parseInt(value, 10));
    }

    $.widget("ui.resizable", $.ui.mouse, {
        version: "1.10.4",
        widgetEventPrefix: "resize",
        options: {
            alsoResize: false,
            animate: false,
            animateDuration: "slow",
            animateEasing: "swing",
            aspectRatio: false,
            autoHide: false,
            containment: false,
            ghost: false,
            grid: false,
            handles: "e,s,se",
            helper: false,
            maxHeight: null,
            maxWidth: null,
            minHeight: 10,
            minWidth: 10,
            // See #7960
            zIndex: 90,

            // callbacks
            resize: null,
            start: null,
            stop: null
        },
        _create: function () {

            var n, i, handle, axis, hname,
                that = this,
                o = this.options;
            this.element.addClass("ui-resizable");

            $.extend(this, {
                _aspectRatio: !!(o.aspectRatio),
                aspectRatio: o.aspectRatio,
                originalElement: this.element,
                _proportionallyResizeElements: [],
                _helper: o.helper || o.ghost || o.animate ? o.helper || "ui-resizable-helper" : null
            });

            //Wrap the element if it cannot hold child nodes
            if (this.element[0].nodeName.match(/canvas|textarea|input|select|button|img/i)) {

                //Create a wrapper element and set the wrapper to the new current internal element
                this.element.wrap(
                    $("<div class='ui-wrapper' style='overflow: hidden;'></div>").css({
                        position: this.element.css("position"),
                        width: this.element.outerWidth(),
                        height: this.element.outerHeight(),
                        top: this.element.css("top"),
                        left: this.element.css("left")
                    })
                );

                //Overwrite the original this.element
                this.element = this.element.parent().data(
                    "ui-resizable", this.element.data("ui-resizable")
                );

                this.elementIsWrapper = true;

                //Move margins to the wrapper
                this.element.css({ marginLeft: this.originalElement.css("marginLeft"), marginTop: this.originalElement.css("marginTop"), marginRight: this.originalElement.css("marginRight"), marginBottom: this.originalElement.css("marginBottom") });
                this.originalElement.css({ marginLeft: 0, marginTop: 0, marginRight: 0, marginBottom: 0 });

                //Prevent Safari textarea resize
                this.originalResizeStyle = this.originalElement.css("resize");
                this.originalElement.css("resize", "none");

                //Push the actual element to our proportionallyResize internal array
                this._proportionallyResizeElements.push(this.originalElement.css({ position: "static", zoom: 1, display: "block" }));

                // avoid IE jump (hard set the margin)
                this.originalElement.css({ margin: this.originalElement.css("margin") });

                // fix handlers offset
                this._proportionallyResize();

            }

            this.handles = o.handles || (!$(".ui-resizable-handle", this.element).length ? "e,s,se" : { n: ".ui-resizable-n", e: ".ui-resizable-e", s: ".ui-resizable-s", w: ".ui-resizable-w", se: ".ui-resizable-se", sw: ".ui-resizable-sw", ne: ".ui-resizable-ne", nw: ".ui-resizable-nw" });
            if (this.handles.constructor === String) {

                if (this.handles === "all") {
                    this.handles = "n,e,s,w,se,sw,ne,nw";
                }

                n = this.handles.split(",");
                this.handles = {};

                for (i = 0; i < n.length; i++) {

                    handle = $.trim(n[i]);
                    hname = "ui-resizable-" + handle;
                    axis = $("<div class='ui-resizable-handle " + hname + "'></div>");

                    // Apply zIndex to all handles - see #7960
                    axis.css({ zIndex: o.zIndex });

                    //TODO : What's going on here?
                    if ("se" === handle) {
                        axis.addClass("ui-icon ui-icon-gripsmall-diagonal-se");
                    }

                    //Insert into internal handles object and append to element
                    this.handles[handle] = ".ui-resizable-" + handle;
                    this.element.append(axis);
                }

            }

            this._renderAxis = function (target) {

                var i, axis, padPos, padWrapper;

                target = target || this.element;

                for (i in this.handles) {

                    if (this.handles[i].constructor === String) {
                        this.handles[i] = $(this.handles[i], this.element).show();
                    }

                    //Apply pad to wrapper element, needed to fix axis position (textarea, inputs, scrolls)
                    if (this.elementIsWrapper && this.originalElement[0].nodeName.match(/textarea|input|select|button/i)) {

                        axis = $(this.handles[i], this.element);

                        //Checking the correct pad and border
                        padWrapper = /sw|ne|nw|se|n|s/.test(i) ? axis.outerHeight() : axis.outerWidth();

                        //The padding type i have to apply...
                        padPos = ["padding",
                            /ne|nw|n/.test(i) ? "Top" :
                                /se|sw|s/.test(i) ? "Bottom" :
                                    /^e$/.test(i) ? "Right" : "Left"].join("");

                        target.css(padPos, padWrapper);

                        this._proportionallyResize();

                    }

                    //TODO: What's that good for? There's not anything to be executed left
                    if (!$(this.handles[i]).length) {
                        continue;
                    }
                }
            };

            //TODO: make renderAxis a prototype function
            this._renderAxis(this.element);

            this._handles = $(".ui-resizable-handle", this.element)
                .disableSelection();

            //Matching axis name
            this._handles.mouseover(function () {
                if (!that.resizing) {
                    if (this.className) {
                        axis = this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i);
                    }
                    //Axis, default = se
                    that.axis = axis && axis[1] ? axis[1] : "se";
                }
            });

            //If we want to auto hide the elements
            if (o.autoHide) {
                this._handles.hide();
                $(this.element)
                    .addClass("ui-resizable-autohide")
                    .mouseenter(function () {
                        if (o.disabled) {
                            return;
                        }
                        $(this).removeClass("ui-resizable-autohide");
                        that._handles.show();
                    })
                    .mouseleave(function () {
                        if (o.disabled) {
                            return;
                        }
                        if (!that.resizing) {
                            $(this).addClass("ui-resizable-autohide");
                            that._handles.hide();
                        }
                    });
            }

            //Initialize the mouse interaction
            this._mouseInit();

        },

        _destroy: function () {

            this._mouseDestroy();

            var wrapper,
                _destroy = function (exp) {
                    $(exp).removeClass("ui-resizable ui-resizable-disabled ui-resizable-resizing")
                        .removeData("resizable").removeData("ui-resizable").unbind(".resizable").find(".ui-resizable-handle").remove();
                };

            //TODO: Unwrap at same DOM position
            if (this.elementIsWrapper) {
                _destroy(this.element);
                wrapper = this.element;
                this.originalElement.css({
                    position: wrapper.css("position"),
                    width: wrapper.outerWidth(),
                    height: wrapper.outerHeight(),
                    top: wrapper.css("top"),
                    left: wrapper.css("left")
                }).insertAfter(wrapper);
                wrapper.remove();
            }

            this.originalElement.css("resize", this.originalResizeStyle);
            _destroy(this.originalElement);

            return this;
        },

        _mouseCapture: function (event) {
            var i, handle,
                capture = false;

            for (i in this.handles) {
                handle = $(this.handles[i])[0];
                if (handle === event.target || $.contains(handle, event.target)) {
                    capture = true;
                }
            }

            return !this.options.disabled && capture;
        },

        _mouseStart: function (event) {

            var curleft, curtop, cursor,
                o = this.options,
                iniPos = this.element.position(),
                el = this.element;

            this.resizing = true;

            // bugfix for http://dev.jquery.com/ticket/1749
            if ((/absolute/).test(el.css("position"))) {
                el.css({ position: "absolute", top: el.css("top"), left: el.css("left") });
            } else if (el.is(".ui-draggable")) {
                el.css({ position: "absolute", top: iniPos.top, left: iniPos.left });
            }

            this._renderProxy();

            curleft = num(this.helper.css("left"));
            curtop = num(this.helper.css("top"));

            if (o.containment) {
                curleft += $(o.containment).scrollLeft() || 0;
                curtop += $(o.containment).scrollTop() || 0;
            }

            //Store needed variables
            this.offset = this.helper.offset();
            this.position = { left: curleft, top: curtop };
            this.size = this._helper ? { width: this.helper.width(), height: this.helper.height() } : { width: el.width(), height: el.height() };
            this.originalSize = this._helper ? { width: el.outerWidth(), height: el.outerHeight() } : { width: el.width(), height: el.height() };
            this.originalPosition = { left: curleft, top: curtop };
            this.sizeDiff = { width: el.outerWidth() - el.width(), height: el.outerHeight() - el.height() };
            this.originalMousePosition = { left: event.pageX, top: event.pageY };

            //Aspect Ratio
            this.aspectRatio = (typeof o.aspectRatio === "number") ? o.aspectRatio : ((this.originalSize.width / this.originalSize.height) || 1);

            cursor = $(".ui-resizable-" + this.axis).css("cursor");
            $("body").css("cursor", cursor === "auto" ? this.axis + "-resize" : cursor);

            el.addClass("ui-resizable-resizing");
            this._propagate("start", event);
            return true;
        },

        _mouseDrag: function (event) {

            //Increase performance, avoid regex
            var data,
                el = this.helper, props = {},
                smp = this.originalMousePosition,
                a = this.axis,
                prevTop = this.position.top,
                prevLeft = this.position.left,
                prevWidth = this.size.width,
                prevHeight = this.size.height,
                dx = (event.pageX - smp.left) || 0,
                dy = (event.pageY - smp.top) || 0,
                trigger = this._change[a];

            if (!trigger) {
                return false;
            }

            // Calculate the attrs that will be change
            data = trigger.apply(this, [event, dx, dy]);

            // Put this in the mouseDrag handler since the user can start pressing shift while resizing
            this._updateVirtualBoundaries(event.shiftKey);
            if (this._aspectRatio || event.shiftKey) {
                data = this._updateRatio(data, event);
            }

            data = this._respectSize(data, event);

            this._updateCache(data);

            // plugins callbacks need to be called first
            this._propagate("resize", event);

            if (this.position.top !== prevTop) {
                props.top = this.position.top + "px";
            }
            if (this.position.left !== prevLeft) {
                props.left = this.position.left + "px";
            }
            if (this.size.width !== prevWidth) {
                props.width = this.size.width + "px";
            }
            if (this.size.height !== prevHeight) {
                props.height = this.size.height + "px";
            }
            el.css(props);

            if (!this._helper && this._proportionallyResizeElements.length) {
                this._proportionallyResize();
            }

            // Call the user callback if the element was resized
            if (!$.isEmptyObject(props)) {
                this._trigger("resize", event, this.ui());
            }

            return false;
        },

        _mouseStop: function (event) {

            this.resizing = false;
            var pr, ista, soffseth, soffsetw, s, left, top,
                o = this.options, that = this;

            if (this._helper) {

                pr = this._proportionallyResizeElements;
                ista = pr.length && (/textarea/i).test(pr[0].nodeName);
                soffseth = ista && $.ui.hasScroll(pr[0], "left") /* TODO - jump height */ ? 0 : that.sizeDiff.height;
                soffsetw = ista ? 0 : that.sizeDiff.width;

                s = { width: (that.helper.width() - soffsetw), height: (that.helper.height() - soffseth) };
                left = (parseInt(that.element.css("left"), 10) + (that.position.left - that.originalPosition.left)) || null;
                top = (parseInt(that.element.css("top"), 10) + (that.position.top - that.originalPosition.top)) || null;

                if (!o.animate) {
                    this.element.css($.extend(s, { top: top, left: left }));
                }

                that.helper.height(that.size.height);
                that.helper.width(that.size.width);

                if (this._helper && !o.animate) {
                    this._proportionallyResize();
                }
            }

            $("body").css("cursor", "auto");

            this.element.removeClass("ui-resizable-resizing");

            this._propagate("stop", event);

            if (this._helper) {
                this.helper.remove();
            }

            return false;

        },

        _updateVirtualBoundaries: function (forceAspectRatio) {
            var pMinWidth, pMaxWidth, pMinHeight, pMaxHeight, b,
                o = this.options;

            b = {
                minWidth: isNumber(o.minWidth) ? o.minWidth : 0,
                maxWidth: isNumber(o.maxWidth) ? o.maxWidth : Infinity,
                minHeight: isNumber(o.minHeight) ? o.minHeight : 0,
                maxHeight: isNumber(o.maxHeight) ? o.maxHeight : Infinity
            };

            if (this._aspectRatio || forceAspectRatio) {
                // We want to create an enclosing box whose aspect ration is the requested one
                // First, compute the "projected" size for each dimension based on the aspect ratio and other dimension
                pMinWidth = b.minHeight * this.aspectRatio;
                pMinHeight = b.minWidth / this.aspectRatio;
                pMaxWidth = b.maxHeight * this.aspectRatio;
                pMaxHeight = b.maxWidth / this.aspectRatio;

                if (pMinWidth > b.minWidth) {
                    b.minWidth = pMinWidth;
                }
                if (pMinHeight > b.minHeight) {
                    b.minHeight = pMinHeight;
                }
                if (pMaxWidth < b.maxWidth) {
                    b.maxWidth = pMaxWidth;
                }
                if (pMaxHeight < b.maxHeight) {
                    b.maxHeight = pMaxHeight;
                }
            }
            this._vBoundaries = b;
        },

        _updateCache: function (data) {
            this.offset = this.helper.offset();
            if (isNumber(data.left)) {
                this.position.left = data.left;
            }
            if (isNumber(data.top)) {
                this.position.top = data.top;
            }
            if (isNumber(data.height)) {
                this.size.height = data.height;
            }
            if (isNumber(data.width)) {
                this.size.width = data.width;
            }
        },

        _updateRatio: function (data) {

            var cpos = this.position,
                csize = this.size,
                a = this.axis;

            if (isNumber(data.height)) {
                data.width = (data.height * this.aspectRatio);
            } else if (isNumber(data.width)) {
                data.height = (data.width / this.aspectRatio);
            }

            if (a === "sw") {
                data.left = cpos.left + (csize.width - data.width);
                data.top = null;
            }
            if (a === "nw") {
                data.top = cpos.top + (csize.height - data.height);
                data.left = cpos.left + (csize.width - data.width);
            }

            return data;
        },

        _respectSize: function (data) {

            var o = this._vBoundaries,
                a = this.axis,
                ismaxw = isNumber(data.width) && o.maxWidth && (o.maxWidth < data.width), ismaxh = isNumber(data.height) && o.maxHeight && (o.maxHeight < data.height),
                isminw = isNumber(data.width) && o.minWidth && (o.minWidth > data.width), isminh = isNumber(data.height) && o.minHeight && (o.minHeight > data.height),
                dw = this.originalPosition.left + this.originalSize.width,
                dh = this.position.top + this.size.height,
                cw = /sw|nw|w/.test(a), ch = /nw|ne|n/.test(a);
            if (isminw) {
                data.width = o.minWidth;
            }
            if (isminh) {
                data.height = o.minHeight;
            }
            if (ismaxw) {
                data.width = o.maxWidth;
            }
            if (ismaxh) {
                data.height = o.maxHeight;
            }

            if (isminw && cw) {
                data.left = dw - o.minWidth;
            }
            if (ismaxw && cw) {
                data.left = dw - o.maxWidth;
            }
            if (isminh && ch) {
                data.top = dh - o.minHeight;
            }
            if (ismaxh && ch) {
                data.top = dh - o.maxHeight;
            }

            // fixing jump error on top/left - bug #2330
            if (!data.width && !data.height && !data.left && data.top) {
                data.top = null;
            } else if (!data.width && !data.height && !data.top && data.left) {
                data.left = null;
            }

            return data;
        },

        _proportionallyResize: function () {

            if (!this._proportionallyResizeElements.length) {
                return;
            }

            var i, j, borders, paddings, prel,
                element = this.helper || this.element;

            for (i = 0; i < this._proportionallyResizeElements.length; i++) {

                prel = this._proportionallyResizeElements[i];

                if (!this.borderDif) {
                    this.borderDif = [];
                    borders = [prel.css("borderTopWidth"), prel.css("borderRightWidth"), prel.css("borderBottomWidth"), prel.css("borderLeftWidth")];
                    paddings = [prel.css("paddingTop"), prel.css("paddingRight"), prel.css("paddingBottom"), prel.css("paddingLeft")];

                    for (j = 0; j < borders.length; j++) {
                        this.borderDif[j] = (parseInt(borders[j], 10) || 0) + (parseInt(paddings[j], 10) || 0);
                    }
                }

                prel.css({
                    height: (element.height() - this.borderDif[0] - this.borderDif[2]) || 0,
                    width: (element.width() - this.borderDif[1] - this.borderDif[3]) || 0
                });

            }

        },

        _renderProxy: function () {

            var el = this.element, o = this.options;
            this.elementOffset = el.offset();

            if (this._helper) {

                this.helper = this.helper || $("<div style='overflow:hidden;'></div>");

                this.helper.addClass(this._helper).css({
                    width: this.element.outerWidth() - 1,
                    height: this.element.outerHeight() - 1,
                    position: "absolute",
                    left: this.elementOffset.left + "px",
                    top: this.elementOffset.top + "px",
                    zIndex: ++o.zIndex //TODO: Don't modify option
                });

                this.helper
                    .appendTo("body")
                    .disableSelection();

            } else {
                this.helper = this.element;
            }

        },

        _change: {
            e: function (event, dx) {
                return { width: this.originalSize.width + dx };
            },
            w: function (event, dx) {
                var cs = this.originalSize, sp = this.originalPosition;
                return { left: sp.left + dx, width: cs.width - dx };
            },
            n: function (event, dx, dy) {
                var cs = this.originalSize, sp = this.originalPosition;
                return { top: sp.top + dy, height: cs.height - dy };
            },
            s: function (event, dx, dy) {
                return { height: this.originalSize.height + dy };
            },
            se: function (event, dx, dy) {
                return $.extend(this._change.s.apply(this, arguments), this._change.e.apply(this, [event, dx, dy]));
            },
            sw: function (event, dx, dy) {
                return $.extend(this._change.s.apply(this, arguments), this._change.w.apply(this, [event, dx, dy]));
            },
            ne: function (event, dx, dy) {
                return $.extend(this._change.n.apply(this, arguments), this._change.e.apply(this, [event, dx, dy]));
            },
            nw: function (event, dx, dy) {
                return $.extend(this._change.n.apply(this, arguments), this._change.w.apply(this, [event, dx, dy]));
            }
        },

        _propagate: function (n, event) {
            $.ui.plugin.call(this, n, [event, this.ui()]);
            (n !== "resize" && this._trigger(n, event, this.ui()));
        },

        plugins: {},

        ui: function () {
            return {
                originalElement: this.originalElement,
                element: this.element,
                helper: this.helper,
                position: this.position,
                size: this.size,
                originalSize: this.originalSize,
                originalPosition: this.originalPosition
            };
        }

    });

    /*
     * Resizable Extensions
     */

    $.ui.plugin.add("resizable", "animate", {

        stop: function (event) {
            var that = $(this).data("ui-resizable"),
                o = that.options,
                pr = that._proportionallyResizeElements,
                ista = pr.length && (/textarea/i).test(pr[0].nodeName),
                soffseth = ista && $.ui.hasScroll(pr[0], "left") /* TODO - jump height */ ? 0 : that.sizeDiff.height,
                soffsetw = ista ? 0 : that.sizeDiff.width,
                style = { width: (that.size.width - soffsetw), height: (that.size.height - soffseth) },
                left = (parseInt(that.element.css("left"), 10) + (that.position.left - that.originalPosition.left)) || null,
                top = (parseInt(that.element.css("top"), 10) + (that.position.top - that.originalPosition.top)) || null;

            that.element.animate(
                $.extend(style, top && left ? { top: top, left: left } : {}), {
                    duration: o.animateDuration,
                    easing: o.animateEasing,
                    step: function () {

                        var data = {
                            width: parseInt(that.element.css("width"), 10),
                            height: parseInt(that.element.css("height"), 10),
                            top: parseInt(that.element.css("top"), 10),
                            left: parseInt(that.element.css("left"), 10)
                        };

                        if (pr && pr.length) {
                            $(pr[0]).css({ width: data.width, height: data.height });
                        }

                        // propagating resize, and updating values for each animation step
                        that._updateCache(data);
                        that._propagate("resize", event);

                    }
                }
            );
        }

    });

    $.ui.plugin.add("resizable", "containment", {

        start: function () {
            var element, p, co, ch, cw, width, height,
                that = $(this).data("ui-resizable"),
                o = that.options,
                el = that.element,
                oc = o.containment,
                ce = (oc instanceof $) ? oc.get(0) : (/parent/.test(oc)) ? el.parent().get(0) : oc;

            if (!ce) {
                return;
            }

            that.containerElement = $(ce);

            if (/document/.test(oc) || oc === document) {
                that.containerOffset = { left: 0, top: 0 };
                that.containerPosition = { left: 0, top: 0 };

                that.parentData = {
                    element: $(document), left: 0, top: 0,
                    width: $(document).width(), height: $(document).height() || document.body.parentNode.scrollHeight
                };
            }

            // i'm a node, so compute top, left, right, bottom
            else {
                element = $(ce);
                p = [];
                $(["Top", "Right", "Left", "Bottom"]).each(function (i, name) { p[i] = num(element.css("padding" + name)); });

                that.containerOffset = element.offset();
                that.containerPosition = element.position();
                that.containerSize = { height: (element.innerHeight() - p[3]), width: (element.innerWidth() - p[1]) };

                co = that.containerOffset;
                ch = that.containerSize.height;
                cw = that.containerSize.width;
                width = ($.ui.hasScroll(ce, "left") ? ce.scrollWidth : cw);
                height = ($.ui.hasScroll(ce) ? ce.scrollHeight : ch);

                that.parentData = {
                    element: ce, left: co.left, top: co.top, width: width, height: height
                };
            }
        },

        resize: function (event) {
            var woset, hoset, isParent, isOffsetRelative,
                that = $(this).data("ui-resizable"),
                o = that.options,
                co = that.containerOffset, cp = that.position,
                pRatio = that._aspectRatio || event.shiftKey,
                cop = { top: 0, left: 0 }, ce = that.containerElement;

            if (ce[0] !== document && (/static/).test(ce.css("position"))) {
                cop = co;
            }

            if (cp.left < (that._helper ? co.left : 0)) {
                that.size.width = that.size.width + (that._helper ? (that.position.left - co.left) : (that.position.left - cop.left));
                if (pRatio) {
                    that.size.height = that.size.width / that.aspectRatio;
                }
                that.position.left = o.helper ? co.left : 0;
            }

            if (cp.top < (that._helper ? co.top : 0)) {
                that.size.height = that.size.height + (that._helper ? (that.position.top - co.top) : that.position.top);
                if (pRatio) {
                    that.size.width = that.size.height * that.aspectRatio;
                }
                that.position.top = that._helper ? co.top : 0;
            }

            that.offset.left = that.parentData.left + that.position.left;
            that.offset.top = that.parentData.top + that.position.top;

            woset = Math.abs((that._helper ? that.offset.left - cop.left : (that.offset.left - cop.left)) + that.sizeDiff.width);
            hoset = Math.abs((that._helper ? that.offset.top - cop.top : (that.offset.top - co.top)) + that.sizeDiff.height);

            isParent = that.containerElement.get(0) === that.element.parent().get(0);
            isOffsetRelative = /relative|absolute/.test(that.containerElement.css("position"));

            if (isParent && isOffsetRelative) {
                woset -= Math.abs(that.parentData.left);
            }

            if (woset + that.size.width >= that.parentData.width) {
                that.size.width = that.parentData.width - woset;
                if (pRatio) {
                    that.size.height = that.size.width / that.aspectRatio;
                }
            }

            if (hoset + that.size.height >= that.parentData.height) {
                that.size.height = that.parentData.height - hoset;
                if (pRatio) {
                    that.size.width = that.size.height * that.aspectRatio;
                }
            }
        },

        stop: function () {
            var that = $(this).data("ui-resizable"),
                o = that.options,
                co = that.containerOffset,
                cop = that.containerPosition,
                ce = that.containerElement,
                helper = $(that.helper),
                ho = helper.offset(),
                w = helper.outerWidth() - that.sizeDiff.width,
                h = helper.outerHeight() - that.sizeDiff.height;

            if (that._helper && !o.animate && (/relative/).test(ce.css("position"))) {
                $(this).css({ left: ho.left - cop.left - co.left, width: w, height: h });
            }

            if (that._helper && !o.animate && (/static/).test(ce.css("position"))) {
                $(this).css({ left: ho.left - cop.left - co.left, width: w, height: h });
            }

        }
    });

    $.ui.plugin.add("resizable", "alsoResize", {

        start: function () {
            var that = $(this).data("ui-resizable"),
                o = that.options,
                _store = function (exp) {
                    $(exp).each(function () {
                        var el = $(this);
                        el.data("ui-resizable-alsoresize", {
                            width: parseInt(el.width(), 10), height: parseInt(el.height(), 10),
                            left: parseInt(el.css("left"), 10), top: parseInt(el.css("top"), 10)
                        });
                    });
                };

            if (typeof (o.alsoResize) === "object" && !o.alsoResize.parentNode) {
                if (o.alsoResize.length) { o.alsoResize = o.alsoResize[0]; _store(o.alsoResize); }
                else { $.each(o.alsoResize, function (exp) { _store(exp); }); }
            } else {
                _store(o.alsoResize);
            }
        },

        resize: function (event, ui) {
            var that = $(this).data("ui-resizable"),
                o = that.options,
                os = that.originalSize,
                op = that.originalPosition,
                delta = {
                    height: (that.size.height - os.height) || 0, width: (that.size.width - os.width) || 0,
                    top: (that.position.top - op.top) || 0, left: (that.position.left - op.left) || 0
                },

                _alsoResize = function (exp, c) {
                    $(exp).each(function () {
                        var el = $(this), start = $(this).data("ui-resizable-alsoresize"), style = {},
                            css = c && c.length ? c : el.parents(ui.originalElement[0]).length ? ["width", "height"] : ["width", "height", "top", "left"];

                        $.each(css, function (i, prop) {
                            var sum = (start[prop] || 0) + (delta[prop] || 0);
                            if (sum && sum >= 0) {
                                style[prop] = sum || null;
                            }
                        });

                        el.css(style);
                    });
                };

            if (typeof (o.alsoResize) === "object" && !o.alsoResize.nodeType) {
                $.each(o.alsoResize, function (exp, c) { _alsoResize(exp, c); });
            } else {
                _alsoResize(o.alsoResize);
            }
        },

        stop: function () {
            $(this).removeData("resizable-alsoresize");
        }
    });

    $.ui.plugin.add("resizable", "ghost", {

        start: function () {

            var that = $(this).data("ui-resizable"), o = that.options, cs = that.size;

            that.ghost = that.originalElement.clone();
            that.ghost
                .css({ opacity: 0.25, display: "block", position: "relative", height: cs.height, width: cs.width, margin: 0, left: 0, top: 0 })
                .addClass("ui-resizable-ghost")
                .addClass(typeof o.ghost === "string" ? o.ghost : "");

            that.ghost.appendTo(that.helper);

        },

        resize: function () {
            var that = $(this).data("ui-resizable");
            if (that.ghost) {
                that.ghost.css({ position: "relative", height: that.size.height, width: that.size.width });
            }
        },

        stop: function () {
            var that = $(this).data("ui-resizable");
            if (that.ghost && that.helper) {
                that.helper.get(0).removeChild(that.ghost.get(0));
            }
        }

    });

    $.ui.plugin.add("resizable", "grid", {

        resize: function () {
            var that = $(this).data("ui-resizable"),
                o = that.options,
                cs = that.size,
                os = that.originalSize,
                op = that.originalPosition,
                a = that.axis,
                grid = typeof o.grid === "number" ? [o.grid, o.grid] : o.grid,
                gridX = (grid[0] || 1),
                gridY = (grid[1] || 1),
                ox = Math.round((cs.width - os.width) / gridX) * gridX,
                oy = Math.round((cs.height - os.height) / gridY) * gridY,
                newWidth = os.width + ox,
                newHeight = os.height + oy,
                isMaxWidth = o.maxWidth && (o.maxWidth < newWidth),
                isMaxHeight = o.maxHeight && (o.maxHeight < newHeight),
                isMinWidth = o.minWidth && (o.minWidth > newWidth),
                isMinHeight = o.minHeight && (o.minHeight > newHeight);

            o.grid = grid;

            if (isMinWidth) {
                newWidth = newWidth + gridX;
            }
            if (isMinHeight) {
                newHeight = newHeight + gridY;
            }
            if (isMaxWidth) {
                newWidth = newWidth - gridX;
            }
            if (isMaxHeight) {
                newHeight = newHeight - gridY;
            }

            if (/^(se|s|e)$/.test(a)) {
                that.size.width = newWidth;
                that.size.height = newHeight;
            } else if (/^(ne)$/.test(a)) {
                that.size.width = newWidth;
                that.size.height = newHeight;
                that.position.top = op.top - oy;
            } else if (/^(sw)$/.test(a)) {
                that.size.width = newWidth;
                that.size.height = newHeight;
                that.position.left = op.left - ox;
            } else {
                if (newHeight - gridY > 0) {
                    that.size.height = newHeight;
                    that.position.top = op.top - oy;
                } else {
                    that.size.height = gridY;
                    that.position.top = op.top + os.height - gridY;
                }
                if (newWidth - gridX > 0) {
                    that.size.width = newWidth;
                    that.position.left = op.left - ox;
                } else {
                    that.size.width = gridX;
                    that.position.left = op.left + os.width - gridX;
                }
            }
        }

    });

})(jQuery);
(function ($, undefined) {

    $.widget("ui.selectable", $.ui.mouse, {
        version: "1.10.4",
        options: {
            appendTo: "body",
            autoRefresh: true,
            distance: 0,
            filter: "*",
            tolerance: "touch",

            // callbacks
            selected: null,
            selecting: null,
            start: null,
            stop: null,
            unselected: null,
            unselecting: null
        },
        _create: function () {
            var selectees,
                that = this;

            this.element.addClass("ui-selectable");

            this.dragged = false;

            // cache selectee children based on filter
            this.refresh = function () {
                selectees = $(that.options.filter, that.element[0]);
                selectees.addClass("ui-selectee");
                selectees.each(function () {
                    var $this = $(this),
                        pos = $this.offset();
                    $.data(this, "selectable-item", {
                        element: this,
                        $element: $this,
                        left: pos.left,
                        top: pos.top,
                        right: pos.left + $this.outerWidth(),
                        bottom: pos.top + $this.outerHeight(),
                        startselected: false,
                        selected: $this.hasClass("ui-selected"),
                        selecting: $this.hasClass("ui-selecting"),
                        unselecting: $this.hasClass("ui-unselecting")
                    });
                });
            };
            this.refresh();

            this.selectees = selectees.addClass("ui-selectee");

            this._mouseInit();

            this.helper = $("<div class='ui-selectable-helper'></div>");
        },

        _destroy: function () {
            this.selectees
                .removeClass("ui-selectee")
                .removeData("selectable-item");
            this.element
                .removeClass("ui-selectable ui-selectable-disabled");
            this._mouseDestroy();
        },

        _mouseStart: function (event) {
            var that = this,
                options = this.options;

            this.opos = [event.pageX, event.pageY];

            if (this.options.disabled) {
                return;
            }

            this.selectees = $(options.filter, this.element[0]);

            this._trigger("start", event);

            $(options.appendTo).append(this.helper);
            // position helper (lasso)
            this.helper.css({
                "left": event.pageX,
                "top": event.pageY,
                "width": 0,
                "height": 0
            });

            if (options.autoRefresh) {
                this.refresh();
            }

            this.selectees.filter(".ui-selected").each(function () {
                var selectee = $.data(this, "selectable-item");
                selectee.startselected = true;
                if (!event.metaKey && !event.ctrlKey) {
                    selectee.$element.removeClass("ui-selected");
                    selectee.selected = false;
                    selectee.$element.addClass("ui-unselecting");
                    selectee.unselecting = true;
                    // selectable UNSELECTING callback
                    that._trigger("unselecting", event, {
                        unselecting: selectee.element
                    });
                }
            });

            $(event.target).parents().addBack().each(function () {
                var doSelect,
                    selectee = $.data(this, "selectable-item");
                if (selectee) {
                    doSelect = (!event.metaKey && !event.ctrlKey) || !selectee.$element.hasClass("ui-selected");
                    selectee.$element
                        .removeClass(doSelect ? "ui-unselecting" : "ui-selected")
                        .addClass(doSelect ? "ui-selecting" : "ui-unselecting");
                    selectee.unselecting = !doSelect;
                    selectee.selecting = doSelect;
                    selectee.selected = doSelect;
                    // selectable (UN)SELECTING callback
                    if (doSelect) {
                        that._trigger("selecting", event, {
                            selecting: selectee.element
                        });
                    } else {
                        that._trigger("unselecting", event, {
                            unselecting: selectee.element
                        });
                    }
                    return false;
                }
            });

        },

        _mouseDrag: function (event) {

            this.dragged = true;

            if (this.options.disabled) {
                return;
            }

            var tmp,
                that = this,
                options = this.options,
                x1 = this.opos[0],
                y1 = this.opos[1],
                x2 = event.pageX,
                y2 = event.pageY;

            if (x1 > x2) { tmp = x2; x2 = x1; x1 = tmp; }
            if (y1 > y2) { tmp = y2; y2 = y1; y1 = tmp; }
            this.helper.css({ left: x1, top: y1, width: x2 - x1, height: y2 - y1 });

            this.selectees.each(function () {
                var selectee = $.data(this, "selectable-item"),
                    hit = false;

                //prevent helper from being selected if appendTo: selectable
                if (!selectee || selectee.element === that.element[0]) {
                    return;
                }

                if (options.tolerance === "touch") {
                    hit = (!(selectee.left > x2 || selectee.right < x1 || selectee.top > y2 || selectee.bottom < y1));
                } else if (options.tolerance === "fit") {
                    hit = (selectee.left > x1 && selectee.right < x2 && selectee.top > y1 && selectee.bottom < y2);
                }

                if (hit) {
                    // SELECT
                    if (selectee.selected) {
                        selectee.$element.removeClass("ui-selected");
                        selectee.selected = false;
                    }
                    if (selectee.unselecting) {
                        selectee.$element.removeClass("ui-unselecting");
                        selectee.unselecting = false;
                    }
                    if (!selectee.selecting) {
                        selectee.$element.addClass("ui-selecting");
                        selectee.selecting = true;
                        // selectable SELECTING callback
                        that._trigger("selecting", event, {
                            selecting: selectee.element
                        });
                    }
                } else {
                    // UNSELECT
                    if (selectee.selecting) {
                        if ((event.metaKey || event.ctrlKey) && selectee.startselected) {
                            selectee.$element.removeClass("ui-selecting");
                            selectee.selecting = false;
                            selectee.$element.addClass("ui-selected");
                            selectee.selected = true;
                        } else {
                            selectee.$element.removeClass("ui-selecting");
                            selectee.selecting = false;
                            if (selectee.startselected) {
                                selectee.$element.addClass("ui-unselecting");
                                selectee.unselecting = true;
                            }
                            // selectable UNSELECTING callback
                            that._trigger("unselecting", event, {
                                unselecting: selectee.element
                            });
                        }
                    }
                    if (selectee.selected) {
                        if (!event.metaKey && !event.ctrlKey && !selectee.startselected) {
                            selectee.$element.removeClass("ui-selected");
                            selectee.selected = false;

                            selectee.$element.addClass("ui-unselecting");
                            selectee.unselecting = true;
                            // selectable UNSELECTING callback
                            that._trigger("unselecting", event, {
                                unselecting: selectee.element
                            });
                        }
                    }
                }
            });

            return false;
        },

        _mouseStop: function (event) {
            var that = this;

            this.dragged = false;

            $(".ui-unselecting", this.element[0]).each(function () {
                var selectee = $.data(this, "selectable-item");
                selectee.$element.removeClass("ui-unselecting");
                selectee.unselecting = false;
                selectee.startselected = false;
                that._trigger("unselected", event, {
                    unselected: selectee.element
                });
            });
            $(".ui-selecting", this.element[0]).each(function () {
                var selectee = $.data(this, "selectable-item");
                selectee.$element.removeClass("ui-selecting").addClass("ui-selected");
                selectee.selecting = false;
                selectee.selected = true;
                selectee.startselected = true;
                that._trigger("selected", event, {
                    selected: selectee.element
                });
            });
            this._trigger("stop", event);

            this.helper.remove();

            return false;
        }

    });

})(jQuery);
(function ($, undefined) {

    // number of pages in a slider
    // (how many times can you page up/down to go through the whole range)
    var numPages = 5;

    $.widget("ui.slider", $.ui.mouse, {
        version: "1.10.4",
        widgetEventPrefix: "slide",

        options: {
            animate: false,
            distance: 0,
            max: 100,
            min: 0,
            orientation: "horizontal",
            range: false,
            step: 1,
            value: 0,
            values: null,

            // callbacks
            change: null,
            slide: null,
            start: null,
            stop: null
        },

        _create: function () {
            this._keySliding = false;
            this._mouseSliding = false;
            this._animateOff = true;
            this._handleIndex = null;
            this._detectOrientation();
            this._mouseInit();

            this.element
                .addClass("ui-slider" +
                    " ui-slider-" + this.orientation +
                    " ui-widget" +
                    " ui-widget-content" +
                    " ui-corner-all");

            this._refresh();
            this._setOption("disabled", this.options.disabled);

            this._animateOff = false;
        },

        _refresh: function () {
            this._createRange();
            this._createHandles();
            this._setupEvents();
            this._refreshValue();
        },

        _createHandles: function () {
            var i, handleCount,
                options = this.options,
                existingHandles = this.element.find(".ui-slider-handle").addClass("ui-state-default ui-corner-all"),
                handle = "<a class='ui-slider-handle ui-state-default ui-corner-all' href='#'></a>",
                handles = [];

            handleCount = (options.values && options.values.length) || 1;

            if (existingHandles.length > handleCount) {
                existingHandles.slice(handleCount).remove();
                existingHandles = existingHandles.slice(0, handleCount);
            }

            for (i = existingHandles.length; i < handleCount; i++) {
                handles.push(handle);
            }

            this.handles = existingHandles.add($(handles.join("")).appendTo(this.element));

            this.handle = this.handles.eq(0);

            this.handles.each(function (i) {
                $(this).data("ui-slider-handle-index", i);
            });
        },

        _createRange: function () {
            var options = this.options,
                classes = "";

            if (options.range) {
                if (options.range === true) {
                    if (!options.values) {
                        options.values = [this._valueMin(), this._valueMin()];
                    } else if (options.values.length && options.values.length !== 2) {
                        options.values = [options.values[0], options.values[0]];
                    } else if ($.isArray(options.values)) {
                        options.values = options.values.slice(0);
                    }
                }

                if (!this.range || !this.range.length) {
                    this.range = $("<div></div>")
                        .appendTo(this.element);

                    classes = "ui-slider-range" +
                        // note: this isn't the most fittingly semantic framework class for this element,
                        // but worked best visually with a variety of themes
                        " ui-widget-header ui-corner-all";
                } else {
                    this.range.removeClass("ui-slider-range-min ui-slider-range-max")
                        // Handle range switching from true to min/max
                        .css({
                            "left": "",
                            "bottom": ""
                        });
                }

                this.range.addClass(classes +
                    ((options.range === "min" || options.range === "max") ? " ui-slider-range-" + options.range : ""));
            } else {
                if (this.range) {
                    this.range.remove();
                }
                this.range = null;
            }
        },

        _setupEvents: function () {
            var elements = this.handles.add(this.range).filter("a");
            this._off(elements);
            this._on(elements, this._handleEvents);
            this._hoverable(elements);
            this._focusable(elements);
        },

        _destroy: function () {
            this.handles.remove();
            if (this.range) {
                this.range.remove();
            }

            this.element
                .removeClass("ui-slider" +
                    " ui-slider-horizontal" +
                    " ui-slider-vertical" +
                    " ui-widget" +
                    " ui-widget-content" +
                    " ui-corner-all");

            this._mouseDestroy();
        },

        _mouseCapture: function (event) {
            var position, normValue, distance, closestHandle, index, allowed, offset, mouseOverHandle,
                that = this,
                o = this.options;

            if (o.disabled) {
                return false;
            }

            this.elementSize = {
                width: this.element.outerWidth(),
                height: this.element.outerHeight()
            };
            this.elementOffset = this.element.offset();

            position = { x: event.pageX, y: event.pageY };
            normValue = this._normValueFromMouse(position);
            distance = this._valueMax() - this._valueMin() + 1;
            this.handles.each(function (i) {
                var thisDistance = Math.abs(normValue - that.values(i));
                if ((distance > thisDistance) ||
                    (distance === thisDistance &&
                        (i === that._lastChangedValue || that.values(i) === o.min))) {
                    distance = thisDistance;
                    closestHandle = $(this);
                    index = i;
                }
            });

            allowed = this._start(event, index);
            if (allowed === false) {
                return false;
            }
            this._mouseSliding = true;

            this._handleIndex = index;

            closestHandle
                .addClass("ui-state-active")
                .focus();

            offset = closestHandle.offset();
            mouseOverHandle = !$(event.target).parents().addBack().is(".ui-slider-handle");
            this._clickOffset = mouseOverHandle ? { left: 0, top: 0 } : {
                left: event.pageX - offset.left - (closestHandle.width() / 2),
                top: event.pageY - offset.top -
                    (closestHandle.height() / 2) -
                    (parseInt(closestHandle.css("borderTopWidth"), 10) || 0) -
                    (parseInt(closestHandle.css("borderBottomWidth"), 10) || 0) +
                    (parseInt(closestHandle.css("marginTop"), 10) || 0)
            };

            if (!this.handles.hasClass("ui-state-hover")) {
                this._slide(event, index, normValue);
            }
            this._animateOff = true;
            return true;
        },

        _mouseStart: function () {
            return true;
        },

        _mouseDrag: function (event) {
            var position = { x: event.pageX, y: event.pageY },
                normValue = this._normValueFromMouse(position);

            this._slide(event, this._handleIndex, normValue);

            return false;
        },

        _mouseStop: function (event) {
            this.handles.removeClass("ui-state-active");
            this._mouseSliding = false;

            this._stop(event, this._handleIndex);
            this._change(event, this._handleIndex);

            this._handleIndex = null;
            this._clickOffset = null;
            this._animateOff = false;

            return false;
        },

        _detectOrientation: function () {
            this.orientation = (this.options.orientation === "vertical") ? "vertical" : "horizontal";
        },

        _normValueFromMouse: function (position) {
            var pixelTotal,
                pixelMouse,
                percentMouse,
                valueTotal,
                valueMouse;

            if (this.orientation === "horizontal") {
                pixelTotal = this.elementSize.width;
                pixelMouse = position.x - this.elementOffset.left - (this._clickOffset ? this._clickOffset.left : 0);
            } else {
                pixelTotal = this.elementSize.height;
                pixelMouse = position.y - this.elementOffset.top - (this._clickOffset ? this._clickOffset.top : 0);
            }

            percentMouse = (pixelMouse / pixelTotal);
            if (percentMouse > 1) {
                percentMouse = 1;
            }
            if (percentMouse < 0) {
                percentMouse = 0;
            }
            if (this.orientation === "vertical") {
                percentMouse = 1 - percentMouse;
            }

            valueTotal = this._valueMax() - this._valueMin();
            valueMouse = this._valueMin() + percentMouse * valueTotal;

            return this._trimAlignValue(valueMouse);
        },

        _start: function (event, index) {
            var uiHash = {
                handle: this.handles[index],
                value: this.value()
            };
            if (this.options.values && this.options.values.length) {
                uiHash.value = this.values(index);
                uiHash.values = this.values();
            }
            return this._trigger("start", event, uiHash);
        },

        _slide: function (event, index, newVal) {
            var otherVal,
                newValues,
                allowed;

            if (this.options.values && this.options.values.length) {
                otherVal = this.values(index ? 0 : 1);

                if ((this.options.values.length === 2 && this.options.range === true) &&
                    ((index === 0 && newVal > otherVal) || (index === 1 && newVal < otherVal))
                ) {
                    newVal = otherVal;
                }

                if (newVal !== this.values(index)) {
                    newValues = this.values();
                    newValues[index] = newVal;
                    // A slide can be canceled by returning false from the slide callback
                    allowed = this._trigger("slide", event, {
                        handle: this.handles[index],
                        value: newVal,
                        values: newValues
                    });
                    otherVal = this.values(index ? 0 : 1);
                    if (allowed !== false) {
                        this.values(index, newVal);
                    }
                }
            } else {
                if (newVal !== this.value()) {
                    // A slide can be canceled by returning false from the slide callback
                    allowed = this._trigger("slide", event, {
                        handle: this.handles[index],
                        value: newVal
                    });
                    if (allowed !== false) {
                        this.value(newVal);
                    }
                }
            }
        },

        _stop: function (event, index) {
            var uiHash = {
                handle: this.handles[index],
                value: this.value()
            };
            if (this.options.values && this.options.values.length) {
                uiHash.value = this.values(index);
                uiHash.values = this.values();
            }

            this._trigger("stop", event, uiHash);
        },

        _change: function (event, index) {
            if (!this._keySliding && !this._mouseSliding) {
                var uiHash = {
                    handle: this.handles[index],
                    value: this.value()
                };
                if (this.options.values && this.options.values.length) {
                    uiHash.value = this.values(index);
                    uiHash.values = this.values();
                }

                //store the last changed value index for reference when handles overlap
                this._lastChangedValue = index;

                this._trigger("change", event, uiHash);
            }
        },

        value: function (newValue) {
            if (arguments.length) {
                this.options.value = this._trimAlignValue(newValue);
                this._refreshValue();
                this._change(null, 0);
                return;
            }

            return this._value();
        },

        values: function (index, newValue) {
            var vals,
                newValues,
                i;

            if (arguments.length > 1) {
                this.options.values[index] = this._trimAlignValue(newValue);
                this._refreshValue();
                this._change(null, index);
                return;
            }

            if (arguments.length) {
                if ($.isArray(arguments[0])) {
                    vals = this.options.values;
                    newValues = arguments[0];
                    for (i = 0; i < vals.length; i += 1) {
                        vals[i] = this._trimAlignValue(newValues[i]);
                        this._change(null, i);
                    }
                    this._refreshValue();
                } else {
                    if (this.options.values && this.options.values.length) {
                        return this._values(index);
                    } else {
                        return this.value();
                    }
                }
            } else {
                return this._values();
            }
        },

        _setOption: function (key, value) {
            var i,
                valsLength = 0;

            if (key === "range" && this.options.range === true) {
                if (value === "min") {
                    this.options.value = this._values(0);
                    this.options.values = null;
                } else if (value === "max") {
                    this.options.value = this._values(this.options.values.length - 1);
                    this.options.values = null;
                }
            }

            if ($.isArray(this.options.values)) {
                valsLength = this.options.values.length;
            }

            $.Widget.prototype._setOption.apply(this, arguments);

            switch (key) {
                case "orientation":
                    this._detectOrientation();
                    this.element
                        .removeClass("ui-slider-horizontal ui-slider-vertical")
                        .addClass("ui-slider-" + this.orientation);
                    this._refreshValue();
                    break;
                case "value":
                    this._animateOff = true;
                    this._refreshValue();
                    this._change(null, 0);
                    this._animateOff = false;
                    break;
                case "values":
                    this._animateOff = true;
                    this._refreshValue();
                    for (i = 0; i < valsLength; i += 1) {
                        this._change(null, i);
                    }
                    this._animateOff = false;
                    break;
                case "min":
                case "max":
                    this._animateOff = true;
                    this._refreshValue();
                    this._animateOff = false;
                    break;
                case "range":
                    this._animateOff = true;
                    this._refresh();
                    this._animateOff = false;
                    break;
            }
        },

        //internal value getter
        // _value() returns value trimmed by min and max, aligned by step
        _value: function () {
            var val = this.options.value;
            val = this._trimAlignValue(val);

            return val;
        },

        //internal values getter
        // _values() returns array of values trimmed by min and max, aligned by step
        // _values( index ) returns single value trimmed by min and max, aligned by step
        _values: function (index) {
            var val,
                vals,
                i;

            if (arguments.length) {
                val = this.options.values[index];
                val = this._trimAlignValue(val);

                return val;
            } else if (this.options.values && this.options.values.length) {
                // .slice() creates a copy of the array
                // this copy gets trimmed by min and max and then returned
                vals = this.options.values.slice();
                for (i = 0; i < vals.length; i += 1) {
                    vals[i] = this._trimAlignValue(vals[i]);
                }

                return vals;
            } else {
                return [];
            }
        },

        // returns the step-aligned value that val is closest to, between (inclusive) min and max
        _trimAlignValue: function (val) {
            if (val <= this._valueMin()) {
                return this._valueMin();
            }
            if (val >= this._valueMax()) {
                return this._valueMax();
            }
            var step = (this.options.step > 0) ? this.options.step : 1,
                valModStep = (val - this._valueMin()) % step,
                alignValue = val - valModStep;

            if (Math.abs(valModStep) * 2 >= step) {
                alignValue += (valModStep > 0) ? step : (-step);
            }

            // Since JavaScript has problems with large floats, round
            // the final value to 5 digits after the decimal point (see #4124)
            return parseFloat(alignValue.toFixed(5));
        },

        _valueMin: function () {
            return this.options.min;
        },

        _valueMax: function () {
            return this.options.max;
        },

        _refreshValue: function () {
            var lastValPercent, valPercent, value, valueMin, valueMax,
                oRange = this.options.range,
                o = this.options,
                that = this,
                animate = (!this._animateOff) ? o.animate : false,
                _set = {};

            if (this.options.values && this.options.values.length) {
                this.handles.each(function (i) {
                    valPercent = (that.values(i) - that._valueMin()) / (that._valueMax() - that._valueMin()) * 100;
                    _set[that.orientation === "horizontal" ? "left" : "bottom"] = valPercent + "%";
                    $(this).stop(1, 1)[animate ? "animate" : "css"](_set, o.animate);
                    if (that.options.range === true) {
                        if (that.orientation === "horizontal") {
                            if (i === 0) {
                                that.range.stop(1, 1)[animate ? "animate" : "css"]({ left: valPercent + "%" }, o.animate);
                            }
                            if (i === 1) {
                                that.range[animate ? "animate" : "css"]({ width: (valPercent - lastValPercent) + "%" }, { queue: false, duration: o.animate });
                            }
                        } else {
                            if (i === 0) {
                                that.range.stop(1, 1)[animate ? "animate" : "css"]({ bottom: (valPercent) + "%" }, o.animate);
                            }
                            if (i === 1) {
                                that.range[animate ? "animate" : "css"]({ height: (valPercent - lastValPercent) + "%" }, { queue: false, duration: o.animate });
                            }
                        }
                    }
                    lastValPercent = valPercent;
                });
            } else {
                value = this.value();
                valueMin = this._valueMin();
                valueMax = this._valueMax();
                valPercent = (valueMax !== valueMin) ?
                    (value - valueMin) / (valueMax - valueMin) * 100 :
                    0;
                _set[this.orientation === "horizontal" ? "left" : "bottom"] = valPercent + "%";
                this.handle.stop(1, 1)[animate ? "animate" : "css"](_set, o.animate);

                if (oRange === "min" && this.orientation === "horizontal") {
                    this.range.stop(1, 1)[animate ? "animate" : "css"]({ width: valPercent + "%" }, o.animate);
                }
                if (oRange === "max" && this.orientation === "horizontal") {
                    this.range[animate ? "animate" : "css"]({ width: (100 - valPercent) + "%" }, { queue: false, duration: o.animate });
                }
                if (oRange === "min" && this.orientation === "vertical") {
                    this.range.stop(1, 1)[animate ? "animate" : "css"]({ height: valPercent + "%" }, o.animate);
                }
                if (oRange === "max" && this.orientation === "vertical") {
                    this.range[animate ? "animate" : "css"]({ height: (100 - valPercent) + "%" }, { queue: false, duration: o.animate });
                }
            }
        },

        _handleEvents: {
            keydown: function (event) {
                var allowed, curVal, newVal, step,
                    index = $(event.target).data("ui-slider-handle-index");

                switch (event.keyCode) {
                    case $.ui.keyCode.HOME:
                    case $.ui.keyCode.END:
                    case $.ui.keyCode.PAGE_UP:
                    case $.ui.keyCode.PAGE_DOWN:
                    case $.ui.keyCode.UP:
                    case $.ui.keyCode.RIGHT:
                    case $.ui.keyCode.DOWN:
                    case $.ui.keyCode.LEFT:
                        event.preventDefault();
                        if (!this._keySliding) {
                            this._keySliding = true;
                            $(event.target).addClass("ui-state-active");
                            allowed = this._start(event, index);
                            if (allowed === false) {
                                return;
                            }
                        }
                        break;
                }

                step = this.options.step;
                if (this.options.values && this.options.values.length) {
                    curVal = newVal = this.values(index);
                } else {
                    curVal = newVal = this.value();
                }

                switch (event.keyCode) {
                    case $.ui.keyCode.HOME:
                        newVal = this._valueMin();
                        break;
                    case $.ui.keyCode.END:
                        newVal = this._valueMax();
                        break;
                    case $.ui.keyCode.PAGE_UP:
                        newVal = this._trimAlignValue(curVal + ((this._valueMax() - this._valueMin()) / numPages));
                        break;
                    case $.ui.keyCode.PAGE_DOWN:
                        newVal = this._trimAlignValue(curVal - ((this._valueMax() - this._valueMin()) / numPages));
                        break;
                    case $.ui.keyCode.UP:
                    case $.ui.keyCode.RIGHT:
                        if (curVal === this._valueMax()) {
                            return;
                        }
                        newVal = this._trimAlignValue(curVal + step);
                        break;
                    case $.ui.keyCode.DOWN:
                    case $.ui.keyCode.LEFT:
                        if (curVal === this._valueMin()) {
                            return;
                        }
                        newVal = this._trimAlignValue(curVal - step);
                        break;
                }

                this._slide(event, index, newVal);
            },
            click: function (event) {
                event.preventDefault();
            },
            keyup: function (event) {
                var index = $(event.target).data("ui-slider-handle-index");

                if (this._keySliding) {
                    this._keySliding = false;
                    this._stop(event, index);
                    this._change(event, index);
                    $(event.target).removeClass("ui-state-active");
                }
            }
        }

    });

}(jQuery));
(function ($, undefined) {

    function isOverAxis(x, reference, size) {
        return (x > reference) && (x < (reference + size));
    }

    function isFloating(item) {
        return (/left|right/).test(item.css("float")) || (/inline|table-cell/).test(item.css("display"));
    }

    $.widget("ui.sortable", $.ui.mouse, {
        version: "1.10.4",
        widgetEventPrefix: "sort",
        ready: false,
        options: {
            appendTo: "parent",
            axis: false,
            connectWith: false,
            containment: false,
            cursor: "auto",
            cursorAt: false,
            dropOnEmpty: true,
            forcePlaceholderSize: false,
            forceHelperSize: false,
            grid: false,
            handle: false,
            helper: "original",
            items: "> *",
            opacity: false,
            placeholder: false,
            revert: false,
            scroll: true,
            scrollSensitivity: 20,
            scrollSpeed: 20,
            scope: "default",
            tolerance: "intersect",
            zIndex: 1000,

            // callbacks
            activate: null,
            beforeStop: null,
            change: null,
            deactivate: null,
            out: null,
            over: null,
            receive: null,
            remove: null,
            sort: null,
            start: null,
            stop: null,
            update: null
        },
        _create: function () {

            var o = this.options;
            this.containerCache = {};
            this.element.addClass("ui-sortable");

            //Get the items
            this.refresh();

            //Let's determine if the items are being displayed horizontally
            this.floating = this.items.length ? o.axis === "x" || isFloating(this.items[0].item) : false;

            //Let's determine the parent's offset
            this.offset = this.element.offset();

            //Initialize mouse events for interaction
            this._mouseInit();

            //We're ready to go
            this.ready = true;

        },

        _destroy: function () {
            this.element
                .removeClass("ui-sortable ui-sortable-disabled");
            this._mouseDestroy();

            for (var i = this.items.length - 1; i >= 0; i--) {
                this.items[i].item.removeData(this.widgetName + "-item");
            }

            return this;
        },

        _setOption: function (key, value) {
            if (key === "disabled") {
                this.options[key] = value;

                this.widget().toggleClass("ui-sortable-disabled", !!value);
            } else {
                // Don't call widget base _setOption for disable as it adds ui-state-disabled class
                $.Widget.prototype._setOption.apply(this, arguments);
            }
        },

        _mouseCapture: function (event, overrideHandle) {
            var currentItem = null,
                validHandle = false,
                that = this;

            if (this.reverting) {
                return false;
            }

            if (this.options.disabled || this.options.type === "static") {
                return false;
            }

            //We have to refresh the items data once first
            this._refreshItems(event);

            //Find out if the clicked node (or one of its parents) is a actual item in this.items
            $(event.target).parents().each(function () {
                if ($.data(this, that.widgetName + "-item") === that) {
                    currentItem = $(this);
                    return false;
                }
            });
            if ($.data(event.target, that.widgetName + "-item") === that) {
                currentItem = $(event.target);
            }

            if (!currentItem) {
                return false;
            }
            if (this.options.handle && !overrideHandle) {
                $(this.options.handle, currentItem).find("*").addBack().each(function () {
                    if (this === event.target) {
                        validHandle = true;
                    }
                });
                if (!validHandle) {
                    return false;
                }
            }

            this.currentItem = currentItem;
            this._removeCurrentsFromItems();
            return true;

        },

        _mouseStart: function (event, overrideHandle, noActivation) {

            var i, body,
                o = this.options;

            this.currentContainer = this;

            //We only need to call refreshPositions, because the refreshItems call has been moved to mouseCapture
            this.refreshPositions();

            //Create and append the visible helper
            this.helper = this._createHelper(event);

            //Cache the helper size
            this._cacheHelperProportions();

            /*
             * - Position generation -
             * This block generates everything position related - it's the core of draggables.
             */

            //Cache the margins of the original element
            this._cacheMargins();

            //Get the next scrolling parent
            this.scrollParent = this.helper.scrollParent();

            //The element's absolute position on the page minus margins
            this.offset = this.currentItem.offset();
            this.offset = {
                top: this.offset.top - this.margins.top,
                left: this.offset.left - this.margins.left
            };

            $.extend(this.offset, {
                click: { //Where the click happened, relative to the element
                    left: event.pageX - this.offset.left,
                    top: event.pageY - this.offset.top
                },
                parent: this._getParentOffset(),
                relative: this._getRelativeOffset() //This is a relative to absolute position minus the actual position calculation - only used for relative positioned helper
            });

            // Only after we got the offset, we can change the helper's position to absolute
            // TODO: Still need to figure out a way to make relative sorting possible
            this.helper.css("position", "absolute");
            this.cssPosition = this.helper.css("position");

            //Generate the original position
            this.originalPosition = this._generatePosition(event);
            this.originalPageX = event.pageX;
            this.originalPageY = event.pageY;

            //Adjust the mouse offset relative to the helper if "cursorAt" is supplied
            (o.cursorAt && this._adjustOffsetFromHelper(o.cursorAt));

            //Cache the former DOM position
            this.domPosition = { prev: this.currentItem.prev()[0], parent: this.currentItem.parent()[0] };

            //If the helper is not the original, hide the original so it's not playing any role during the drag, won't cause anything bad this way
            if (this.helper[0] !== this.currentItem[0]) {
                this.currentItem.hide();
            }

            //Create the placeholder
            this._createPlaceholder();

            //Set a containment if given in the options
            if (o.containment) {
                this._setContainment();
            }

            if (o.cursor && o.cursor !== "auto") { // cursor option
                body = this.document.find("body");

                // support: IE
                this.storedCursor = body.css("cursor");
                body.css("cursor", o.cursor);

                this.storedStylesheet = $("<style>*{ cursor: " + o.cursor + " !important; }</style>").appendTo(body);
            }

            if (o.opacity) { // opacity option
                if (this.helper.css("opacity")) {
                    this._storedOpacity = this.helper.css("opacity");
                }
                this.helper.css("opacity", o.opacity);
            }

            if (o.zIndex) { // zIndex option
                if (this.helper.css("zIndex")) {
                    this._storedZIndex = this.helper.css("zIndex");
                }
                this.helper.css("zIndex", o.zIndex);
            }

            //Prepare scrolling
            if (this.scrollParent[0] !== document && this.scrollParent[0].tagName !== "HTML") {
                this.overflowOffset = this.scrollParent.offset();
            }

            //Call callbacks
            this._trigger("start", event, this._uiHash());

            //Recache the helper size
            if (!this._preserveHelperProportions) {
                this._cacheHelperProportions();
            }


            //Post "activate" events to possible containers
            if (!noActivation) {
                for (i = this.containers.length - 1; i >= 0; i--) {
                    this.containers[i]._trigger("activate", event, this._uiHash(this));
                }
            }

            //Prepare possible droppables
            if ($.ui.ddmanager) {
                $.ui.ddmanager.current = this;
            }

            if ($.ui.ddmanager && !o.dropBehaviour) {
                $.ui.ddmanager.prepareOffsets(this, event);
            }

            this.dragging = true;

            this.helper.addClass("ui-sortable-helper");
            this._mouseDrag(event); //Execute the drag once - this causes the helper not to be visible before getting its correct position
            return true;

        },

        _mouseDrag: function (event) {
            var i, item, itemElement, intersection,
                o = this.options,
                scrolled = false;

            //Compute the helpers position
            this.position = this._generatePosition(event);
            this.positionAbs = this._convertPositionTo("absolute");

            if (!this.lastPositionAbs) {
                this.lastPositionAbs = this.positionAbs;
            }

            //Do scrolling
            if (this.options.scroll) {
                if (this.scrollParent[0] !== document && this.scrollParent[0].tagName !== "HTML") {

                    if ((this.overflowOffset.top + this.scrollParent[0].offsetHeight) - event.pageY < o.scrollSensitivity) {
                        this.scrollParent[0].scrollTop = scrolled = this.scrollParent[0].scrollTop + o.scrollSpeed;
                    } else if (event.pageY - this.overflowOffset.top < o.scrollSensitivity) {
                        this.scrollParent[0].scrollTop = scrolled = this.scrollParent[0].scrollTop - o.scrollSpeed;
                    }

                    if ((this.overflowOffset.left + this.scrollParent[0].offsetWidth) - event.pageX < o.scrollSensitivity) {
                        this.scrollParent[0].scrollLeft = scrolled = this.scrollParent[0].scrollLeft + o.scrollSpeed;
                    } else if (event.pageX - this.overflowOffset.left < o.scrollSensitivity) {
                        this.scrollParent[0].scrollLeft = scrolled = this.scrollParent[0].scrollLeft - o.scrollSpeed;
                    }

                } else {

                    if (event.pageY - $(document).scrollTop() < o.scrollSensitivity) {
                        scrolled = $(document).scrollTop($(document).scrollTop() - o.scrollSpeed);
                    } else if ($(window).height() - (event.pageY - $(document).scrollTop()) < o.scrollSensitivity) {
                        scrolled = $(document).scrollTop($(document).scrollTop() + o.scrollSpeed);
                    }

                    if (event.pageX - $(document).scrollLeft() < o.scrollSensitivity) {
                        scrolled = $(document).scrollLeft($(document).scrollLeft() - o.scrollSpeed);
                    } else if ($(window).width() - (event.pageX - $(document).scrollLeft()) < o.scrollSensitivity) {
                        scrolled = $(document).scrollLeft($(document).scrollLeft() + o.scrollSpeed);
                    }

                }

                if (scrolled !== false && $.ui.ddmanager && !o.dropBehaviour) {
                    $.ui.ddmanager.prepareOffsets(this, event);
                }
            }

            //Regenerate the absolute position used for position checks
            this.positionAbs = this._convertPositionTo("absolute");

            //Set the helper position
            if (!this.options.axis || this.options.axis !== "y") {
                this.helper[0].style.left = this.position.left + "px";
            }
            if (!this.options.axis || this.options.axis !== "x") {
                this.helper[0].style.top = this.position.top + "px";
            }

            //Rearrange
            for (i = this.items.length - 1; i >= 0; i--) {

                //Cache variables and intersection, continue if no intersection
                item = this.items[i];
                itemElement = item.item[0];
                intersection = this._intersectsWithPointer(item);
                if (!intersection) {
                    continue;
                }

                // Only put the placeholder inside the current Container, skip all
                // items from other containers. This works because when moving
                // an item from one container to another the
                // currentContainer is switched before the placeholder is moved.
                //
                // Without this, moving items in "sub-sortables" can cause
                // the placeholder to jitter beetween the outer and inner container.
                if (item.instance !== this.currentContainer) {
                    continue;
                }

                // cannot intersect with itself
                // no useless actions that have been done before
                // no action if the item moved is the parent of the item checked
                if (itemElement !== this.currentItem[0] &&
                    this.placeholder[intersection === 1 ? "next" : "prev"]()[0] !== itemElement &&
                    !$.contains(this.placeholder[0], itemElement) &&
                    (this.options.type === "semi-dynamic" ? !$.contains(this.element[0], itemElement) : true)
                ) {

                    this.direction = intersection === 1 ? "down" : "up";

                    if (this.options.tolerance === "pointer" || this._intersectsWithSides(item)) {
                        this._rearrange(event, item);
                    } else {
                        break;
                    }

                    this._trigger("change", event, this._uiHash());
                    break;
                }
            }

            //Post events to containers
            this._contactContainers(event);

            //Interconnect with droppables
            if ($.ui.ddmanager) {
                $.ui.ddmanager.drag(this, event);
            }

            //Call callbacks
            this._trigger("sort", event, this._uiHash());

            this.lastPositionAbs = this.positionAbs;
            return false;

        },

        _mouseStop: function (event, noPropagation) {

            if (!event) {
                return;
            }

            //If we are using droppables, inform the manager about the drop
            if ($.ui.ddmanager && !this.options.dropBehaviour) {
                $.ui.ddmanager.drop(this, event);
            }

            if (this.options.revert) {
                var that = this,
                    cur = this.placeholder.offset(),
                    axis = this.options.axis,
                    animation = {};

                if (!axis || axis === "x") {
                    animation.left = cur.left - this.offset.parent.left - this.margins.left + (this.offsetParent[0] === document.body ? 0 : this.offsetParent[0].scrollLeft);
                }
                if (!axis || axis === "y") {
                    animation.top = cur.top - this.offset.parent.top - this.margins.top + (this.offsetParent[0] === document.body ? 0 : this.offsetParent[0].scrollTop);
                }
                this.reverting = true;
                $(this.helper).animate(animation, parseInt(this.options.revert, 10) || 500, function () {
                    that._clear(event);
                });
            } else {
                this._clear(event, noPropagation);
            }

            return false;

        },

        cancel: function () {

            if (this.dragging) {

                this._mouseUp({ target: null });

                if (this.options.helper === "original") {
                    this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper");
                } else {
                    this.currentItem.show();
                }

                //Post deactivating events to containers
                for (var i = this.containers.length - 1; i >= 0; i--) {
                    this.containers[i]._trigger("deactivate", null, this._uiHash(this));
                    if (this.containers[i].containerCache.over) {
                        this.containers[i]._trigger("out", null, this._uiHash(this));
                        this.containers[i].containerCache.over = 0;
                    }
                }

            }

            if (this.placeholder) {
                //$(this.placeholder[0]).remove(); would have been the jQuery way - unfortunately, it unbinds ALL events from the original node!
                if (this.placeholder[0].parentNode) {
                    this.placeholder[0].parentNode.removeChild(this.placeholder[0]);
                }
                if (this.options.helper !== "original" && this.helper && this.helper[0].parentNode) {
                    this.helper.remove();
                }

                $.extend(this, {
                    helper: null,
                    dragging: false,
                    reverting: false,
                    _noFinalSort: null
                });

                if (this.domPosition.prev) {
                    $(this.domPosition.prev).after(this.currentItem);
                } else {
                    $(this.domPosition.parent).prepend(this.currentItem);
                }
            }

            return this;

        },

        serialize: function (o) {

            var items = this._getItemsAsjQuery(o && o.connected),
                str = [];
            o = o || {};

            $(items).each(function () {
                var res = ($(o.item || this).attr(o.attribute || "id") || "").match(o.expression || (/(.+)[\-=_](.+)/));
                if (res) {
                    str.push((o.key || res[1] + "[]") + "=" + (o.key && o.expression ? res[1] : res[2]));
                }
            });

            if (!str.length && o.key) {
                str.push(o.key + "=");
            }

            return str.join("&");

        },

        toArray: function (o) {

            var items = this._getItemsAsjQuery(o && o.connected),
                ret = [];

            o = o || {};

            items.each(function () { ret.push($(o.item || this).attr(o.attribute || "id") || ""); });
            return ret;

        },

        /* Be careful with the following core functions */
        _intersectsWith: function (item) {

            var x1 = this.positionAbs.left,
                x2 = x1 + this.helperProportions.width,
                y1 = this.positionAbs.top,
                y2 = y1 + this.helperProportions.height,
                l = item.left,
                r = l + item.width,
                t = item.top,
                b = t + item.height,
                dyClick = this.offset.click.top,
                dxClick = this.offset.click.left,
                isOverElementHeight = (this.options.axis === "x") || ((y1 + dyClick) > t && (y1 + dyClick) < b),
                isOverElementWidth = (this.options.axis === "y") || ((x1 + dxClick) > l && (x1 + dxClick) < r),
                isOverElement = isOverElementHeight && isOverElementWidth;

            if (this.options.tolerance === "pointer" ||
                this.options.forcePointerForContainers ||
                (this.options.tolerance !== "pointer" && this.helperProportions[this.floating ? "width" : "height"] > item[this.floating ? "width" : "height"])
            ) {
                return isOverElement;
            } else {

                return (l < x1 + (this.helperProportions.width / 2) && // Right Half
                    x2 - (this.helperProportions.width / 2) < r && // Left Half
                    t < y1 + (this.helperProportions.height / 2) && // Bottom Half
                    y2 - (this.helperProportions.height / 2) < b); // Top Half

            }
        },

        _intersectsWithPointer: function (item) {

            var isOverElementHeight = (this.options.axis === "x") || isOverAxis(this.positionAbs.top + this.offset.click.top, item.top, item.height),
                isOverElementWidth = (this.options.axis === "y") || isOverAxis(this.positionAbs.left + this.offset.click.left, item.left, item.width),
                isOverElement = isOverElementHeight && isOverElementWidth,
                verticalDirection = this._getDragVerticalDirection(),
                horizontalDirection = this._getDragHorizontalDirection();

            if (!isOverElement) {
                return false;
            }

            return this.floating ?
                (((horizontalDirection && horizontalDirection === "right") || verticalDirection === "down") ? 2 : 1)
                : (verticalDirection && (verticalDirection === "down" ? 2 : 1));

        },

        _intersectsWithSides: function (item) {

            var isOverBottomHalf = isOverAxis(this.positionAbs.top + this.offset.click.top, item.top + (item.height / 2), item.height),
                isOverRightHalf = isOverAxis(this.positionAbs.left + this.offset.click.left, item.left + (item.width / 2), item.width),
                verticalDirection = this._getDragVerticalDirection(),
                horizontalDirection = this._getDragHorizontalDirection();

            if (this.floating && horizontalDirection) {
                return ((horizontalDirection === "right" && isOverRightHalf) || (horizontalDirection === "left" && !isOverRightHalf));
            } else {
                return verticalDirection && ((verticalDirection === "down" && isOverBottomHalf) || (verticalDirection === "up" && !isOverBottomHalf));
            }

        },

        _getDragVerticalDirection: function () {
            var delta = this.positionAbs.top - this.lastPositionAbs.top;
            return delta !== 0 && (delta > 0 ? "down" : "up");
        },

        _getDragHorizontalDirection: function () {
            var delta = this.positionAbs.left - this.lastPositionAbs.left;
            return delta !== 0 && (delta > 0 ? "right" : "left");
        },

        refresh: function (event) {
            this._refreshItems(event);
            this.refreshPositions();
            return this;
        },

        _connectWith: function () {
            var options = this.options;
            return options.connectWith.constructor === String ? [options.connectWith] : options.connectWith;
        },

        _getItemsAsjQuery: function (connected) {

            var i, j, cur, inst,
                items = [],
                queries = [],
                connectWith = this._connectWith();

            if (connectWith && connected) {
                for (i = connectWith.length - 1; i >= 0; i--) {
                    cur = $(connectWith[i]);
                    for (j = cur.length - 1; j >= 0; j--) {
                        inst = $.data(cur[j], this.widgetFullName);
                        if (inst && inst !== this && !inst.options.disabled) {
                            queries.push([$.isFunction(inst.options.items) ? inst.options.items.call(inst.element) : $(inst.options.items, inst.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"), inst]);
                        }
                    }
                }
            }

            queries.push([$.isFunction(this.options.items) ? this.options.items.call(this.element, null, { options: this.options, item: this.currentItem }) : $(this.options.items, this.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"), this]);

            function addItems() {
                items.push(this);
            }
            for (i = queries.length - 1; i >= 0; i--) {
                queries[i][0].each(addItems);
            }

            return $(items);

        },

        _removeCurrentsFromItems: function () {

            var list = this.currentItem.find(":data(" + this.widgetName + "-item)");

            this.items = $.grep(this.items, function (item) {
                for (var j = 0; j < list.length; j++) {
                    if (list[j] === item.item[0]) {
                        return false;
                    }
                }
                return true;
            });

        },

        _refreshItems: function (event) {

            this.items = [];
            this.containers = [this];

            var i, j, cur, inst, targetData, _queries, item, queriesLength,
                items = this.items,
                queries = [[$.isFunction(this.options.items) ? this.options.items.call(this.element[0], event, { item: this.currentItem }) : $(this.options.items, this.element), this]],
                connectWith = this._connectWith();

            if (connectWith && this.ready) { //Shouldn't be run the first time through due to massive slow-down
                for (i = connectWith.length - 1; i >= 0; i--) {
                    cur = $(connectWith[i]);
                    for (j = cur.length - 1; j >= 0; j--) {
                        inst = $.data(cur[j], this.widgetFullName);
                        if (inst && inst !== this && !inst.options.disabled) {
                            queries.push([$.isFunction(inst.options.items) ? inst.options.items.call(inst.element[0], event, { item: this.currentItem }) : $(inst.options.items, inst.element), inst]);
                            this.containers.push(inst);
                        }
                    }
                }
            }

            for (i = queries.length - 1; i >= 0; i--) {
                targetData = queries[i][1];
                _queries = queries[i][0];

                for (j = 0, queriesLength = _queries.length; j < queriesLength; j++) {
                    item = $(_queries[j]);

                    item.data(this.widgetName + "-item", targetData); // Data for target checking (mouse manager)

                    items.push({
                        item: item,
                        instance: targetData,
                        width: 0, height: 0,
                        left: 0, top: 0
                    });
                }
            }

        },

        refreshPositions: function (fast) {

            //This has to be redone because due to the item being moved out/into the offsetParent, the offsetParent's position will change
            if (this.offsetParent && this.helper) {
                this.offset.parent = this._getParentOffset();
            }

            var i, item, t, p;

            for (i = this.items.length - 1; i >= 0; i--) {
                item = this.items[i];

                //We ignore calculating positions of all connected containers when we're not over them
                if (item.instance !== this.currentContainer && this.currentContainer && item.item[0] !== this.currentItem[0]) {
                    continue;
                }

                t = this.options.toleranceElement ? $(this.options.toleranceElement, item.item) : item.item;

                if (!fast) {
                    item.width = t.outerWidth();
                    item.height = t.outerHeight();
                }

                p = t.offset();
                item.left = p.left;
                item.top = p.top;
            }

            if (this.options.custom && this.options.custom.refreshContainers) {
                this.options.custom.refreshContainers.call(this);
            } else {
                for (i = this.containers.length - 1; i >= 0; i--) {
                    p = this.containers[i].element.offset();
                    this.containers[i].containerCache.left = p.left;
                    this.containers[i].containerCache.top = p.top;
                    this.containers[i].containerCache.width = this.containers[i].element.outerWidth();
                    this.containers[i].containerCache.height = this.containers[i].element.outerHeight();
                }
            }

            return this;
        },

        _createPlaceholder: function (that) {
            that = that || this;
            var className,
                o = that.options;

            if (!o.placeholder || o.placeholder.constructor === String) {
                className = o.placeholder;
                o.placeholder = {
                    element: function () {

                        var nodeName = that.currentItem[0].nodeName.toLowerCase(),
                            element = $("<" + nodeName + ">", that.document[0])
                                .addClass(className || that.currentItem[0].className + " ui-sortable-placeholder")
                                .removeClass("ui-sortable-helper");

                        if (nodeName === "tr") {
                            that.currentItem.children().each(function () {
                                $("<td>&#160;</td>", that.document[0])
                                    .attr("colspan", $(this).attr("colspan") || 1)
                                    .appendTo(element);
                            });
                        } else if (nodeName === "img") {
                            element.attr("src", that.currentItem.attr("src"));
                        }

                        if (!className) {
                            element.css("visibility", "hidden");
                        }

                        return element;
                    },
                    update: function (container, p) {

                        // 1. If a className is set as 'placeholder option, we don't force sizes - the class is responsible for that
                        // 2. The option 'forcePlaceholderSize can be enabled to force it even if a class name is specified
                        if (className && !o.forcePlaceholderSize) {
                            return;
                        }

                        //If the element doesn't have a actual height by itself (without styles coming from a stylesheet), it receives the inline height from the dragged item
                        if (!p.height()) { p.height(that.currentItem.innerHeight() - parseInt(that.currentItem.css("paddingTop") || 0, 10) - parseInt(that.currentItem.css("paddingBottom") || 0, 10)); }
                        if (!p.width()) { p.width(that.currentItem.innerWidth() - parseInt(that.currentItem.css("paddingLeft") || 0, 10) - parseInt(that.currentItem.css("paddingRight") || 0, 10)); }
                    }
                };
            }

            //Create the placeholder
            that.placeholder = $(o.placeholder.element.call(that.element, that.currentItem));

            //Append it after the actual current item
            that.currentItem.after(that.placeholder);

            //Update the size of the placeholder (TODO: Logic to fuzzy, see line 316/317)
            o.placeholder.update(that, that.placeholder);

        },

        _contactContainers: function (event) {
            var i, j, dist, itemWithLeastDistance, posProperty, sizeProperty, base, cur, nearBottom, floating,
                innermostContainer = null,
                innermostIndex = null;

            // get innermost container that intersects with item
            for (i = this.containers.length - 1; i >= 0; i--) {

                // never consider a container that's located within the item itself
                if ($.contains(this.currentItem[0], this.containers[i].element[0])) {
                    continue;
                }

                if (this._intersectsWith(this.containers[i].containerCache)) {

                    // if we've already found a container and it's more "inner" than this, then continue
                    if (innermostContainer && $.contains(this.containers[i].element[0], innermostContainer.element[0])) {
                        continue;
                    }

                    innermostContainer = this.containers[i];
                    innermostIndex = i;

                } else {
                    // container doesn't intersect. trigger "out" event if necessary
                    if (this.containers[i].containerCache.over) {
                        this.containers[i]._trigger("out", event, this._uiHash(this));
                        this.containers[i].containerCache.over = 0;
                    }
                }

            }

            // if no intersecting containers found, return
            if (!innermostContainer) {
                return;
            }

            // move the item into the container if it's not there already
            if (this.containers.length === 1) {
                if (!this.containers[innermostIndex].containerCache.over) {
                    this.containers[innermostIndex]._trigger("over", event, this._uiHash(this));
                    this.containers[innermostIndex].containerCache.over = 1;
                }
            } else {

                //When entering a new container, we will find the item with the least distance and append our item near it
                dist = 10000;
                itemWithLeastDistance = null;
                floating = innermostContainer.floating || isFloating(this.currentItem);
                posProperty = floating ? "left" : "top";
                sizeProperty = floating ? "width" : "height";
                base = this.positionAbs[posProperty] + this.offset.click[posProperty];
                for (j = this.items.length - 1; j >= 0; j--) {
                    if (!$.contains(this.containers[innermostIndex].element[0], this.items[j].item[0])) {
                        continue;
                    }
                    if (this.items[j].item[0] === this.currentItem[0]) {
                        continue;
                    }
                    if (floating && !isOverAxis(this.positionAbs.top + this.offset.click.top, this.items[j].top, this.items[j].height)) {
                        continue;
                    }
                    cur = this.items[j].item.offset()[posProperty];
                    nearBottom = false;
                    if (Math.abs(cur - base) > Math.abs(cur + this.items[j][sizeProperty] - base)) {
                        nearBottom = true;
                        cur += this.items[j][sizeProperty];
                    }

                    if (Math.abs(cur - base) < dist) {
                        dist = Math.abs(cur - base); itemWithLeastDistance = this.items[j];
                        this.direction = nearBottom ? "up" : "down";
                    }
                }

                //Check if dropOnEmpty is enabled
                if (!itemWithLeastDistance && !this.options.dropOnEmpty) {
                    return;
                }

                if (this.currentContainer === this.containers[innermostIndex]) {
                    return;
                }

                itemWithLeastDistance ? this._rearrange(event, itemWithLeastDistance, null, true) : this._rearrange(event, null, this.containers[innermostIndex].element, true);
                this._trigger("change", event, this._uiHash());
                this.containers[innermostIndex]._trigger("change", event, this._uiHash(this));
                this.currentContainer = this.containers[innermostIndex];

                //Update the placeholder
                this.options.placeholder.update(this.currentContainer, this.placeholder);

                this.containers[innermostIndex]._trigger("over", event, this._uiHash(this));
                this.containers[innermostIndex].containerCache.over = 1;
            }


        },

        _createHelper: function (event) {

            var o = this.options,
                helper = $.isFunction(o.helper) ? $(o.helper.apply(this.element[0], [event, this.currentItem])) : (o.helper === "clone" ? this.currentItem.clone() : this.currentItem);

            //Add the helper to the DOM if that didn't happen already
            if (!helper.parents("body").length) {
                $(o.appendTo !== "parent" ? o.appendTo : this.currentItem[0].parentNode)[0].appendChild(helper[0]);
            }

            if (helper[0] === this.currentItem[0]) {
                this._storedCSS = { width: this.currentItem[0].style.width, height: this.currentItem[0].style.height, position: this.currentItem.css("position"), top: this.currentItem.css("top"), left: this.currentItem.css("left") };
            }

            if (!helper[0].style.width || o.forceHelperSize) {
                helper.width(this.currentItem.width());
            }
            if (!helper[0].style.height || o.forceHelperSize) {
                helper.height(this.currentItem.height());
            }

            return helper;

        },

        _adjustOffsetFromHelper: function (obj) {
            if (typeof obj === "string") {
                obj = obj.split(" ");
            }
            if ($.isArray(obj)) {
                obj = { left: +obj[0], top: +obj[1] || 0 };
            }
            if ("left" in obj) {
                this.offset.click.left = obj.left + this.margins.left;
            }
            if ("right" in obj) {
                this.offset.click.left = this.helperProportions.width - obj.right + this.margins.left;
            }
            if ("top" in obj) {
                this.offset.click.top = obj.top + this.margins.top;
            }
            if ("bottom" in obj) {
                this.offset.click.top = this.helperProportions.height - obj.bottom + this.margins.top;
            }
        },

        _getParentOffset: function () {


            //Get the offsetParent and cache its position
            this.offsetParent = this.helper.offsetParent();
            var po = this.offsetParent.offset();

            // This is a special case where we need to modify a offset calculated on start, since the following happened:
            // 1. The position of the helper is absolute, so it's position is calculated based on the next positioned parent
            // 2. The actual offset parent is a child of the scroll parent, and the scroll parent isn't the document, which means that
            //    the scroll is included in the initial calculation of the offset of the parent, and never recalculated upon drag
            if (this.cssPosition === "absolute" && this.scrollParent[0] !== document && $.contains(this.scrollParent[0], this.offsetParent[0])) {
                po.left += this.scrollParent.scrollLeft();
                po.top += this.scrollParent.scrollTop();
            }

            // This needs to be actually done for all browsers, since pageX/pageY includes this information
            // with an ugly IE fix
            if (this.offsetParent[0] === document.body || (this.offsetParent[0].tagName && this.offsetParent[0].tagName.toLowerCase() === "html" && $.ui.ie)) {
                po = { top: 0, left: 0 };
            }

            return {
                top: po.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0),
                left: po.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0)
            };

        },

        _getRelativeOffset: function () {

            if (this.cssPosition === "relative") {
                var p = this.currentItem.position();
                return {
                    top: p.top - (parseInt(this.helper.css("top"), 10) || 0) + this.scrollParent.scrollTop(),
                    left: p.left - (parseInt(this.helper.css("left"), 10) || 0) + this.scrollParent.scrollLeft()
                };
            } else {
                return { top: 0, left: 0 };
            }

        },

        _cacheMargins: function () {
            this.margins = {
                left: (parseInt(this.currentItem.css("marginLeft"), 10) || 0),
                top: (parseInt(this.currentItem.css("marginTop"), 10) || 0)
            };
        },

        _cacheHelperProportions: function () {
            this.helperProportions = {
                width: this.helper.outerWidth(),
                height: this.helper.outerHeight()
            };
        },

        _setContainment: function () {

            var ce, co, over,
                o = this.options;
            if (o.containment === "parent") {
                o.containment = this.helper[0].parentNode;
            }
            if (o.containment === "document" || o.containment === "window") {
                this.containment = [
                    0 - this.offset.relative.left - this.offset.parent.left,
                    0 - this.offset.relative.top - this.offset.parent.top,
                    $(o.containment === "document" ? document : window).width() - this.helperProportions.width - this.margins.left,
                    ($(o.containment === "document" ? document : window).height() || document.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top
                ];
            }

            if (!(/^(document|window|parent)$/).test(o.containment)) {
                ce = $(o.containment)[0];
                co = $(o.containment).offset();
                over = ($(ce).css("overflow") !== "hidden");

                this.containment = [
                    co.left + (parseInt($(ce).css("borderLeftWidth"), 10) || 0) + (parseInt($(ce).css("paddingLeft"), 10) || 0) - this.margins.left,
                    co.top + (parseInt($(ce).css("borderTopWidth"), 10) || 0) + (parseInt($(ce).css("paddingTop"), 10) || 0) - this.margins.top,
                    co.left + (over ? Math.max(ce.scrollWidth, ce.offsetWidth) : ce.offsetWidth) - (parseInt($(ce).css("borderLeftWidth"), 10) || 0) - (parseInt($(ce).css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left,
                    co.top + (over ? Math.max(ce.scrollHeight, ce.offsetHeight) : ce.offsetHeight) - (parseInt($(ce).css("borderTopWidth"), 10) || 0) - (parseInt($(ce).css("paddingBottom"), 10) || 0) - this.helperProportions.height - this.margins.top
                ];
            }

        },

        _convertPositionTo: function (d, pos) {

            if (!pos) {
                pos = this.position;
            }
            var mod = d === "absolute" ? 1 : -1,
                scroll = this.cssPosition === "absolute" && !(this.scrollParent[0] !== document && $.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent,
                scrollIsRootNode = (/(html|body)/i).test(scroll[0].tagName);

            return {
                top: (
                    pos.top +																// The absolute mouse position
                    this.offset.relative.top * mod +										// Only for relative positioned nodes: Relative offset from element to offset parent
                    this.offset.parent.top * mod -											// The offsetParent's offset without borders (offset + border)
                    ((this.cssPosition === "fixed" ? -this.scrollParent.scrollTop() : (scrollIsRootNode ? 0 : scroll.scrollTop())) * mod)
                ),
                left: (
                    pos.left +																// The absolute mouse position
                    this.offset.relative.left * mod +										// Only for relative positioned nodes: Relative offset from element to offset parent
                    this.offset.parent.left * mod -										// The offsetParent's offset without borders (offset + border)
                    ((this.cssPosition === "fixed" ? -this.scrollParent.scrollLeft() : scrollIsRootNode ? 0 : scroll.scrollLeft()) * mod)
                )
            };

        },

        _generatePosition: function (event) {

            var top, left,
                o = this.options,
                pageX = event.pageX,
                pageY = event.pageY,
                scroll = this.cssPosition === "absolute" && !(this.scrollParent[0] !== document && $.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent, scrollIsRootNode = (/(html|body)/i).test(scroll[0].tagName);

            // This is another very weird special case that only happens for relative elements:
            // 1. If the css position is relative
            // 2. and the scroll parent is the document or similar to the offset parent
            // we have to refresh the relative offset during the scroll so there are no jumps
            if (this.cssPosition === "relative" && !(this.scrollParent[0] !== document && this.scrollParent[0] !== this.offsetParent[0])) {
                this.offset.relative = this._getRelativeOffset();
            }

            /*
             * - Position constraining -
             * Constrain the position to a mix of grid, containment.
             */

            if (this.originalPosition) { //If we are not dragging yet, we won't check for options

                if (this.containment) {
                    if (event.pageX - this.offset.click.left < this.containment[0]) {
                        pageX = this.containment[0] + this.offset.click.left;
                    }
                    if (event.pageY - this.offset.click.top < this.containment[1]) {
                        pageY = this.containment[1] + this.offset.click.top;
                    }
                    if (event.pageX - this.offset.click.left > this.containment[2]) {
                        pageX = this.containment[2] + this.offset.click.left;
                    }
                    if (event.pageY - this.offset.click.top > this.containment[3]) {
                        pageY = this.containment[3] + this.offset.click.top;
                    }
                }

                if (o.grid) {
                    top = this.originalPageY + Math.round((pageY - this.originalPageY) / o.grid[1]) * o.grid[1];
                    pageY = this.containment ? ((top - this.offset.click.top >= this.containment[1] && top - this.offset.click.top <= this.containment[3]) ? top : ((top - this.offset.click.top >= this.containment[1]) ? top - o.grid[1] : top + o.grid[1])) : top;

                    left = this.originalPageX + Math.round((pageX - this.originalPageX) / o.grid[0]) * o.grid[0];
                    pageX = this.containment ? ((left - this.offset.click.left >= this.containment[0] && left - this.offset.click.left <= this.containment[2]) ? left : ((left - this.offset.click.left >= this.containment[0]) ? left - o.grid[0] : left + o.grid[0])) : left;
                }

            }

            return {
                top: (
                    pageY -																// The absolute mouse position
                    this.offset.click.top -													// Click offset (relative to the element)
                    this.offset.relative.top -											// Only for relative positioned nodes: Relative offset from element to offset parent
                    this.offset.parent.top +												// The offsetParent's offset without borders (offset + border)
                    ((this.cssPosition === "fixed" ? -this.scrollParent.scrollTop() : (scrollIsRootNode ? 0 : scroll.scrollTop())))
                ),
                left: (
                    pageX -																// The absolute mouse position
                    this.offset.click.left -												// Click offset (relative to the element)
                    this.offset.relative.left -											// Only for relative positioned nodes: Relative offset from element to offset parent
                    this.offset.parent.left +												// The offsetParent's offset without borders (offset + border)
                    ((this.cssPosition === "fixed" ? -this.scrollParent.scrollLeft() : scrollIsRootNode ? 0 : scroll.scrollLeft()))
                )
            };

        },

        _rearrange: function (event, i, a, hardRefresh) {

            a ? a[0].appendChild(this.placeholder[0]) : i.item[0].parentNode.insertBefore(this.placeholder[0], (this.direction === "down" ? i.item[0] : i.item[0].nextSibling));

            //Various things done here to improve the performance:
            // 1. we create a setTimeout, that calls refreshPositions
            // 2. on the instance, we have a counter variable, that get's higher after every append
            // 3. on the local scope, we copy the counter variable, and check in the timeout, if it's still the same
            // 4. this lets only the last addition to the timeout stack through
            this.counter = this.counter ? ++this.counter : 1;
            var counter = this.counter;

            this._delay(function () {
                if (counter === this.counter) {
                    this.refreshPositions(!hardRefresh); //Precompute after each DOM insertion, NOT on mousemove
                }
            });

        },

        _clear: function (event, noPropagation) {

            this.reverting = false;
            // We delay all events that have to be triggered to after the point where the placeholder has been removed and
            // everything else normalized again
            var i,
                delayedTriggers = [];

            // We first have to update the dom position of the actual currentItem
            // Note: don't do it if the current item is already removed (by a user), or it gets reappended (see #4088)
            if (!this._noFinalSort && this.currentItem.parent().length) {
                this.placeholder.before(this.currentItem);
            }
            this._noFinalSort = null;

            if (this.helper[0] === this.currentItem[0]) {
                for (i in this._storedCSS) {
                    if (this._storedCSS[i] === "auto" || this._storedCSS[i] === "static") {
                        this._storedCSS[i] = "";
                    }
                }
                this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper");
            } else {
                this.currentItem.show();
            }

            if (this.fromOutside && !noPropagation) {
                delayedTriggers.push(function (event) { this._trigger("receive", event, this._uiHash(this.fromOutside)); });
            }
            if ((this.fromOutside || this.domPosition.prev !== this.currentItem.prev().not(".ui-sortable-helper")[0] || this.domPosition.parent !== this.currentItem.parent()[0]) && !noPropagation) {
                delayedTriggers.push(function (event) { this._trigger("update", event, this._uiHash()); }); //Trigger update callback if the DOM position has changed
            }

            // Check if the items Container has Changed and trigger appropriate
            // events.
            if (this !== this.currentContainer) {
                if (!noPropagation) {
                    delayedTriggers.push(function (event) { this._trigger("remove", event, this._uiHash()); });
                    delayedTriggers.push((function (c) { return function (event) { c._trigger("receive", event, this._uiHash(this)); }; }).call(this, this.currentContainer));
                    delayedTriggers.push((function (c) { return function (event) { c._trigger("update", event, this._uiHash(this)); }; }).call(this, this.currentContainer));
                }
            }


            //Post events to containers
            function delayEvent(type, instance, container) {
                return function (event) {
                    container._trigger(type, event, instance._uiHash(instance));
                };
            }
            for (i = this.containers.length - 1; i >= 0; i--) {
                if (!noPropagation) {
                    delayedTriggers.push(delayEvent("deactivate", this, this.containers[i]));
                }
                if (this.containers[i].containerCache.over) {
                    delayedTriggers.push(delayEvent("out", this, this.containers[i]));
                    this.containers[i].containerCache.over = 0;
                }
            }

            //Do what was originally in plugins
            if (this.storedCursor) {
                this.document.find("body").css("cursor", this.storedCursor);
                this.storedStylesheet.remove();
            }
            if (this._storedOpacity) {
                this.helper.css("opacity", this._storedOpacity);
            }
            if (this._storedZIndex) {
                this.helper.css("zIndex", this._storedZIndex === "auto" ? "" : this._storedZIndex);
            }

            this.dragging = false;
            if (this.cancelHelperRemoval) {
                if (!noPropagation) {
                    this._trigger("beforeStop", event, this._uiHash());
                    for (i = 0; i < delayedTriggers.length; i++) {
                        delayedTriggers[i].call(this, event);
                    } //Trigger all delayed events
                    this._trigger("stop", event, this._uiHash());
                }

                this.fromOutside = false;
                return false;
            }

            if (!noPropagation) {
                this._trigger("beforeStop", event, this._uiHash());
            }

            //$(this.placeholder[0]).remove(); would have been the jQuery way - unfortunately, it unbinds ALL events from the original node!
            this.placeholder[0].parentNode.removeChild(this.placeholder[0]);

            if (this.helper[0] !== this.currentItem[0]) {
                this.helper.remove();
            }
            this.helper = null;

            if (!noPropagation) {
                for (i = 0; i < delayedTriggers.length; i++) {
                    delayedTriggers[i].call(this, event);
                } //Trigger all delayed events
                this._trigger("stop", event, this._uiHash());
            }

            this.fromOutside = false;
            return true;

        },

        _trigger: function () {
            if ($.Widget.prototype._trigger.apply(this, arguments) === false) {
                this.cancel();
            }
        },

        _uiHash: function (_inst) {
            var inst = _inst || this;
            return {
                helper: inst.helper,
                placeholder: inst.placeholder || $([]),
                position: inst.position,
                originalPosition: inst.originalPosition,
                offset: inst.positionAbs,
                item: inst.currentItem,
                sender: _inst ? _inst.element : null
            };
        }

    });

})(jQuery);
(function ($) {

    function modifier(fn) {
        return function () {
            var previous = this.element.val();
            fn.apply(this, arguments);
            this._refresh();
            if (previous !== this.element.val()) {
                this._trigger("change");
            }
        };
    }

    $.widget("ui.spinner", {
        version: "1.10.4",
        defaultElement: "<input>",
        widgetEventPrefix: "spin",
        options: {
            culture: null,
            icons: {
                down: "ui-icon-triangle-1-s",
                up: "ui-icon-triangle-1-n"
            },
            incremental: true,
            max: null,
            min: null,
            numberFormat: null,
            page: 10,
            step: 1,

            change: null,
            spin: null,
            start: null,
            stop: null
        },

        _create: function () {
            // handle string values that need to be parsed
            this._setOption("max", this.options.max);
            this._setOption("min", this.options.min);
            this._setOption("step", this.options.step);

            // Only format if there is a value, prevents the field from being marked
            // as invalid in Firefox, see #9573.
            if (this.value() !== "") {
                // Format the value, but don't constrain.
                this._value(this.element.val(), true);
            }

            this._draw();
            this._on(this._events);
            this._refresh();

            // turning off autocomplete prevents the browser from remembering the
            // value when navigating through history, so we re-enable autocomplete
            // if the page is unloaded before the widget is destroyed. #7790
            this._on(this.window, {
                beforeunload: function () {
                    this.element.removeAttr("autocomplete");
                }
            });
        },

        _getCreateOptions: function () {
            var options = {},
                element = this.element;

            $.each(["min", "max", "step"], function (i, option) {
                var value = element.attr(option);
                if (value !== undefined && value.length) {
                    options[option] = value;
                }
            });

            return options;
        },

        _events: {
            keydown: function (event) {
                if (this._start(event) && this._keydown(event)) {
                    event.preventDefault();
                }
            },
            keyup: "_stop",
            focus: function () {
                this.previous = this.element.val();
            },
            blur: function (event) {
                if (this.cancelBlur) {
                    delete this.cancelBlur;
                    return;
                }

                this._stop();
                this._refresh();
                if (this.previous !== this.element.val()) {
                    this._trigger("change", event);
                }
            },
            mousewheel: function (event, delta) {
                if (!delta) {
                    return;
                }
                if (!this.spinning && !this._start(event)) {
                    return false;
                }

                this._spin((delta > 0 ? 1 : -1) * this.options.step, event);
                clearTimeout(this.mousewheelTimer);
                this.mousewheelTimer = this._delay(function () {
                    if (this.spinning) {
                        this._stop(event);
                    }
                }, 100);
                event.preventDefault();
            },
            "mousedown .ui-spinner-button": function (event) {
                var previous;

                // We never want the buttons to have focus; whenever the user is
                // interacting with the spinner, the focus should be on the input.
                // If the input is focused then this.previous is properly set from
                // when the input first received focus. If the input is not focused
                // then we need to set this.previous based on the value before spinning.
                previous = this.element[0] === this.document[0].activeElement ?
                    this.previous : this.element.val();
                function checkFocus() {
                    var isActive = this.element[0] === this.document[0].activeElement;
                    if (!isActive) {
                        this.element.focus();
                        this.previous = previous;
                        // support: IE
                        // IE sets focus asynchronously, so we need to check if focus
                        // moved off of the input because the user clicked on the button.
                        this._delay(function () {
                            this.previous = previous;
                        });
                    }
                }

                // ensure focus is on (or stays on) the text field
                event.preventDefault();
                checkFocus.call(this);

                // support: IE
                // IE doesn't prevent moving focus even with event.preventDefault()
                // so we set a flag to know when we should ignore the blur event
                // and check (again) if focus moved off of the input.
                this.cancelBlur = true;
                this._delay(function () {
                    delete this.cancelBlur;
                    checkFocus.call(this);
                });

                if (this._start(event) === false) {
                    return;
                }

                this._repeat(null, $(event.currentTarget).hasClass("ui-spinner-up") ? 1 : -1, event);
            },
            "mouseup .ui-spinner-button": "_stop",
            "mouseenter .ui-spinner-button": function (event) {
                // button will add ui-state-active if mouse was down while mouseleave and kept down
                if (!$(event.currentTarget).hasClass("ui-state-active")) {
                    return;
                }

                if (this._start(event) === false) {
                    return false;
                }
                this._repeat(null, $(event.currentTarget).hasClass("ui-spinner-up") ? 1 : -1, event);
            },
            // TODO: do we really want to consider this a stop?
            // shouldn't we just stop the repeater and wait until mouseup before
            // we trigger the stop event?
            "mouseleave .ui-spinner-button": "_stop"
        },

        _draw: function () {
            var uiSpinner = this.uiSpinner = this.element
                .addClass("ui-spinner-input")
                .attr("autocomplete", "off")
                .wrap(this._uiSpinnerHtml())
                .parent()
                // add buttons
                .append(this._buttonHtml());

            this.element.attr("role", "spinbutton");

            // button bindings
            this.buttons = uiSpinner.find(".ui-spinner-button")
                .attr("tabIndex", -1)
                .button()
                .removeClass("ui-corner-all");

            // IE 6 doesn't understand height: 50% for the buttons
            // unless the wrapper has an explicit height
            if (this.buttons.height() > Math.ceil(uiSpinner.height() * 0.5) &&
                uiSpinner.height() > 0) {
                uiSpinner.height(uiSpinner.height());
            }

            // disable spinner if element was already disabled
            if (this.options.disabled) {
                this.disable();
            }
        },

        _keydown: function (event) {
            var options = this.options,
                keyCode = $.ui.keyCode;

            switch (event.keyCode) {
                case keyCode.UP:
                    this._repeat(null, 1, event);
                    return true;
                case keyCode.DOWN:
                    this._repeat(null, -1, event);
                    return true;
                case keyCode.PAGE_UP:
                    this._repeat(null, options.page, event);
                    return true;
                case keyCode.PAGE_DOWN:
                    this._repeat(null, -options.page, event);
                    return true;
            }

            return false;
        },

        _uiSpinnerHtml: function () {
            return "<span class='ui-spinner ui-widget ui-widget-content ui-corner-all'></span>";
        },

        _buttonHtml: function () {
            return "" +
                "<a class='ui-spinner-button ui-spinner-up ui-corner-tr'>" +
                "<span class='ui-icon " + this.options.icons.up + "'>&#9650;</span>" +
                "</a>" +
                "<a class='ui-spinner-button ui-spinner-down ui-corner-br'>" +
                "<span class='ui-icon " + this.options.icons.down + "'>&#9660;</span>" +
                "</a>";
        },

        _start: function (event) {
            if (!this.spinning && this._trigger("start", event) === false) {
                return false;
            }

            if (!this.counter) {
                this.counter = 1;
            }
            this.spinning = true;
            return true;
        },

        _repeat: function (i, steps, event) {
            i = i || 500;

            clearTimeout(this.timer);
            this.timer = this._delay(function () {
                this._repeat(40, steps, event);
            }, i);

            this._spin(steps * this.options.step, event);
        },

        _spin: function (step, event) {
            var value = this.value() || 0;

            if (!this.counter) {
                this.counter = 1;
            }

            value = this._adjustValue(value + step * this._increment(this.counter));

            if (!this.spinning || this._trigger("spin", event, { value: value }) !== false) {
                this._value(value);
                this.counter++;
            }
        },

        _increment: function (i) {
            var incremental = this.options.incremental;

            if (incremental) {
                return $.isFunction(incremental) ?
                    incremental(i) :
                    Math.floor(i * i * i / 50000 - i * i / 500 + 17 * i / 200 + 1);
            }

            return 1;
        },

        _precision: function () {
            var precision = this._precisionOf(this.options.step);
            if (this.options.min !== null) {
                precision = Math.max(precision, this._precisionOf(this.options.min));
            }
            return precision;
        },

        _precisionOf: function (num) {
            var str = num.toString(),
                decimal = str.indexOf(".");
            return decimal === -1 ? 0 : str.length - decimal - 1;
        },

        _adjustValue: function (value) {
            var base, aboveMin,
                options = this.options;

            // make sure we're at a valid step
            // - find out where we are relative to the base (min or 0)
            base = options.min !== null ? options.min : 0;
            aboveMin = value - base;
            // - round to the nearest step
            aboveMin = Math.round(aboveMin / options.step) * options.step;
            // - rounding is based on 0, so adjust back to our base
            value = base + aboveMin;

            // fix precision from bad JS floating point math
            value = parseFloat(value.toFixed(this._precision()));

            // clamp the value
            if (options.max !== null && value > options.max) {
                return options.max;
            }
            if (options.min !== null && value < options.min) {
                return options.min;
            }

            return value;
        },

        _stop: function (event) {
            if (!this.spinning) {
                return;
            }

            clearTimeout(this.timer);
            clearTimeout(this.mousewheelTimer);
            this.counter = 0;
            this.spinning = false;
            this._trigger("stop", event);
        },

        _setOption: function (key, value) {
            if (key === "culture" || key === "numberFormat") {
                var prevValue = this._parse(this.element.val());
                this.options[key] = value;
                this.element.val(this._format(prevValue));
                return;
            }

            if (key === "max" || key === "min" || key === "step") {
                if (typeof value === "string") {
                    value = this._parse(value);
                }
            }
            if (key === "icons") {
                this.buttons.first().find(".ui-icon")
                    .removeClass(this.options.icons.up)
                    .addClass(value.up);
                this.buttons.last().find(".ui-icon")
                    .removeClass(this.options.icons.down)
                    .addClass(value.down);
            }

            this._super(key, value);

            if (key === "disabled") {
                if (value) {
                    this.element.prop("disabled", true);
                    this.buttons.button("disable");
                } else {
                    this.element.prop("disabled", false);
                    this.buttons.button("enable");
                }
            }
        },

        _setOptions: modifier(function (options) {
            this._super(options);
            this._value(this.element.val());
        }),

        _parse: function (val) {
            if (typeof val === "string" && val !== "") {
                val = window.Globalize && this.options.numberFormat ?
                    Globalize.parseFloat(val, 10, this.options.culture) : +val;
            }
            return val === "" || isNaN(val) ? null : val;
        },

        _format: function (value) {
            if (value === "") {
                return "";
            }
            return window.Globalize && this.options.numberFormat ?
                Globalize.format(value, this.options.numberFormat, this.options.culture) :
                value;
        },

        _refresh: function () {
            this.element.attr({
                "aria-valuemin": this.options.min,
                "aria-valuemax": this.options.max,
                // TODO: what should we do with values that can't be parsed?
                "aria-valuenow": this._parse(this.element.val())
            });
        },

        // update the value without triggering change
        _value: function (value, allowAny) {
            var parsed;
            if (value !== "") {
                parsed = this._parse(value);
                if (parsed !== null) {
                    if (!allowAny) {
                        parsed = this._adjustValue(parsed);
                    }
                    value = this._format(parsed);
                }
            }
            this.element.val(value);
            this._refresh();
        },

        _destroy: function () {
            this.element
                .removeClass("ui-spinner-input")
                .prop("disabled", false)
                .removeAttr("autocomplete")
                .removeAttr("role")
                .removeAttr("aria-valuemin")
                .removeAttr("aria-valuemax")
                .removeAttr("aria-valuenow");
            this.uiSpinner.replaceWith(this.element);
        },

        stepUp: modifier(function (steps) {
            this._stepUp(steps);
        }),
        _stepUp: function (steps) {
            if (this._start()) {
                this._spin((steps || 1) * this.options.step);
                this._stop();
            }
        },

        stepDown: modifier(function (steps) {
            this._stepDown(steps);
        }),
        _stepDown: function (steps) {
            if (this._start()) {
                this._spin((steps || 1) * -this.options.step);
                this._stop();
            }
        },

        pageUp: modifier(function (pages) {
            this._stepUp((pages || 1) * this.options.page);
        }),

        pageDown: modifier(function (pages) {
            this._stepDown((pages || 1) * this.options.page);
        }),

        value: function (newVal) {
            if (!arguments.length) {
                return this._parse(this.element.val());
            }
            modifier(this._value).call(this, newVal);
        },

        widget: function () {
            return this.uiSpinner;
        }
    });

}(jQuery));
(function ($, undefined) {

    var tabId = 0,
        rhash = /#.*$/;

    function getNextTabId() {
        return ++tabId;
    }

    function isLocal(anchor) {
        // support: IE7
        // IE7 doesn't normalize the href property when set via script (#9317)
        anchor = anchor.cloneNode(false);

        return anchor.hash.length > 1 &&
            decodeURIComponent(anchor.href.replace(rhash, "")) ===
            decodeURIComponent(location.href.replace(rhash, ""));
    }

    $.widget("ui.tabs", {
        version: "1.10.4",
        delay: 300,
        options: {
            active: null,
            collapsible: false,
            event: "click",
            heightStyle: "content",
            hide: null,
            show: null,

            // callbacks
            activate: null,
            beforeActivate: null,
            beforeLoad: null,
            load: null
        },

        _create: function () {
            var that = this,
                options = this.options;

            this.running = false;

            this.element
                .addClass("ui-tabs ui-widget ui-widget-content ui-corner-all")
                .toggleClass("ui-tabs-collapsible", options.collapsible)
                // Prevent users from focusing disabled tabs via click
                .delegate(".ui-tabs-nav > li", "mousedown" + this.eventNamespace, function (event) {
                    if ($(this).is(".ui-state-disabled")) {
                        event.preventDefault();
                    }
                })
                // support: IE <9
                // Preventing the default action in mousedown doesn't prevent IE
                // from focusing the element, so if the anchor gets focused, blur.
                // We don't have to worry about focusing the previously focused
                // element since clicking on a non-focusable element should focus
                // the body anyway.
                .delegate(".ui-tabs-anchor", "focus" + this.eventNamespace, function () {
                    if ($(this).closest("li").is(".ui-state-disabled")) {
                        this.blur();
                    }
                });

            this._processTabs();
            options.active = this._initialActive();

            // Take disabling tabs via class attribute from HTML
            // into account and update option properly.
            if ($.isArray(options.disabled)) {
                options.disabled = $.unique(options.disabled.concat(
                    $.map(this.tabs.filter(".ui-state-disabled"), function (li) {
                        return that.tabs.index(li);
                    })
                )).sort();
            }

            // check for length avoids error when initializing empty list
            if (this.options.active !== false && this.anchors.length) {
                this.active = this._findActive(options.active);
            } else {
                this.active = $();
            }

            this._refresh();

            if (this.active.length) {
                this.load(options.active);
            }
        },

        _initialActive: function () {
            var active = this.options.active,
                collapsible = this.options.collapsible,
                locationHash = location.hash.substring(1);

            if (active === null) {
                // check the fragment identifier in the URL
                if (locationHash) {
                    this.tabs.each(function (i, tab) {
                        if ($(tab).attr("aria-controls") === locationHash) {
                            active = i;
                            return false;
                        }
                    });
                }

                // check for a tab marked active via a class
                if (active === null) {
                    active = this.tabs.index(this.tabs.filter(".ui-tabs-active"));
                }

                // no active tab, set to false
                if (active === null || active === -1) {
                    active = this.tabs.length ? 0 : false;
                }
            }

            // handle numbers: negative, out of range
            if (active !== false) {
                active = this.tabs.index(this.tabs.eq(active));
                if (active === -1) {
                    active = collapsible ? false : 0;
                }
            }

            // don't allow collapsible: false and active: false
            if (!collapsible && active === false && this.anchors.length) {
                active = 0;
            }

            return active;
        },

        _getCreateEventData: function () {
            return {
                tab: this.active,
                panel: !this.active.length ? $() : this._getPanelForTab(this.active)
            };
        },

        _tabKeydown: function (event) {
            var focusedTab = $(this.document[0].activeElement).closest("li"),
                selectedIndex = this.tabs.index(focusedTab),
                goingForward = true;

            if (this._handlePageNav(event)) {
                return;
            }

            switch (event.keyCode) {
                case $.ui.keyCode.RIGHT:
                case $.ui.keyCode.DOWN:
                    selectedIndex++;
                    break;
                case $.ui.keyCode.UP:
                case $.ui.keyCode.LEFT:
                    goingForward = false;
                    selectedIndex--;
                    break;
                case $.ui.keyCode.END:
                    selectedIndex = this.anchors.length - 1;
                    break;
                case $.ui.keyCode.HOME:
                    selectedIndex = 0;
                    break;
                case $.ui.keyCode.SPACE:
                    // Activate only, no collapsing
                    event.preventDefault();
                    clearTimeout(this.activating);
                    this._activate(selectedIndex);
                    return;
                case $.ui.keyCode.ENTER:
                    // Toggle (cancel delayed activation, allow collapsing)
                    event.preventDefault();
                    clearTimeout(this.activating);
                    // Determine if we should collapse or activate
                    this._activate(selectedIndex === this.options.active ? false : selectedIndex);
                    return;
                default:
                    return;
            }

            // Focus the appropriate tab, based on which key was pressed
            event.preventDefault();
            clearTimeout(this.activating);
            selectedIndex = this._focusNextTab(selectedIndex, goingForward);

            // Navigating with control key will prevent automatic activation
            if (!event.ctrlKey) {
                // Update aria-selected immediately so that AT think the tab is already selected.
                // Otherwise AT may confuse the user by stating that they need to activate the tab,
                // but the tab will already be activated by the time the announcement finishes.
                focusedTab.attr("aria-selected", "false");
                this.tabs.eq(selectedIndex).attr("aria-selected", "true");

                this.activating = this._delay(function () {
                    this.option("active", selectedIndex);
                }, this.delay);
            }
        },

        _panelKeydown: function (event) {
            if (this._handlePageNav(event)) {
                return;
            }

            // Ctrl+up moves focus to the current tab
            if (event.ctrlKey && event.keyCode === $.ui.keyCode.UP) {
                event.preventDefault();
                this.active.focus();
            }
        },

        // Alt+page up/down moves focus to the previous/next tab (and activates)
        _handlePageNav: function (event) {
            if (event.altKey && event.keyCode === $.ui.keyCode.PAGE_UP) {
                this._activate(this._focusNextTab(this.options.active - 1, false));
                return true;
            }
            if (event.altKey && event.keyCode === $.ui.keyCode.PAGE_DOWN) {
                this._activate(this._focusNextTab(this.options.active + 1, true));
                return true;
            }
        },

        _findNextTab: function (index, goingForward) {
            var lastTabIndex = this.tabs.length - 1;

            function constrain() {
                if (index > lastTabIndex) {
                    index = 0;
                }
                if (index < 0) {
                    index = lastTabIndex;
                }
                return index;
            }

            while ($.inArray(constrain(), this.options.disabled) !== -1) {
                index = goingForward ? index + 1 : index - 1;
            }

            return index;
        },

        _focusNextTab: function (index, goingForward) {
            index = this._findNextTab(index, goingForward);
            this.tabs.eq(index).focus();
            return index;
        },

        _setOption: function (key, value) {
            if (key === "active") {
                // _activate() will handle invalid values and update this.options
                this._activate(value);
                return;
            }

            if (key === "disabled") {
                // don't use the widget factory's disabled handling
                this._setupDisabled(value);
                return;
            }

            this._super(key, value);

            if (key === "collapsible") {
                this.element.toggleClass("ui-tabs-collapsible", value);
                // Setting collapsible: false while collapsed; open first panel
                if (!value && this.options.active === false) {
                    this._activate(0);
                }
            }

            if (key === "event") {
                this._setupEvents(value);
            }

            if (key === "heightStyle") {
                this._setupHeightStyle(value);
            }
        },

        _tabId: function (tab) {
            return tab.attr("aria-controls") || "ui-tabs-" + getNextTabId();
        },

        _sanitizeSelector: function (hash) {
            return hash ? hash.replace(/[!"$%&'()*+,.\/:;<=>?@\[\]\^`{|}~]/g, "\\$&") : "";
        },

        refresh: function () {
            var options = this.options,
                lis = this.tablist.children(":has(a[href])");

            // get disabled tabs from class attribute from HTML
            // this will get converted to a boolean if needed in _refresh()
            options.disabled = $.map(lis.filter(".ui-state-disabled"), function (tab) {
                return lis.index(tab);
            });

            this._processTabs();

            // was collapsed or no tabs
            if (options.active === false || !this.anchors.length) {
                options.active = false;
                this.active = $();
                // was active, but active tab is gone
            } else if (this.active.length && !$.contains(this.tablist[0], this.active[0])) {
                // all remaining tabs are disabled
                if (this.tabs.length === options.disabled.length) {
                    options.active = false;
                    this.active = $();
                    // activate previous tab
                } else {
                    this._activate(this._findNextTab(Math.max(0, options.active - 1), false));
                }
                // was active, active tab still exists
            } else {
                // make sure active index is correct
                options.active = this.tabs.index(this.active);
            }

            this._refresh();
        },

        _refresh: function () {
            this._setupDisabled(this.options.disabled);
            this._setupEvents(this.options.event);
            this._setupHeightStyle(this.options.heightStyle);

            this.tabs.not(this.active).attr({
                "aria-selected": "false",
                tabIndex: -1
            });
            this.panels.not(this._getPanelForTab(this.active))
                .hide()
                .attr({
                    "aria-expanded": "false",
                    "aria-hidden": "true"
                });

            // Make sure one tab is in the tab order
            if (!this.active.length) {
                this.tabs.eq(0).attr("tabIndex", 0);
            } else {
                this.active
                    .addClass("ui-tabs-active ui-state-active")
                    .attr({
                        "aria-selected": "true",
                        tabIndex: 0
                    });
                this._getPanelForTab(this.active)
                    .show()
                    .attr({
                        "aria-expanded": "true",
                        "aria-hidden": "false"
                    });
            }
        },

        _processTabs: function () {
            var that = this;

            this.tablist = this._getList()
                .addClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all")
                .attr("role", "tablist");

            this.tabs = this.tablist.find("> li:has(a[href])")
                .addClass("ui-state-default ui-corner-top")
                .attr({
                    role: "tab",
                    tabIndex: -1
                });

            this.anchors = this.tabs.map(function () {
                return $("a", this)[0];
            })
                .addClass("ui-tabs-anchor")
                .attr({
                    role: "presentation",
                    tabIndex: -1
                });

            this.panels = $();

            this.anchors.each(function (i, anchor) {
                var selector, panel, panelId,
                    anchorId = $(anchor).uniqueId().attr("id"),
                    tab = $(anchor).closest("li"),
                    originalAriaControls = tab.attr("aria-controls");

                // inline tab
                if (isLocal(anchor)) {
                    selector = anchor.hash;
                    panel = that.element.find(that._sanitizeSelector(selector));
                    // remote tab
                } else {
                    panelId = that._tabId(tab);
                    selector = "#" + panelId;
                    panel = that.element.find(selector);
                    if (!panel.length) {
                        panel = that._createPanel(panelId);
                        panel.insertAfter(that.panels[i - 1] || that.tablist);
                    }
                    panel.attr("aria-live", "polite");
                }

                if (panel.length) {
                    that.panels = that.panels.add(panel);
                }
                if (originalAriaControls) {
                    tab.data("ui-tabs-aria-controls", originalAriaControls);
                }
                tab.attr({
                    "aria-controls": selector.substring(1),
                    "aria-labelledby": anchorId
                });
                panel.attr("aria-labelledby", anchorId);
            });

            this.panels
                .addClass("ui-tabs-panel ui-widget-content ui-corner-bottom")
                .attr("role", "tabpanel");
        },

        // allow overriding how to find the list for rare usage scenarios (#7715)
        _getList: function () {
            return this.tablist || this.element.find("ol,ul").eq(0);
        },

        _createPanel: function (id) {
            return $("<div>")
                .attr("id", id)
                .addClass("ui-tabs-panel ui-widget-content ui-corner-bottom")
                .data("ui-tabs-destroy", true);
        },

        _setupDisabled: function (disabled) {
            if ($.isArray(disabled)) {
                if (!disabled.length) {
                    disabled = false;
                } else if (disabled.length === this.anchors.length) {
                    disabled = true;
                }
            }

            // disable tabs
            for (var i = 0, li; (li = this.tabs[i]); i++) {
                if (disabled === true || $.inArray(i, disabled) !== -1) {
                    $(li)
                        .addClass("ui-state-disabled")
                        .attr("aria-disabled", "true");
                } else {
                    $(li)
                        .removeClass("ui-state-disabled")
                        .removeAttr("aria-disabled");
                }
            }

            this.options.disabled = disabled;
        },

        _setupEvents: function (event) {
            var events = {
                click: function (event) {
                    event.preventDefault();
                }
            };
            if (event) {
                $.each(event.split(" "), function (index, eventName) {
                    events[eventName] = "_eventHandler";
                });
            }

            this._off(this.anchors.add(this.tabs).add(this.panels));
            this._on(this.anchors, events);
            this._on(this.tabs, { keydown: "_tabKeydown" });
            this._on(this.panels, { keydown: "_panelKeydown" });

            this._focusable(this.tabs);
            this._hoverable(this.tabs);
        },

        _setupHeightStyle: function (heightStyle) {
            var maxHeight,
                parent = this.element.parent();

            if (heightStyle === "fill") {
                maxHeight = parent.height();
                maxHeight -= this.element.outerHeight() - this.element.height();

                this.element.siblings(":visible").each(function () {
                    var elem = $(this),
                        position = elem.css("position");

                    if (position === "absolute" || position === "fixed") {
                        return;
                    }
                    maxHeight -= elem.outerHeight(true);
                });

                this.element.children().not(this.panels).each(function () {
                    maxHeight -= $(this).outerHeight(true);
                });

                this.panels.each(function () {
                    $(this).height(Math.max(0, maxHeight -
                        $(this).innerHeight() + $(this).height()));
                })
                    .css("overflow", "auto");
            } else if (heightStyle === "auto") {
                maxHeight = 0;
                this.panels.each(function () {
                    maxHeight = Math.max(maxHeight, $(this).height("").height());
                }).height(maxHeight);
            }
        },

        _eventHandler: function (event) {
            var options = this.options,
                active = this.active,
                anchor = $(event.currentTarget),
                tab = anchor.closest("li"),
                clickedIsActive = tab[0] === active[0],
                collapsing = clickedIsActive && options.collapsible,
                toShow = collapsing ? $() : this._getPanelForTab(tab),
                toHide = !active.length ? $() : this._getPanelForTab(active),
                eventData = {
                    oldTab: active,
                    oldPanel: toHide,
                    newTab: collapsing ? $() : tab,
                    newPanel: toShow
                };

            event.preventDefault();

            if (tab.hasClass("ui-state-disabled") ||
                // tab is already loading
                tab.hasClass("ui-tabs-loading") ||
                // can't switch durning an animation
                this.running ||
                // click on active header, but not collapsible
                (clickedIsActive && !options.collapsible) ||
                // allow canceling activation
                (this._trigger("beforeActivate", event, eventData) === false)) {
                return;
            }

            options.active = collapsing ? false : this.tabs.index(tab);

            this.active = clickedIsActive ? $() : tab;
            if (this.xhr) {
                this.xhr.abort();
            }

            if (!toHide.length && !toShow.length) {
                $.error("jQuery UI Tabs: Mismatching fragment identifier.");
            }

            if (toShow.length) {
                this.load(this.tabs.index(tab), event);
            }
            this._toggle(event, eventData);
        },

        // handles show/hide for selecting tabs
        _toggle: function (event, eventData) {
            var that = this,
                toShow = eventData.newPanel,
                toHide = eventData.oldPanel;

            this.running = true;

            function complete() {
                that.running = false;
                that._trigger("activate", event, eventData);
            }

            function show() {
                eventData.newTab.closest("li").addClass("ui-tabs-active ui-state-active");

                if (toShow.length && that.options.show) {
                    that._show(toShow, that.options.show, complete);
                } else {
                    toShow.show();
                    complete();
                }
            }

            // start out by hiding, then showing, then completing
            if (toHide.length && this.options.hide) {
                this._hide(toHide, this.options.hide, function () {
                    eventData.oldTab.closest("li").removeClass("ui-tabs-active ui-state-active");
                    show();
                });
            } else {
                eventData.oldTab.closest("li").removeClass("ui-tabs-active ui-state-active");
                toHide.hide();
                show();
            }

            toHide.attr({
                "aria-expanded": "false",
                "aria-hidden": "true"
            });
            eventData.oldTab.attr("aria-selected", "false");
            // If we're switching tabs, remove the old tab from the tab order.
            // If we're opening from collapsed state, remove the previous tab from the tab order.
            // If we're collapsing, then keep the collapsing tab in the tab order.
            if (toShow.length && toHide.length) {
                eventData.oldTab.attr("tabIndex", -1);
            } else if (toShow.length) {
                this.tabs.filter(function () {
                    return $(this).attr("tabIndex") === 0;
                })
                    .attr("tabIndex", -1);
            }

            toShow.attr({
                "aria-expanded": "true",
                "aria-hidden": "false"
            });
            eventData.newTab.attr({
                "aria-selected": "true",
                tabIndex: 0
            });
        },

        _activate: function (index) {
            var anchor,
                active = this._findActive(index);

            // trying to activate the already active panel
            if (active[0] === this.active[0]) {
                return;
            }

            // trying to collapse, simulate a click on the current active header
            if (!active.length) {
                active = this.active;
            }

            anchor = active.find(".ui-tabs-anchor")[0];
            this._eventHandler({
                target: anchor,
                currentTarget: anchor,
                preventDefault: $.noop
            });
        },

        _findActive: function (index) {
            return index === false ? $() : this.tabs.eq(index);
        },

        _getIndex: function (index) {
            // meta-function to give users option to provide a href string instead of a numerical index.
            if (typeof index === "string") {
                index = this.anchors.index(this.anchors.filter("[href$='" + index + "']"));
            }

            return index;
        },

        _destroy: function () {
            if (this.xhr) {
                this.xhr.abort();
            }

            this.element.removeClass("ui-tabs ui-widget ui-widget-content ui-corner-all ui-tabs-collapsible");

            this.tablist
                .removeClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all")
                .removeAttr("role");

            this.anchors
                .removeClass("ui-tabs-anchor")
                .removeAttr("role")
                .removeAttr("tabIndex")
                .removeUniqueId();

            this.tabs.add(this.panels).each(function () {
                if ($.data(this, "ui-tabs-destroy")) {
                    $(this).remove();
                } else {
                    $(this)
                        .removeClass("ui-state-default ui-state-active ui-state-disabled " +
                            "ui-corner-top ui-corner-bottom ui-widget-content ui-tabs-active ui-tabs-panel")
                        .removeAttr("tabIndex")
                        .removeAttr("aria-live")
                        .removeAttr("aria-busy")
                        .removeAttr("aria-selected")
                        .removeAttr("aria-labelledby")
                        .removeAttr("aria-hidden")
                        .removeAttr("aria-expanded")
                        .removeAttr("role");
                }
            });

            this.tabs.each(function () {
                var li = $(this),
                    prev = li.data("ui-tabs-aria-controls");
                if (prev) {
                    li
                        .attr("aria-controls", prev)
                        .removeData("ui-tabs-aria-controls");
                } else {
                    li.removeAttr("aria-controls");
                }
            });

            this.panels.show();

            if (this.options.heightStyle !== "content") {
                this.panels.css("height", "");
            }
        },

        enable: function (index) {
            var disabled = this.options.disabled;
            if (disabled === false) {
                return;
            }

            if (index === undefined) {
                disabled = false;
            } else {
                index = this._getIndex(index);
                if ($.isArray(disabled)) {
                    disabled = $.map(disabled, function (num) {
                        return num !== index ? num : null;
                    });
                } else {
                    disabled = $.map(this.tabs, function (li, num) {
                        return num !== index ? num : null;
                    });
                }
            }
            this._setupDisabled(disabled);
        },

        disable: function (index) {
            var disabled = this.options.disabled;
            if (disabled === true) {
                return;
            }

            if (index === undefined) {
                disabled = true;
            } else {
                index = this._getIndex(index);
                if ($.inArray(index, disabled) !== -1) {
                    return;
                }
                if ($.isArray(disabled)) {
                    disabled = $.merge([index], disabled).sort();
                } else {
                    disabled = [index];
                }
            }
            this._setupDisabled(disabled);
        },

        load: function (index, event) {
            index = this._getIndex(index);
            var that = this,
                tab = this.tabs.eq(index),
                anchor = tab.find(".ui-tabs-anchor"),
                panel = this._getPanelForTab(tab),
                eventData = {
                    tab: tab,
                    panel: panel
                };

            // not remote
            if (isLocal(anchor[0])) {
                return;
            }

            this.xhr = $.ajax(this._ajaxSettings(anchor, event, eventData));

            // support: jQuery <1.8
            // jQuery <1.8 returns false if the request is canceled in beforeSend,
            // but as of 1.8, $.ajax() always returns a jqXHR object.
            if (this.xhr && this.xhr.statusText !== "canceled") {
                tab.addClass("ui-tabs-loading");
                panel.attr("aria-busy", "true");

                this.xhr
                    .success(function (response) {
                        // support: jQuery <1.8
                        // http://bugs.jquery.com/ticket/11778
                        setTimeout(function () {
                            panel.html(response);
                            that._trigger("load", event, eventData);
                        }, 1);
                    })
                    .complete(function (jqXHR, status) {
                        // support: jQuery <1.8
                        // http://bugs.jquery.com/ticket/11778
                        setTimeout(function () {
                            if (status === "abort") {
                                that.panels.stop(false, true);
                            }

                            tab.removeClass("ui-tabs-loading");
                            panel.removeAttr("aria-busy");

                            if (jqXHR === that.xhr) {
                                delete that.xhr;
                            }
                        }, 1);
                    });
            }
        },

        _ajaxSettings: function (anchor, event, eventData) {
            var that = this;
            return {
                url: anchor.attr("href"),
                beforeSend: function (jqXHR, settings) {
                    return that._trigger("beforeLoad", event,
                        $.extend({ jqXHR: jqXHR, ajaxSettings: settings }, eventData));
                }
            };
        },

        _getPanelForTab: function (tab) {
            var id = $(tab).attr("aria-controls");
            return this.element.find(this._sanitizeSelector("#" + id));
        }
    });

})(jQuery);
(function ($) {

    var increments = 0;

    function addDescribedBy(elem, id) {
        var describedby = (elem.attr("aria-describedby") || "").split(/\s+/);
        describedby.push(id);
        elem
            .data("ui-tooltip-id", id)
            .attr("aria-describedby", $.trim(describedby.join(" ")));
    }

    function removeDescribedBy(elem) {
        var id = elem.data("ui-tooltip-id"),
            describedby = (elem.attr("aria-describedby") || "").split(/\s+/),
            index = $.inArray(id, describedby);
        if (index !== -1) {
            describedby.splice(index, 1);
        }

        elem.removeData("ui-tooltip-id");
        describedby = $.trim(describedby.join(" "));
        if (describedby) {
            elem.attr("aria-describedby", describedby);
        } else {
            elem.removeAttr("aria-describedby");
        }
    }

    $.widget("ui.tooltip", {
        version: "1.10.4",
        options: {
            content: function () {
                // support: IE<9, Opera in jQuery <1.7
                // .text() can't accept undefined, so coerce to a string
                var title = $(this).attr("title") || "";
                // Escape title, since we're going from an attribute to raw HTML
                return $("<a>").text(title).html();
            },
            hide: true,
            // Disabled elements have inconsistent behavior across browsers (#8661)
            items: "[title]:not([disabled])",
            position: {
                my: "left top+15",
                at: "left bottom",
                collision: "flipfit flip"
            },
            show: true,
            tooltipClass: null,
            track: false,

            // callbacks
            close: null,
            open: null
        },

        _create: function () {
            this._on({
                mouseover: "open",
                focusin: "open"
            });

            // IDs of generated tooltips, needed for destroy
            this.tooltips = {};
            // IDs of parent tooltips where we removed the title attribute
            this.parents = {};

            if (this.options.disabled) {
                this._disable();
            }
        },

        _setOption: function (key, value) {
            var that = this;

            if (key === "disabled") {
                this[value ? "_disable" : "_enable"]();
                this.options[key] = value;
                // disable element style changes
                return;
            }

            this._super(key, value);

            if (key === "content") {
                $.each(this.tooltips, function (id, element) {
                    that._updateContent(element);
                });
            }
        },

        _disable: function () {
            var that = this;

            // close open tooltips
            $.each(this.tooltips, function (id, element) {
                var event = $.Event("blur");
                event.target = event.currentTarget = element[0];
                that.close(event, true);
            });

            // remove title attributes to prevent native tooltips
            this.element.find(this.options.items).addBack().each(function () {
                var element = $(this);
                if (element.is("[title]")) {
                    element
                        .data("ui-tooltip-title", element.attr("title"))
                        .attr("title", "");
                }
            });
        },

        _enable: function () {
            // restore title attributes
            this.element.find(this.options.items).addBack().each(function () {
                var element = $(this);
                if (element.data("ui-tooltip-title")) {
                    element.attr("title", element.data("ui-tooltip-title"));
                }
            });
        },

        open: function (event) {
            var that = this,
                target = $(event ? event.target : this.element)
                    // we need closest here due to mouseover bubbling,
                    // but always pointing at the same event target
                    .closest(this.options.items);

            // No element to show a tooltip for or the tooltip is already open
            if (!target.length || target.data("ui-tooltip-id")) {
                return;
            }

            if (target.attr("title")) {
                target.data("ui-tooltip-title", target.attr("title"));
            }

            target.data("ui-tooltip-open", true);

            // kill parent tooltips, custom or native, for hover
            if (event && event.type === "mouseover") {
                target.parents().each(function () {
                    var parent = $(this),
                        blurEvent;
                    if (parent.data("ui-tooltip-open")) {
                        blurEvent = $.Event("blur");
                        blurEvent.target = blurEvent.currentTarget = this;
                        that.close(blurEvent, true);
                    }
                    if (parent.attr("title")) {
                        parent.uniqueId();
                        that.parents[this.id] = {
                            element: this,
                            title: parent.attr("title")
                        };
                        parent.attr("title", "");
                    }
                });
            }

            this._updateContent(target, event);
        },

        _updateContent: function (target, event) {
            var content,
                contentOption = this.options.content,
                that = this,
                eventType = event ? event.type : null;

            if (typeof contentOption === "string") {
                return this._open(event, target, contentOption);
            }

            content = contentOption.call(target[0], function (response) {
                // ignore async response if tooltip was closed already
                if (!target.data("ui-tooltip-open")) {
                    return;
                }
                // IE may instantly serve a cached response for ajax requests
                // delay this call to _open so the other call to _open runs first
                that._delay(function () {
                    // jQuery creates a special event for focusin when it doesn't
                    // exist natively. To improve performance, the native event
                    // object is reused and the type is changed. Therefore, we can't
                    // rely on the type being correct after the event finished
                    // bubbling, so we set it back to the previous value. (#8740)
                    if (event) {
                        event.type = eventType;
                    }
                    this._open(event, target, response);
                });
            });
            if (content) {
                this._open(event, target, content);
            }
        },

        _open: function (event, target, content) {
            var tooltip, events, delayedShow,
                positionOption = $.extend({}, this.options.position);

            if (!content) {
                return;
            }

            // Content can be updated multiple times. If the tooltip already
            // exists, then just update the content and bail.
            tooltip = this._find(target);
            if (tooltip.length) {
                tooltip.find(".ui-tooltip-content").html(content);
                return;
            }

            // if we have a title, clear it to prevent the native tooltip
            // we have to check first to avoid defining a title if none exists
            // (we don't want to cause an element to start matching [title])
            //
            // We use removeAttr only for key events, to allow IE to export the correct
            // accessible attributes. For mouse events, set to empty string to avoid
            // native tooltip showing up (happens only when removing inside mouseover).
            if (target.is("[title]")) {
                if (event && event.type === "mouseover") {
                    target.attr("title", "");
                } else {
                    target.removeAttr("title");
                }
            }

            tooltip = this._tooltip(target);
            addDescribedBy(target, tooltip.attr("id"));
            tooltip.find(".ui-tooltip-content").html(content);

            function position(event) {
                positionOption.of = event;
                if (tooltip.is(":hidden")) {
                    return;
                }
                tooltip.position(positionOption);
            }
            if (this.options.track && event && /^mouse/.test(event.type)) {
                this._on(this.document, {
                    mousemove: position
                });
                // trigger once to override element-relative positioning
                position(event);
            } else {
                tooltip.position($.extend({
                    of: target
                }, this.options.position));
            }

            tooltip.hide();

            this._show(tooltip, this.options.show);
            // Handle tracking tooltips that are shown with a delay (#8644). As soon
            // as the tooltip is visible, position the tooltip using the most recent
            // event.
            if (this.options.show && this.options.show.delay) {
                delayedShow = this.delayedShow = setInterval(function () {
                    if (tooltip.is(":visible")) {
                        position(positionOption.of);
                        clearInterval(delayedShow);
                    }
                }, $.fx.interval);
            }

            this._trigger("open", event, { tooltip: tooltip });

            events = {
                keyup: function (event) {
                    if (event.keyCode === $.ui.keyCode.ESCAPE) {
                        var fakeEvent = $.Event(event);
                        fakeEvent.currentTarget = target[0];
                        this.close(fakeEvent, true);
                    }
                },
                remove: function () {
                    this._removeTooltip(tooltip);
                }
            };
            if (!event || event.type === "mouseover") {
                events.mouseleave = "close";
            }
            if (!event || event.type === "focusin") {
                events.focusout = "close";
            }
            this._on(true, target, events);
        },

        close: function (event) {
            var that = this,
                target = $(event ? event.currentTarget : this.element),
                tooltip = this._find(target);

            // disabling closes the tooltip, so we need to track when we're closing
            // to avoid an infinite loop in case the tooltip becomes disabled on close
            if (this.closing) {
                return;
            }

            // Clear the interval for delayed tracking tooltips
            clearInterval(this.delayedShow);

            // only set title if we had one before (see comment in _open())
            if (target.data("ui-tooltip-title")) {
                target.attr("title", target.data("ui-tooltip-title"));
            }

            removeDescribedBy(target);

            tooltip.stop(true);
            this._hide(tooltip, this.options.hide, function () {
                that._removeTooltip($(this));
            });

            target.removeData("ui-tooltip-open");
            this._off(target, "mouseleave focusout keyup");
            // Remove 'remove' binding only on delegated targets
            if (target[0] !== this.element[0]) {
                this._off(target, "remove");
            }
            this._off(this.document, "mousemove");

            if (event && event.type === "mouseleave") {
                $.each(this.parents, function (id, parent) {
                    $(parent.element).attr("title", parent.title);
                    delete that.parents[id];
                });
            }

            this.closing = true;
            this._trigger("close", event, { tooltip: tooltip });
            this.closing = false;
        },

        _tooltip: function (element) {
            var id = "ui-tooltip-" + increments++,
                tooltip = $("<div>")
                    .attr({
                        id: id,
                        role: "tooltip"
                    })
                    .addClass("ui-tooltip ui-widget ui-corner-all ui-widget-content " +
                        (this.options.tooltipClass || ""));
            $("<div>")
                .addClass("ui-tooltip-content")
                .appendTo(tooltip);
            tooltip.appendTo(this.document[0].body);
            this.tooltips[id] = element;
            return tooltip;
        },

        _find: function (target) {
            var id = target.data("ui-tooltip-id");
            return id ? $("#" + id) : $();
        },

        _removeTooltip: function (tooltip) {
            tooltip.remove();
            delete this.tooltips[tooltip.attr("id")];
        },

        _destroy: function () {
            var that = this;

            // close open tooltips
            $.each(this.tooltips, function (id, element) {
                // Delegate to close method to handle common cleanup
                var event = $.Event("blur");
                event.target = event.currentTarget = element[0];
                that.close(event, true);

                // Remove immediately; destroying an open tooltip doesn't use the
                // hide animation
                $("#" + id).remove();

                // Restore the title
                if (element.data("ui-tooltip-title")) {
                    element.attr("title", element.data("ui-tooltip-title"));
                    element.removeData("ui-tooltip-title");
                }
            });
        }
    });

}(jQuery));

//jquery js
/*! jQuery v2.0.0 | (c) 2005, 2013 jQuery Foundation, Inc. | jquery.org/license
//@ sourceMappingURL=jquery.min.map
*/
(function (e, undefined) {
    var t, n, r = typeof undefined, i = e.location, o = e.document, s = o.documentElement, a = e.jQuery, u = e.$, l = {}, c = [], f = "2.0.0", p = c.concat, h = c.push, d = c.slice, g = c.indexOf, m = l.toString, y = l.hasOwnProperty, v = f.trim, x = function (e, n) { return new x.fn.init(e, n, t) }, b = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source, w = /\S+/g, T = /^(?:(<[\w\W]+>)[^>]*|#([\w-]*))$/, C = /^<(\w+)\s*\/?>(?:<\/\1>|)$/, k = /^-ms-/, N = /-([\da-z])/gi, E = function (e, t) { return t.toUpperCase() }, S = function () { o.removeEventListener("DOMContentLoaded", S, !1), e.removeEventListener("load", S, !1), x.ready() }; x.fn = x.prototype = { jquery: f, constructor: x, init: function (e, t, n) { var r, i; if (!e) return this; if ("string" == typeof e) { if (r = "<" === e.charAt(0) && ">" === e.charAt(e.length - 1) && e.length >= 3 ? [null, e, null] : T.exec(e), !r || !r[1] && t) return !t || t.jquery ? (t || n).find(e) : this.constructor(t).find(e); if (r[1]) { if (t = t instanceof x ? t[0] : t, x.merge(this, x.parseHTML(r[1], t && t.nodeType ? t.ownerDocument || t : o, !0)), C.test(r[1]) && x.isPlainObject(t)) for (r in t) x.isFunction(this[r]) ? this[r](t[r]) : this.attr(r, t[r]); return this } return i = o.getElementById(r[2]), i && i.parentNode && (this.length = 1, this[0] = i), this.context = o, this.selector = e, this } return e.nodeType ? (this.context = this[0] = e, this.length = 1, this) : x.isFunction(e) ? n.ready(e) : (e.selector !== undefined && (this.selector = e.selector, this.context = e.context), x.makeArray(e, this)) }, selector: "", length: 0, toArray: function () { return d.call(this) }, get: function (e) { return null == e ? this.toArray() : 0 > e ? this[this.length + e] : this[e] }, pushStack: function (e) { var t = x.merge(this.constructor(), e); return t.prevObject = this, t.context = this.context, t }, each: function (e, t) { return x.each(this, e, t) }, ready: function (e) { return x.ready.promise().done(e), this }, slice: function () { return this.pushStack(d.apply(this, arguments)) }, first: function () { return this.eq(0) }, last: function () { return this.eq(-1) }, eq: function (e) { var t = this.length, n = +e + (0 > e ? t : 0); return this.pushStack(n >= 0 && t > n ? [this[n]] : []) }, map: function (e) { return this.pushStack(x.map(this, function (t, n) { return e.call(t, n, t) })) }, end: function () { return this.prevObject || this.constructor(null) }, push: h, sort: [].sort, splice: [].splice }, x.fn.init.prototype = x.fn, x.extend = x.fn.extend = function () { var e, t, n, r, i, o, s = arguments[0] || {}, a = 1, u = arguments.length, l = !1; for ("boolean" == typeof s && (l = s, s = arguments[1] || {}, a = 2), "object" == typeof s || x.isFunction(s) || (s = {}), u === a && (s = this, --a); u > a; a++)if (null != (e = arguments[a])) for (t in e) n = s[t], r = e[t], s !== r && (l && r && (x.isPlainObject(r) || (i = x.isArray(r))) ? (i ? (i = !1, o = n && x.isArray(n) ? n : []) : o = n && x.isPlainObject(n) ? n : {}, s[t] = x.extend(l, o, r)) : r !== undefined && (s[t] = r)); return s }, x.extend({ expando: "jQuery" + (f + Math.random()).replace(/\D/g, ""), noConflict: function (t) { return e.$ === x && (e.$ = u), t && e.jQuery === x && (e.jQuery = a), x }, isReady: !1, readyWait: 1, holdReady: function (e) { e ? x.readyWait++ : x.ready(!0) }, ready: function (e) { (e === !0 ? --x.readyWait : x.isReady) || (x.isReady = !0, e !== !0 && --x.readyWait > 0 || (n.resolveWith(o, [x]), x.fn.trigger && x(o).trigger("ready").off("ready"))) }, isFunction: function (e) { return "function" === x.type(e) }, isArray: Array.isArray, isWindow: function (e) { return null != e && e === e.window }, isNumeric: function (e) { return !isNaN(parseFloat(e)) && isFinite(e) }, type: function (e) { return null == e ? e + "" : "object" == typeof e || "function" == typeof e ? l[m.call(e)] || "object" : typeof e }, isPlainObject: function (e) { if ("object" !== x.type(e) || e.nodeType || x.isWindow(e)) return !1; try { if (e.constructor && !y.call(e.constructor.prototype, "isPrototypeOf")) return !1 } catch (t) { return !1 } return !0 }, isEmptyObject: function (e) { var t; for (t in e) return !1; return !0 }, error: function (e) { throw Error(e) }, parseHTML: function (e, t, n) { if (!e || "string" != typeof e) return null; "boolean" == typeof t && (n = t, t = !1), t = t || o; var r = C.exec(e), i = !n && []; return r ? [t.createElement(r[1])] : (r = x.buildFragment([e], t, i), i && x(i).remove(), x.merge([], r.childNodes)) }, parseJSON: JSON.parse, parseXML: function (e) { var t, n; if (!e || "string" != typeof e) return null; try { n = new DOMParser, t = n.parseFromString(e, "text/xml") } catch (r) { t = undefined } return (!t || t.getElementsByTagName("parsererror").length) && x.error("Invalid XML: " + e), t }, noop: function () { }, globalEval: function (e) { var t, n = eval; e = x.trim(e), e && (1 === e.indexOf("use strict") ? (t = o.createElement("script"), t.text = e, o.head.appendChild(t).parentNode.removeChild(t)) : n(e)) }, camelCase: function (e) { return e.replace(k, "ms-").replace(N, E) }, nodeName: function (e, t) { return e.nodeName && e.nodeName.toLowerCase() === t.toLowerCase() }, each: function (e, t, n) { var r, i = 0, o = e.length, s = j(e); if (n) { if (s) { for (; o > i; i++)if (r = t.apply(e[i], n), r === !1) break } else for (i in e) if (r = t.apply(e[i], n), r === !1) break } else if (s) { for (; o > i; i++)if (r = t.call(e[i], i, e[i]), r === !1) break } else for (i in e) if (r = t.call(e[i], i, e[i]), r === !1) break; return e }, trim: function (e) { return null == e ? "" : v.call(e) }, makeArray: function (e, t) { var n = t || []; return null != e && (j(Object(e)) ? x.merge(n, "string" == typeof e ? [e] : e) : h.call(n, e)), n }, inArray: function (e, t, n) { return null == t ? -1 : g.call(t, e, n) }, merge: function (e, t) { var n = t.length, r = e.length, i = 0; if ("number" == typeof n) for (; n > i; i++)e[r++] = t[i]; else while (t[i] !== undefined) e[r++] = t[i++]; return e.length = r, e }, grep: function (e, t, n) { var r, i = [], o = 0, s = e.length; for (n = !!n; s > o; o++)r = !!t(e[o], o), n !== r && i.push(e[o]); return i }, map: function (e, t, n) { var r, i = 0, o = e.length, s = j(e), a = []; if (s) for (; o > i; i++)r = t(e[i], i, n), null != r && (a[a.length] = r); else for (i in e) r = t(e[i], i, n), null != r && (a[a.length] = r); return p.apply([], a) }, guid: 1, proxy: function (e, t) { var n, r, i; return "string" == typeof t && (n = e[t], t = e, e = n), x.isFunction(e) ? (r = d.call(arguments, 2), i = function () { return e.apply(t || this, r.concat(d.call(arguments))) }, i.guid = e.guid = e.guid || x.guid++ , i) : undefined }, access: function (e, t, n, r, i, o, s) { var a = 0, u = e.length, l = null == n; if ("object" === x.type(n)) { i = !0; for (a in n) x.access(e, t, a, n[a], !0, o, s) } else if (r !== undefined && (i = !0, x.isFunction(r) || (s = !0), l && (s ? (t.call(e, r), t = null) : (l = t, t = function (e, t, n) { return l.call(x(e), n) })), t)) for (; u > a; a++)t(e[a], n, s ? r : r.call(e[a], a, t(e[a], n))); return i ? e : l ? t.call(e) : u ? t(e[0], n) : o }, now: Date.now, swap: function (e, t, n, r) { var i, o, s = {}; for (o in t) s[o] = e.style[o], e.style[o] = t[o]; i = n.apply(e, r || []); for (o in t) e.style[o] = s[o]; return i } }), x.ready.promise = function (t) { return n || (n = x.Deferred(), "complete" === o.readyState ? setTimeout(x.ready) : (o.addEventListener("DOMContentLoaded", S, !1), e.addEventListener("load", S, !1))), n.promise(t) }, x.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), function (e, t) { l["[object " + t + "]"] = t.toLowerCase() }); function j(e) { var t = e.length, n = x.type(e); return x.isWindow(e) ? !1 : 1 === e.nodeType && t ? !0 : "array" === n || "function" !== n && (0 === t || "number" == typeof t && t > 0 && t - 1 in e) } t = x(o), function (e, undefined) { var t, n, r, i, o, s, a, u, l, c, f, p, h, d, g, m, y = "sizzle" + -new Date, v = e.document, b = {}, w = 0, T = 0, C = ot(), k = ot(), N = ot(), E = !1, S = function () { return 0 }, j = typeof undefined, D = 1 << 31, A = [], L = A.pop, q = A.push, H = A.push, O = A.slice, F = A.indexOf || function (e) { var t = 0, n = this.length; for (; n > t; t++)if (this[t] === e) return t; return -1 }, P = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped", R = "[\\x20\\t\\r\\n\\f]", M = "(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+", W = M.replace("w", "w#"), $ = "\\[" + R + "*(" + M + ")" + R + "*(?:([*^$|!~]?=)" + R + "*(?:(['\"])((?:\\\\.|[^\\\\])*?)\\3|(" + W + ")|)|)" + R + "*\\]", B = ":(" + M + ")(?:\\(((['\"])((?:\\\\.|[^\\\\])*?)\\3|((?:\\\\.|[^\\\\()[\\]]|" + $.replace(3, 8) + ")*)|.*)\\)|)", I = RegExp("^" + R + "+|((?:^|[^\\\\])(?:\\\\.)*)" + R + "+$", "g"), z = RegExp("^" + R + "*," + R + "*"), _ = RegExp("^" + R + "*([>+~]|" + R + ")" + R + "*"), X = RegExp(R + "*[+~]"), U = RegExp("=" + R + "*([^\\]'\"]*)" + R + "*\\]", "g"), Y = RegExp(B), V = RegExp("^" + W + "$"), G = { ID: RegExp("^#(" + M + ")"), CLASS: RegExp("^\\.(" + M + ")"), TAG: RegExp("^(" + M.replace("w", "w*") + ")"), ATTR: RegExp("^" + $), PSEUDO: RegExp("^" + B), CHILD: RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + R + "*(even|odd|(([+-]|)(\\d*)n|)" + R + "*(?:([+-]|)" + R + "*(\\d+)|))" + R + "*\\)|)", "i"), "boolean": RegExp("^(?:" + P + ")$", "i"), needsContext: RegExp("^" + R + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + R + "*((?:-\\d)?\\d*)" + R + "*\\)|)(?=[^-]|$)", "i") }, J = /^[^{]+\{\s*\[native \w/, Q = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/, K = /^(?:input|select|textarea|button)$/i, Z = /^h\d$/i, et = /'|\\/g, tt = /\\([\da-fA-F]{1,6}[\x20\t\r\n\f]?|.)/g, nt = function (e, t) { var n = "0x" + t - 65536; return n !== n ? t : 0 > n ? String.fromCharCode(n + 65536) : String.fromCharCode(55296 | n >> 10, 56320 | 1023 & n) }; try { H.apply(A = O.call(v.childNodes), v.childNodes), A[v.childNodes.length].nodeType } catch (rt) { H = { apply: A.length ? function (e, t) { q.apply(e, O.call(t)) } : function (e, t) { var n = e.length, r = 0; while (e[n++] = t[r++]); e.length = n - 1 } } } function it(e) { return J.test(e + "") } function ot() { var e, t = []; return e = function (n, i) { return t.push(n += " ") > r.cacheLength && delete e[t.shift()], e[n] = i } } function st(e) { return e[y] = !0, e } function at(e) { var t = c.createElement("div"); try { return !!e(t) } catch (n) { return !1 } finally { t.parentNode && t.parentNode.removeChild(t), t = null } } function ut(e, t, n, r) { var i, o, s, a, u, f, d, g, x, w; if ((t ? t.ownerDocument || t : v) !== c && l(t), t = t || c, n = n || [], !e || "string" != typeof e) return n; if (1 !== (a = t.nodeType) && 9 !== a) return []; if (p && !r) { if (i = Q.exec(e)) if (s = i[1]) { if (9 === a) { if (o = t.getElementById(s), !o || !o.parentNode) return n; if (o.id === s) return n.push(o), n } else if (t.ownerDocument && (o = t.ownerDocument.getElementById(s)) && m(t, o) && o.id === s) return n.push(o), n } else { if (i[2]) return H.apply(n, t.getElementsByTagName(e)), n; if ((s = i[3]) && b.getElementsByClassName && t.getElementsByClassName) return H.apply(n, t.getElementsByClassName(s)), n } if (b.qsa && (!h || !h.test(e))) { if (g = d = y, x = t, w = 9 === a && e, 1 === a && "object" !== t.nodeName.toLowerCase()) { f = gt(e), (d = t.getAttribute("id")) ? g = d.replace(et, "\\$&") : t.setAttribute("id", g), g = "[id='" + g + "'] ", u = f.length; while (u--) f[u] = g + mt(f[u]); x = X.test(e) && t.parentNode || t, w = f.join(",") } if (w) try { return H.apply(n, x.querySelectorAll(w)), n } catch (T) { } finally { d || t.removeAttribute("id") } } } return kt(e.replace(I, "$1"), t, n, r) } o = ut.isXML = function (e) { var t = e && (e.ownerDocument || e).documentElement; return t ? "HTML" !== t.nodeName : !1 }, l = ut.setDocument = function (e) { var t = e ? e.ownerDocument || e : v; return t !== c && 9 === t.nodeType && t.documentElement ? (c = t, f = t.documentElement, p = !o(t), b.getElementsByTagName = at(function (e) { return e.appendChild(t.createComment("")), !e.getElementsByTagName("*").length }), b.attributes = at(function (e) { return e.className = "i", !e.getAttribute("className") }), b.getElementsByClassName = at(function (e) { return e.innerHTML = "<div class='a'></div><div class='a i'></div>", e.firstChild.className = "i", 2 === e.getElementsByClassName("i").length }), b.sortDetached = at(function (e) { return 1 & e.compareDocumentPosition(c.createElement("div")) }), b.getById = at(function (e) { return f.appendChild(e).id = y, !t.getElementsByName || !t.getElementsByName(y).length }), b.getById ? (r.find.ID = function (e, t) { if (typeof t.getElementById !== j && p) { var n = t.getElementById(e); return n && n.parentNode ? [n] : [] } }, r.filter.ID = function (e) { var t = e.replace(tt, nt); return function (e) { return e.getAttribute("id") === t } }) : (r.find.ID = function (e, t) { if (typeof t.getElementById !== j && p) { var n = t.getElementById(e); return n ? n.id === e || typeof n.getAttributeNode !== j && n.getAttributeNode("id").value === e ? [n] : undefined : [] } }, r.filter.ID = function (e) { var t = e.replace(tt, nt); return function (e) { var n = typeof e.getAttributeNode !== j && e.getAttributeNode("id"); return n && n.value === t } }), r.find.TAG = b.getElementsByTagName ? function (e, t) { return typeof t.getElementsByTagName !== j ? t.getElementsByTagName(e) : undefined } : function (e, t) { var n, r = [], i = 0, o = t.getElementsByTagName(e); if ("*" === e) { while (n = o[i++]) 1 === n.nodeType && r.push(n); return r } return o }, r.find.CLASS = b.getElementsByClassName && function (e, t) { return typeof t.getElementsByClassName !== j && p ? t.getElementsByClassName(e) : undefined }, d = [], h = [], (b.qsa = it(t.querySelectorAll)) && (at(function (e) { e.innerHTML = "<select><option selected=''></option></select>", e.querySelectorAll("[selected]").length || h.push("\\[" + R + "*(?:value|" + P + ")"), e.querySelectorAll(":checked").length || h.push(":checked") }), at(function (e) { var t = c.createElement("input"); t.setAttribute("type", "hidden"), e.appendChild(t).setAttribute("t", ""), e.querySelectorAll("[t^='']").length && h.push("[*^$]=" + R + "*(?:''|\"\")"), e.querySelectorAll(":enabled").length || h.push(":enabled", ":disabled"), e.querySelectorAll("*,:x"), h.push(",.*:") })), (b.matchesSelector = it(g = f.webkitMatchesSelector || f.mozMatchesSelector || f.oMatchesSelector || f.msMatchesSelector)) && at(function (e) { b.disconnectedMatch = g.call(e, "div"), g.call(e, "[s!='']:x"), d.push("!=", B) }), h = h.length && RegExp(h.join("|")), d = d.length && RegExp(d.join("|")), m = it(f.contains) || f.compareDocumentPosition ? function (e, t) { var n = 9 === e.nodeType ? e.documentElement : e, r = t && t.parentNode; return e === r || !(!r || 1 !== r.nodeType || !(n.contains ? n.contains(r) : e.compareDocumentPosition && 16 & e.compareDocumentPosition(r))) } : function (e, t) { if (t) while (t = t.parentNode) if (t === e) return !0; return !1 }, S = f.compareDocumentPosition ? function (e, n) { if (e === n) return E = !0, 0; var r = n.compareDocumentPosition && e.compareDocumentPosition && e.compareDocumentPosition(n); return r ? 1 & r || !b.sortDetached && n.compareDocumentPosition(e) === r ? e === t || m(v, e) ? -1 : n === t || m(v, n) ? 1 : u ? F.call(u, e) - F.call(u, n) : 0 : 4 & r ? -1 : 1 : e.compareDocumentPosition ? -1 : 1 } : function (e, n) { var r, i = 0, o = e.parentNode, s = n.parentNode, a = [e], l = [n]; if (e === n) return E = !0, 0; if (!o || !s) return e === t ? -1 : n === t ? 1 : o ? -1 : s ? 1 : u ? F.call(u, e) - F.call(u, n) : 0; if (o === s) return lt(e, n); r = e; while (r = r.parentNode) a.unshift(r); r = n; while (r = r.parentNode) l.unshift(r); while (a[i] === l[i]) i++; return i ? lt(a[i], l[i]) : a[i] === v ? -1 : l[i] === v ? 1 : 0 }, c) : c }, ut.matches = function (e, t) { return ut(e, null, null, t) }, ut.matchesSelector = function (e, t) { if ((e.ownerDocument || e) !== c && l(e), t = t.replace(U, "='$1']"), !(!b.matchesSelector || !p || d && d.test(t) || h && h.test(t))) try { var n = g.call(e, t); if (n || b.disconnectedMatch || e.document && 11 !== e.document.nodeType) return n } catch (r) { } return ut(t, c, null, [e]).length > 0 }, ut.contains = function (e, t) { return (e.ownerDocument || e) !== c && l(e), m(e, t) }, ut.attr = function (e, t) { (e.ownerDocument || e) !== c && l(e); var n = r.attrHandle[t.toLowerCase()], i = n && n(e, t, !p); return i === undefined ? b.attributes || !p ? e.getAttribute(t) : (i = e.getAttributeNode(t)) && i.specified ? i.value : null : i }, ut.error = function (e) { throw Error("Syntax error, unrecognized expression: " + e) }, ut.uniqueSort = function (e) { var t, n = [], r = 0, i = 0; if (E = !b.detectDuplicates, u = !b.sortStable && e.slice(0), e.sort(S), E) { while (t = e[i++]) t === e[i] && (r = n.push(i)); while (r--) e.splice(n[r], 1) } return e }; function lt(e, t) { var n = t && e, r = n && (~t.sourceIndex || D) - (~e.sourceIndex || D); if (r) return r; if (n) while (n = n.nextSibling) if (n === t) return -1; return e ? 1 : -1 } function ct(e, t, n) { var r; return n ? undefined : (r = e.getAttributeNode(t)) && r.specified ? r.value : e[t] === !0 ? t.toLowerCase() : null } function ft(e, t, n) { var r; return n ? undefined : r = e.getAttribute(t, "type" === t.toLowerCase() ? 1 : 2) } function pt(e) { return function (t) { var n = t.nodeName.toLowerCase(); return "input" === n && t.type === e } } function ht(e) { return function (t) { var n = t.nodeName.toLowerCase(); return ("input" === n || "button" === n) && t.type === e } } function dt(e) { return st(function (t) { return t = +t, st(function (n, r) { var i, o = e([], n.length, t), s = o.length; while (s--) n[i = o[s]] && (n[i] = !(r[i] = n[i])) }) }) } i = ut.getText = function (e) { var t, n = "", r = 0, o = e.nodeType; if (o) { if (1 === o || 9 === o || 11 === o) { if ("string" == typeof e.textContent) return e.textContent; for (e = e.firstChild; e; e = e.nextSibling)n += i(e) } else if (3 === o || 4 === o) return e.nodeValue } else for (; t = e[r]; r++)n += i(t); return n }, r = ut.selectors = { cacheLength: 50, createPseudo: st, match: G, attrHandle: {}, find: {}, relative: { ">": { dir: "parentNode", first: !0 }, " ": { dir: "parentNode" }, "+": { dir: "previousSibling", first: !0 }, "~": { dir: "previousSibling" } }, preFilter: { ATTR: function (e) { return e[1] = e[1].replace(tt, nt), e[3] = (e[4] || e[5] || "").replace(tt, nt), "~=" === e[2] && (e[3] = " " + e[3] + " "), e.slice(0, 4) }, CHILD: function (e) { return e[1] = e[1].toLowerCase(), "nth" === e[1].slice(0, 3) ? (e[3] || ut.error(e[0]), e[4] = +(e[4] ? e[5] + (e[6] || 1) : 2 * ("even" === e[3] || "odd" === e[3])), e[5] = +(e[7] + e[8] || "odd" === e[3])) : e[3] && ut.error(e[0]), e }, PSEUDO: function (e) { var t, n = !e[5] && e[2]; return G.CHILD.test(e[0]) ? null : (e[4] ? e[2] = e[4] : n && Y.test(n) && (t = gt(n, !0)) && (t = n.indexOf(")", n.length - t) - n.length) && (e[0] = e[0].slice(0, t), e[2] = n.slice(0, t)), e.slice(0, 3)) } }, filter: { TAG: function (e) { var t = e.replace(tt, nt).toLowerCase(); return "*" === e ? function () { return !0 } : function (e) { return e.nodeName && e.nodeName.toLowerCase() === t } }, CLASS: function (e) { var t = C[e + " "]; return t || (t = RegExp("(^|" + R + ")" + e + "(" + R + "|$)")) && C(e, function (e) { return t.test("string" == typeof e.className && e.className || typeof e.getAttribute !== j && e.getAttribute("class") || "") }) }, ATTR: function (e, t, n) { return function (r) { var i = ut.attr(r, e); return null == i ? "!=" === t : t ? (i += "", "=" === t ? i === n : "!=" === t ? i !== n : "^=" === t ? n && 0 === i.indexOf(n) : "*=" === t ? n && i.indexOf(n) > -1 : "$=" === t ? n && i.slice(-n.length) === n : "~=" === t ? (" " + i + " ").indexOf(n) > -1 : "|=" === t ? i === n || i.slice(0, n.length + 1) === n + "-" : !1) : !0 } }, CHILD: function (e, t, n, r, i) { var o = "nth" !== e.slice(0, 3), s = "last" !== e.slice(-4), a = "of-type" === t; return 1 === r && 0 === i ? function (e) { return !!e.parentNode } : function (t, n, u) { var l, c, f, p, h, d, g = o !== s ? "nextSibling" : "previousSibling", m = t.parentNode, v = a && t.nodeName.toLowerCase(), x = !u && !a; if (m) { if (o) { while (g) { f = t; while (f = f[g]) if (a ? f.nodeName.toLowerCase() === v : 1 === f.nodeType) return !1; d = g = "only" === e && !d && "nextSibling" } return !0 } if (d = [s ? m.firstChild : m.lastChild], s && x) { c = m[y] || (m[y] = {}), l = c[e] || [], h = l[0] === w && l[1], p = l[0] === w && l[2], f = h && m.childNodes[h]; while (f = ++h && f && f[g] || (p = h = 0) || d.pop()) if (1 === f.nodeType && ++p && f === t) { c[e] = [w, h, p]; break } } else if (x && (l = (t[y] || (t[y] = {}))[e]) && l[0] === w) p = l[1]; else while (f = ++h && f && f[g] || (p = h = 0) || d.pop()) if ((a ? f.nodeName.toLowerCase() === v : 1 === f.nodeType) && ++p && (x && ((f[y] || (f[y] = {}))[e] = [w, p]), f === t)) break; return p -= i, p === r || 0 === p % r && p / r >= 0 } } }, PSEUDO: function (e, t) { var n, i = r.pseudos[e] || r.setFilters[e.toLowerCase()] || ut.error("unsupported pseudo: " + e); return i[y] ? i(t) : i.length > 1 ? (n = [e, e, "", t], r.setFilters.hasOwnProperty(e.toLowerCase()) ? st(function (e, n) { var r, o = i(e, t), s = o.length; while (s--) r = F.call(e, o[s]), e[r] = !(n[r] = o[s]) }) : function (e) { return i(e, 0, n) }) : i } }, pseudos: { not: st(function (e) { var t = [], n = [], r = s(e.replace(I, "$1")); return r[y] ? st(function (e, t, n, i) { var o, s = r(e, null, i, []), a = e.length; while (a--) (o = s[a]) && (e[a] = !(t[a] = o)) }) : function (e, i, o) { return t[0] = e, r(t, null, o, n), !n.pop() } }), has: st(function (e) { return function (t) { return ut(e, t).length > 0 } }), contains: st(function (e) { return function (t) { return (t.textContent || t.innerText || i(t)).indexOf(e) > -1 } }), lang: st(function (e) { return V.test(e || "") || ut.error("unsupported lang: " + e), e = e.replace(tt, nt).toLowerCase(), function (t) { var n; do if (n = p ? t.lang : t.getAttribute("xml:lang") || t.getAttribute("lang")) return n = n.toLowerCase(), n === e || 0 === n.indexOf(e + "-"); while ((t = t.parentNode) && 1 === t.nodeType); return !1 } }), target: function (t) { var n = e.location && e.location.hash; return n && n.slice(1) === t.id }, root: function (e) { return e === f }, focus: function (e) { return e === c.activeElement && (!c.hasFocus || c.hasFocus()) && !!(e.type || e.href || ~e.tabIndex) }, enabled: function (e) { return e.disabled === !1 }, disabled: function (e) { return e.disabled === !0 }, checked: function (e) { var t = e.nodeName.toLowerCase(); return "input" === t && !!e.checked || "option" === t && !!e.selected }, selected: function (e) { return e.parentNode && e.parentNode.selectedIndex, e.selected === !0 }, empty: function (e) { for (e = e.firstChild; e; e = e.nextSibling)if (e.nodeName > "@" || 3 === e.nodeType || 4 === e.nodeType) return !1; return !0 }, parent: function (e) { return !r.pseudos.empty(e) }, header: function (e) { return Z.test(e.nodeName) }, input: function (e) { return K.test(e.nodeName) }, button: function (e) { var t = e.nodeName.toLowerCase(); return "input" === t && "button" === e.type || "button" === t }, text: function (e) { var t; return "input" === e.nodeName.toLowerCase() && "text" === e.type && (null == (t = e.getAttribute("type")) || t.toLowerCase() === e.type) }, first: dt(function () { return [0] }), last: dt(function (e, t) { return [t - 1] }), eq: dt(function (e, t, n) { return [0 > n ? n + t : n] }), even: dt(function (e, t) { var n = 0; for (; t > n; n += 2)e.push(n); return e }), odd: dt(function (e, t) { var n = 1; for (; t > n; n += 2)e.push(n); return e }), lt: dt(function (e, t, n) { var r = 0 > n ? n + t : n; for (; --r >= 0;)e.push(r); return e }), gt: dt(function (e, t, n) { var r = 0 > n ? n + t : n; for (; t > ++r;)e.push(r); return e }) } }; for (t in { radio: !0, checkbox: !0, file: !0, password: !0, image: !0 }) r.pseudos[t] = pt(t); for (t in { submit: !0, reset: !0 }) r.pseudos[t] = ht(t); function gt(e, t) { var n, i, o, s, a, u, l, c = k[e + " "]; if (c) return t ? 0 : c.slice(0); a = e, u = [], l = r.preFilter; while (a) { (!n || (i = z.exec(a))) && (i && (a = a.slice(i[0].length) || a), u.push(o = [])), n = !1, (i = _.exec(a)) && (n = i.shift(), o.push({ value: n, type: i[0].replace(I, " ") }), a = a.slice(n.length)); for (s in r.filter) !(i = G[s].exec(a)) || l[s] && !(i = l[s](i)) || (n = i.shift(), o.push({ value: n, type: s, matches: i }), a = a.slice(n.length)); if (!n) break } return t ? a.length : a ? ut.error(e) : k(e, u).slice(0) } function mt(e) { var t = 0, n = e.length, r = ""; for (; n > t; t++)r += e[t].value; return r } function yt(e, t, r) { var i = t.dir, o = r && "parentNode" === i, s = T++; return t.first ? function (t, n, r) { while (t = t[i]) if (1 === t.nodeType || o) return e(t, n, r) } : function (t, r, a) { var u, l, c, f = w + " " + s; if (a) { while (t = t[i]) if ((1 === t.nodeType || o) && e(t, r, a)) return !0 } else while (t = t[i]) if (1 === t.nodeType || o) if (c = t[y] || (t[y] = {}), (l = c[i]) && l[0] === f) { if ((u = l[1]) === !0 || u === n) return u === !0 } else if (l = c[i] = [f], l[1] = e(t, r, a) || n, l[1] === !0) return !0 } } function vt(e) { return e.length > 1 ? function (t, n, r) { var i = e.length; while (i--) if (!e[i](t, n, r)) return !1; return !0 } : e[0] } function xt(e, t, n, r, i) { var o, s = [], a = 0, u = e.length, l = null != t; for (; u > a; a++)(o = e[a]) && (!n || n(o, r, i)) && (s.push(o), l && t.push(a)); return s } function bt(e, t, n, r, i, o) { return r && !r[y] && (r = bt(r)), i && !i[y] && (i = bt(i, o)), st(function (o, s, a, u) { var l, c, f, p = [], h = [], d = s.length, g = o || Ct(t || "*", a.nodeType ? [a] : a, []), m = !e || !o && t ? g : xt(g, p, e, a, u), y = n ? i || (o ? e : d || r) ? [] : s : m; if (n && n(m, y, a, u), r) { l = xt(y, h), r(l, [], a, u), c = l.length; while (c--) (f = l[c]) && (y[h[c]] = !(m[h[c]] = f)) } if (o) { if (i || e) { if (i) { l = [], c = y.length; while (c--) (f = y[c]) && l.push(m[c] = f); i(null, y = [], l, u) } c = y.length; while (c--) (f = y[c]) && (l = i ? F.call(o, f) : p[c]) > -1 && (o[l] = !(s[l] = f)) } } else y = xt(y === s ? y.splice(d, y.length) : y), i ? i(null, s, y, u) : H.apply(s, y) }) } function wt(e) { var t, n, i, o = e.length, s = r.relative[e[0].type], u = s || r.relative[" "], l = s ? 1 : 0, c = yt(function (e) { return e === t }, u, !0), f = yt(function (e) { return F.call(t, e) > -1 }, u, !0), p = [function (e, n, r) { return !s && (r || n !== a) || ((t = n).nodeType ? c(e, n, r) : f(e, n, r)) }]; for (; o > l; l++)if (n = r.relative[e[l].type]) p = [yt(vt(p), n)]; else { if (n = r.filter[e[l].type].apply(null, e[l].matches), n[y]) { for (i = ++l; o > i; i++)if (r.relative[e[i].type]) break; return bt(l > 1 && vt(p), l > 1 && mt(e.slice(0, l - 1)).replace(I, "$1"), n, i > l && wt(e.slice(l, i)), o > i && wt(e = e.slice(i)), o > i && mt(e)) } p.push(n) } return vt(p) } function Tt(e, t) { var i = 0, o = t.length > 0, s = e.length > 0, u = function (u, l, f, p, h) { var d, g, m, y = [], v = 0, x = "0", b = u && [], T = null != h, C = a, k = u || s && r.find.TAG("*", h && l.parentNode || l), N = w += null == C ? 1 : Math.random() || .1; for (T && (a = l !== c && l, n = i); null != (d = k[x]); x++) { if (s && d) { g = 0; while (m = e[g++]) if (m(d, l, f)) { p.push(d); break } T && (w = N, n = ++i) } o && ((d = !m && d) && v-- , u && b.push(d)) } if (v += x, o && x !== v) { g = 0; while (m = t[g++]) m(b, y, l, f); if (u) { if (v > 0) while (x--) b[x] || y[x] || (y[x] = L.call(p)); y = xt(y) } H.apply(p, y), T && !u && y.length > 0 && v + t.length > 1 && ut.uniqueSort(p) } return T && (w = N, a = C), b }; return o ? st(u) : u } s = ut.compile = function (e, t) { var n, r = [], i = [], o = N[e + " "]; if (!o) { t || (t = gt(e)), n = t.length; while (n--) o = wt(t[n]), o[y] ? r.push(o) : i.push(o); o = N(e, Tt(i, r)) } return o }; function Ct(e, t, n) { var r = 0, i = t.length; for (; i > r; r++)ut(e, t[r], n); return n } function kt(e, t, n, i) { var o, a, u, l, c, f = gt(e); if (!i && 1 === f.length) { if (a = f[0] = f[0].slice(0), a.length > 2 && "ID" === (u = a[0]).type && 9 === t.nodeType && p && r.relative[a[1].type]) { if (t = (r.find.ID(u.matches[0].replace(tt, nt), t) || [])[0], !t) return n; e = e.slice(a.shift().value.length) } o = G.needsContext.test(e) ? 0 : a.length; while (o--) { if (u = a[o], r.relative[l = u.type]) break; if ((c = r.find[l]) && (i = c(u.matches[0].replace(tt, nt), X.test(a[0].type) && t.parentNode || t))) { if (a.splice(o, 1), e = i.length && mt(a), !e) return H.apply(n, i), n; break } } } return s(e, f)(i, t, !p, n, X.test(e)), n } r.pseudos.nth = r.pseudos.eq; function Nt() { } Nt.prototype = r.filters = r.pseudos, r.setFilters = new Nt, b.sortStable = y.split("").sort(S).join("") === y, l(), [0, 0].sort(S), b.detectDuplicates = E, at(function (e) { if (e.innerHTML = "<a href='#'></a>", "#" !== e.firstChild.getAttribute("href")) { var t = "type|href|height|width".split("|"), n = t.length; while (n--) r.attrHandle[t[n]] = ft } }), at(function (e) { if (null != e.getAttribute("disabled")) { var t = P.split("|"), n = t.length; while (n--) r.attrHandle[t[n]] = ct } }), x.find = ut, x.expr = ut.selectors, x.expr[":"] = x.expr.pseudos, x.unique = ut.uniqueSort, x.text = ut.getText, x.isXMLDoc = ut.isXML, x.contains = ut.contains }(e); var D = {}; function A(e) { var t = D[e] = {}; return x.each(e.match(w) || [], function (e, n) { t[n] = !0 }), t } x.Callbacks = function (e) { e = "string" == typeof e ? D[e] || A(e) : x.extend({}, e); var t, n, r, i, o, s, a = [], u = !e.once && [], l = function (f) { for (t = e.memory && f, n = !0, s = i || 0, i = 0, o = a.length, r = !0; a && o > s; s++)if (a[s].apply(f[0], f[1]) === !1 && e.stopOnFalse) { t = !1; break } r = !1, a && (u ? u.length && l(u.shift()) : t ? a = [] : c.disable()) }, c = { add: function () { if (a) { var n = a.length; (function s(t) { x.each(t, function (t, n) { var r = x.type(n); "function" === r ? e.unique && c.has(n) || a.push(n) : n && n.length && "string" !== r && s(n) }) })(arguments), r ? o = a.length : t && (i = n, l(t)) } return this }, remove: function () { return a && x.each(arguments, function (e, t) { var n; while ((n = x.inArray(t, a, n)) > -1) a.splice(n, 1), r && (o >= n && o-- , s >= n && s--) }), this }, has: function (e) { return e ? x.inArray(e, a) > -1 : !(!a || !a.length) }, empty: function () { return a = [], o = 0, this }, disable: function () { return a = u = t = undefined, this }, disabled: function () { return !a }, lock: function () { return u = undefined, t || c.disable(), this }, locked: function () { return !u }, fireWith: function (e, t) { return t = t || [], t = [e, t.slice ? t.slice() : t], !a || n && !u || (r ? u.push(t) : l(t)), this }, fire: function () { return c.fireWith(this, arguments), this }, fired: function () { return !!n } }; return c }, x.extend({ Deferred: function (e) { var t = [["resolve", "done", x.Callbacks("once memory"), "resolved"], ["reject", "fail", x.Callbacks("once memory"), "rejected"], ["notify", "progress", x.Callbacks("memory")]], n = "pending", r = { state: function () { return n }, always: function () { return i.done(arguments).fail(arguments), this }, then: function () { var e = arguments; return x.Deferred(function (n) { x.each(t, function (t, o) { var s = o[0], a = x.isFunction(e[t]) && e[t]; i[o[1]](function () { var e = a && a.apply(this, arguments); e && x.isFunction(e.promise) ? e.promise().done(n.resolve).fail(n.reject).progress(n.notify) : n[s + "With"](this === r ? n.promise() : this, a ? [e] : arguments) }) }), e = null }).promise() }, promise: function (e) { return null != e ? x.extend(e, r) : r } }, i = {}; return r.pipe = r.then, x.each(t, function (e, o) { var s = o[2], a = o[3]; r[o[1]] = s.add, a && s.add(function () { n = a }, t[1 ^ e][2].disable, t[2][2].lock), i[o[0]] = function () { return i[o[0] + "With"](this === i ? r : this, arguments), this }, i[o[0] + "With"] = s.fireWith }), r.promise(i), e && e.call(i, i), i }, when: function (e) { var t = 0, n = d.call(arguments), r = n.length, i = 1 !== r || e && x.isFunction(e.promise) ? r : 0, o = 1 === i ? e : x.Deferred(), s = function (e, t, n) { return function (r) { t[e] = this, n[e] = arguments.length > 1 ? d.call(arguments) : r, n === a ? o.notifyWith(t, n) : --i || o.resolveWith(t, n) } }, a, u, l; if (r > 1) for (a = Array(r), u = Array(r), l = Array(r); r > t; t++)n[t] && x.isFunction(n[t].promise) ? n[t].promise().done(s(t, l, n)).fail(o.reject).progress(s(t, u, a)) : --i; return i || o.resolveWith(l, n), o.promise() } }), x.support = function (t) { var n = o.createElement("input"), r = o.createDocumentFragment(), i = o.createElement("div"), s = o.createElement("select"), a = s.appendChild(o.createElement("option")); return n.type ? (n.type = "checkbox", t.checkOn = "" !== n.value, t.optSelected = a.selected, t.reliableMarginRight = !0, t.boxSizingReliable = !0, t.pixelPosition = !1, n.checked = !0, t.noCloneChecked = n.cloneNode(!0).checked, s.disabled = !0, t.optDisabled = !a.disabled, n = o.createElement("input"), n.value = "t", n.type = "radio", t.radioValue = "t" === n.value, n.setAttribute("checked", "t"), n.setAttribute("name", "t"), r.appendChild(n), t.checkClone = r.cloneNode(!0).cloneNode(!0).lastChild.checked, t.focusinBubbles = "onfocusin" in e, i.style.backgroundClip = "content-box", i.cloneNode(!0).style.backgroundClip = "", t.clearCloneStyle = "content-box" === i.style.backgroundClip, x(function () { var n, r, s = "padding:0;margin:0;border:0;display:block;-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box", a = o.getElementsByTagName("body")[0]; a && (n = o.createElement("div"), n.style.cssText = "border:0;width:0;height:0;position:absolute;top:0;left:-9999px;margin-top:1px", a.appendChild(n).appendChild(i), i.innerHTML = "", i.style.cssText = "-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%", x.swap(a, null != a.style.zoom ? { zoom: 1 } : {}, function () { t.boxSizing = 4 === i.offsetWidth }), e.getComputedStyle && (t.pixelPosition = "1%" !== (e.getComputedStyle(i, null) || {}).top, t.boxSizingReliable = "4px" === (e.getComputedStyle(i, null) || { width: "4px" }).width, r = i.appendChild(o.createElement("div")), r.style.cssText = i.style.cssText = s, r.style.marginRight = r.style.width = "0", i.style.width = "1px", t.reliableMarginRight = !parseFloat((e.getComputedStyle(r, null) || {}).marginRight)), a.removeChild(n)) }), t) : t }({}); var L, q, H = /(?:\{[\s\S]*\}|\[[\s\S]*\])$/, O = /([A-Z])/g; function F() { Object.defineProperty(this.cache = {}, 0, { get: function () { return {} } }), this.expando = x.expando + Math.random() } F.uid = 1, F.accepts = function (e) { return e.nodeType ? 1 === e.nodeType || 9 === e.nodeType : !0 }, F.prototype = { key: function (e) { if (!F.accepts(e)) return 0; var t = {}, n = e[this.expando]; if (!n) { n = F.uid++; try { t[this.expando] = { value: n }, Object.defineProperties(e, t) } catch (r) { t[this.expando] = n, x.extend(e, t) } } return this.cache[n] || (this.cache[n] = {}), n }, set: function (e, t, n) { var r, i = this.key(e), o = this.cache[i]; if ("string" == typeof t) o[t] = n; else if (x.isEmptyObject(o)) this.cache[i] = t; else for (r in t) o[r] = t[r] }, get: function (e, t) { var n = this.cache[this.key(e)]; return t === undefined ? n : n[t] }, access: function (e, t, n) { return t === undefined || t && "string" == typeof t && n === undefined ? this.get(e, t) : (this.set(e, t, n), n !== undefined ? n : t) }, remove: function (e, t) { var n, r, i = this.key(e), o = this.cache[i]; if (t === undefined) this.cache[i] = {}; else { x.isArray(t) ? r = t.concat(t.map(x.camelCase)) : t in o ? r = [t] : (r = x.camelCase(t), r = r in o ? [r] : r.match(w) || []), n = r.length; while (n--) delete o[r[n]] } }, hasData: function (e) { return !x.isEmptyObject(this.cache[e[this.expando]] || {}) }, discard: function (e) { delete this.cache[this.key(e)] } }, L = new F, q = new F, x.extend({ acceptData: F.accepts, hasData: function (e) { return L.hasData(e) || q.hasData(e) }, data: function (e, t, n) { return L.access(e, t, n) }, removeData: function (e, t) { L.remove(e, t) }, _data: function (e, t, n) { return q.access(e, t, n) }, _removeData: function (e, t) { q.remove(e, t) } }), x.fn.extend({ data: function (e, t) { var n, r, i = this[0], o = 0, s = null; if (e === undefined) { if (this.length && (s = L.get(i), 1 === i.nodeType && !q.get(i, "hasDataAttrs"))) { for (n = i.attributes; n.length > o; o++)r = n[o].name, 0 === r.indexOf("data-") && (r = x.camelCase(r.substring(5)), P(i, r, s[r])); q.set(i, "hasDataAttrs", !0) } return s } return "object" == typeof e ? this.each(function () { L.set(this, e) }) : x.access(this, function (t) { var n, r = x.camelCase(e); if (i && t === undefined) { if (n = L.get(i, e), n !== undefined) return n; if (n = L.get(i, r), n !== undefined) return n; if (n = P(i, r, undefined), n !== undefined) return n } else this.each(function () { var n = L.get(this, r); L.set(this, r, t), -1 !== e.indexOf("-") && n !== undefined && L.set(this, e, t) }) }, null, t, arguments.length > 1, null, !0) }, removeData: function (e) { return this.each(function () { L.remove(this, e) }) } }); function P(e, t, n) { var r; if (n === undefined && 1 === e.nodeType) if (r = "data-" + t.replace(O, "-$1").toLowerCase(), n = e.getAttribute(r), "string" == typeof n) { try { n = "true" === n ? !0 : "false" === n ? !1 : "null" === n ? null : +n + "" === n ? +n : H.test(n) ? JSON.parse(n) : n } catch (i) { } L.set(e, t, n) } else n = undefined; return n } x.extend({ queue: function (e, t, n) { var r; return e ? (t = (t || "fx") + "queue", r = q.get(e, t), n && (!r || x.isArray(n) ? r = q.access(e, t, x.makeArray(n)) : r.push(n)), r || []) : undefined }, dequeue: function (e, t) { t = t || "fx"; var n = x.queue(e, t), r = n.length, i = n.shift(), o = x._queueHooks(e, t), s = function () { x.dequeue(e, t) }; "inprogress" === i && (i = n.shift(), r--), o.cur = i, i && ("fx" === t && n.unshift("inprogress"), delete o.stop, i.call(e, s, o)), !r && o && o.empty.fire() }, _queueHooks: function (e, t) { var n = t + "queueHooks"; return q.get(e, n) || q.access(e, n, { empty: x.Callbacks("once memory").add(function () { q.remove(e, [t + "queue", n]) }) }) } }), x.fn.extend({
        queue: function (e, t) {
            var n = 2; return "string" != typeof e && (t = e, e = "fx", n--), n > arguments.length ? x.queue(this[0], e) : t === undefined ? this : this.each(function () {
                var n = x.queue(this, e, t);
                x._queueHooks(this, e), "fx" === e && "inprogress" !== n[0] && x.dequeue(this, e)
            })
        }, dequeue: function (e) { return this.each(function () { x.dequeue(this, e) }) }, delay: function (e, t) { return e = x.fx ? x.fx.speeds[e] || e : e, t = t || "fx", this.queue(t, function (t, n) { var r = setTimeout(t, e); n.stop = function () { clearTimeout(r) } }) }, clearQueue: function (e) { return this.queue(e || "fx", []) }, promise: function (e, t) { var n, r = 1, i = x.Deferred(), o = this, s = this.length, a = function () { --r || i.resolveWith(o, [o]) }; "string" != typeof e && (t = e, e = undefined), e = e || "fx"; while (s--) n = q.get(o[s], e + "queueHooks"), n && n.empty && (r++ , n.empty.add(a)); return a(), i.promise(t) }
    }); var R, M, W = /[\t\r\n]/g, $ = /\r/g, B = /^(?:input|select|textarea|button)$/i; x.fn.extend({ attr: function (e, t) { return x.access(this, x.attr, e, t, arguments.length > 1) }, removeAttr: function (e) { return this.each(function () { x.removeAttr(this, e) }) }, prop: function (e, t) { return x.access(this, x.prop, e, t, arguments.length > 1) }, removeProp: function (e) { return this.each(function () { delete this[x.propFix[e] || e] }) }, addClass: function (e) { var t, n, r, i, o, s = 0, a = this.length, u = "string" == typeof e && e; if (x.isFunction(e)) return this.each(function (t) { x(this).addClass(e.call(this, t, this.className)) }); if (u) for (t = (e || "").match(w) || []; a > s; s++)if (n = this[s], r = 1 === n.nodeType && (n.className ? (" " + n.className + " ").replace(W, " ") : " ")) { o = 0; while (i = t[o++]) 0 > r.indexOf(" " + i + " ") && (r += i + " "); n.className = x.trim(r) } return this }, removeClass: function (e) { var t, n, r, i, o, s = 0, a = this.length, u = 0 === arguments.length || "string" == typeof e && e; if (x.isFunction(e)) return this.each(function (t) { x(this).removeClass(e.call(this, t, this.className)) }); if (u) for (t = (e || "").match(w) || []; a > s; s++)if (n = this[s], r = 1 === n.nodeType && (n.className ? (" " + n.className + " ").replace(W, " ") : "")) { o = 0; while (i = t[o++]) while (r.indexOf(" " + i + " ") >= 0) r = r.replace(" " + i + " ", " "); n.className = e ? x.trim(r) : "" } return this }, toggleClass: function (e, t) { var n = typeof e, i = "boolean" == typeof t; return x.isFunction(e) ? this.each(function (n) { x(this).toggleClass(e.call(this, n, this.className, t), t) }) : this.each(function () { if ("string" === n) { var o, s = 0, a = x(this), u = t, l = e.match(w) || []; while (o = l[s++]) u = i ? u : !a.hasClass(o), a[u ? "addClass" : "removeClass"](o) } else (n === r || "boolean" === n) && (this.className && q.set(this, "__className__", this.className), this.className = this.className || e === !1 ? "" : q.get(this, "__className__") || "") }) }, hasClass: function (e) { var t = " " + e + " ", n = 0, r = this.length; for (; r > n; n++)if (1 === this[n].nodeType && (" " + this[n].className + " ").replace(W, " ").indexOf(t) >= 0) return !0; return !1 }, val: function (e) { var t, n, r, i = this[0]; { if (arguments.length) return r = x.isFunction(e), this.each(function (n) { var i, o = x(this); 1 === this.nodeType && (i = r ? e.call(this, n, o.val()) : e, null == i ? i = "" : "number" == typeof i ? i += "" : x.isArray(i) && (i = x.map(i, function (e) { return null == e ? "" : e + "" })), t = x.valHooks[this.type] || x.valHooks[this.nodeName.toLowerCase()], t && "set" in t && t.set(this, i, "value") !== undefined || (this.value = i)) }); if (i) return t = x.valHooks[i.type] || x.valHooks[i.nodeName.toLowerCase()], t && "get" in t && (n = t.get(i, "value")) !== undefined ? n : (n = i.value, "string" == typeof n ? n.replace($, "") : null == n ? "" : n) } } }), x.extend({ valHooks: { option: { get: function (e) { var t = e.attributes.value; return !t || t.specified ? e.value : e.text } }, select: { get: function (e) { var t, n, r = e.options, i = e.selectedIndex, o = "select-one" === e.type || 0 > i, s = o ? null : [], a = o ? i + 1 : r.length, u = 0 > i ? a : o ? i : 0; for (; a > u; u++)if (n = r[u], !(!n.selected && u !== i || (x.support.optDisabled ? n.disabled : null !== n.getAttribute("disabled")) || n.parentNode.disabled && x.nodeName(n.parentNode, "optgroup"))) { if (t = x(n).val(), o) return t; s.push(t) } return s }, set: function (e, t) { var n, r, i = e.options, o = x.makeArray(t), s = i.length; while (s--) r = i[s], (r.selected = x.inArray(x(r).val(), o) >= 0) && (n = !0); return n || (e.selectedIndex = -1), o } } }, attr: function (e, t, n) { var i, o, s = e.nodeType; if (e && 3 !== s && 8 !== s && 2 !== s) return typeof e.getAttribute === r ? x.prop(e, t, n) : (1 === s && x.isXMLDoc(e) || (t = t.toLowerCase(), i = x.attrHooks[t] || (x.expr.match.boolean.test(t) ? M : R)), n === undefined ? i && "get" in i && null !== (o = i.get(e, t)) ? o : (o = x.find.attr(e, t), null == o ? undefined : o) : null !== n ? i && "set" in i && (o = i.set(e, n, t)) !== undefined ? o : (e.setAttribute(t, n + ""), n) : (x.removeAttr(e, t), undefined)) }, removeAttr: function (e, t) { var n, r, i = 0, o = t && t.match(w); if (o && 1 === e.nodeType) while (n = o[i++]) r = x.propFix[n] || n, x.expr.match.boolean.test(n) && (e[r] = !1), e.removeAttribute(n) }, attrHooks: { type: { set: function (e, t) { if (!x.support.radioValue && "radio" === t && x.nodeName(e, "input")) { var n = e.value; return e.setAttribute("type", t), n && (e.value = n), t } } } }, propFix: { "for": "htmlFor", "class": "className" }, prop: function (e, t, n) { var r, i, o, s = e.nodeType; if (e && 3 !== s && 8 !== s && 2 !== s) return o = 1 !== s || !x.isXMLDoc(e), o && (t = x.propFix[t] || t, i = x.propHooks[t]), n !== undefined ? i && "set" in i && (r = i.set(e, n, t)) !== undefined ? r : e[t] = n : i && "get" in i && null !== (r = i.get(e, t)) ? r : e[t] }, propHooks: { tabIndex: { get: function (e) { return e.hasAttribute("tabindex") || B.test(e.nodeName) || e.href ? e.tabIndex : -1 } } } }), M = { set: function (e, t, n) { return t === !1 ? x.removeAttr(e, n) : e.setAttribute(n, n), n } }, x.each(x.expr.match.boolean.source.match(/\w+/g), function (e, t) { var n = x.expr.attrHandle[t] || x.find.attr; x.expr.attrHandle[t] = function (e, t, r) { var i = x.expr.attrHandle[t], o = r ? undefined : (x.expr.attrHandle[t] = undefined) != n(e, t, r) ? t.toLowerCase() : null; return x.expr.attrHandle[t] = i, o } }), x.support.optSelected || (x.propHooks.selected = { get: function (e) { var t = e.parentNode; return t && t.parentNode && t.parentNode.selectedIndex, null } }), x.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], function () { x.propFix[this.toLowerCase()] = this }), x.each(["radio", "checkbox"], function () { x.valHooks[this] = { set: function (e, t) { return x.isArray(t) ? e.checked = x.inArray(x(e).val(), t) >= 0 : undefined } }, x.support.checkOn || (x.valHooks[this].get = function (e) { return null === e.getAttribute("value") ? "on" : e.value }) }); var I = /^key/, z = /^(?:mouse|contextmenu)|click/, _ = /^(?:focusinfocus|focusoutblur)$/, X = /^([^.]*)(?:\.(.+)|)$/; function U() { return !0 } function Y() { return !1 } function V() { try { return o.activeElement } catch (e) { } } x.event = { global: {}, add: function (e, t, n, i, o) { var s, a, u, l, c, f, p, h, d, g, m, y = q.get(e); if (y) { n.handler && (s = n, n = s.handler, o = s.selector), n.guid || (n.guid = x.guid++), (l = y.events) || (l = y.events = {}), (a = y.handle) || (a = y.handle = function (e) { return typeof x === r || e && x.event.triggered === e.type ? undefined : x.event.dispatch.apply(a.elem, arguments) }, a.elem = e), t = (t || "").match(w) || [""], c = t.length; while (c--) u = X.exec(t[c]) || [], d = m = u[1], g = (u[2] || "").split(".").sort(), d && (p = x.event.special[d] || {}, d = (o ? p.delegateType : p.bindType) || d, p = x.event.special[d] || {}, f = x.extend({ type: d, origType: m, data: i, handler: n, guid: n.guid, selector: o, needsContext: o && x.expr.match.needsContext.test(o), namespace: g.join(".") }, s), (h = l[d]) || (h = l[d] = [], h.delegateCount = 0, p.setup && p.setup.call(e, i, g, a) !== !1 || e.addEventListener && e.addEventListener(d, a, !1)), p.add && (p.add.call(e, f), f.handler.guid || (f.handler.guid = n.guid)), o ? h.splice(h.delegateCount++, 0, f) : h.push(f), x.event.global[d] = !0); e = null } }, remove: function (e, t, n, r, i) { var o, s, a, u, l, c, f, p, h, d, g, m = q.hasData(e) && q.get(e); if (m && (u = m.events)) { t = (t || "").match(w) || [""], l = t.length; while (l--) if (a = X.exec(t[l]) || [], h = g = a[1], d = (a[2] || "").split(".").sort(), h) { f = x.event.special[h] || {}, h = (r ? f.delegateType : f.bindType) || h, p = u[h] || [], a = a[2] && RegExp("(^|\\.)" + d.join("\\.(?:.*\\.|)") + "(\\.|$)"), s = o = p.length; while (o--) c = p[o], !i && g !== c.origType || n && n.guid !== c.guid || a && !a.test(c.namespace) || r && r !== c.selector && ("**" !== r || !c.selector) || (p.splice(o, 1), c.selector && p.delegateCount-- , f.remove && f.remove.call(e, c)); s && !p.length && (f.teardown && f.teardown.call(e, d, m.handle) !== !1 || x.removeEvent(e, h, m.handle), delete u[h]) } else for (h in u) x.event.remove(e, h + t[l], n, r, !0); x.isEmptyObject(u) && (delete m.handle, q.remove(e, "events")) } }, trigger: function (t, n, r, i) { var s, a, u, l, c, f, p, h = [r || o], d = y.call(t, "type") ? t.type : t, g = y.call(t, "namespace") ? t.namespace.split(".") : []; if (a = u = r = r || o, 3 !== r.nodeType && 8 !== r.nodeType && !_.test(d + x.event.triggered) && (d.indexOf(".") >= 0 && (g = d.split("."), d = g.shift(), g.sort()), c = 0 > d.indexOf(":") && "on" + d, t = t[x.expando] ? t : new x.Event(d, "object" == typeof t && t), t.isTrigger = i ? 2 : 3, t.namespace = g.join("."), t.namespace_re = t.namespace ? RegExp("(^|\\.)" + g.join("\\.(?:.*\\.|)") + "(\\.|$)") : null, t.result = undefined, t.target || (t.target = r), n = null == n ? [t] : x.makeArray(n, [t]), p = x.event.special[d] || {}, i || !p.trigger || p.trigger.apply(r, n) !== !1)) { if (!i && !p.noBubble && !x.isWindow(r)) { for (l = p.delegateType || d, _.test(l + d) || (a = a.parentNode); a; a = a.parentNode)h.push(a), u = a; u === (r.ownerDocument || o) && h.push(u.defaultView || u.parentWindow || e) } s = 0; while ((a = h[s++]) && !t.isPropagationStopped()) t.type = s > 1 ? l : p.bindType || d, f = (q.get(a, "events") || {})[t.type] && q.get(a, "handle"), f && f.apply(a, n), f = c && a[c], f && x.acceptData(a) && f.apply && f.apply(a, n) === !1 && t.preventDefault(); return t.type = d, i || t.isDefaultPrevented() || p._default && p._default.apply(h.pop(), n) !== !1 || !x.acceptData(r) || c && x.isFunction(r[d]) && !x.isWindow(r) && (u = r[c], u && (r[c] = null), x.event.triggered = d, r[d](), x.event.triggered = undefined, u && (r[c] = u)), t.result } }, dispatch: function (e) { e = x.event.fix(e); var t, n, r, i, o, s = [], a = d.call(arguments), u = (q.get(this, "events") || {})[e.type] || [], l = x.event.special[e.type] || {}; if (a[0] = e, e.delegateTarget = this, !l.preDispatch || l.preDispatch.call(this, e) !== !1) { s = x.event.handlers.call(this, e, u), t = 0; while ((i = s[t++]) && !e.isPropagationStopped()) { e.currentTarget = i.elem, n = 0; while ((o = i.handlers[n++]) && !e.isImmediatePropagationStopped()) (!e.namespace_re || e.namespace_re.test(o.namespace)) && (e.handleObj = o, e.data = o.data, r = ((x.event.special[o.origType] || {}).handle || o.handler).apply(i.elem, a), r !== undefined && (e.result = r) === !1 && (e.preventDefault(), e.stopPropagation())) } return l.postDispatch && l.postDispatch.call(this, e), e.result } }, handlers: function (e, t) { var n, r, i, o, s = [], a = t.delegateCount, u = e.target; if (a && u.nodeType && (!e.button || "click" !== e.type)) for (; u !== this; u = u.parentNode || this)if (u.disabled !== !0 || "click" !== e.type) { for (r = [], n = 0; a > n; n++)o = t[n], i = o.selector + " ", r[i] === undefined && (r[i] = o.needsContext ? x(i, this).index(u) >= 0 : x.find(i, this, null, [u]).length), r[i] && r.push(o); r.length && s.push({ elem: u, handlers: r }) } return t.length > a && s.push({ elem: this, handlers: t.slice(a) }), s }, props: "altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "), fixHooks: {}, keyHooks: { props: "char charCode key keyCode".split(" "), filter: function (e, t) { return null == e.which && (e.which = null != t.charCode ? t.charCode : t.keyCode), e } }, mouseHooks: { props: "button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement".split(" "), filter: function (e, t) { var n, r, i, s = t.button; return null == e.pageX && null != t.clientX && (n = e.target.ownerDocument || o, r = n.documentElement, i = n.body, e.pageX = t.clientX + (r && r.scrollLeft || i && i.scrollLeft || 0) - (r && r.clientLeft || i && i.clientLeft || 0), e.pageY = t.clientY + (r && r.scrollTop || i && i.scrollTop || 0) - (r && r.clientTop || i && i.clientTop || 0)), e.which || s === undefined || (e.which = 1 & s ? 1 : 2 & s ? 3 : 4 & s ? 2 : 0), e } }, fix: function (e) { if (e[x.expando]) return e; var t, n, r, i = e.type, o = e, s = this.fixHooks[i]; s || (this.fixHooks[i] = s = z.test(i) ? this.mouseHooks : I.test(i) ? this.keyHooks : {}), r = s.props ? this.props.concat(s.props) : this.props, e = new x.Event(o), t = r.length; while (t--) n = r[t], e[n] = o[n]; return 3 === e.target.nodeType && (e.target = e.target.parentNode), s.filter ? s.filter(e, o) : e }, special: { load: { noBubble: !0 }, focus: { trigger: function () { return this !== V() && this.focus ? (this.focus(), !1) : undefined }, delegateType: "focusin" }, blur: { trigger: function () { return this === V() && this.blur ? (this.blur(), !1) : undefined }, delegateType: "focusout" }, click: { trigger: function () { return "checkbox" === this.type && this.click && x.nodeName(this, "input") ? (this.click(), !1) : undefined }, _default: function (e) { return x.nodeName(e.target, "a") } }, beforeunload: { postDispatch: function (e) { e.result !== undefined && (e.originalEvent.returnValue = e.result) } } }, simulate: function (e, t, n, r) { var i = x.extend(new x.Event, n, { type: e, isSimulated: !0, originalEvent: {} }); r ? x.event.trigger(i, null, t) : x.event.dispatch.call(t, i), i.isDefaultPrevented() && n.preventDefault() } }, x.removeEvent = function (e, t, n) { e.removeEventListener && e.removeEventListener(t, n, !1) }, x.Event = function (e, t) { return this instanceof x.Event ? (e && e.type ? (this.originalEvent = e, this.type = e.type, this.isDefaultPrevented = e.defaultPrevented || e.getPreventDefault && e.getPreventDefault() ? U : Y) : this.type = e, t && x.extend(this, t), this.timeStamp = e && e.timeStamp || x.now(), this[x.expando] = !0, undefined) : new x.Event(e, t) }, x.Event.prototype = { isDefaultPrevented: Y, isPropagationStopped: Y, isImmediatePropagationStopped: Y, preventDefault: function () { var e = this.originalEvent; this.isDefaultPrevented = U, e && e.preventDefault && e.preventDefault() }, stopPropagation: function () { var e = this.originalEvent; this.isPropagationStopped = U, e && e.stopPropagation && e.stopPropagation() }, stopImmediatePropagation: function () { this.isImmediatePropagationStopped = U, this.stopPropagation() } }, x.each({ mouseenter: "mouseover", mouseleave: "mouseout" }, function (e, t) { x.event.special[e] = { delegateType: t, bindType: t, handle: function (e) { var n, r = this, i = e.relatedTarget, o = e.handleObj; return (!i || i !== r && !x.contains(r, i)) && (e.type = o.origType, n = o.handler.apply(this, arguments), e.type = t), n } } }), x.support.focusinBubbles || x.each({ focus: "focusin", blur: "focusout" }, function (e, t) { var n = 0, r = function (e) { x.event.simulate(t, e.target, x.event.fix(e), !0) }; x.event.special[t] = { setup: function () { 0 === n++ && o.addEventListener(e, r, !0) }, teardown: function () { 0 === --n && o.removeEventListener(e, r, !0) } } }), x.fn.extend({ on: function (e, t, n, r, i) { var o, s; if ("object" == typeof e) { "string" != typeof t && (n = n || t, t = undefined); for (s in e) this.on(s, t, n, e[s], i); return this } if (null == n && null == r ? (r = t, n = t = undefined) : null == r && ("string" == typeof t ? (r = n, n = undefined) : (r = n, n = t, t = undefined)), r === !1) r = Y; else if (!r) return this; return 1 === i && (o = r, r = function (e) { return x().off(e), o.apply(this, arguments) }, r.guid = o.guid || (o.guid = x.guid++)), this.each(function () { x.event.add(this, e, r, n, t) }) }, one: function (e, t, n, r) { return this.on(e, t, n, r, 1) }, off: function (e, t, n) { var r, i; if (e && e.preventDefault && e.handleObj) return r = e.handleObj, x(e.delegateTarget).off(r.namespace ? r.origType + "." + r.namespace : r.origType, r.selector, r.handler), this; if ("object" == typeof e) { for (i in e) this.off(i, t, e[i]); return this } return (t === !1 || "function" == typeof t) && (n = t, t = undefined), n === !1 && (n = Y), this.each(function () { x.event.remove(this, e, n, t) }) }, trigger: function (e, t) { return this.each(function () { x.event.trigger(e, t, this) }) }, triggerHandler: function (e, t) { var n = this[0]; return n ? x.event.trigger(e, t, n, !0) : undefined } }); var G = /^.[^:#\[\.,]*$/, J = x.expr.match.needsContext, Q = { children: !0, contents: !0, next: !0, prev: !0 }; x.fn.extend({ find: function (e) { var t, n, r, i = this.length; if ("string" != typeof e) return t = this, this.pushStack(x(e).filter(function () { for (r = 0; i > r; r++)if (x.contains(t[r], this)) return !0 })); for (n = [], r = 0; i > r; r++)x.find(e, this[r], n); return n = this.pushStack(i > 1 ? x.unique(n) : n), n.selector = (this.selector ? this.selector + " " : "") + e, n }, has: function (e) { var t = x(e, this), n = t.length; return this.filter(function () { var e = 0; for (; n > e; e++)if (x.contains(this, t[e])) return !0 }) }, not: function (e) { return this.pushStack(Z(this, e || [], !0)) }, filter: function (e) { return this.pushStack(Z(this, e || [], !1)) }, is: function (e) { return !!e && ("string" == typeof e ? J.test(e) ? x(e, this.context).index(this[0]) >= 0 : x.filter(e, this).length > 0 : this.filter(e).length > 0) }, closest: function (e, t) { var n, r = 0, i = this.length, o = [], s = J.test(e) || "string" != typeof e ? x(e, t || this.context) : 0; for (; i > r; r++)for (n = this[r]; n && n !== t; n = n.parentNode)if (11 > n.nodeType && (s ? s.index(n) > -1 : 1 === n.nodeType && x.find.matchesSelector(n, e))) { n = o.push(n); break } return this.pushStack(o.length > 1 ? x.unique(o) : o) }, index: function (e) { return e ? "string" == typeof e ? g.call(x(e), this[0]) : g.call(this, e.jquery ? e[0] : e) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1 }, add: function (e, t) { var n = "string" == typeof e ? x(e, t) : x.makeArray(e && e.nodeType ? [e] : e), r = x.merge(this.get(), n); return this.pushStack(x.unique(r)) }, addBack: function (e) { return this.add(null == e ? this.prevObject : this.prevObject.filter(e)) } }); function K(e, t) { while ((e = e[t]) && 1 !== e.nodeType); return e } x.each({ parent: function (e) { var t = e.parentNode; return t && 11 !== t.nodeType ? t : null }, parents: function (e) { return x.dir(e, "parentNode") }, parentsUntil: function (e, t, n) { return x.dir(e, "parentNode", n) }, next: function (e) { return K(e, "nextSibling") }, prev: function (e) { return K(e, "previousSibling") }, nextAll: function (e) { return x.dir(e, "nextSibling") }, prevAll: function (e) { return x.dir(e, "previousSibling") }, nextUntil: function (e, t, n) { return x.dir(e, "nextSibling", n) }, prevUntil: function (e, t, n) { return x.dir(e, "previousSibling", n) }, siblings: function (e) { return x.sibling((e.parentNode || {}).firstChild, e) }, children: function (e) { return x.sibling(e.firstChild) }, contents: function (e) { return x.nodeName(e, "iframe") ? e.contentDocument || e.contentWindow.document : x.merge([], e.childNodes) } }, function (e, t) { x.fn[e] = function (n, r) { var i = x.map(this, t, n); return "Until" !== e.slice(-5) && (r = n), r && "string" == typeof r && (i = x.filter(r, i)), this.length > 1 && (Q[e] || x.unique(i), "p" === e[0] && i.reverse()), this.pushStack(i) } }), x.extend({ filter: function (e, t, n) { var r = t[0]; return n && (e = ":not(" + e + ")"), 1 === t.length && 1 === r.nodeType ? x.find.matchesSelector(r, e) ? [r] : [] : x.find.matches(e, x.grep(t, function (e) { return 1 === e.nodeType })) }, dir: function (e, t, n) { var r = [], i = n !== undefined; while ((e = e[t]) && 9 !== e.nodeType) if (1 === e.nodeType) { if (i && x(e).is(n)) break; r.push(e) } return r }, sibling: function (e, t) { var n = []; for (; e; e = e.nextSibling)1 === e.nodeType && e !== t && n.push(e); return n } }); function Z(e, t, n) { if (x.isFunction(t)) return x.grep(e, function (e, r) { return !!t.call(e, r, e) !== n }); if (t.nodeType) return x.grep(e, function (e) { return e === t !== n }); if ("string" == typeof t) { if (G.test(t)) return x.filter(t, e, n); t = x.filter(t, e) } return x.grep(e, function (e) { return g.call(t, e) >= 0 !== n }) } var et = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi, tt = /<([\w:]+)/, nt = /<|&#?\w+;/, rt = /<(?:script|style|link)/i, it = /^(?:checkbox|radio)$/i, ot = /checked\s*(?:[^=]|=\s*.checked.)/i, st = /^$|\/(?:java|ecma)script/i, at = /^true\/(.*)/, ut = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g, lt = { option: [1, "<select multiple='multiple'>", "</select>"], thead: [1, "<table>", "</table>"], tr: [2, "<table><tbody>", "</tbody></table>"], td: [3, "<table><tbody><tr>", "</tr></tbody></table>"], _default: [0, "", ""] }; lt.optgroup = lt.option, lt.tbody = lt.tfoot = lt.colgroup = lt.caption = lt.col = lt.thead, lt.th = lt.td, x.fn.extend({ text: function (e) { return x.access(this, function (e) { return e === undefined ? x.text(this) : this.empty().append((this[0] && this[0].ownerDocument || o).createTextNode(e)) }, null, e, arguments.length) }, append: function () { return this.domManip(arguments, function (e) { if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) { var t = ct(this, e); t.appendChild(e) } }) }, prepend: function () { return this.domManip(arguments, function (e) { if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) { var t = ct(this, e); t.insertBefore(e, t.firstChild) } }) }, before: function () { return this.domManip(arguments, function (e) { this.parentNode && this.parentNode.insertBefore(e, this) }) }, after: function () { return this.domManip(arguments, function (e) { this.parentNode && this.parentNode.insertBefore(e, this.nextSibling) }) }, remove: function (e, t) { var n, r = e ? x.filter(e, this) : this, i = 0; for (; null != (n = r[i]); i++)t || 1 !== n.nodeType || x.cleanData(gt(n)), n.parentNode && (t && x.contains(n.ownerDocument, n) && ht(gt(n, "script")), n.parentNode.removeChild(n)); return this }, empty: function () { var e, t = 0; for (; null != (e = this[t]); t++)1 === e.nodeType && (x.cleanData(gt(e, !1)), e.textContent = ""); return this }, clone: function (e, t) { return e = null == e ? !1 : e, t = null == t ? e : t, this.map(function () { return x.clone(this, e, t) }) }, html: function (e) { return x.access(this, function (e) { var t = this[0] || {}, n = 0, r = this.length; if (e === undefined && 1 === t.nodeType) return t.innerHTML; if ("string" == typeof e && !rt.test(e) && !lt[(tt.exec(e) || ["", ""])[1].toLowerCase()]) { e = e.replace(et, "<$1></$2>"); try { for (; r > n; n++)t = this[n] || {}, 1 === t.nodeType && (x.cleanData(gt(t, !1)), t.innerHTML = e); t = 0 } catch (i) { } } t && this.empty().append(e) }, null, e, arguments.length) }, replaceWith: function () { var e = x.map(this, function (e) { return [e.nextSibling, e.parentNode] }), t = 0; return this.domManip(arguments, function (n) { var r = e[t++], i = e[t++]; i && (x(this).remove(), i.insertBefore(n, r)) }, !0), t ? this : this.remove() }, detach: function (e) { return this.remove(e, !0) }, domManip: function (e, t, n) { e = p.apply([], e); var r, i, o, s, a, u, l = 0, c = this.length, f = this, h = c - 1, d = e[0], g = x.isFunction(d); if (g || !(1 >= c || "string" != typeof d || x.support.checkClone) && ot.test(d)) return this.each(function (r) { var i = f.eq(r); g && (e[0] = d.call(this, r, i.html())), i.domManip(e, t, n) }); if (c && (r = x.buildFragment(e, this[0].ownerDocument, !1, !n && this), i = r.firstChild, 1 === r.childNodes.length && (r = i), i)) { for (o = x.map(gt(r, "script"), ft), s = o.length; c > l; l++)a = r, l !== h && (a = x.clone(a, !0, !0), s && x.merge(o, gt(a, "script"))), t.call(this[l], a, l); if (s) for (u = o[o.length - 1].ownerDocument, x.map(o, pt), l = 0; s > l; l++)a = o[l], st.test(a.type || "") && !q.access(a, "globalEval") && x.contains(u, a) && (a.src ? x._evalUrl(a.src) : x.globalEval(a.textContent.replace(ut, ""))) } return this } }), x.each({ appendTo: "append", prependTo: "prepend", insertBefore: "before", insertAfter: "after", replaceAll: "replaceWith" }, function (e, t) { x.fn[e] = function (e) { var n, r = [], i = x(e), o = i.length - 1, s = 0; for (; o >= s; s++)n = s === o ? this : this.clone(!0), x(i[s])[t](n), h.apply(r, n.get()); return this.pushStack(r) } }), x.extend({ clone: function (e, t, n) { var r, i, o, s, a = e.cloneNode(!0), u = x.contains(e.ownerDocument, e); if (!(x.support.noCloneChecked || 1 !== e.nodeType && 11 !== e.nodeType || x.isXMLDoc(e))) for (s = gt(a), o = gt(e), r = 0, i = o.length; i > r; r++)mt(o[r], s[r]); if (t) if (n) for (o = o || gt(e), s = s || gt(a), r = 0, i = o.length; i > r; r++)dt(o[r], s[r]); else dt(e, a); return s = gt(a, "script"), s.length > 0 && ht(s, !u && gt(e, "script")), a }, buildFragment: function (e, t, n, r) { var i, o, s, a, u, l, c = 0, f = e.length, p = t.createDocumentFragment(), h = []; for (; f > c; c++)if (i = e[c], i || 0 === i) if ("object" === x.type(i)) x.merge(h, i.nodeType ? [i] : i); else if (nt.test(i)) { o = o || p.appendChild(t.createElement("div")), s = (tt.exec(i) || ["", ""])[1].toLowerCase(), a = lt[s] || lt._default, o.innerHTML = a[1] + i.replace(et, "<$1></$2>") + a[2], l = a[0]; while (l--) o = o.firstChild; x.merge(h, o.childNodes), o = p.firstChild, o.textContent = "" } else h.push(t.createTextNode(i)); p.textContent = "", c = 0; while (i = h[c++]) if ((!r || -1 === x.inArray(i, r)) && (u = x.contains(i.ownerDocument, i), o = gt(p.appendChild(i), "script"), u && ht(o), n)) { l = 0; while (i = o[l++]) st.test(i.type || "") && n.push(i) } return p }, cleanData: function (e) { var t, n, r, i = e.length, o = 0, s = x.event.special; for (; i > o; o++) { if (n = e[o], x.acceptData(n) && (t = q.access(n))) for (r in t.events) s[r] ? x.event.remove(n, r) : x.removeEvent(n, r, t.handle); L.discard(n), q.discard(n) } }, _evalUrl: function (e) { return x.ajax({ url: e, type: "GET", dataType: "text", async: !1, global: !1, success: x.globalEval }) } }); function ct(e, t) { return x.nodeName(e, "table") && x.nodeName(1 === t.nodeType ? t : t.firstChild, "tr") ? e.getElementsByTagName("tbody")[0] || e.appendChild(e.ownerDocument.createElement("tbody")) : e } function ft(e) { return e.type = (null !== e.getAttribute("type")) + "/" + e.type, e } function pt(e) { var t = at.exec(e.type); return t ? e.type = t[1] : e.removeAttribute("type"), e } function ht(e, t) { var n = e.length, r = 0; for (; n > r; r++)q.set(e[r], "globalEval", !t || q.get(t[r], "globalEval")) } function dt(e, t) { var n, r, i, o, s, a, u, l; if (1 === t.nodeType) { if (q.hasData(e) && (o = q.access(e), s = x.extend({}, o), l = o.events, q.set(t, s), l)) { delete s.handle, s.events = {}; for (i in l) for (n = 0, r = l[i].length; r > n; n++)x.event.add(t, i, l[i][n]) } L.hasData(e) && (a = L.access(e), u = x.extend({}, a), L.set(t, u)) } } function gt(e, t) { var n = e.getElementsByTagName ? e.getElementsByTagName(t || "*") : e.querySelectorAll ? e.querySelectorAll(t || "*") : []; return t === undefined || t && x.nodeName(e, t) ? x.merge([e], n) : n } function mt(e, t) { var n = t.nodeName.toLowerCase(); "input" === n && it.test(e.type) ? t.checked = e.checked : ("input" === n || "textarea" === n) && (t.defaultValue = e.defaultValue) } x.fn.extend({ wrapAll: function (e) { var t; return x.isFunction(e) ? this.each(function (t) { x(this).wrapAll(e.call(this, t)) }) : (this[0] && (t = x(e, this[0].ownerDocument).eq(0).clone(!0), this[0].parentNode && t.insertBefore(this[0]), t.map(function () { var e = this; while (e.firstElementChild) e = e.firstElementChild; return e }).append(this)), this) }, wrapInner: function (e) { return x.isFunction(e) ? this.each(function (t) { x(this).wrapInner(e.call(this, t)) }) : this.each(function () { var t = x(this), n = t.contents(); n.length ? n.wrapAll(e) : t.append(e) }) }, wrap: function (e) { var t = x.isFunction(e); return this.each(function (n) { x(this).wrapAll(t ? e.call(this, n) : e) }) }, unwrap: function () { return this.parent().each(function () { x.nodeName(this, "body") || x(this).replaceWith(this.childNodes) }).end() } }); var yt, vt, xt = /^(none|table(?!-c[ea]).+)/, bt = /^margin/, wt = RegExp("^(" + b + ")(.*)$", "i"), Tt = RegExp("^(" + b + ")(?!px)[a-z%]+$", "i"), Ct = RegExp("^([+-])=(" + b + ")", "i"), kt = { BODY: "block" }, Nt = { position: "absolute", visibility: "hidden", display: "block" }, Et = { letterSpacing: 0, fontWeight: 400 }, St = ["Top", "Right", "Bottom", "Left"], jt = ["Webkit", "O", "Moz", "ms"]; function Dt(e, t) { if (t in e) return t; var n = t.charAt(0).toUpperCase() + t.slice(1), r = t, i = jt.length; while (i--) if (t = jt[i] + n, t in e) return t; return r } function At(e, t) { return e = t || e, "none" === x.css(e, "display") || !x.contains(e.ownerDocument, e) } function Lt(t) { return e.getComputedStyle(t, null) } function qt(e, t) { var n, r, i, o = [], s = 0, a = e.length; for (; a > s; s++)r = e[s], r.style && (o[s] = q.get(r, "olddisplay"), n = r.style.display, t ? (o[s] || "none" !== n || (r.style.display = ""), "" === r.style.display && At(r) && (o[s] = q.access(r, "olddisplay", Pt(r.nodeName)))) : o[s] || (i = At(r), (n && "none" !== n || !i) && q.set(r, "olddisplay", i ? n : x.css(r, "display")))); for (s = 0; a > s; s++)r = e[s], r.style && (t && "none" !== r.style.display && "" !== r.style.display || (r.style.display = t ? o[s] || "" : "none")); return e } x.fn.extend({ css: function (e, t) { return x.access(this, function (e, t, n) { var r, i, o = {}, s = 0; if (x.isArray(t)) { for (r = Lt(e), i = t.length; i > s; s++)o[t[s]] = x.css(e, t[s], !1, r); return o } return n !== undefined ? x.style(e, t, n) : x.css(e, t) }, e, t, arguments.length > 1) }, show: function () { return qt(this, !0) }, hide: function () { return qt(this) }, toggle: function (e) { var t = "boolean" == typeof e; return this.each(function () { (t ? e : At(this)) ? x(this).show() : x(this).hide() }) } }), x.extend({ cssHooks: { opacity: { get: function (e, t) { if (t) { var n = yt(e, "opacity"); return "" === n ? "1" : n } } } }, cssNumber: { columnCount: !0, fillOpacity: !0, fontWeight: !0, lineHeight: !0, opacity: !0, orphans: !0, widows: !0, zIndex: !0, zoom: !0 }, cssProps: { "float": "cssFloat" }, style: function (e, t, n, r) { if (e && 3 !== e.nodeType && 8 !== e.nodeType && e.style) { var i, o, s, a = x.camelCase(t), u = e.style; return t = x.cssProps[a] || (x.cssProps[a] = Dt(u, a)), s = x.cssHooks[t] || x.cssHooks[a], n === undefined ? s && "get" in s && (i = s.get(e, !1, r)) !== undefined ? i : u[t] : (o = typeof n, "string" === o && (i = Ct.exec(n)) && (n = (i[1] + 1) * i[2] + parseFloat(x.css(e, t)), o = "number"), null == n || "number" === o && isNaN(n) || ("number" !== o || x.cssNumber[a] || (n += "px"), x.support.clearCloneStyle || "" !== n || 0 !== t.indexOf("background") || (u[t] = "inherit"), s && "set" in s && (n = s.set(e, n, r)) === undefined || (u[t] = n)), undefined) } }, css: function (e, t, n, r) { var i, o, s, a = x.camelCase(t); return t = x.cssProps[a] || (x.cssProps[a] = Dt(e.style, a)), s = x.cssHooks[t] || x.cssHooks[a], s && "get" in s && (i = s.get(e, !0, n)), i === undefined && (i = yt(e, t, r)), "normal" === i && t in Et && (i = Et[t]), "" === n || n ? (o = parseFloat(i), n === !0 || x.isNumeric(o) ? o || 0 : i) : i } }), yt = function (e, t, n) { var r, i, o, s = n || Lt(e), a = s ? s.getPropertyValue(t) || s[t] : undefined, u = e.style; return s && ("" !== a || x.contains(e.ownerDocument, e) || (a = x.style(e, t)), Tt.test(a) && bt.test(t) && (r = u.width, i = u.minWidth, o = u.maxWidth, u.minWidth = u.maxWidth = u.width = a, a = s.width, u.width = r, u.minWidth = i, u.maxWidth = o)), a }; function Ht(e, t, n) { var r = wt.exec(t); return r ? Math.max(0, r[1] - (n || 0)) + (r[2] || "px") : t } function Ot(e, t, n, r, i) { var o = n === (r ? "border" : "content") ? 4 : "width" === t ? 1 : 0, s = 0; for (; 4 > o; o += 2)"margin" === n && (s += x.css(e, n + St[o], !0, i)), r ? ("content" === n && (s -= x.css(e, "padding" + St[o], !0, i)), "margin" !== n && (s -= x.css(e, "border" + St[o] + "Width", !0, i))) : (s += x.css(e, "padding" + St[o], !0, i), "padding" !== n && (s += x.css(e, "border" + St[o] + "Width", !0, i))); return s } function Ft(e, t, n) { var r = !0, i = "width" === t ? e.offsetWidth : e.offsetHeight, o = Lt(e), s = x.support.boxSizing && "border-box" === x.css(e, "boxSizing", !1, o); if (0 >= i || null == i) { if (i = yt(e, t, o), (0 > i || null == i) && (i = e.style[t]), Tt.test(i)) return i; r = s && (x.support.boxSizingReliable || i === e.style[t]), i = parseFloat(i) || 0 } return i + Ot(e, t, n || (s ? "border" : "content"), r, o) + "px" } function Pt(e) { var t = o, n = kt[e]; return n || (n = Rt(e, t), "none" !== n && n || (vt = (vt || x("<iframe frameborder='0' width='0' height='0'/>").css("cssText", "display:block !important")).appendTo(t.documentElement), t = (vt[0].contentWindow || vt[0].contentDocument).document, t.write("<!doctype html><html><body>"), t.close(), n = Rt(e, t), vt.detach()), kt[e] = n), n } function Rt(e, t) { var n = x(t.createElement(e)).appendTo(t.body), r = x.css(n[0], "display"); return n.remove(), r } x.each(["height", "width"], function (e, t) { x.cssHooks[t] = { get: function (e, n, r) { return n ? 0 === e.offsetWidth && xt.test(x.css(e, "display")) ? x.swap(e, Nt, function () { return Ft(e, t, r) }) : Ft(e, t, r) : undefined }, set: function (e, n, r) { var i = r && Lt(e); return Ht(e, n, r ? Ot(e, t, r, x.support.boxSizing && "border-box" === x.css(e, "boxSizing", !1, i), i) : 0) } } }), x(function () { x.support.reliableMarginRight || (x.cssHooks.marginRight = { get: function (e, t) { return t ? x.swap(e, { display: "inline-block" }, yt, [e, "marginRight"]) : undefined } }), !x.support.pixelPosition && x.fn.position && x.each(["top", "left"], function (e, t) { x.cssHooks[t] = { get: function (e, n) { return n ? (n = yt(e, t), Tt.test(n) ? x(e).position()[t] + "px" : n) : undefined } } }) }), x.expr && x.expr.filters && (x.expr.filters.hidden = function (e) { return 0 >= e.offsetWidth && 0 >= e.offsetHeight }, x.expr.filters.visible = function (e) { return !x.expr.filters.hidden(e) }), x.each({ margin: "", padding: "", border: "Width" }, function (e, t) { x.cssHooks[e + t] = { expand: function (n) { var r = 0, i = {}, o = "string" == typeof n ? n.split(" ") : [n]; for (; 4 > r; r++)i[e + St[r] + t] = o[r] || o[r - 2] || o[0]; return i } }, bt.test(e) || (x.cssHooks[e + t].set = Ht) }); var Mt = /%20/g, Wt = /\[\]$/, $t = /\r?\n/g, Bt = /^(?:submit|button|image|reset|file)$/i, It = /^(?:input|select|textarea|keygen)/i; x.fn.extend({ serialize: function () { return x.param(this.serializeArray()) }, serializeArray: function () { return this.map(function () { var e = x.prop(this, "elements"); return e ? x.makeArray(e) : this }).filter(function () { var e = this.type; return this.name && !x(this).is(":disabled") && It.test(this.nodeName) && !Bt.test(e) && (this.checked || !it.test(e)) }).map(function (e, t) { var n = x(this).val(); return null == n ? null : x.isArray(n) ? x.map(n, function (e) { return { name: t.name, value: e.replace($t, "\r\n") } }) : { name: t.name, value: n.replace($t, "\r\n") } }).get() } }), x.param = function (e, t) { var n, r = [], i = function (e, t) { t = x.isFunction(t) ? t() : null == t ? "" : t, r[r.length] = encodeURIComponent(e) + "=" + encodeURIComponent(t) }; if (t === undefined && (t = x.ajaxSettings && x.ajaxSettings.traditional), x.isArray(e) || e.jquery && !x.isPlainObject(e)) x.each(e, function () { i(this.name, this.value) }); else for (n in e) zt(n, e[n], t, i); return r.join("&").replace(Mt, "+") }; function zt(e, t, n, r) { var i; if (x.isArray(t)) x.each(t, function (t, i) { n || Wt.test(e) ? r(e, i) : zt(e + "[" + ("object" == typeof i ? t : "") + "]", i, n, r) }); else if (n || "object" !== x.type(t)) r(e, t); else for (i in t) zt(e + "[" + i + "]", t[i], n, r) } x.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "), function (e, t) { x.fn[t] = function (e, n) { return arguments.length > 0 ? this.on(t, null, e, n) : this.trigger(t) } }), x.fn.extend({ hover: function (e, t) { return this.mouseenter(e).mouseleave(t || e) }, bind: function (e, t, n) { return this.on(e, null, t, n) }, unbind: function (e, t) { return this.off(e, null, t) }, delegate: function (e, t, n, r) { return this.on(t, e, n, r) }, undelegate: function (e, t, n) { return 1 === arguments.length ? this.off(e, "**") : this.off(t, e || "**", n) } }); var _t, Xt, Ut = x.now(), Yt = /\?/, Vt = /#.*$/, Gt = /([?&])_=[^&]*/, Jt = /^(.*?):[ \t]*([^\r\n]*)$/gm, Qt = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/, Kt = /^(?:GET|HEAD)$/, Zt = /^\/\//, en = /^([\w.+-]+:)(?:\/\/([^\/?#:]*)(?::(\d+)|)|)/, tn = x.fn.load, nn = {}, rn = {}, on = "*/".concat("*"); try { Xt = i.href } catch (sn) { Xt = o.createElement("a"), Xt.href = "", Xt = Xt.href } _t = en.exec(Xt.toLowerCase()) || []; function an(e) {
        return function (t, n) {
        "string" != typeof t && (n = t, t = "*"); var r, i = 0, o = t.toLowerCase().match(w) || [];
            if (x.isFunction(n)) while (r = o[i++]) "+" === r[0] ? (r = r.slice(1) || "*", (e[r] = e[r] || []).unshift(n)) : (e[r] = e[r] || []).push(n)
        }
    } function un(e, t, n, r) { var i = {}, o = e === rn; function s(a) { var u; return i[a] = !0, x.each(e[a] || [], function (e, a) { var l = a(t, n, r); return "string" != typeof l || o || i[l] ? o ? !(u = l) : undefined : (t.dataTypes.unshift(l), s(l), !1) }), u } return s(t.dataTypes[0]) || !i["*"] && s("*") } function ln(e, t) { var n, r, i = x.ajaxSettings.flatOptions || {}; for (n in t) t[n] !== undefined && ((i[n] ? e : r || (r = {}))[n] = t[n]); return r && x.extend(!0, e, r), e } x.fn.load = function (e, t, n) { if ("string" != typeof e && tn) return tn.apply(this, arguments); var r, i, o, s = this, a = e.indexOf(" "); return a >= 0 && (r = e.slice(a), e = e.slice(0, a)), x.isFunction(t) ? (n = t, t = undefined) : t && "object" == typeof t && (i = "POST"), s.length > 0 && x.ajax({ url: e, type: i, dataType: "html", data: t }).done(function (e) { o = arguments, s.html(r ? x("<div>").append(x.parseHTML(e)).find(r) : e) }).complete(n && function (e, t) { s.each(n, o || [e.responseText, t, e]) }), this }, x.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], function (e, t) { x.fn[t] = function (e) { return this.on(t, e) } }), x.extend({ active: 0, lastModified: {}, etag: {}, ajaxSettings: { url: Xt, type: "GET", isLocal: Qt.test(_t[1]), global: !0, processData: !0, async: !0, contentType: "application/x-www-form-urlencoded; charset=UTF-8", accepts: { "*": on, text: "text/plain", html: "text/html", xml: "application/xml, text/xml", json: "application/json, text/javascript" }, contents: { xml: /xml/, html: /html/, json: /json/ }, responseFields: { xml: "responseXML", text: "responseText", json: "responseJSON" }, converters: { "* text": String, "text html": !0, "text json": x.parseJSON, "text xml": x.parseXML }, flatOptions: { url: !0, context: !0 } }, ajaxSetup: function (e, t) { return t ? ln(ln(e, x.ajaxSettings), t) : ln(x.ajaxSettings, e) }, ajaxPrefilter: an(nn), ajaxTransport: an(rn), ajax: function (e, t) { "object" == typeof e && (t = e, e = undefined), t = t || {}; var n, r, i, o, s, a, u, l, c = x.ajaxSetup({}, t), f = c.context || c, p = c.context && (f.nodeType || f.jquery) ? x(f) : x.event, h = x.Deferred(), d = x.Callbacks("once memory"), g = c.statusCode || {}, m = {}, y = {}, v = 0, b = "canceled", T = { readyState: 0, getResponseHeader: function (e) { var t; if (2 === v) { if (!o) { o = {}; while (t = Jt.exec(i)) o[t[1].toLowerCase()] = t[2] } t = o[e.toLowerCase()] } return null == t ? null : t }, getAllResponseHeaders: function () { return 2 === v ? i : null }, setRequestHeader: function (e, t) { var n = e.toLowerCase(); return v || (e = y[n] = y[n] || e, m[e] = t), this }, overrideMimeType: function (e) { return v || (c.mimeType = e), this }, statusCode: function (e) { var t; if (e) if (2 > v) for (t in e) g[t] = [g[t], e[t]]; else T.always(e[T.status]); return this }, abort: function (e) { var t = e || b; return n && n.abort(t), k(0, t), this } }; if (h.promise(T).complete = d.add, T.success = T.done, T.error = T.fail, c.url = ((e || c.url || Xt) + "").replace(Vt, "").replace(Zt, _t[1] + "//"), c.type = t.method || t.type || c.method || c.type, c.dataTypes = x.trim(c.dataType || "*").toLowerCase().match(w) || [""], null == c.crossDomain && (a = en.exec(c.url.toLowerCase()), c.crossDomain = !(!a || a[1] === _t[1] && a[2] === _t[2] && (a[3] || ("http:" === a[1] ? "80" : "443")) === (_t[3] || ("http:" === _t[1] ? "80" : "443")))), c.data && c.processData && "string" != typeof c.data && (c.data = x.param(c.data, c.traditional)), un(nn, c, t, T), 2 === v) return T; u = c.global, u && 0 === x.active++ && x.event.trigger("ajaxStart"), c.type = c.type.toUpperCase(), c.hasContent = !Kt.test(c.type), r = c.url, c.hasContent || (c.data && (r = c.url += (Yt.test(r) ? "&" : "?") + c.data, delete c.data), c.cache === !1 && (c.url = Gt.test(r) ? r.replace(Gt, "$1_=" + Ut++) : r + (Yt.test(r) ? "&" : "?") + "_=" + Ut++)), c.ifModified && (x.lastModified[r] && T.setRequestHeader("If-Modified-Since", x.lastModified[r]), x.etag[r] && T.setRequestHeader("If-None-Match", x.etag[r])), (c.data && c.hasContent && c.contentType !== !1 || t.contentType) && T.setRequestHeader("Content-Type", c.contentType), T.setRequestHeader("Accept", c.dataTypes[0] && c.accepts[c.dataTypes[0]] ? c.accepts[c.dataTypes[0]] + ("*" !== c.dataTypes[0] ? ", " + on + "; q=0.01" : "") : c.accepts["*"]); for (l in c.headers) T.setRequestHeader(l, c.headers[l]); if (c.beforeSend && (c.beforeSend.call(f, T, c) === !1 || 2 === v)) return T.abort(); b = "abort"; for (l in { success: 1, error: 1, complete: 1 }) T[l](c[l]); if (n = un(rn, c, t, T)) { T.readyState = 1, u && p.trigger("ajaxSend", [T, c]), c.async && c.timeout > 0 && (s = setTimeout(function () { T.abort("timeout") }, c.timeout)); try { v = 1, n.send(m, k) } catch (C) { if (!(2 > v)) throw C; k(-1, C) } } else k(-1, "No Transport"); function k(e, t, o, a) { var l, m, y, b, w, C = t; 2 !== v && (v = 2, s && clearTimeout(s), n = undefined, i = a || "", T.readyState = e > 0 ? 4 : 0, l = e >= 200 && 300 > e || 304 === e, o && (b = cn(c, T, o)), b = fn(c, b, T, l), l ? (c.ifModified && (w = T.getResponseHeader("Last-Modified"), w && (x.lastModified[r] = w), w = T.getResponseHeader("etag"), w && (x.etag[r] = w)), 204 === e ? C = "nocontent" : 304 === e ? C = "notmodified" : (C = b.state, m = b.data, y = b.error, l = !y)) : (y = C, (e || !C) && (C = "error", 0 > e && (e = 0))), T.status = e, T.statusText = (t || C) + "", l ? h.resolveWith(f, [m, C, T]) : h.rejectWith(f, [T, C, y]), T.statusCode(g), g = undefined, u && p.trigger(l ? "ajaxSuccess" : "ajaxError", [T, c, l ? m : y]), d.fireWith(f, [T, C]), u && (p.trigger("ajaxComplete", [T, c]), --x.active || x.event.trigger("ajaxStop"))) } return T }, getJSON: function (e, t, n) { return x.get(e, t, n, "json") }, getScript: function (e, t) { return x.get(e, undefined, t, "script") } }), x.each(["get", "post"], function (e, t) { x[t] = function (e, n, r, i) { return x.isFunction(n) && (i = i || r, r = n, n = undefined), x.ajax({ url: e, type: t, dataType: i, data: n, success: r }) } }); function cn(e, t, n) { var r, i, o, s, a = e.contents, u = e.dataTypes; while ("*" === u[0]) u.shift(), r === undefined && (r = e.mimeType || t.getResponseHeader("Content-Type")); if (r) for (i in a) if (a[i] && a[i].test(r)) { u.unshift(i); break } if (u[0] in n) o = u[0]; else { for (i in n) { if (!u[0] || e.converters[i + " " + u[0]]) { o = i; break } s || (s = i) } o = o || s } return o ? (o !== u[0] && u.unshift(o), n[o]) : undefined } function fn(e, t, n, r) { var i, o, s, a, u, l = {}, c = e.dataTypes.slice(); if (c[1]) for (s in e.converters) l[s.toLowerCase()] = e.converters[s]; o = c.shift(); while (o) if (e.responseFields[o] && (n[e.responseFields[o]] = t), !u && r && e.dataFilter && (t = e.dataFilter(t, e.dataType)), u = o, o = c.shift()) if ("*" === o) o = u; else if ("*" !== u && u !== o) { if (s = l[u + " " + o] || l["* " + o], !s) for (i in l) if (a = i.split(" "), a[1] === o && (s = l[u + " " + a[0]] || l["* " + a[0]])) { s === !0 ? s = l[i] : l[i] !== !0 && (o = a[0], c.unshift(a[1])); break } if (s !== !0) if (s && e["throws"]) t = s(t); else try { t = s(t) } catch (f) { return { state: "parsererror", error: s ? f : "No conversion from " + u + " to " + o } } } return { state: "success", data: t } } x.ajaxSetup({ accepts: { script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript" }, contents: { script: /(?:java|ecma)script/ }, converters: { "text script": function (e) { return x.globalEval(e), e } } }), x.ajaxPrefilter("script", function (e) { e.cache === undefined && (e.cache = !1), e.crossDomain && (e.type = "GET") }), x.ajaxTransport("script", function (e) { if (e.crossDomain) { var t, n; return { send: function (r, i) { t = x("<script>").prop({ async: !0, charset: e.scriptCharset, src: e.url }).on("load error", n = function (e) { t.remove(), n = null, e && i("error" === e.type ? 404 : 200, e.type) }), o.head.appendChild(t[0]) }, abort: function () { n && n() } } } }); var pn = [], hn = /(=)\?(?=&|$)|\?\?/; x.ajaxSetup({ jsonp: "callback", jsonpCallback: function () { var e = pn.pop() || x.expando + "_" + Ut++; return this[e] = !0, e } }), x.ajaxPrefilter("json jsonp", function (t, n, r) { var i, o, s, a = t.jsonp !== !1 && (hn.test(t.url) ? "url" : "string" == typeof t.data && !(t.contentType || "").indexOf("application/x-www-form-urlencoded") && hn.test(t.data) && "data"); return a || "jsonp" === t.dataTypes[0] ? (i = t.jsonpCallback = x.isFunction(t.jsonpCallback) ? t.jsonpCallback() : t.jsonpCallback, a ? t[a] = t[a].replace(hn, "$1" + i) : t.jsonp !== !1 && (t.url += (Yt.test(t.url) ? "&" : "?") + t.jsonp + "=" + i), t.converters["script json"] = function () { return s || x.error(i + " was not called"), s[0] }, t.dataTypes[0] = "json", o = e[i], e[i] = function () { s = arguments }, r.always(function () { e[i] = o, t[i] && (t.jsonpCallback = n.jsonpCallback, pn.push(i)), s && x.isFunction(o) && o(s[0]), s = o = undefined }), "script") : undefined }), x.ajaxSettings.xhr = function () { try { return new XMLHttpRequest } catch (e) { } }; var dn = x.ajaxSettings.xhr(), gn = { 0: 200, 1223: 204 }, mn = 0, yn = {}; e.ActiveXObject && x(e).on("unload", function () { for (var e in yn) yn[e](); yn = undefined }), x.support.cors = !!dn && "withCredentials" in dn, x.support.ajax = dn = !!dn, x.ajaxTransport(function (e) { var t; return x.support.cors || dn && !e.crossDomain ? { send: function (n, r) { var i, o, s = e.xhr(); if (s.open(e.type, e.url, e.async, e.username, e.password), e.xhrFields) for (i in e.xhrFields) s[i] = e.xhrFields[i]; e.mimeType && s.overrideMimeType && s.overrideMimeType(e.mimeType), e.crossDomain || n["X-Requested-With"] || (n["X-Requested-With"] = "XMLHttpRequest"); for (i in n) s.setRequestHeader(i, n[i]); t = function (e) { return function () { t && (delete yn[o], t = s.onload = s.onerror = null, "abort" === e ? s.abort() : "error" === e ? r(s.status || 404, s.statusText) : r(gn[s.status] || s.status, s.statusText, "string" == typeof s.responseText ? { text: s.responseText } : undefined, s.getAllResponseHeaders())) } }, s.onload = t(), s.onerror = t("error"), t = yn[o = mn++] = t("abort"), s.send(e.hasContent && e.data || null) }, abort: function () { t && t() } } : undefined }); var vn, xn, bn = /^(?:toggle|show|hide)$/, wn = RegExp("^(?:([+-])=|)(" + b + ")([a-z%]*)$", "i"), Tn = /queueHooks$/, Cn = [Dn], kn = { "*": [function (e, t) { var n, r, i = this.createTween(e, t), o = wn.exec(t), s = i.cur(), a = +s || 0, u = 1, l = 20; if (o) { if (n = +o[2], r = o[3] || (x.cssNumber[e] ? "" : "px"), "px" !== r && a) { a = x.css(i.elem, e, !0) || n || 1; do u = u || ".5", a /= u, x.style(i.elem, e, a + r); while (u !== (u = i.cur() / s) && 1 !== u && --l) } i.unit = r, i.start = a, i.end = o[1] ? a + (o[1] + 1) * n : n } return i }] }; function Nn() { return setTimeout(function () { vn = undefined }), vn = x.now() } function En(e, t) { x.each(t, function (t, n) { var r = (kn[t] || []).concat(kn["*"]), i = 0, o = r.length; for (; o > i; i++)if (r[i].call(e, t, n)) return }) } function Sn(e, t, n) { var r, i, o = 0, s = Cn.length, a = x.Deferred().always(function () { delete u.elem }), u = function () { if (i) return !1; var t = vn || Nn(), n = Math.max(0, l.startTime + l.duration - t), r = n / l.duration || 0, o = 1 - r, s = 0, u = l.tweens.length; for (; u > s; s++)l.tweens[s].run(o); return a.notifyWith(e, [l, o, n]), 1 > o && u ? n : (a.resolveWith(e, [l]), !1) }, l = a.promise({ elem: e, props: x.extend({}, t), opts: x.extend(!0, { specialEasing: {} }, n), originalProperties: t, originalOptions: n, startTime: vn || Nn(), duration: n.duration, tweens: [], createTween: function (t, n) { var r = x.Tween(e, l.opts, t, n, l.opts.specialEasing[t] || l.opts.easing); return l.tweens.push(r), r }, stop: function (t) { var n = 0, r = t ? l.tweens.length : 0; if (i) return this; for (i = !0; r > n; n++)l.tweens[n].run(1); return t ? a.resolveWith(e, [l, t]) : a.rejectWith(e, [l, t]), this } }), c = l.props; for (jn(c, l.opts.specialEasing); s > o; o++)if (r = Cn[o].call(l, e, c, l.opts)) return r; return En(l, c), x.isFunction(l.opts.start) && l.opts.start.call(e, l), x.fx.timer(x.extend(u, { elem: e, anim: l, queue: l.opts.queue })), l.progress(l.opts.progress).done(l.opts.done, l.opts.complete).fail(l.opts.fail).always(l.opts.always) } function jn(e, t) { var n, r, i, o, s; for (n in e) if (r = x.camelCase(n), i = t[r], o = e[n], x.isArray(o) && (i = o[1], o = e[n] = o[0]), n !== r && (e[r] = o, delete e[n]), s = x.cssHooks[r], s && "expand" in s) { o = s.expand(o), delete e[r]; for (n in o) n in e || (e[n] = o[n], t[n] = i) } else t[r] = i } x.Animation = x.extend(Sn, { tweener: function (e, t) { x.isFunction(e) ? (t = e, e = ["*"]) : e = e.split(" "); var n, r = 0, i = e.length; for (; i > r; r++)n = e[r], kn[n] = kn[n] || [], kn[n].unshift(t) }, prefilter: function (e, t) { t ? Cn.unshift(e) : Cn.push(e) } }); function Dn(e, t, n) { var r, i, o, s, a, u, l, c, f, p = this, h = e.style, d = {}, g = [], m = e.nodeType && At(e); n.queue || (c = x._queueHooks(e, "fx"), null == c.unqueued && (c.unqueued = 0, f = c.empty.fire, c.empty.fire = function () { c.unqueued || f() }), c.unqueued++ , p.always(function () { p.always(function () { c.unqueued-- , x.queue(e, "fx").length || c.empty.fire() }) })), 1 === e.nodeType && ("height" in t || "width" in t) && (n.overflow = [h.overflow, h.overflowX, h.overflowY], "inline" === x.css(e, "display") && "none" === x.css(e, "float") && (h.display = "inline-block")), n.overflow && (h.overflow = "hidden", p.always(function () { h.overflow = n.overflow[0], h.overflowX = n.overflow[1], h.overflowY = n.overflow[2] })), a = q.get(e, "fxshow"); for (r in t) if (o = t[r], bn.exec(o)) { if (delete t[r], u = u || "toggle" === o, o === (m ? "hide" : "show")) { if ("show" !== o || a === undefined || a[r] === undefined) continue; m = !0 } g.push(r) } if (s = g.length) { a = q.get(e, "fxshow") || q.access(e, "fxshow", {}), "hidden" in a && (m = a.hidden), u && (a.hidden = !m), m ? x(e).show() : p.done(function () { x(e).hide() }), p.done(function () { var t; q.remove(e, "fxshow"); for (t in d) x.style(e, t, d[t]) }); for (r = 0; s > r; r++)i = g[r], l = p.createTween(i, m ? a[i] : 0), d[i] = a[i] || x.style(e, i), i in a || (a[i] = l.start, m && (l.end = l.start, l.start = "width" === i || "height" === i ? 1 : 0)) } } function An(e, t, n, r, i) { return new An.prototype.init(e, t, n, r, i) } x.Tween = An, An.prototype = { constructor: An, init: function (e, t, n, r, i, o) { this.elem = e, this.prop = n, this.easing = i || "swing", this.options = t, this.start = this.now = this.cur(), this.end = r, this.unit = o || (x.cssNumber[n] ? "" : "px") }, cur: function () { var e = An.propHooks[this.prop]; return e && e.get ? e.get(this) : An.propHooks._default.get(this) }, run: function (e) { var t, n = An.propHooks[this.prop]; return this.pos = t = this.options.duration ? x.easing[this.easing](e, this.options.duration * e, 0, 1, this.options.duration) : e, this.now = (this.end - this.start) * t + this.start, this.options.step && this.options.step.call(this.elem, this.now, this), n && n.set ? n.set(this) : An.propHooks._default.set(this), this } }, An.prototype.init.prototype = An.prototype, An.propHooks = { _default: { get: function (e) { var t; return null == e.elem[e.prop] || e.elem.style && null != e.elem.style[e.prop] ? (t = x.css(e.elem, e.prop, ""), t && "auto" !== t ? t : 0) : e.elem[e.prop] }, set: function (e) { x.fx.step[e.prop] ? x.fx.step[e.prop](e) : e.elem.style && (null != e.elem.style[x.cssProps[e.prop]] || x.cssHooks[e.prop]) ? x.style(e.elem, e.prop, e.now + e.unit) : e.elem[e.prop] = e.now } } }, An.propHooks.scrollTop = An.propHooks.scrollLeft = { set: function (e) { e.elem.nodeType && e.elem.parentNode && (e.elem[e.prop] = e.now) } }, x.each(["toggle", "show", "hide"], function (e, t) { var n = x.fn[t]; x.fn[t] = function (e, r, i) { return null == e || "boolean" == typeof e ? n.apply(this, arguments) : this.animate(Ln(t, !0), e, r, i) } }), x.fn.extend({ fadeTo: function (e, t, n, r) { return this.filter(At).css("opacity", 0).show().end().animate({ opacity: t }, e, n, r) }, animate: function (e, t, n, r) { var i = x.isEmptyObject(e), o = x.speed(t, n, r), s = function () { var t = Sn(this, x.extend({}, e), o); s.finish = function () { t.stop(!0) }, (i || q.get(this, "finish")) && t.stop(!0) }; return s.finish = s, i || o.queue === !1 ? this.each(s) : this.queue(o.queue, s) }, stop: function (e, t, n) { var r = function (e) { var t = e.stop; delete e.stop, t(n) }; return "string" != typeof e && (n = t, t = e, e = undefined), t && e !== !1 && this.queue(e || "fx", []), this.each(function () { var t = !0, i = null != e && e + "queueHooks", o = x.timers, s = q.get(this); if (i) s[i] && s[i].stop && r(s[i]); else for (i in s) s[i] && s[i].stop && Tn.test(i) && r(s[i]); for (i = o.length; i--;)o[i].elem !== this || null != e && o[i].queue !== e || (o[i].anim.stop(n), t = !1, o.splice(i, 1)); (t || !n) && x.dequeue(this, e) }) }, finish: function (e) { return e !== !1 && (e = e || "fx"), this.each(function () { var t, n = q.get(this), r = n[e + "queue"], i = n[e + "queueHooks"], o = x.timers, s = r ? r.length : 0; for (n.finish = !0, x.queue(this, e, []), i && i.cur && i.cur.finish && i.cur.finish.call(this), t = o.length; t--;)o[t].elem === this && o[t].queue === e && (o[t].anim.stop(!0), o.splice(t, 1)); for (t = 0; s > t; t++)r[t] && r[t].finish && r[t].finish.call(this); delete n.finish }) } }); function Ln(e, t) { var n, r = { height: e }, i = 0; for (t = t ? 1 : 0; 4 > i; i += 2 - t)n = St[i], r["margin" + n] = r["padding" + n] = e; return t && (r.opacity = r.width = e), r } x.each({ slideDown: Ln("show"), slideUp: Ln("hide"), slideToggle: Ln("toggle"), fadeIn: { opacity: "show" }, fadeOut: { opacity: "hide" }, fadeToggle: { opacity: "toggle" } }, function (e, t) { x.fn[e] = function (e, n, r) { return this.animate(t, e, n, r) } }), x.speed = function (e, t, n) { var r = e && "object" == typeof e ? x.extend({}, e) : { complete: n || !n && t || x.isFunction(e) && e, duration: e, easing: n && t || t && !x.isFunction(t) && t }; return r.duration = x.fx.off ? 0 : "number" == typeof r.duration ? r.duration : r.duration in x.fx.speeds ? x.fx.speeds[r.duration] : x.fx.speeds._default, (null == r.queue || r.queue === !0) && (r.queue = "fx"), r.old = r.complete, r.complete = function () { x.isFunction(r.old) && r.old.call(this), r.queue && x.dequeue(this, r.queue) }, r }, x.easing = { linear: function (e) { return e }, swing: function (e) { return .5 - Math.cos(e * Math.PI) / 2 } }, x.timers = [], x.fx = An.prototype.init, x.fx.tick = function () { var e, t = x.timers, n = 0; for (vn = x.now(); t.length > n; n++)e = t[n], e() || t[n] !== e || t.splice(n--, 1); t.length || x.fx.stop(), vn = undefined }, x.fx.timer = function (e) { e() && x.timers.push(e) && x.fx.start() }, x.fx.interval = 13, x.fx.start = function () { xn || (xn = setInterval(x.fx.tick, x.fx.interval)) }, x.fx.stop = function () { clearInterval(xn), xn = null }, x.fx.speeds = { slow: 600, fast: 200, _default: 400 }, x.fx.step = {}, x.expr && x.expr.filters && (x.expr.filters.animated = function (e) { return x.grep(x.timers, function (t) { return e === t.elem }).length }), x.fn.offset = function (e) { if (arguments.length) return e === undefined ? this : this.each(function (t) { x.offset.setOffset(this, e, t) }); var t, n, i = this[0], o = { top: 0, left: 0 }, s = i && i.ownerDocument; if (s) return t = s.documentElement, x.contains(t, i) ? (typeof i.getBoundingClientRect !== r && (o = i.getBoundingClientRect()), n = qn(s), { top: o.top + n.pageYOffset - t.clientTop, left: o.left + n.pageXOffset - t.clientLeft }) : o }, x.offset = { setOffset: function (e, t, n) { var r, i, o, s, a, u, l, c = x.css(e, "position"), f = x(e), p = {}; "static" === c && (e.style.position = "relative"), a = f.offset(), o = x.css(e, "top"), u = x.css(e, "left"), l = ("absolute" === c || "fixed" === c) && (o + u).indexOf("auto") > -1, l ? (r = f.position(), s = r.top, i = r.left) : (s = parseFloat(o) || 0, i = parseFloat(u) || 0), x.isFunction(t) && (t = t.call(e, n, a)), null != t.top && (p.top = t.top - a.top + s), null != t.left && (p.left = t.left - a.left + i), "using" in t ? t.using.call(e, p) : f.css(p) } }, x.fn.extend({ position: function () { if (this[0]) { var e, t, n = this[0], r = { top: 0, left: 0 }; return "fixed" === x.css(n, "position") ? t = n.getBoundingClientRect() : (e = this.offsetParent(), t = this.offset(), x.nodeName(e[0], "html") || (r = e.offset()), r.top += x.css(e[0], "borderTopWidth", !0), r.left += x.css(e[0], "borderLeftWidth", !0)), { top: t.top - r.top - x.css(n, "marginTop", !0), left: t.left - r.left - x.css(n, "marginLeft", !0) } } }, offsetParent: function () { return this.map(function () { var e = this.offsetParent || s; while (e && !x.nodeName(e, "html") && "static" === x.css(e, "position")) e = e.offsetParent; return e || s }) } }), x.each({ scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function (t, n) { var r = "pageYOffset" === n; x.fn[t] = function (i) { return x.access(this, function (t, i, o) { var s = qn(t); return o === undefined ? s ? s[n] : t[i] : (s ? s.scrollTo(r ? e.pageXOffset : o, r ? o : e.pageYOffset) : t[i] = o, undefined) }, t, i, arguments.length, null) } }); function qn(e) { return x.isWindow(e) ? e : 9 === e.nodeType && e.defaultView } x.each({ Height: "height", Width: "width" }, function (e, t) { x.each({ padding: "inner" + e, content: t, "": "outer" + e }, function (n, r) { x.fn[r] = function (r, i) { var o = arguments.length && (n || "boolean" != typeof r), s = n || (r === !0 || i === !0 ? "margin" : "border"); return x.access(this, function (t, n, r) { var i; return x.isWindow(t) ? t.document.documentElement["client" + e] : 9 === t.nodeType ? (i = t.documentElement, Math.max(t.body["scroll" + e], i["scroll" + e], t.body["offset" + e], i["offset" + e], i["client" + e])) : r === undefined ? x.css(t, n, s) : x.style(t, n, r, s) }, t, o ? r : undefined, o, null) } }) }), x.fn.size = function () { return this.length }, x.fn.andSelf = x.fn.addBack, "object" == typeof module && "object" == typeof module.exports ? module.exports = x : "function" == typeof define && define.amd && define("jquery", [], function () { return x }), "object" == typeof e && "object" == typeof e.document && (e.jQuery = e.$ = x)
})(window);


//proper js
/*
 Copyright (C) Federico Zivolo 2017
 Distributed under the MIT License (license terms are at http://opensource.org/licenses/MIT).
 */(function (e, t) { 'object' == typeof exports && 'undefined' != typeof module ? module.exports = t() : 'function' == typeof define && define.amd ? define(t) : e.Popper = t() })(this, function () { 'use strict'; function e(e) { return e && '[object Function]' === {}.toString.call(e) } function t(e, t) { if (1 !== e.nodeType) return []; var o = getComputedStyle(e, null); return t ? o[t] : o } function o(e) { return 'HTML' === e.nodeName ? e : e.parentNode || e.host } function n(e) { if (!e) return document.body; switch (e.nodeName) { case 'HTML': case 'BODY': return e.ownerDocument.body; case '#document': return e.body; }var i = t(e), r = i.overflow, p = i.overflowX, s = i.overflowY; return /(auto|scroll)/.test(r + s + p) ? e : n(o(e)) } function r(e) { var o = e && e.offsetParent, i = o && o.nodeName; return i && 'BODY' !== i && 'HTML' !== i ? -1 !== ['TD', 'TABLE'].indexOf(o.nodeName) && 'static' === t(o, 'position') ? r(o) : o : e ? e.ownerDocument.documentElement : document.documentElement } function p(e) { var t = e.nodeName; return 'BODY' !== t && ('HTML' === t || r(e.firstElementChild) === e) } function s(e) { return null === e.parentNode ? e : s(e.parentNode) } function d(e, t) { if (!e || !e.nodeType || !t || !t.nodeType) return document.documentElement; var o = e.compareDocumentPosition(t) & Node.DOCUMENT_POSITION_FOLLOWING, i = o ? e : t, n = o ? t : e, a = document.createRange(); a.setStart(i, 0), a.setEnd(n, 0); var l = a.commonAncestorContainer; if (e !== l && t !== l || i.contains(n)) return p(l) ? l : r(l); var f = s(e); return f.host ? d(f.host, t) : d(e, s(t).host) } function a(e) { var t = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 'top', o = 'top' === t ? 'scrollTop' : 'scrollLeft', i = e.nodeName; if ('BODY' === i || 'HTML' === i) { var n = e.ownerDocument.documentElement, r = e.ownerDocument.scrollingElement || n; return r[o] } return e[o] } function l(e, t) { var o = 2 < arguments.length && void 0 !== arguments[2] && arguments[2], i = a(t, 'top'), n = a(t, 'left'), r = o ? -1 : 1; return e.top += i * r, e.bottom += i * r, e.left += n * r, e.right += n * r, e } function f(e, t) { var o = 'x' === t ? 'Left' : 'Top', i = 'Left' == o ? 'Right' : 'Bottom'; return parseFloat(e['border' + o + 'Width'], 10) + parseFloat(e['border' + i + 'Width'], 10) } function m(e, t, o, i) { return J(t['offset' + e], t['scroll' + e], o['client' + e], o['offset' + e], o['scroll' + e], ie() ? o['offset' + e] + i['margin' + ('Height' === e ? 'Top' : 'Left')] + i['margin' + ('Height' === e ? 'Bottom' : 'Right')] : 0) } function h() { var e = document.body, t = document.documentElement, o = ie() && getComputedStyle(t); return { height: m('Height', e, t, o), width: m('Width', e, t, o) } } function c(e) { return se({}, e, { right: e.left + e.width, bottom: e.top + e.height }) } function g(e) { var o = {}; if (ie()) try { o = e.getBoundingClientRect(); var i = a(e, 'top'), n = a(e, 'left'); o.top += i, o.left += n, o.bottom += i, o.right += n } catch (e) { } else o = e.getBoundingClientRect(); var r = { left: o.left, top: o.top, width: o.right - o.left, height: o.bottom - o.top }, p = 'HTML' === e.nodeName ? h() : {}, s = p.width || e.clientWidth || r.right - r.left, d = p.height || e.clientHeight || r.bottom - r.top, l = e.offsetWidth - s, m = e.offsetHeight - d; if (l || m) { var g = t(e); l -= f(g, 'x'), m -= f(g, 'y'), r.width -= l, r.height -= m } return c(r) } function u(e, o) { var i = ie(), r = 'HTML' === o.nodeName, p = g(e), s = g(o), d = n(e), a = t(o), f = parseFloat(a.borderTopWidth, 10), m = parseFloat(a.borderLeftWidth, 10), h = c({ top: p.top - s.top - f, left: p.left - s.left - m, width: p.width, height: p.height }); if (h.marginTop = 0, h.marginLeft = 0, !i && r) { var u = parseFloat(a.marginTop, 10), b = parseFloat(a.marginLeft, 10); h.top -= f - u, h.bottom -= f - u, h.left -= m - b, h.right -= m - b, h.marginTop = u, h.marginLeft = b } return (i ? o.contains(d) : o === d && 'BODY' !== d.nodeName) && (h = l(h, o)), h } function b(e) { var t = e.ownerDocument.documentElement, o = u(e, t), i = J(t.clientWidth, window.innerWidth || 0), n = J(t.clientHeight, window.innerHeight || 0), r = a(t), p = a(t, 'left'), s = { top: r - o.top + o.marginTop, left: p - o.left + o.marginLeft, width: i, height: n }; return c(s) } function w(e) { var i = e.nodeName; return 'BODY' === i || 'HTML' === i ? !1 : 'fixed' === t(e, 'position') || w(o(e)) } function y(e, t, i, r) { var p = { top: 0, left: 0 }, s = d(e, t); if ('viewport' === r) p = b(s); else { var a; 'scrollParent' === r ? (a = n(o(t)), 'BODY' === a.nodeName && (a = e.ownerDocument.documentElement)) : 'window' === r ? a = e.ownerDocument.documentElement : a = r; var l = u(a, s); if ('HTML' === a.nodeName && !w(s)) { var f = h(), m = f.height, c = f.width; p.top += l.top - l.marginTop, p.bottom = m + l.top, p.left += l.left - l.marginLeft, p.right = c + l.left } else p = l } return p.left += i, p.top += i, p.right -= i, p.bottom -= i, p } function E(e) { var t = e.width, o = e.height; return t * o } function v(e, t, o, i, n) { var r = 5 < arguments.length && void 0 !== arguments[5] ? arguments[5] : 0; if (-1 === e.indexOf('auto')) return e; var p = y(o, i, r, n), s = { top: { width: p.width, height: t.top - p.top }, right: { width: p.right - t.right, height: p.height }, bottom: { width: p.width, height: p.bottom - t.bottom }, left: { width: t.left - p.left, height: p.height } }, d = Object.keys(s).map(function (e) { return se({ key: e }, s[e], { area: E(s[e]) }) }).sort(function (e, t) { return t.area - e.area }), a = d.filter(function (e) { var t = e.width, i = e.height; return t >= o.clientWidth && i >= o.clientHeight }), l = 0 < a.length ? a[0].key : d[0].key, f = e.split('-')[1]; return l + (f ? '-' + f : '') } function O(e, t, o) { var i = d(t, o); return u(o, i) } function L(e) { var t = getComputedStyle(e), o = parseFloat(t.marginTop) + parseFloat(t.marginBottom), i = parseFloat(t.marginLeft) + parseFloat(t.marginRight), n = { width: e.offsetWidth + i, height: e.offsetHeight + o }; return n } function x(e) { var t = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' }; return e.replace(/left|right|bottom|top/g, function (e) { return t[e] }) } function S(e, t, o) { o = o.split('-')[0]; var i = L(e), n = { width: i.width, height: i.height }, r = -1 !== ['right', 'left'].indexOf(o), p = r ? 'top' : 'left', s = r ? 'left' : 'top', d = r ? 'height' : 'width', a = r ? 'width' : 'height'; return n[p] = t[p] + t[d] / 2 - i[d] / 2, n[s] = o === s ? t[s] - i[a] : t[x(s)], n } function T(e, t) { return Array.prototype.find ? e.find(t) : e.filter(t)[0] } function D(e, t, o) { if (Array.prototype.findIndex) return e.findIndex(function (e) { return e[t] === o }); var i = T(e, function (e) { return e[t] === o }); return e.indexOf(i) } function C(t, o, i) { var n = void 0 === i ? t : t.slice(0, D(t, 'name', i)); return n.forEach(function (t) { t['function'] && console.warn('`modifier.function` is deprecated, use `modifier.fn`!'); var i = t['function'] || t.fn; t.enabled && e(i) && (o.offsets.popper = c(o.offsets.popper), o.offsets.reference = c(o.offsets.reference), o = i(o, t)) }), o } function N() { if (!this.state.isDestroyed) { var e = { instance: this, styles: {}, arrowStyles: {}, attributes: {}, flipped: !1, offsets: {} }; e.offsets.reference = O(this.state, this.popper, this.reference), e.placement = v(this.options.placement, e.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding), e.originalPlacement = e.placement, e.offsets.popper = S(this.popper, e.offsets.reference, e.placement), e.offsets.popper.position = 'absolute', e = C(this.modifiers, e), this.state.isCreated ? this.options.onUpdate(e) : (this.state.isCreated = !0, this.options.onCreate(e)) } } function k(e, t) { return e.some(function (e) { var o = e.name, i = e.enabled; return i && o === t }) } function W(e) { for (var t = [!1, 'ms', 'Webkit', 'Moz', 'O'], o = e.charAt(0).toUpperCase() + e.slice(1), n = 0; n < t.length - 1; n++) { var i = t[n], r = i ? '' + i + o : e; if ('undefined' != typeof document.body.style[r]) return r } return null } function P() { return this.state.isDestroyed = !0, k(this.modifiers, 'applyStyle') && (this.popper.removeAttribute('x-placement'), this.popper.style.left = '', this.popper.style.position = '', this.popper.style.top = '', this.popper.style[W('transform')] = ''), this.disableEventListeners(), this.options.removeOnDestroy && this.popper.parentNode.removeChild(this.popper), this } function B(e) { var t = e.ownerDocument; return t ? t.defaultView : window } function H(e, t, o, i) { var r = 'BODY' === e.nodeName, p = r ? e.ownerDocument.defaultView : e; p.addEventListener(t, o, { passive: !0 }), r || H(n(p.parentNode), t, o, i), i.push(p) } function A(e, t, o, i) { o.updateBound = i, B(e).addEventListener('resize', o.updateBound, { passive: !0 }); var r = n(e); return H(r, 'scroll', o.updateBound, o.scrollParents), o.scrollElement = r, o.eventsEnabled = !0, o } function I() { this.state.eventsEnabled || (this.state = A(this.reference, this.options, this.state, this.scheduleUpdate)) } function M(e, t) { return B(e).removeEventListener('resize', t.updateBound), t.scrollParents.forEach(function (e) { e.removeEventListener('scroll', t.updateBound) }), t.updateBound = null, t.scrollParents = [], t.scrollElement = null, t.eventsEnabled = !1, t } function R() { this.state.eventsEnabled && (cancelAnimationFrame(this.scheduleUpdate), this.state = M(this.reference, this.state)) } function U(e) { return '' !== e && !isNaN(parseFloat(e)) && isFinite(e) } function Y(e, t) { Object.keys(t).forEach(function (o) { var i = ''; -1 !== ['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(o) && U(t[o]) && (i = 'px'), e.style[o] = t[o] + i }) } function j(e, t) { Object.keys(t).forEach(function (o) { var i = t[o]; !1 === i ? e.removeAttribute(o) : e.setAttribute(o, t[o]) }) } function F(e, t, o) { var i = T(e, function (e) { var o = e.name; return o === t }), n = !!i && e.some(function (e) { return e.name === o && e.enabled && e.order < i.order }); if (!n) { var r = '`' + t + '`'; console.warn('`' + o + '`' + ' modifier is required by ' + r + ' modifier in order to work, be sure to include it before ' + r + '!') } return n } function K(e) { return 'end' === e ? 'start' : 'start' === e ? 'end' : e } function q(e) { var t = 1 < arguments.length && void 0 !== arguments[1] && arguments[1], o = ae.indexOf(e), i = ae.slice(o + 1).concat(ae.slice(0, o)); return t ? i.reverse() : i } function V(e, t, o, i) { var n = e.match(/((?:\-|\+)?\d*\.?\d*)(.*)/), r = +n[1], p = n[2]; if (!r) return e; if (0 === p.indexOf('%')) { var s; switch (p) { case '%p': s = o; break; case '%': case '%r': default: s = i; }var d = c(s); return d[t] / 100 * r } if ('vh' === p || 'vw' === p) { var a; return a = 'vh' === p ? J(document.documentElement.clientHeight, window.innerHeight || 0) : J(document.documentElement.clientWidth, window.innerWidth || 0), a / 100 * r } return r } function z(e, t, o, i) { var n = [0, 0], r = -1 !== ['right', 'left'].indexOf(i), p = e.split(/(\+|\-)/).map(function (e) { return e.trim() }), s = p.indexOf(T(p, function (e) { return -1 !== e.search(/,|\s/) })); p[s] && -1 === p[s].indexOf(',') && console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.'); var d = /\s*,\s*|\s+/, a = -1 === s ? [p] : [p.slice(0, s).concat([p[s].split(d)[0]]), [p[s].split(d)[1]].concat(p.slice(s + 1))]; return a = a.map(function (e, i) { var n = (1 === i ? !r : r) ? 'height' : 'width', p = !1; return e.reduce(function (e, t) { return '' === e[e.length - 1] && -1 !== ['+', '-'].indexOf(t) ? (e[e.length - 1] = t, p = !0, e) : p ? (e[e.length - 1] += t, p = !1, e) : e.concat(t) }, []).map(function (e) { return V(e, n, t, o) }) }), a.forEach(function (e, t) { e.forEach(function (o, i) { U(o) && (n[t] += o * ('-' === e[i - 1] ? -1 : 1)) }) }), n } function G(e, t) { var o, i = t.offset, n = e.placement, r = e.offsets, p = r.popper, s = r.reference, d = n.split('-')[0]; return o = U(+i) ? [+i, 0] : z(i, p, s, d), 'left' === d ? (p.top += o[0], p.left -= o[1]) : 'right' === d ? (p.top += o[0], p.left += o[1]) : 'top' === d ? (p.left += o[0], p.top -= o[1]) : 'bottom' === d && (p.left += o[0], p.top += o[1]), e.popper = p, e } for (var _ = Math.min, X = Math.floor, J = Math.max, Q = 'undefined' != typeof window && 'undefined' != typeof document, Z = ['Edge', 'Trident', 'Firefox'], $ = 0, ee = 0; ee < Z.length; ee += 1)if (Q && 0 <= navigator.userAgent.indexOf(Z[ee])) { $ = 1; break } var i, te = Q && window.Promise, oe = te ? function (e) { var t = !1; return function () { t || (t = !0, window.Promise.resolve().then(function () { t = !1, e() })) } } : function (e) { var t = !1; return function () { t || (t = !0, setTimeout(function () { t = !1, e() }, $)) } }, ie = function () { return void 0 == i && (i = -1 !== navigator.appVersion.indexOf('MSIE 10')), i }, ne = function (e, t) { if (!(e instanceof t)) throw new TypeError('Cannot call a class as a function') }, re = function () { function e(e, t) { for (var o, n = 0; n < t.length; n++)o = t[n], o.enumerable = o.enumerable || !1, o.configurable = !0, 'value' in o && (o.writable = !0), Object.defineProperty(e, o.key, o) } return function (t, o, i) { return o && e(t.prototype, o), i && e(t, i), t } }(), pe = function (e, t, o) { return t in e ? Object.defineProperty(e, t, { value: o, enumerable: !0, configurable: !0, writable: !0 }) : e[t] = o, e }, se = Object.assign || function (e) { for (var t, o = 1; o < arguments.length; o++)for (var i in t = arguments[o], t) Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]); return e }, de = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'], ae = de.slice(3), le = { FLIP: 'flip', CLOCKWISE: 'clockwise', COUNTERCLOCKWISE: 'counterclockwise' }, fe = function () { function t(o, i) { var n = this, r = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : {}; ne(this, t), this.scheduleUpdate = function () { return requestAnimationFrame(n.update) }, this.update = oe(this.update.bind(this)), this.options = se({}, t.Defaults, r), this.state = { isDestroyed: !1, isCreated: !1, scrollParents: [] }, this.reference = o && o.jquery ? o[0] : o, this.popper = i && i.jquery ? i[0] : i, this.options.modifiers = {}, Object.keys(se({}, t.Defaults.modifiers, r.modifiers)).forEach(function (e) { n.options.modifiers[e] = se({}, t.Defaults.modifiers[e] || {}, r.modifiers ? r.modifiers[e] : {}) }), this.modifiers = Object.keys(this.options.modifiers).map(function (e) { return se({ name: e }, n.options.modifiers[e]) }).sort(function (e, t) { return e.order - t.order }), this.modifiers.forEach(function (t) { t.enabled && e(t.onLoad) && t.onLoad(n.reference, n.popper, n.options, t, n.state) }), this.update(); var p = this.options.eventsEnabled; p && this.enableEventListeners(), this.state.eventsEnabled = p } return re(t, [{ key: 'update', value: function () { return N.call(this) } }, { key: 'destroy', value: function () { return P.call(this) } }, { key: 'enableEventListeners', value: function () { return I.call(this) } }, { key: 'disableEventListeners', value: function () { return R.call(this) } }]), t }(); return fe.Utils = ('undefined' == typeof window ? global : window).PopperUtils, fe.placements = de, fe.Defaults = { placement: 'bottom', eventsEnabled: !0, removeOnDestroy: !1, onCreate: function () { }, onUpdate: function () { }, modifiers: { shift: { order: 100, enabled: !0, fn: function (e) { var t = e.placement, o = t.split('-')[0], i = t.split('-')[1]; if (i) { var n = e.offsets, r = n.reference, p = n.popper, s = -1 !== ['bottom', 'top'].indexOf(o), d = s ? 'left' : 'top', a = s ? 'width' : 'height', l = { start: pe({}, d, r[d]), end: pe({}, d, r[d] + r[a] - p[a]) }; e.offsets.popper = se({}, p, l[i]) } return e } }, offset: { order: 200, enabled: !0, fn: G, offset: 0 }, preventOverflow: { order: 300, enabled: !0, fn: function (e, t) { var o = t.boundariesElement || r(e.instance.popper); e.instance.reference === o && (o = r(o)); var i = y(e.instance.popper, e.instance.reference, t.padding, o); t.boundaries = i; var n = t.priority, p = e.offsets.popper, s = { primary: function (e) { var o = p[e]; return p[e] < i[e] && !t.escapeWithReference && (o = J(p[e], i[e])), pe({}, e, o) }, secondary: function (e) { var o = 'right' === e ? 'left' : 'top', n = p[o]; return p[e] > i[e] && !t.escapeWithReference && (n = _(p[o], i[e] - ('right' === e ? p.width : p.height))), pe({}, o, n) } }; return n.forEach(function (e) { var t = -1 === ['left', 'top'].indexOf(e) ? 'secondary' : 'primary'; p = se({}, p, s[t](e)) }), e.offsets.popper = p, e }, priority: ['left', 'right', 'top', 'bottom'], padding: 5, boundariesElement: 'scrollParent' }, keepTogether: { order: 400, enabled: !0, fn: function (e) { var t = e.offsets, o = t.popper, i = t.reference, n = e.placement.split('-')[0], r = X, p = -1 !== ['top', 'bottom'].indexOf(n), s = p ? 'right' : 'bottom', d = p ? 'left' : 'top', a = p ? 'width' : 'height'; return o[s] < r(i[d]) && (e.offsets.popper[d] = r(i[d]) - o[a]), o[d] > r(i[s]) && (e.offsets.popper[d] = r(i[s])), e } }, arrow: { order: 500, enabled: !0, fn: function (e, o) { var i; if (!F(e.instance.modifiers, 'arrow', 'keepTogether')) return e; var n = o.element; if ('string' == typeof n) { if (n = e.instance.popper.querySelector(n), !n) return e; } else if (!e.instance.popper.contains(n)) return console.warn('WARNING: `arrow.element` must be child of its popper element!'), e; var r = e.placement.split('-')[0], p = e.offsets, s = p.popper, d = p.reference, a = -1 !== ['left', 'right'].indexOf(r), l = a ? 'height' : 'width', f = a ? 'Top' : 'Left', m = f.toLowerCase(), h = a ? 'left' : 'top', g = a ? 'bottom' : 'right', u = L(n)[l]; d[g] - u < s[m] && (e.offsets.popper[m] -= s[m] - (d[g] - u)), d[m] + u > s[g] && (e.offsets.popper[m] += d[m] + u - s[g]), e.offsets.popper = c(e.offsets.popper); var b = d[m] + d[l] / 2 - u / 2, w = t(e.instance.popper), y = parseFloat(w['margin' + f], 10), E = parseFloat(w['border' + f + 'Width'], 10), v = b - e.offsets.popper[m] - y - E; return v = J(_(s[l] - u, v), 0), e.arrowElement = n, e.offsets.arrow = (i = {}, pe(i, m, Math.round(v)), pe(i, h, ''), i), e }, element: '[x-arrow]' }, flip: { order: 600, enabled: !0, fn: function (e, t) { if (k(e.instance.modifiers, 'inner')) return e; if (e.flipped && e.placement === e.originalPlacement) return e; var o = y(e.instance.popper, e.instance.reference, t.padding, t.boundariesElement), i = e.placement.split('-')[0], n = x(i), r = e.placement.split('-')[1] || '', p = []; switch (t.behavior) { case le.FLIP: p = [i, n]; break; case le.CLOCKWISE: p = q(i); break; case le.COUNTERCLOCKWISE: p = q(i, !0); break; default: p = t.behavior; }return p.forEach(function (s, d) { if (i !== s || p.length === d + 1) return e; i = e.placement.split('-')[0], n = x(i); var a = e.offsets.popper, l = e.offsets.reference, f = X, m = 'left' === i && f(a.right) > f(l.left) || 'right' === i && f(a.left) < f(l.right) || 'top' === i && f(a.bottom) > f(l.top) || 'bottom' === i && f(a.top) < f(l.bottom), h = f(a.left) < f(o.left), c = f(a.right) > f(o.right), g = f(a.top) < f(o.top), u = f(a.bottom) > f(o.bottom), b = 'left' === i && h || 'right' === i && c || 'top' === i && g || 'bottom' === i && u, w = -1 !== ['top', 'bottom'].indexOf(i), y = !!t.flipVariations && (w && 'start' === r && h || w && 'end' === r && c || !w && 'start' === r && g || !w && 'end' === r && u); (m || b || y) && (e.flipped = !0, (m || b) && (i = p[d + 1]), y && (r = K(r)), e.placement = i + (r ? '-' + r : ''), e.offsets.popper = se({}, e.offsets.popper, S(e.instance.popper, e.offsets.reference, e.placement)), e = C(e.instance.modifiers, e, 'flip')) }), e }, behavior: 'flip', padding: 5, boundariesElement: 'viewport' }, inner: { order: 700, enabled: !1, fn: function (e) { var t = e.placement, o = t.split('-')[0], i = e.offsets, n = i.popper, r = i.reference, p = -1 !== ['left', 'right'].indexOf(o), s = -1 === ['top', 'left'].indexOf(o); return n[p ? 'left' : 'top'] = r[o] - (s ? n[p ? 'width' : 'height'] : 0), e.placement = x(t), e.offsets.popper = c(n), e } }, hide: { order: 800, enabled: !0, fn: function (e) { if (!F(e.instance.modifiers, 'hide', 'preventOverflow')) return e; var t = e.offsets.reference, o = T(e.instance.modifiers, function (e) { return 'preventOverflow' === e.name }).boundaries; if (t.bottom < o.top || t.left > o.right || t.top > o.bottom || t.right < o.left) { if (!0 === e.hide) return e; e.hide = !0, e.attributes['x-out-of-boundaries'] = '' } else { if (!1 === e.hide) return e; e.hide = !1, e.attributes['x-out-of-boundaries'] = !1 } return e } }, computeStyle: { order: 850, enabled: !0, fn: function (e, t) { var o = t.x, i = t.y, n = e.offsets.popper, p = T(e.instance.modifiers, function (e) { return 'applyStyle' === e.name }).gpuAcceleration; void 0 !== p && console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!'); var s, d, a = void 0 === p ? t.gpuAcceleration : p, l = r(e.instance.popper), f = g(l), m = { position: n.position }, h = { left: X(n.left), top: X(n.top), bottom: X(n.bottom), right: X(n.right) }, c = 'bottom' === o ? 'top' : 'bottom', u = 'right' === i ? 'left' : 'right', b = W('transform'); if (d = 'bottom' == c ? -f.height + h.bottom : h.top, s = 'right' == u ? -f.width + h.right : h.left, a && b) m[b] = 'translate3d(' + s + 'px, ' + d + 'px, 0)', m[c] = 0, m[u] = 0, m.willChange = 'transform'; else { var w = 'bottom' == c ? -1 : 1, y = 'right' == u ? -1 : 1; m[c] = d * w, m[u] = s * y, m.willChange = c + ', ' + u } var E = { "x-placement": e.placement }; return e.attributes = se({}, E, e.attributes), e.styles = se({}, m, e.styles), e.arrowStyles = se({}, e.offsets.arrow, e.arrowStyles), e }, gpuAcceleration: !0, x: 'bottom', y: 'right' }, applyStyle: { order: 900, enabled: !0, fn: function (e) { return Y(e.instance.popper, e.styles), j(e.instance.popper, e.attributes), e.arrowElement && Object.keys(e.arrowStyles).length && Y(e.arrowElement, e.arrowStyles), e }, onLoad: function (e, t, o, i, n) { var r = O(n, t, e), p = v(o.placement, r, t, e, o.modifiers.flip.boundariesElement, o.modifiers.flip.padding); return t.setAttribute('x-placement', p), Y(t, { position: 'absolute' }), o }, gpuAcceleration: void 0 } } }, fe });
//# sourceMappingURL=popper.min.js.map

//semantic js
!function (e, t, n, i) { e.site = e.fn.site = function (o) { var a, r, s = (new Date).getTime(), c = [], l = arguments[0], u = "string" == typeof l, d = [].slice.call(arguments, 1), f = e.isPlainObject(o) ? e.extend(!0, {}, e.site.settings, o) : e.extend({}, e.site.settings), m = f.namespace, g = f.error, p = "module-" + m, v = e(n), h = this, b = v.data(p); return a = { initialize: function () { a.instantiate() }, instantiate: function () { a.verbose("Storing instance of site", a), b = a, v.data(p, a) }, normalize: function () { a.fix.console(), a.fix.requestAnimationFrame() }, fix: { console: function () { a.debug("Normalizing window.console"), (console === i || console.log === i) && (a.verbose("Console not available, normalizing events"), a.disable.console()), (void 0 === console.group || void 0 === console.groupEnd || void 0 === console.groupCollapsed) && (a.verbose("Console group not available, normalizing events"), t.console.group = function () { }, t.console.groupEnd = function () { }, t.console.groupCollapsed = function () { }), void 0 === console.markTimeline && (a.verbose("Mark timeline not available, normalizing events"), t.console.markTimeline = function () { }) }, consoleClear: function () { a.debug("Disabling programmatic console clearing"), t.console.clear = function () { } }, requestAnimationFrame: function () { a.debug("Normalizing requestAnimationFrame"), t.requestAnimationFrame === i && (a.debug("RequestAnimationFrame not available, normalizing event"), t.requestAnimationFrame = t.requestAnimationFrame || t.mozRequestAnimationFrame || t.webkitRequestAnimationFrame || t.msRequestAnimationFrame || function (e) { setTimeout(e, 0) }) } }, moduleExists: function (t) { return e.fn[t] !== i && e.fn[t].settings !== i }, enabled: { modules: function (t) { var n = []; return t = t || f.modules, e.each(t, function (e, t) { a.moduleExists(t) && n.push(t) }), n } }, disabled: { modules: function (t) { var n = []; return t = t || f.modules, e.each(t, function (e, t) { a.moduleExists(t) || n.push(t) }), n } }, change: { setting: function (t, n, o, r) { o = "string" == typeof o ? "all" === o ? f.modules : [o] : o || f.modules, r = r === i || r, e.each(o, function (i, o) { var s, c = !a.moduleExists(o) || (e.fn[o].settings.namespace || !1); a.moduleExists(o) && (a.verbose("Changing default setting", t, n, o), e.fn[o].settings[t] = n, r && c && ((s = e(":data(module-" + c + ")")).length > 0 && (a.verbose("Modifying existing settings", s), s[o]("setting", t, n)))) }) }, settings: function (t, n, o) { n = "string" == typeof n ? [n] : n || f.modules, o = o === i || o, e.each(n, function (n, i) { var r; a.moduleExists(i) && (a.verbose("Changing default setting", t, i), e.extend(!0, e.fn[i].settings, t), o && m && ((r = e(":data(module-" + m + ")")).length > 0 && (a.verbose("Modifying existing settings", r), r[i]("setting", t)))) }) } }, enable: { console: function () { a.console(!0) }, debug: function (e, t) { e = e || f.modules, a.debug("Enabling debug for modules", e), a.change.setting("debug", !0, e, t) }, verbose: function (e, t) { e = e || f.modules, a.debug("Enabling verbose debug for modules", e), a.change.setting("verbose", !0, e, t) } }, disable: { console: function () { a.console(!1) }, debug: function (e, t) { e = e || f.modules, a.debug("Disabling debug for modules", e), a.change.setting("debug", !1, e, t) }, verbose: function (e, t) { e = e || f.modules, a.debug("Disabling verbose debug for modules", e), a.change.setting("verbose", !1, e, t) } }, console: function (e) { if (e) { if (b.cache.console === i) return void a.error(g.console); a.debug("Restoring console function"), t.console = b.cache.console } else a.debug("Disabling console function"), b.cache.console = t.console, t.console = { clear: function () { }, error: function () { }, group: function () { }, groupCollapsed: function () { }, groupEnd: function () { }, info: function () { }, log: function () { }, markTimeline: function () { }, warn: function () { } } }, destroy: function () { a.verbose("Destroying previous site for", v), v.removeData(p) }, cache: {}, setting: function (t, n) { if (e.isPlainObject(t)) e.extend(!0, f, t); else { if (n === i) return f[t]; f[t] = n } }, internal: function (t, n) { if (e.isPlainObject(t)) e.extend(!0, a, t); else { if (n === i) return a[t]; a[t] = n } }, debug: function () { f.debug && (f.performance ? a.performance.log(arguments) : (a.debug = Function.prototype.bind.call(console.info, console, f.name + ":"), a.debug.apply(console, arguments))) }, verbose: function () { f.verbose && f.debug && (f.performance ? a.performance.log(arguments) : (a.verbose = Function.prototype.bind.call(console.info, console, f.name + ":"), a.verbose.apply(console, arguments))) }, error: function () { a.error = Function.prototype.bind.call(console.error, console, f.name + ":"), a.error.apply(console, arguments) }, performance: { log: function (e) { var t, n; f.performance && (n = (t = (new Date).getTime()) - (s || t), s = t, c.push({ Element: h, Name: e[0], Arguments: [].slice.call(e, 1) || "", "Execution Time": n })), clearTimeout(a.performance.timer), a.performance.timer = setTimeout(a.performance.display, 500) }, display: function () { var t = f.name + ":", n = 0; s = !1, clearTimeout(a.performance.timer), e.each(c, function (e, t) { n += t["Execution Time"] }), t += " " + n + "ms", (console.group !== i || console.table !== i) && c.length > 0 && (console.groupCollapsed(t), console.table ? console.table(c) : e.each(c, function (e, t) { console.log(t.Name + ": " + t["Execution Time"] + "ms") }), console.groupEnd()), c = [] } }, invoke: function (t, n, o) { var s, c, l, u = b; return n = n || d, o = h || o, "string" == typeof t && u !== i && (t = t.split(/[\. ]/), s = t.length - 1, e.each(t, function (n, o) { var r = n != s ? o + t[n + 1].charAt(0).toUpperCase() + t[n + 1].slice(1) : t; if (e.isPlainObject(u[r]) && n != s) u = u[r]; else { if (u[r] !== i) return c = u[r], !1; if (!e.isPlainObject(u[o]) || n == s) return u[o] !== i ? (c = u[o], !1) : (a.error(g.method, t), !1); u = u[o] } })), e.isFunction(c) ? l = c.apply(o, n) : c !== i && (l = c), e.isArray(r) ? r.push(l) : r !== i ? r = [r, l] : l !== i && (r = l), c } }, u ? (b === i && a.initialize(), a.invoke(l)) : (b !== i && a.destroy(), a.initialize()), r !== i ? r : this }, e.site.settings = { name: "Site", namespace: "site", error: { console: "Console cannot be restored, most likely it was overwritten outside of module", method: "The method you called is not defined." }, debug: !1, verbose: !1, performance: !0, modules: ["accordion", "api", "checkbox", "dimmer", "dropdown", "embed", "form", "modal", "nag", "popup", "rating", "shape", "sidebar", "state", "sticky", "tab", "transition", "visit", "visibility"], siteNamespace: "site", namespaceStub: { cache: {}, config: {}, sections: {}, section: {}, utilities: {} } }, e.extend(e.expr[":"], { data: e.expr.createPseudo ? e.expr.createPseudo(function (t) { return function (n) { return !!e.data(n, t) } }) : function (t, n, i) { return !!e.data(t, i[3]) } }) }(jQuery, window, document), function (e, t, n, i) { "use strict"; e.fn.form = function (t) { var o, a = e(this), r = a.selector || "", s = (new Date).getTime(), c = [], l = arguments[0], u = arguments[1], d = "string" == typeof l, f = [].slice.call(arguments, 1); return a.each(function () { var m, g, p, v, h, b, y, x, C, w, k, S, T, A, R, E = e(this), P = this, F = [], D = !1; (R = { initialize: function () { R.get.settings(), d ? (A === i && R.instantiate(), R.invoke(l)) : (R.verbose("Initializing form validation", E, h), R.bindEvents(), R.set.defaults(), R.instantiate()) }, instantiate: function () { R.verbose("Storing instance of module", R), A = R, E.data(S, R) }, destroy: function () { R.verbose("Destroying previous module", A), R.removeEvents(), E.removeData(S) }, refresh: function () { R.verbose("Refreshing selector cache"), m = E.find(x.field), g = E.find(x.group), p = E.find(x.message), E.find(x.prompt), v = E.find(x.submit), E.find(x.clear), E.find(x.reset) }, submit: function () { R.verbose("Submitting form", E), E.submit() }, attachEvents: function (t, n) { n = n || "submit", e(t).on("click" + T, function (e) { R[n](), e.preventDefault() }) }, bindEvents: function () { R.verbose("Attaching form events"), E.on("submit" + T, R.validate.form).on("blur" + T, x.field, R.event.field.blur).on("click" + T, x.submit, R.submit).on("click" + T, x.reset, R.reset).on("click" + T, x.clear, R.clear), h.keyboardShortcuts && E.on("keydown" + T, x.field, R.event.field.keydown), m.each(function () { var t = e(this), n = t.prop("type"), i = R.get.changeEvent(n, t); e(this).on(i + T, R.event.field.change) }) }, clear: function () { m.each(function () { var t = e(this), n = t.parent(), i = t.closest(g), o = i.find(x.prompt), a = t.data(y.defaultValue) || "", r = n.is(x.uiCheckbox), s = n.is(x.uiDropdown); i.hasClass(C.error) && (R.verbose("Resetting error on field", i), i.removeClass(C.error), o.remove()), s ? (R.verbose("Resetting dropdown value", n, a), n.dropdown("clear")) : r ? t.prop("checked", !1) : (R.verbose("Resetting field value", t, a), t.val("")) }) }, reset: function () { m.each(function () { var t = e(this), n = t.parent(), o = t.closest(g), a = o.find(x.prompt), r = t.data(y.defaultValue), s = n.is(x.uiCheckbox), c = n.is(x.uiDropdown), l = o.hasClass(C.error); r !== i && (l && (R.verbose("Resetting error on field", o), o.removeClass(C.error), a.remove()), c ? (R.verbose("Resetting dropdown value", n, r), n.dropdown("restore defaults")) : s ? (R.verbose("Resetting checkbox value", n, r), t.prop("checked", r)) : (R.verbose("Resetting field value", t, r), t.val(r))) }) }, is: { bracketedRule: function (e) { return e.type && e.type.match(h.regExp.bracket) }, valid: function () { var t = !0; return R.verbose("Checking if form is valid"), e.each(b, function (e, n) { R.validate.field(n, e) || (t = !1) }), t } }, removeEvents: function () { E.off(T), m.off(T), v.off(T), m.off(T) }, event: { field: { keydown: function (t) { var n = e(this), i = t.which, o = 13; i == 27 && (R.verbose("Escape key pressed blurring field"), n.blur()), !t.ctrlKey && i == o && n.is(x.input) && n.not(x.checkbox).length > 0 && (D || (n.one("keyup" + T, R.event.field.keyup), R.submit(), R.debug("Enter pressed on input submitting form")), D = !0) }, keyup: function () { D = !1 }, blur: function (t) { var n = e(this), i = n.closest(g), o = R.get.validation(n); i.hasClass(C.error) ? (R.debug("Revalidating field", n, o), R.validate.form.call(R, t, !0)) : ("blur" == h.on || "change" == h.on) && o && R.validate.field(o) }, change: function (t) { var n = e(this), i = n.closest(g); ("change" == h.on || i.hasClass(C.error) && h.revalidate) && (clearTimeout(R.timer), R.timer = setTimeout(function () { R.debug("Revalidating field", n, R.get.validation(n)), R.validate.form.call(R, t, !0) }, h.delay)) } } }, get: { ancillaryValue: function (e) { return !(!e.type || !R.is.bracketedRule(e)) && e.type.match(h.regExp.bracket)[1] + "" }, ruleName: function (e) { return R.is.bracketedRule(e) ? e.type.replace(e.type.match(h.regExp.bracket)[0], "") : e.type }, changeEvent: function (e, t) { return "checkbox" == e || "radio" == e || "hidden" == e || t.is("select") ? "change" : R.get.inputEvent() }, inputEvent: function () { return n.createElement("input").oninput !== i ? "input" : n.createElement("input").onpropertychange !== i ? "propertychange" : "keyup" }, prompt: function (e, t) { var n, i, o, a = R.get.ruleName(e), r = R.get.ancillaryValue(e), s = e.prompt || h.prompt[a] || h.text.unspecifiedRule, c = -1 !== s.search("{value}"), l = -1 !== s.search("{name}"); return (l || c) && (i = R.get.field(t.identifier)), c && (s = s.replace("{value}", i.val())), l && (o = 1 == (n = i.closest(x.group).find("label").eq(0)).size() ? n.text() : i.prop("placeholder") || h.text.unspecifiedField, s = s.replace("{name}", o)), s = (s = s.replace("{identifier}", t.identifier)).replace("{ruleValue}", r), e.prompt || R.verbose("Using default validation prompt for type", s, a), s }, settings: function () { if (e.isPlainObject(t)) { var n, o = Object.keys(t); o.length > 0 && (t[o[0]].identifier !== i && t[o[0]].rules !== i) ? (h = e.extend(!0, {}, e.fn.form.settings, u), b = e.extend({}, e.fn.form.settings.defaults, t), R.error(h.error.oldSyntax, P), R.verbose("Extending settings from legacy parameters", b, h)) : (t.fields && (n = Object.keys(t.fields), ("string" == typeof t.fields[n[0]] || e.isArray(t.fields[n[0]])) && e.each(t.fields, function (n, i) { "string" == typeof i && (i = [i]), t.fields[n] = { rules: [] }, e.each(i, function (e, i) { t.fields[n].rules.push({ type: i }) }) })), h = e.extend(!0, {}, e.fn.form.settings, t), b = e.extend({}, e.fn.form.settings.defaults, h.fields), R.verbose("Extending settings", b, h)) } else h = e.fn.form.settings, b = e.fn.form.settings.defaults, R.verbose("Using default form validation", b, h); k = h.namespace, y = h.metadata, x = h.selector, C = h.className, w = h.error, S = "module-" + k, T = "." + k, A = E.data(S), R.refresh() }, field: function (t) { return R.verbose("Finding field with identifier", t), m.filter("#" + t).length > 0 ? m.filter("#" + t) : m.filter('[name="' + t + '"]').length > 0 ? m.filter('[name="' + t + '"]') : m.filter('[name="' + t + '[]"]').length > 0 ? m.filter('[name="' + t + '[]"]') : m.filter("[data-" + y.validate + '="' + t + '"]').length > 0 ? m.filter("[data-" + y.validate + '="' + t + '"]') : e("<input/>") }, fields: function (t) { var n = e(); return e.each(t, function (e, t) { n = n.add(R.get.field(t)) }), n }, validation: function (t) { var n, i; return !!b && (e.each(b, function (e, o) { i = o.identifier || e, R.get.field(i)[0] == t[0] && (o.identifier = i, n = o) }), n || !1) }, value: function (e) { var t = []; return t.push(e), R.get.values.call(P, t)[e] }, values: function (t) { var n = {}; return (e.isArray(t) ? R.get.fields(t) : m).each(function (t, i) { var o = e(i), a = (o.prop("type"), o.prop("name")), r = o.val(), s = o.is(x.checkbox), c = o.is(x.radio), l = -1 !== a.indexOf("[]"), u = !!s && o.is(":checked"); a && (l ? (a = a.replace("[]", ""), n[a] || (n[a] = []), n[a].push(s ? !!u && (r || !0) : r)) : c ? u && (n[a] = r) : n[a] = s ? !!u && (r || !0) : r) }), n } }, has: { field: function (e) { return R.verbose("Checking for existence of a field with identifier", e), "string" != typeof e && R.error(w.identifier, e), m.filter("#" + e).length > 0 || (m.filter('[name="' + e + '"]').length > 0 || m.filter("[data-" + y.validate + '="' + e + '"]').length > 0) } }, add: { prompt: function (t, n) { var o = R.get.field(t).closest(g), a = o.children(x.prompt), r = 0 !== a.length; n = "string" == typeof n ? [n] : n, R.verbose("Adding field error state", t), o.addClass(C.error), h.inline && (r || (a = h.templates.prompt(n)).appendTo(o), a.html(n[0]), r ? R.verbose("Inline errors are disabled, no inline error added", t) : h.transition && e.fn.transition !== i && E.transition("is supported") ? (R.verbose("Displaying error with css transition", h.transition), a.transition(h.transition + " in", h.duration)) : (R.verbose("Displaying error with fallback javascript animation"), a.fadeIn(h.duration))) }, errors: function (e) { R.debug("Adding form error messages", e), R.set.error(), p.html(h.templates.error(e)) } }, remove: { prompt: function (t) { var n = R.get.field(t).closest(g), o = n.children(x.prompt); n.removeClass(C.error), h.inline && o.is(":visible") && (R.verbose("Removing prompt for field", t), h.transition && e.fn.transition !== i && E.transition("is supported") ? o.transition(h.transition + " out", h.duration, function () { o.remove() }) : o.fadeOut(h.duration, function () { o.remove() })) } }, set: { success: function () { E.removeClass(C.error).addClass(C.success) }, defaults: function () { m.each(function () { var t = e(this), n = t.filter(x.checkbox).length > 0 ? t.is(":checked") : t.val(); t.data(y.defaultValue, n) }) }, error: function () { E.removeClass(C.success).addClass(C.error) }, value: function (e, t) { var n = {}; return n[e] = t, R.set.values.call(P, n) }, values: function (t) { e.isEmptyObject(t) || e.each(t, function (t, n) { var i, o = R.get.field(t), a = o.parent(), r = e.isArray(n), s = a.is(x.uiCheckbox), c = a.is(x.uiDropdown), l = o.is(x.radio) && s; o.length > 0 && (r && s ? (R.verbose("Selecting multiple", n, o), a.checkbox("uncheck"), e.each(n, function (e, t) { i = o.filter('[value="' + t + '"]'), a = i.parent(), i.length > 0 && a.checkbox("check") })) : l ? (R.verbose("Selecting radio value", n, o), o.filter('[value="' + n + '"]').parent(x.uiCheckbox).checkbox("check")) : s ? (R.verbose("Setting checkbox value", n, a), a.checkbox(!0 === n ? "check" : "uncheck")) : c ? (R.verbose("Setting dropdown value", n, a), a.dropdown("set selected", n)) : (R.verbose("Setting field value", n, o), o.val(n))) }) } }, validate: { form: function (e, t) { var n = R.get.values(); if (D) return !1; if (F = [], R.is.valid()) { if (R.debug("Form has no validation errors, submitting"), R.set.success(), !0 !== t) return h.onSuccess.call(P, e, n) } else if (R.debug("Form has errors"), R.set.error(), h.inline || R.add.errors(F), E.data("moduleApi") !== i && e.stopImmediatePropagation(), !0 !== t) return h.onFailure.call(P, F, n) }, field: function (t, n) { var o = t.identifier || n, a = R.get.field(o), r = !0, s = []; return t.identifier || (R.debug("Using field name as identifier", o), t.identifier = o), a.prop("disabled") ? (R.debug("Field is disabled. Skipping", o), r = !0) : t.optional && "" === e.trim(a.val()) ? (R.debug("Field is optional and empty. Skipping", o), r = !0) : t.rules !== i && e.each(t.rules, function (e, n) { R.has.field(o) && !R.validate.rule(t, n) && (R.debug("Field is invalid", o, n.type), s.push(R.get.prompt(n, t)), r = !1) }), r ? (R.remove.prompt(o, s), h.onValid.call(a), !0) : (F = F.concat(s), R.add.prompt(o, s), h.onInvalid.call(a, s), !1) }, rule: function (t, n) { var o = R.get.field(t.identifier), a = (n.type, o.val()), r = R.get.ancillaryValue(n), s = R.get.ruleName(n), c = h.rules[s]; return e.isFunction(c) ? (a = a === i || "" === a || null === a ? "" : e.trim(a + ""), c.call(o, a, r)) : void R.error(w.noRule, s) } }, setting: function (t, n) { if (e.isPlainObject(t)) e.extend(!0, h, t); else { if (n === i) return h[t]; h[t] = n } }, internal: function (t, n) { if (e.isPlainObject(t)) e.extend(!0, R, t); else { if (n === i) return R[t]; R[t] = n } }, debug: function () { h.debug && (h.performance ? R.performance.log(arguments) : (R.debug = Function.prototype.bind.call(console.info, console, h.name + ":"), R.debug.apply(console, arguments))) }, verbose: function () { h.verbose && h.debug && (h.performance ? R.performance.log(arguments) : (R.verbose = Function.prototype.bind.call(console.info, console, h.name + ":"), R.verbose.apply(console, arguments))) }, error: function () { R.error = Function.prototype.bind.call(console.error, console, h.name + ":"), R.error.apply(console, arguments) }, performance: { log: function (e) { var t, n; h.performance && (n = (t = (new Date).getTime()) - (s || t), s = t, c.push({ Name: e[0], Arguments: [].slice.call(e, 1) || "", Element: P, "Execution Time": n })), clearTimeout(R.performance.timer), R.performance.timer = setTimeout(R.performance.display, 500) }, display: function () { var t = h.name + ":", n = 0; s = !1, clearTimeout(R.performance.timer), e.each(c, function (e, t) { n += t["Execution Time"] }), t += " " + n + "ms", r && (t += " '" + r + "'"), a.length > 1 && (t += " (" + a.length + ")"), (console.group !== i || console.table !== i) && c.length > 0 && (console.groupCollapsed(t), console.table ? console.table(c) : e.each(c, function (e, t) { console.log(t.Name + ": " + t["Execution Time"] + "ms") }), console.groupEnd()), c = [] } }, invoke: function (t, n, a) { var r, s, c, l = A; return n = n || f, a = P || a, "string" == typeof t && l !== i && (t = t.split(/[\. ]/), r = t.length - 1, e.each(t, function (n, o) { var a = n != r ? o + t[n + 1].charAt(0).toUpperCase() + t[n + 1].slice(1) : t; if (e.isPlainObject(l[a]) && n != r) l = l[a]; else { if (l[a] !== i) return s = l[a], !1; if (!e.isPlainObject(l[o]) || n == r) return l[o] !== i && (s = l[o], !1); l = l[o] } })), e.isFunction(s) ? c = s.apply(a, n) : s !== i && (c = s), e.isArray(o) ? o.push(c) : o !== i ? o = [o, c] : c !== i && (o = c), s } }).initialize() }), o !== i ? o : this }, e.fn.form.settings = { name: "Form", namespace: "form", debug: !1, verbose: !1, performance: !0, fields: !1, keyboardShortcuts: !0, on: "submit", inline: !1, delay: 200, revalidate: !0, transition: "scale", duration: 200, onValid: function () { }, onInvalid: function () { }, onSuccess: function () { return !0 }, onFailure: function () { return !1 }, metadata: { defaultValue: "default", validate: "validate" }, regExp: { bracket: /\[(.*)\]/i, decimal: /^\d*(\.)\d+/, email: "[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?", escape: /[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, flags: /^\/(.*)\/(.*)?/, integer: /^\-?\d+$/, number: /^\-?\d*(\.\d+)?$/, url: /(https?:\/\/(?:www\.|(?!www))[^\s\.]+\.[^\s]{2,}|www\.[^\s]+\.[^\s]{2,})/i }, text: { unspecifiedRule: "Please enter a valid value", unspecifiedField: "This field" }, prompt: { empty: "{name} must have a value", checked: "{name} must be checked", email: "{name} must be a valid e-mail", url: "{name} must be a valid url", regExp: "{name} is not formatted correctly", integer: "{name} must be an integer", decimal: "{name} must be a decimal number", number: "{name} must be set to a number", is: '{name} must be "{ruleValue}"', isExactly: '{name} must be exactly "{ruleValue}"', not: '{name} cannot be set to "{ruleValue}"', notExactly: '{name} cannot be set to exactly "{ruleValue}"', contain: '{name} cannot contain "{ruleValue}"', containExactly: '{name} cannot contain exactly "{ruleValue}"', doesntContain: '{name} must contain  "{ruleValue}"', doesntContainExactly: '{name} must contain exactly "{ruleValue}"', minLength: "{name} must be at least {ruleValue} characters", length: "{name} must be at least {ruleValue} characters", exactLength: "{name} must be exactly {ruleValue} characters", maxLength: "{name} cannot be longer than {ruleValue} characters", match: "{name} must match {ruleValue} field", different: "{name} must have a different value than {ruleValue} field", creditCard: "{name} must be a valid credit card number", minCount: "{name} must have at least {ruleValue} choices", exactCount: "{name} must have exactly {ruleValue} choices", maxCount: "{name} must have {ruleValue} or less choices" }, selector: { checkbox: 'input[type="checkbox"], input[type="radio"]', clear: ".clear", field: "input, textarea, select", group: ".field", input: "input", message: ".error.message", prompt: ".prompt.label", radio: 'input[type="radio"]', reset: '.reset:not([type="reset"])', submit: '.submit:not([type="submit"])', uiCheckbox: ".ui.checkbox", uiDropdown: ".ui.dropdown" }, className: { error: "error", label: "ui prompt label", pressed: "down", success: "success" }, error: { identifier: "You must specify a string identifier for each field", method: "The method you called is not defined.", noRule: "There is no rule matching the one you specified", oldSyntax: "Starting in 2.0 forms now only take a single settings object. Validation settings converted to new syntax automatically." }, templates: { error: function (t) { var n = '<ul class="list">'; return e.each(t, function (e, t) { n += "<li>" + t + "</li>" }), e(n += "</ul>") }, prompt: function (t) { return e("<div/>").addClass("ui basic red pointing prompt label").html(t[0]) } }, rules: { empty: function (t) { return !(t === i || "" === t || e.isArray(t) && 0 === t.length) }, checked: function () { return e(this).filter(":checked").length > 0 }, email: function (t) { return new RegExp(e.fn.form.settings.regExp.email, "i").test(t) }, url: function (t) { return e.fn.form.settings.regExp.url.test(t) }, regExp: function (t, n) { var i, o = n.match(e.fn.form.settings.regExp.flags); return o && (n = o.length >= 2 ? o[1] : n, i = o.length >= 3 ? o[2] : ""), t.match(new RegExp(n, i)) }, integer: function (t, n) { var o, a, r, s = e.fn.form.settings.regExp.integer; return n && -1 === ["", ".."].indexOf(n) && (-1 == n.indexOf("..") ? s.test(n) && (o = a = n - 0) : (r = n.split("..", 2), s.test(r[0]) && (o = r[0] - 0), s.test(r[1]) && (a = r[1] - 0))), s.test(t) && (o === i || t >= o) && (a === i || a >= t) }, decimal: function (t) { return e.fn.form.settings.regExp.decimal.test(t) }, number: function (t) { return e.fn.form.settings.regExp.number.test(t) }, is: function (e, t) { return t = "string" == typeof t ? t.toLowerCase() : t, (e = "string" == typeof e ? e.toLowerCase() : e) == t }, isExactly: function (e, t) { return e == t }, not: function (e, t) { return (e = "string" == typeof e ? e.toLowerCase() : e) != (t = "string" == typeof t ? t.toLowerCase() : t) }, notExactly: function (e, t) { return e != t }, contains: function (t, n) { return n = n.replace(e.fn.form.settings.regExp.escape, "\\$&"), -1 !== t.search(new RegExp(n, "i")) }, containsExactly: function (t, n) { return n = n.replace(e.fn.form.settings.regExp.escape, "\\$&"), -1 !== t.search(new RegExp(n)) }, doesntContain: function (t, n) { return n = n.replace(e.fn.form.settings.regExp.escape, "\\$&"), -1 === t.search(new RegExp(n, "i")) }, doesntContainExactly: function (t, n) { return n = n.replace(e.fn.form.settings.regExp.escape, "\\$&"), -1 === t.search(new RegExp(n)) }, minLength: function (e, t) { return e !== i && e.length >= t }, length: function (e, t) { return e !== i && e.length >= t }, exactLength: function (e, t) { return e !== i && e.length == t }, maxLength: function (e, t) { return e !== i && e.length <= t }, match: function (t, n) { var o; return e(this), e('[data-validate="' + n + '"]').length > 0 ? o = e('[data-validate="' + n + '"]').val() : e("#" + n).length > 0 ? o = e("#" + n).val() : e('[name="' + n + '"]').length > 0 ? o = e('[name="' + n + '"]').val() : e('[name="' + n + '[]"]').length > 0 && (o = e('[name="' + n + '[]"]')), o !== i && t.toString() == o.toString() }, different: function (t, n) { var o; return e(this), e('[data-validate="' + n + '"]').length > 0 ? o = e('[data-validate="' + n + '"]').val() : e("#" + n).length > 0 ? o = e("#" + n).val() : e('[name="' + n + '"]').length > 0 ? o = e('[name="' + n + '"]').val() : e('[name="' + n + '[]"]').length > 0 && (o = e('[name="' + n + '[]"]')), o !== i && t.toString() !== o.toString() }, creditCard: function (t, n) { var i, o, a = { visa: { pattern: /^4/, length: [16] }, amex: { pattern: /^3[47]/, length: [15] }, mastercard: { pattern: /^5[1-5]/, length: [16] }, discover: { pattern: /^(6011|622(12[6-9]|1[3-9][0-9]|[2-8][0-9]{2}|9[0-1][0-9]|92[0-5]|64[4-9])|65)/, length: [16] }, unionPay: { pattern: /^(62|88)/, length: [16, 17, 18, 19] }, jcb: { pattern: /^35(2[89]|[3-8][0-9])/, length: [16] }, maestro: { pattern: /^(5018|5020|5038|6304|6759|676[1-3])/, length: [12, 13, 14, 15, 16, 17, 18, 19] }, dinersClub: { pattern: /^(30[0-5]|^36)/, length: [14] }, laser: { pattern: /^(6304|670[69]|6771)/, length: [16, 17, 18, 19] }, visaElectron: { pattern: /^(4026|417500|4508|4844|491(3|7))/, length: [16] } }, r = {}, s = !1, c = "string" == typeof n && n.split(","); if ("string" == typeof t && 0 !== t.length) { if (c && (e.each(c, function (n, i) { (o = a[i]) && ((r = { length: -1 !== e.inArray(t.length, o.length), pattern: -1 !== t.search(o.pattern) }).length && r.pattern && (s = !0)) }), !s)) return !1; if ((i = { number: -1 !== e.inArray(t.length, a.unionPay.length), pattern: -1 !== t.search(a.unionPay.pattern) }).number && i.pattern) return !0; for (var l = t.length, u = 0, d = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [0, 2, 4, 6, 8, 1, 3, 5, 7, 9]], f = 0; l--;)f += d[u][parseInt(t.charAt(l), 10)], u ^= 1; return f % 10 == 0 && f > 0 } }, minCount: function (e, t) { return 0 == t || (1 == t ? "" !== e : e.split(",").length >= t) }, exactCount: function (e, t) { return 0 == t ? "" === e : 1 == t ? "" !== e && -1 === e.search(",") : e.split(",").length == t }, maxCount: function (e, t) { return 0 != t && (1 == t ? -1 === e.search(",") : e.split(",").length <= t) } } } }(jQuery, window, document), function (e, t, n, i) { "use strict"; e.fn.accordion = function (n) { var o, a = e(this), r = (new Date).getTime(), s = [], c = arguments[0], l = "string" == typeof c, u = [].slice.call(arguments, 1); return t.requestAnimationFrame || t.mozRequestAnimationFrame || t.webkitRequestAnimationFrame || t.msRequestAnimationFrame, a.each(function () { var d, f, m = e.isPlainObject(n) ? e.extend(!0, {}, e.fn.accordion.settings, n) : e.extend({}, e.fn.accordion.settings), g = m.className, p = m.namespace, v = m.selector, h = m.error, b = "." + p, y = "module-" + p, x = a.selector || "", C = e(this), w = C.find(v.title), k = C.find(v.content), S = this, T = C.data(y); f = { initialize: function () { f.debug("Initializing", C), f.bind.events(), m.observeChanges && f.observeChanges(), f.instantiate() }, instantiate: function () { T = f, C.data(y, f) }, destroy: function () { f.debug("Destroying previous instance", C), C.off(b).removeData(y) }, refresh: function () { w = C.find(v.title), k = C.find(v.content) }, observeChanges: function () { "MutationObserver" in t && ((d = new MutationObserver(function (e) { f.debug("DOM tree modified, updating selector cache"), f.refresh() })).observe(S, { childList: !0, subtree: !0 }), f.debug("Setting up mutation observer", d)) }, bind: { events: function () { f.debug("Binding delegated events"), C.on(m.on + b, v.trigger, f.event.click) } }, event: { click: function () { f.toggle.call(this) } }, toggle: function (t) { var n = t !== i ? "number" == typeof t ? w.eq(t) : e(t).closest(v.title) : e(this).closest(v.title), o = n.next(k), a = o.hasClass(g.animating), r = o.hasClass(g.active), s = r && !a, c = !r && a; f.debug("Toggling visibility of content", n), s || c ? m.collapsible ? f.close.call(n) : f.debug("Cannot close accordion content collapsing is disabled") : f.open.call(n) }, open: function (t) { var n = t !== i ? "number" == typeof t ? w.eq(t) : e(t).closest(v.title) : e(this).closest(v.title), o = n.next(k), a = o.hasClass(g.animating); return o.hasClass(g.active) || a ? void f.debug("Accordion already open, skipping", o) : (f.debug("Opening accordion content", n), m.onOpening.call(o), m.exclusive && f.closeOthers.call(n), n.addClass(g.active), o.stop(!0, !0).addClass(g.animating), m.animateChildren && (e.fn.transition !== i && C.transition("is supported") ? o.children().transition({ animation: "fade in", queue: !1, useFailSafe: !0, debug: m.debug, verbose: m.verbose, duration: m.duration }) : o.children().stop(!0, !0).animate({ opacity: 1 }, m.duration, f.resetOpacity)), void o.slideDown(m.duration, m.easing, function () { o.removeClass(g.animating).addClass(g.active), f.reset.display.call(this), m.onOpen.call(this), m.onChange.call(this) })) }, close: function (t) { var n = t !== i ? "number" == typeof t ? w.eq(t) : e(t).closest(v.title) : e(this).closest(v.title), o = n.next(k), a = o.hasClass(g.animating), r = o.hasClass(g.active); !r && !(!r && a) || r && a || (f.debug("Closing accordion content", o), m.onClosing.call(o), n.removeClass(g.active), o.stop(!0, !0).addClass(g.animating), m.animateChildren && (e.fn.transition !== i && C.transition("is supported") ? o.children().transition({ animation: "fade out", queue: !1, useFailSafe: !0, debug: m.debug, verbose: m.verbose, duration: m.duration }) : o.children().stop(!0, !0).animate({ opacity: 0 }, m.duration, f.resetOpacity)), o.slideUp(m.duration, m.easing, function () { o.removeClass(g.animating).removeClass(g.active), f.reset.display.call(this), m.onClose.call(this), m.onChange.call(this) })) }, closeOthers: function (t) { var n, o, a, r = t !== i ? w.eq(t) : e(this).closest(v.title), s = r.parents(v.content).prev(v.title), c = r.closest(v.accordion), l = v.title + "." + g.active + ":visible", u = v.content + "." + g.active + ":visible"; m.closeNested ? a = (n = c.find(l).not(s)).next(k) : (n = c.find(l).not(s), o = c.find(u).find(l).not(s), a = (n = n.not(o)).next(k)), n.length > 0 && (f.debug("Exclusive enabled, closing other content", n), n.removeClass(g.active), a.removeClass(g.animating).stop(!0, !0), m.animateChildren && (e.fn.transition !== i && C.transition("is supported") ? a.children().transition({ animation: "fade out", useFailSafe: !0, debug: m.debug, verbose: m.verbose, duration: m.duration }) : a.children().stop(!0, !0).animate({ opacity: 0 }, m.duration, f.resetOpacity)), a.slideUp(m.duration, m.easing, function () { e(this).removeClass(g.active), f.reset.display.call(this) })) }, reset: { display: function () { f.verbose("Removing inline display from element", this), e(this).css("display", ""), "" === e(this).attr("style") && e(this).attr("style", "").removeAttr("style") }, opacity: function () { f.verbose("Removing inline opacity from element", this), e(this).css("opacity", ""), "" === e(this).attr("style") && e(this).attr("style", "").removeAttr("style") } }, setting: function (t, n) { if (f.debug("Changing setting", t, n), e.isPlainObject(t)) e.extend(!0, m, t); else { if (n === i) return m[t]; m[t] = n } }, internal: function (t, n) { return f.debug("Changing internal", t, n), n === i ? f[t] : void (e.isPlainObject(t) ? e.extend(!0, f, t) : f[t] = n) }, debug: function () { m.debug && (m.performance ? f.performance.log(arguments) : (f.debug = Function.prototype.bind.call(console.info, console, m.name + ":"), f.debug.apply(console, arguments))) }, verbose: function () { m.verbose && m.debug && (m.performance ? f.performance.log(arguments) : (f.verbose = Function.prototype.bind.call(console.info, console, m.name + ":"), f.verbose.apply(console, arguments))) }, error: function () { f.error = Function.prototype.bind.call(console.error, console, m.name + ":"), f.error.apply(console, arguments) }, performance: { log: function (e) { var t, n; m.performance && (n = (t = (new Date).getTime()) - (r || t), r = t, s.push({ Name: e[0], Arguments: [].slice.call(e, 1) || "", Element: S, "Execution Time": n })), clearTimeout(f.performance.timer), f.performance.timer = setTimeout(f.performance.display, 500) }, display: function () { var t = m.name + ":", n = 0; r = !1, clearTimeout(f.performance.timer), e.each(s, function (e, t) { n += t["Execution Time"] }), t += " " + n + "ms", x && (t += " '" + x + "'"), (console.group !== i || console.table !== i) && s.length > 0 && (console.groupCollapsed(t), console.table ? console.table(s) : e.each(s, function (e, t) { console.log(t.Name + ": " + t["Execution Time"] + "ms") }), console.groupEnd()), s = [] } }, invoke: function (t, n, a) { var r, s, c, l = T; return n = n || u, a = S || a, "string" == typeof t && l !== i && (t = t.split(/[\. ]/), r = t.length - 1, e.each(t, function (n, o) { var a = n != r ? o + t[n + 1].charAt(0).toUpperCase() + t[n + 1].slice(1) : t; if (e.isPlainObject(l[a]) && n != r) l = l[a]; else { if (l[a] !== i) return s = l[a], !1; if (!e.isPlainObject(l[o]) || n == r) return l[o] !== i ? (s = l[o], !1) : (f.error(h.method, t), !1); l = l[o] } })), e.isFunction(s) ? c = s.apply(a, n) : s !== i && (c = s), e.isArray(o) ? o.push(c) : o !== i ? o = [o, c] : c !== i && (o = c), s } }, l ? (T === i && f.initialize(), f.invoke(c)) : (T !== i && T.invoke("destroy"), f.initialize()) }), o !== i ? o : this }, e.fn.accordion.settings = { name: "Accordion", namespace: "accordion", debug: !1, verbose: !1, performance: !0, on: "click", observeChanges: !0, exclusive: !0, collapsible: !0, closeNested: !1, animateChildren: !0, duration: 350, easing: "easeOutQuad", onOpening: function () { }, onOpen: function () { }, onClosing: function () { }, onClose: function () { }, onChange: function () { }, error: { method: "The method you called is not defined" }, className: { active: "active", animating: "animating" }, selector: { accordion: ".accordion", title: ".title", trigger: ".title", content: ".content" } }, e.extend(e.easing, { easeOutQuad: function (e, t, n, i, o) { return -i * (t /= o) * (t - 2) + n } }) }(jQuery, window, document), function (e, t, n, i) { "use strict"; e.fn.checkbox = function (o) { var a, r = e(this), s = r.selector || "", c = (new Date).getTime(), l = [], u = arguments[0], d = "string" == typeof u, f = [].slice.call(arguments, 1); return r.each(function () { var r, m, g = e.extend(!0, {}, e.fn.checkbox.settings, o), p = g.className, v = g.namespace, h = g.selector, b = g.error, y = "." + v, x = "module-" + v, C = e(this), w = e(this).children(h.label), k = e(this).children(h.input), S = k[0], T = !1, A = !1, R = C.data(x), E = this; m = { initialize: function () { m.verbose("Initializing checkbox", g), m.create.label(), m.bind.events(), m.set.tabbable(), m.hide.input(), m.observeChanges(), m.instantiate(), m.setup() }, instantiate: function () { m.verbose("Storing instance of module", m), R = m, C.data(x, m) }, destroy: function () { m.verbose("Destroying module"), m.unbind.events(), m.show.input(), C.removeData(x) }, fix: { reference: function () { C.is(h.input) && (m.debug("Behavior called on <input> adjusting invoked element"), C = C.closest(h.checkbox), m.refresh()) } }, setup: function () { m.set.initialLoad(), m.is.indeterminate() ? (m.debug("Initial value is indeterminate"), m.indeterminate()) : m.is.checked() ? (m.debug("Initial value is checked"), m.check()) : (m.debug("Initial value is unchecked"), m.uncheck()), m.remove.initialLoad() }, refresh: function () { w = C.children(h.label), k = C.children(h.input), S = k[0] }, hide: { input: function () { m.verbose("Modfying <input> z-index to be unselectable"), k.addClass(p.hidden) } }, show: { input: function () { m.verbose("Modfying <input> z-index to be selectable"), k.removeClass(p.hidden) } }, observeChanges: function () { "MutationObserver" in t && ((r = new MutationObserver(function (e) { m.debug("DOM tree modified, updating selector cache"), m.refresh() })).observe(E, { childList: !0, subtree: !0 }), m.debug("Setting up mutation observer", r)) }, attachEvents: function (t, n) { var i = e(t); n = e.isFunction(m[n]) ? m[n] : m.toggle, i.length > 0 ? (m.debug("Attaching checkbox events to element", t, n), i.on("click" + y, n)) : m.error(b.notFound) }, event: { click: function (t) { var n = e(t.target); return n.is(h.input) ? void m.verbose("Using default check action on initialized checkbox") : n.is(h.link) ? void m.debug("Clicking link inside checkbox, skipping toggle") : (m.toggle(), k.focus(), void t.preventDefault()) }, keydown: function (e) { var t = e.which, n = 13, i = 32; t == 27 ? (m.verbose("Escape key pressed blurring field"), k.blur(), A = !0) : e.ctrlKey || t != i && t != n ? A = !1 : (m.verbose("Enter/space key pressed, toggling checkbox"), m.toggle(), A = !0) }, keyup: function (e) { A && e.preventDefault() } }, check: function () { m.should.allowCheck() && (m.debug("Checking checkbox", k), m.set.checked(), m.should.ignoreCallbacks() || (g.onChecked.call(S), g.onChange.call(S))) }, uncheck: function () { m.should.allowUncheck() && (m.debug("Unchecking checkbox"), m.set.unchecked(), m.should.ignoreCallbacks() || (g.onUnchecked.call(S), g.onChange.call(S))) }, indeterminate: function () { return m.should.allowIndeterminate() ? void m.debug("Checkbox is already indeterminate") : (m.debug("Making checkbox indeterminate"), m.set.indeterminate(), void (m.should.ignoreCallbacks() || (g.onIndeterminate.call(S), g.onChange.call(S)))) }, determinate: function () { return m.should.allowDeterminate() ? void m.debug("Checkbox is already determinate") : (m.debug("Making checkbox determinate"), m.set.determinate(), void (m.should.ignoreCallbacks() || (g.onDeterminate.call(S), g.onChange.call(S)))) }, enable: function () { return m.is.enabled() ? void m.debug("Checkbox is already enabled") : (m.debug("Enabling checkbox"), m.set.enabled(), void g.onEnabled.call(S)) }, disable: function () { return m.is.disabled() ? void m.debug("Checkbox is already disabled") : (m.debug("Disabling checkbox"), m.set.disabled(), void g.onDisabled.call(S)) }, get: { radios: function () { var t = m.get.name(); return e('input[name="' + t + '"]').closest(h.checkbox) }, otherRadios: function () { return m.get.radios().not(C) }, name: function () { return k.attr("name") } }, is: { initialLoad: function () { return T }, radio: function () { return k.hasClass(p.radio) || "radio" == k.attr("type") }, indeterminate: function () { return k.prop("indeterminate") !== i && k.prop("indeterminate") }, checked: function () { return k.prop("checked") !== i && k.prop("checked") }, disabled: function () { return k.prop("disabled") !== i && k.prop("disabled") }, enabled: function () { return !m.is.disabled() }, determinate: function () { return !m.is.indeterminate() }, unchecked: function () { return !m.is.checked() } }, should: { allowCheck: function () { return m.is.determinate() && m.is.checked() && !m.should.forceCallbacks() ? (m.debug("Should not allow check, checkbox is already checked"), !1) : !1 !== g.beforeChecked.apply(S) || (m.debug("Should not allow check, beforeChecked cancelled"), !1) }, allowUncheck: function () { return m.is.determinate() && m.is.unchecked() && !m.should.forceCallbacks() ? (m.debug("Should not allow uncheck, checkbox is already unchecked"), !1) : !1 !== g.beforeUnchecked.apply(S) || (m.debug("Should not allow uncheck, beforeUnchecked cancelled"), !1) }, allowIndeterminate: function () { return m.is.indeterminate() && !m.should.forceCallbacks() ? (m.debug("Should not allow indeterminate, checkbox is already indeterminate"), !1) : !1 !== g.beforeIndeterminate.apply(S) || (m.debug("Should not allow indeterminate, beforeIndeterminate cancelled"), !1) }, allowDeterminate: function () { return m.is.determinate() && !m.should.forceCallbacks() ? (m.debug("Should not allow determinate, checkbox is already determinate"), !1) : !1 !== g.beforeDeterminate.apply(S) || (m.debug("Should not allow determinate, beforeDeterminate cancelled"), !1) }, forceCallbacks: function () { return m.is.initialLoad() && g.fireOnInit }, ignoreCallbacks: function () { return T && !g.fireOnInit } }, can: { change: function () { return !(C.hasClass(p.disabled) || C.hasClass(p.readOnly) || k.prop("disabled") || k.prop("readonly")) }, uncheck: function () { return "boolean" == typeof g.uncheckable ? g.uncheckable : !m.is.radio() } }, set: { initialLoad: function () { T = !0 }, checked: function () { return m.verbose("Setting class to checked"), C.removeClass(p.indeterminate).addClass(p.checked), m.is.radio() && m.uncheckOthers(), !m.is.indeterminate() && m.is.checked() ? void m.debug("Input is already checked, skipping input property change") : (m.verbose("Setting state to checked", S), k.prop("indeterminate", !1).prop("checked", !0), void m.trigger.change()) }, unchecked: function () { return m.verbose("Removing checked class"), C.removeClass(p.indeterminate).removeClass(p.checked), !m.is.indeterminate() && m.is.unchecked() ? void m.debug("Input is already unchecked") : (m.debug("Setting state to unchecked"), k.prop("indeterminate", !1).prop("checked", !1), void m.trigger.change()) }, indeterminate: function () { return m.verbose("Setting class to indeterminate"), C.addClass(p.indeterminate), m.is.indeterminate() ? void m.debug("Input is already indeterminate, skipping input property change") : (m.debug("Setting state to indeterminate"), k.prop("indeterminate", !0), void m.trigger.change()) }, determinate: function () { return m.verbose("Removing indeterminate class"), C.removeClass(p.indeterminate), m.is.determinate() ? void m.debug("Input is already determinate, skipping input property change") : (m.debug("Setting state to determinate"), void k.prop("indeterminate", !1)) }, disabled: function () { return m.verbose("Setting class to disabled"), C.addClass(p.disabled), m.is.disabled() ? void m.debug("Input is already disabled, skipping input property change") : (m.debug("Setting state to disabled"), k.prop("disabled", "disabled"), void m.trigger.change()) }, enabled: function () { return m.verbose("Removing disabled class"), C.removeClass(p.disabled), m.is.enabled() ? void m.debug("Input is already enabled, skipping input property change") : (m.debug("Setting state to enabled"), k.prop("disabled", !1), void m.trigger.change()) }, tabbable: function () { m.verbose("Adding tabindex to checkbox"), k.attr("tabindex") === i && k.attr("tabindex", 0) } }, remove: { initialLoad: function () { T = !1 } }, trigger: { change: function () { var e = n.createEvent("HTMLEvents"), t = k[0]; t && (m.verbose("Triggering native change event"), e.initEvent("change", !0, !1), t.dispatchEvent(e)) } }, create: { label: function () { k.prevAll(h.label).length > 0 ? (k.prev(h.label).detach().insertAfter(k), m.debug("Moving existing label", w)) : m.has.label() || (w = e("<label>").insertAfter(k), m.debug("Creating label", w)) } }, has: { label: function () { return w.length > 0 } }, bind: { events: function () { m.verbose("Attaching checkbox events"), C.on("click" + y, m.event.click).on("keydown" + y, h.input, m.event.keydown).on("keyup" + y, h.input, m.event.keyup) } }, unbind: { events: function () { m.debug("Removing events"), C.off(y) } }, uncheckOthers: function () { var e = m.get.otherRadios(); m.debug("Unchecking other radios", e), e.removeClass(p.checked) }, toggle: function () { return m.can.change() ? void (m.is.indeterminate() || m.is.unchecked() ? (m.debug("Currently unchecked"), m.check()) : m.is.checked() && m.can.uncheck() && (m.debug("Currently checked"), m.uncheck())) : void (m.is.radio() || m.debug("Checkbox is read-only or disabled, ignoring toggle")) }, setting: function (t, n) { if (m.debug("Changing setting", t, n), e.isPlainObject(t)) e.extend(!0, g, t); else { if (n === i) return g[t]; g[t] = n } }, internal: function (t, n) { if (e.isPlainObject(t)) e.extend(!0, m, t); else { if (n === i) return m[t]; m[t] = n } }, debug: function () { g.debug && (g.performance ? m.performance.log(arguments) : (m.debug = Function.prototype.bind.call(console.info, console, g.name + ":"), m.debug.apply(console, arguments))) }, verbose: function () { g.verbose && g.debug && (g.performance ? m.performance.log(arguments) : (m.verbose = Function.prototype.bind.call(console.info, console, g.name + ":"), m.verbose.apply(console, arguments))) }, error: function () { m.error = Function.prototype.bind.call(console.error, console, g.name + ":"), m.error.apply(console, arguments) }, performance: { log: function (e) { var t, n; g.performance && (n = (t = (new Date).getTime()) - (c || t), c = t, l.push({ Name: e[0], Arguments: [].slice.call(e, 1) || "", Element: E, "Execution Time": n })), clearTimeout(m.performance.timer), m.performance.timer = setTimeout(m.performance.display, 500) }, display: function () { var t = g.name + ":", n = 0; c = !1, clearTimeout(m.performance.timer), e.each(l, function (e, t) { n += t["Execution Time"] }), t += " " + n + "ms", s && (t += " '" + s + "'"), (console.group !== i || console.table !== i) && l.length > 0 && (console.groupCollapsed(t), console.table ? console.table(l) : e.each(l, function (e, t) { console.log(t.Name + ": " + t["Execution Time"] + "ms") }), console.groupEnd()), l = [] } }, invoke: function (t, n, o) { var r, s, c, l = R; return n = n || f, o = E || o, "string" == typeof t && l !== i && (t = t.split(/[\. ]/), r = t.length - 1, e.each(t, function (n, o) { var a = n != r ? o + t[n + 1].charAt(0).toUpperCase() + t[n + 1].slice(1) : t; if (e.isPlainObject(l[a]) && n != r) l = l[a]; else { if (l[a] !== i) return s = l[a], !1; if (!e.isPlainObject(l[o]) || n == r) return l[o] !== i ? (s = l[o], !1) : (m.error(b.method, t), !1); l = l[o] } })), e.isFunction(s) ? c = s.apply(o, n) : s !== i && (c = s), e.isArray(a) ? a.push(c) : a !== i ? a = [a, c] : c !== i && (a = c), s } }, d ? (R === i && m.initialize(), m.invoke(u)) : (R !== i && R.invoke("destroy"), m.initialize()) }), a !== i ? a : this }, e.fn.checkbox.settings = { name: "Checkbox", namespace: "checkbox", debug: !1, verbose: !0, performance: !0, uncheckable: "auto", fireOnInit: !1, onChange: function () { }, beforeChecked: function () { }, beforeUnchecked: function () { }, beforeDeterminate: function () { }, beforeIndeterminate: function () { }, onChecked: function () { }, onUnchecked: function () { }, onDeterminate: function () { }, onIndeterminate: function () { }, onEnable: function () { }, onDisable: function () { }, className: { checked: "checked", indeterminate: "indeterminate", disabled: "disabled", hidden: "hidden", radio: "radio", readOnly: "read-only" }, error: { method: "The method you called is not defined" }, selector: { checkbox: ".ui.checkbox", label: "label, .box", input: 'input[type="checkbox"], input[type="radio"]', link: "a[href]" } } }(jQuery, window, document), function (e, t, n, i) { "use strict"; e.fn.dimmer = function (t) { var o, a = e(this), r = (new Date).getTime(), s = [], c = arguments[0], l = "string" == typeof c, u = [].slice.call(arguments, 1); return a.each(function () { var d, f, m, g = e.isPlainObject(t) ? e.extend(!0, {}, e.fn.dimmer.settings, t) : e.extend({}, e.fn.dimmer.settings), p = g.selector, v = g.namespace, h = g.className, b = g.error, y = "." + v, x = "module-" + v, C = a.selector || "", w = "ontouchstart" in n.documentElement ? "touchstart" : "click", k = e(this), S = this, T = k.data(x); (m = { preinitialize: function () { m.is.dimmer() ? (f = k.parent(), d = k) : (f = k, d = m.has.dimmer() ? g.dimmerName ? f.find(p.dimmer).filter("." + g.dimmerName) : f.find(p.dimmer) : m.create()) }, initialize: function () { m.debug("Initializing dimmer", g), m.bind.events(), m.set.dimmable(), m.instantiate() }, instantiate: function () { m.verbose("Storing instance of module", m), T = m, k.data(x, T) }, destroy: function () { m.verbose("Destroying previous module", d), m.unbind.events(), m.remove.variation(), f.off(y) }, bind: { events: function () { "hover" == g.on ? f.on("mouseenter" + y, m.show).on("mouseleave" + y, m.hide) : "click" == g.on && f.on(w + y, m.toggle), m.is.page() && (m.debug("Setting as a page dimmer", f), m.set.pageDimmer()), m.is.closable() && (m.verbose("Adding dimmer close event", d), f.on(w + y, p.dimmer, m.event.click)) } }, unbind: { events: function () { k.removeData(x) } }, event: { click: function (t) { m.verbose("Determining if event occured on dimmer", t), (0 === d.find(t.target).length || e(t.target).is(p.content)) && (m.hide(), t.stopImmediatePropagation()) } }, addContent: function (t) { var n = e(t); m.debug("Add content to dimmer", n), n.parent()[0] !== d[0] && n.detach().appendTo(d) }, create: function () { var t = e(g.template.dimmer()); return g.variation && (m.debug("Creating dimmer with variation", g.variation), t.addClass(g.variation)), g.dimmerName && (m.debug("Creating named dimmer", g.dimmerName), t.addClass(g.dimmerName)), t.appendTo(f), t }, show: function (t) { t = e.isFunction(t) ? t : function () { }, m.debug("Showing dimmer", d, g), m.is.dimmed() && !m.is.animating() || !m.is.enabled() ? m.debug("Dimmer is already shown or disabled") : (m.animate.show(t), g.onShow.call(S), g.onChange.call(S)) }, hide: function (t) { t = e.isFunction(t) ? t : function () { }, m.is.dimmed() || m.is.animating() ? (m.debug("Hiding dimmer", d), m.animate.hide(t), g.onHide.call(S), g.onChange.call(S)) : m.debug("Dimmer is not visible") }, toggle: function () { m.verbose("Toggling dimmer visibility", d), m.is.dimmed() ? m.hide() : m.show() }, animate: { show: function (t) { t = e.isFunction(t) ? t : function () { }, g.useCSS && e.fn.transition !== i && d.transition("is supported") ? ("auto" !== g.opacity && m.set.opacity(), d.transition({ animation: g.transition + " in", queue: !1, duration: m.get.duration(), useFailSafe: !0, onStart: function () { m.set.dimmed() }, onComplete: function () { m.set.active(), t() } })) : (m.verbose("Showing dimmer animation with javascript"), m.set.dimmed(), "auto" == g.opacity && (g.opacity = .8), d.stop().css({ opacity: 0, width: "100%", height: "100%" }).fadeTo(m.get.duration(), g.opacity, function () { d.removeAttr("style"), m.set.active(), t() })) }, hide: function (t) { t = e.isFunction(t) ? t : function () { }, g.useCSS && e.fn.transition !== i && d.transition("is supported") ? (m.verbose("Hiding dimmer with css"), d.transition({ animation: g.transition + " out", queue: !1, duration: m.get.duration(), useFailSafe: !0, onStart: function () { m.remove.dimmed() }, onComplete: function () { m.remove.active(), t() } })) : (m.verbose("Hiding dimmer with javascript"), m.remove.dimmed(), d.stop().fadeOut(m.get.duration(), function () { m.remove.active(), d.removeAttr("style"), t() })) } }, get: { dimmer: function () { return d }, duration: function () { return "object" == typeof g.duration ? m.is.active() ? g.duration.hide : g.duration.show : g.duration } }, has: { dimmer: function () { return g.dimmerName ? k.find(p.dimmer).filter("." + g.dimmerName).length > 0 : k.find(p.dimmer).length > 0 } }, is: { active: function () { return d.hasClass(h.active) }, animating: function () { return d.is(":animated") || d.hasClass(h.animating) }, closable: function () { return "auto" == g.closable ? "hover" != g.on : g.closable }, dimmer: function () { return k.hasClass(h.dimmer) }, dimmable: function () { return k.hasClass(h.dimmable) }, dimmed: function () { return f.hasClass(h.dimmed) }, disabled: function () { return f.hasClass(h.disabled) }, enabled: function () { return !m.is.disabled() }, page: function () { return f.is("body") }, pageDimmer: function () { return d.hasClass(h.pageDimmer) } }, can: { show: function () { return !d.hasClass(h.disabled) } }, set: { opacity: function (e) { var t = d.css("background-color"), n = t.split(","), i = n && 4 == n.length; e = 0 === g.opacity ? 0 : g.opacity || e, i ? (n[3] = e + ")", t = n.join(",")) : t = "rgba(0, 0, 0, " + e + ")", m.debug("Setting opacity to", e), d.css("background-color", t) }, active: function () { d.addClass(h.active) }, dimmable: function () { f.addClass(h.dimmable) }, dimmed: function () { f.addClass(h.dimmed) }, pageDimmer: function () { d.addClass(h.pageDimmer) }, disabled: function () { d.addClass(h.disabled) }, variation: function (e) { (e = e || g.variation) && d.addClass(e) } }, remove: { active: function () { d.removeClass(h.active) }, dimmed: function () { f.removeClass(h.dimmed) }, disabled: function () { d.removeClass(h.disabled) }, variation: function (e) { (e = e || g.variation) && d.removeClass(e) } }, setting: function (t, n) { if (m.debug("Changing setting", t, n), e.isPlainObject(t)) e.extend(!0, g, t); else { if (n === i) return g[t]; g[t] = n } }, internal: function (t, n) { if (e.isPlainObject(t)) e.extend(!0, m, t); else { if (n === i) return m[t]; m[t] = n } }, debug: function () { g.debug && (g.performance ? m.performance.log(arguments) : (m.debug = Function.prototype.bind.call(console.info, console, g.name + ":"), m.debug.apply(console, arguments))) }, verbose: function () { g.verbose && g.debug && (g.performance ? m.performance.log(arguments) : (m.verbose = Function.prototype.bind.call(console.info, console, g.name + ":"), m.verbose.apply(console, arguments))) }, error: function () { m.error = Function.prototype.bind.call(console.error, console, g.name + ":"), m.error.apply(console, arguments) }, performance: { log: function (e) { var t, n; g.performance && (n = (t = (new Date).getTime()) - (r || t), r = t, s.push({ Name: e[0], Arguments: [].slice.call(e, 1) || "", Element: S, "Execution Time": n })), clearTimeout(m.performance.timer), m.performance.timer = setTimeout(m.performance.display, 500) }, display: function () { var t = g.name + ":", n = 0; r = !1, clearTimeout(m.performance.timer), e.each(s, function (e, t) { n += t["Execution Time"] }), t += " " + n + "ms", C && (t += " '" + C + "'"), a.length > 1 && (t += " (" + a.length + ")"), (console.group !== i || console.table !== i) && s.length > 0 && (console.groupCollapsed(t), console.table ? console.table(s) : e.each(s, function (e, t) { console.log(t.Name + ": " + t["Execution Time"] + "ms") }), console.groupEnd()), s = [] } }, invoke: function (t, n, a) { var r, s, c, l = T; return n = n || u, a = S || a, "string" == typeof t && l !== i && (t = t.split(/[\. ]/), r = t.length - 1, e.each(t, function (n, o) { var a = n != r ? o + t[n + 1].charAt(0).toUpperCase() + t[n + 1].slice(1) : t; if (e.isPlainObject(l[a]) && n != r) l = l[a]; else { if (l[a] !== i) return s = l[a], !1; if (!e.isPlainObject(l[o]) || n == r) return l[o] !== i ? (s = l[o], !1) : (m.error(b.method, t), !1); l = l[o] } })), e.isFunction(s) ? c = s.apply(a, n) : s !== i && (c = s), e.isArray(o) ? o.push(c) : o !== i ? o = [o, c] : c !== i && (o = c), s } }).preinitialize(), l ? (T === i && m.initialize(), m.invoke(c)) : (T !== i && T.invoke("destroy"), m.initialize()) }), o !== i ? o : this }, e.fn.dimmer.settings = { name: "Dimmer", namespace: "dimmer", debug: !1, verbose: !1, performance: !0, dimmerName: !1, variation: !1, closable: "auto", useCSS: !0, transition: "fade", on: !1, opacity: "auto", duration: { show: 500, hide: 500 }, onChange: function () { }, onShow: function () { }, onHide: function () { }, error: { method: "The method you called is not defined." }, className: { active: "active", animating: "animating", dimmable: "dimmable", dimmed: "dimmed", dimmer: "dimmer", disabled: "disabled", hide: "hide", pageDimmer: "page", show: "show" }, selector: { dimmer: "> .ui.dimmer", content: ".ui.dimmer > .content, .ui.dimmer > .content > .center" }, template: { dimmer: function () { return e("<div />").attr("class", "ui dimmer") } } } }(jQuery, window, document), function (e, t, n, i) { "use strict"; e.fn.dropdown = function (o) { var a, r = e(this), s = e(n), c = r.selector || "", l = "ontouchstart" in n.documentElement, u = (new Date).getTime(), d = [], f = arguments[0], m = "string" == typeof f, g = [].slice.call(arguments, 1); return r.each(function (p) { var v, h, b, y, x, C, w, k = e.isPlainObject(o) ? e.extend(!0, {}, e.fn.dropdown.settings, o) : e.extend({}, e.fn.dropdown.settings), S = k.className, T = k.message, A = k.fields, R = k.keys, E = k.metadata, P = k.namespace, F = k.regExp, D = k.selector, O = k.error, q = k.templates, j = "." + P, z = "module-" + P, I = e(this), L = e(k.context), N = I.find(D.text), V = I.find(D.search), H = I.find(D.input), M = (I.find(D.icon), I.prev().find(D.text).length > 0 ? I.prev().find(D.text) : I.prev()), U = I.children(D.menu), W = U.find(D.item), B = !1, Q = !1, X = !1, $ = this, Y = I.data(z); w = { initialize: function () { w.debug("Initializing dropdown", k), w.is.alreadySetup() ? w.setup.reference() : (w.setup.layout(), w.refreshData(), w.save.defaults(), w.restore.selected(), w.create.id(), w.bind.events(), w.observeChanges(), w.instantiate()) }, instantiate: function () { w.verbose("Storing instance of dropdown", w), Y = w, I.data(z, w) }, destroy: function () { w.verbose("Destroying previous dropdown", I), w.remove.tabbable(), I.off(j).removeData(z), U.off(j), s.off(b), x && x.disconnect(), C && C.disconnect() }, observeChanges: function () { "MutationObserver" in t && (x = new MutationObserver(function (e) { w.debug("<select> modified, recreating menu"), w.setup.select() }), C = new MutationObserver(function (e) { w.debug("Menu modified, updating selector cache"), w.refresh() }), w.has.input() && x.observe(H[0], { childList: !0, subtree: !0 }), w.has.menu() && C.observe(U[0], { childList: !0, subtree: !0 }), w.debug("Setting up mutation observer", x, C)) }, create: { id: function () { y = (Math.random().toString(16) + "000000000").substr(2, 8), b = "." + y, w.verbose("Creating unique id for element", y) }, userChoice: function (t) { var n, o, a; return !!(t = t || w.get.userValues()) && (t = e.isArray(t) ? t : [t], e.each(t, function (t, r) { !1 === w.get.item(r) && (a = k.templates.addition(w.add.variables(T.addResult, r)), o = e("<div />").html(a).attr("data-" + E.value, r).attr("data-" + E.text, r).addClass(S.addition).addClass(S.item), n = n === i ? o : n.add(o), w.verbose("Creating user choices for value", r, o)) }), n) }, userLabels: function (t) { var n = w.get.userValues(); n && (w.debug("Adding user labels", n), e.each(n, function (e, t) { w.verbose("Adding custom user value"), w.add.label(t, t) })) }, menu: function () { U = e("<div />").addClass(S.menu).appendTo(I) } }, search: function (e) { e = e !== i ? e : w.get.query(), w.verbose("Searching for query", e), w.filter(e) }, select: { firstUnfiltered: function () { w.verbose("Selecting first non-filtered element"), w.remove.selectedItem(), W.not(D.unselectable).eq(0).addClass(S.selected) }, nextAvailable: function (e) { var t = (e = e.eq(0)).nextAll(D.item).not(D.unselectable).eq(0), n = e.prevAll(D.item).not(D.unselectable).eq(0); t.length > 0 ? (w.verbose("Moving selection to", t), t.addClass(S.selected)) : (w.verbose("Moving selection to", n), n.addClass(S.selected)) } }, setup: { api: function () { var e = { debug: k.debug, on: !1 }; w.verbose("First request, initializing API"), I.api(e) }, layout: function () { I.is("select") && (w.setup.select(), w.setup.returnedObject()), w.has.menu() || w.create.menu(), w.is.search() && !w.has.search() && (w.verbose("Adding search input"), V = e("<input />").addClass(S.search).prop("autocomplete", "off").insertBefore(N)), k.allowTab && w.set.tabbable() }, select: function () { var t = w.get.selectValues(); w.debug("Dropdown initialized on a select", t), I.is("select") && (H = I), H.parent(D.dropdown).length > 0 ? (w.debug("UI dropdown already exists. Creating dropdown menu only"), I = H.closest(D.dropdown), w.has.menu() || w.create.menu(), U = I.children(D.menu), w.setup.menu(t)) : (w.debug("Creating entire dropdown from select"), I = e("<div />").attr("class", H.attr("class")).addClass(S.selection).addClass(S.dropdown).html(q.dropdown(t)).insertBefore(H), H.hasClass(S.multiple) && !1 === H.prop("multiple") && (w.error(O.missingMultiple), H.prop("multiple", !0)), H.is("[multiple]") && w.set.multiple(), H.prop("disabled") && (w.debug("Disabling dropdown"), I.addClass(S.disabled)), H.removeAttr("class").detach().prependTo(I)), w.refresh() }, menu: function (e) { U.html(q.menu(e, A)), W = U.find(D.item) }, reference: function () { w.debug("Dropdown behavior was called on select, replacing with closest dropdown"), I = I.parent(D.dropdown), w.refresh(), w.setup.returnedObject(), m && (Y = w, w.invoke(f)) }, returnedObject: function () { var e = r.slice(0, p), t = r.slice(p + 1); r = e.add(I).add(t) } }, refresh: function () { w.refreshSelectors(), w.refreshData() }, refreshSelectors: function () { w.verbose("Refreshing selector cache"), N = I.find(D.text), V = I.find(D.search), H = I.find(D.input), I.find(D.icon), M = I.prev().find(D.text).length > 0 ? I.prev().find(D.text) : I.prev(), U = I.children(D.menu), W = U.find(D.item) }, refreshData: function () { w.verbose("Refreshing cached metadata"), W.removeData(E.text).removeData(E.value), I.removeData(E.defaultText).removeData(E.defaultValue).removeData(E.placeholderText) }, toggle: function () { w.verbose("Toggling menu visibility"), w.is.active() ? w.hide() : w.show() }, show: function (t) { if (t = e.isFunction(t) ? t : function () { }, w.can.show() && !w.is.active()) { if (w.debug("Showing dropdown"), w.is.multiple() && !w.has.search() && w.is.allFiltered()) return !0; !w.has.message() || w.has.maxSelections() || w.has.allResultsFiltered() || w.remove.message(), !1 !== k.onShow.call($) && w.animate.show(function () { w.can.click() && w.bind.intent(), w.set.visible(), t.call($) }) } }, hide: function (t) { t = e.isFunction(t) ? t : function () { }, w.is.active() && (w.debug("Hiding dropdown"), !1 !== k.onHide.call($) && w.animate.hide(function () { w.remove.visible(), t.call($) })) }, hideOthers: function () { w.verbose("Finding other dropdowns to hide"), r.not(I).has(D.menu + "." + S.visible).dropdown("hide") }, hideMenu: function () { w.verbose("Hiding menu  instantaneously"), w.remove.active(), w.remove.visible(), U.transition("hide") }, hideSubMenus: function () { var e = U.children(D.item).find(D.menu); w.verbose("Hiding sub menus", e), e.transition("hide") }, bind: { events: function () { l && w.bind.touchEvents(), w.bind.keyboardEvents(), w.bind.inputEvents(), w.bind.mouseEvents() }, touchEvents: function () { w.debug("Touch device detected binding additional touch events"), w.is.searchSelection() || w.is.single() && I.on("touchstart" + j, w.event.test.toggle), U.on("touchstart" + j, D.item, w.event.item.mouseenter) }, keyboardEvents: function () { w.verbose("Binding keyboard events"), I.on("keydown" + j, w.event.keydown), w.has.search() && I.on(w.get.inputEvent() + j, D.search, w.event.input), w.is.multiple() && s.on("keydown" + b, w.event.document.keydown) }, inputEvents: function () { w.verbose("Binding input change events"), I.on("change" + j, D.input, w.event.change) }, mouseEvents: function () { w.verbose("Binding mouse events"), w.is.multiple() && I.on("click" + j, D.label, w.event.label.click).on("click" + j, D.remove, w.event.remove.click), w.is.searchSelection() ? (I.on("mousedown" + j, D.menu, w.event.menu.mousedown).on("mouseup" + j, D.menu, w.event.menu.mouseup).on("click" + j, D.icon, w.event.icon.click).on("click" + j, D.search, w.show).on("focus" + j, D.search, w.event.search.focus).on("blur" + j, D.search, w.event.search.blur).on("click" + j, D.text, w.event.text.focus), w.is.multiple() && I.on("click" + j, w.event.click)) : ("click" == k.on ? I.on("click" + j, D.icon, w.event.icon.click).on("click" + j, w.event.test.toggle) : "hover" == k.on ? I.on("mouseenter" + j, w.delay.show).on("mouseleave" + j, w.delay.hide) : I.on(k.on + j, w.toggle), I.on("mousedown" + j, w.event.mousedown).on("mouseup" + j, w.event.mouseup).on("focus" + j, w.event.focus).on("blur" + j, w.event.blur)), U.on("mouseenter" + j, D.item, w.event.item.mouseenter).on("mouseleave" + j, D.item, w.event.item.mouseleave).on("click" + j, D.item, w.event.item.click) }, intent: function () { w.verbose("Binding hide intent event to document"), l && s.on("touchstart" + b, w.event.test.touch).on("touchmove" + b, w.event.test.touch), s.on("click" + b, w.event.test.hide) } }, unbind: { intent: function () { w.verbose("Removing hide intent event from document"), l && s.off("touchstart" + b).off("touchmove" + b), s.off("click" + b) } }, filter: function (e) { var t = e !== i ? e : w.get.query(), n = function () { w.is.multiple() && w.filterActive(), w.select.firstUnfiltered(), w.has.allResultsFiltered() ? k.onNoResults.call($, t) ? k.allowAdditions || (w.verbose("All items filtered, showing message", t), w.add.message(T.noResults)) : (w.verbose("All items filtered, hiding dropdown", t), w.hideMenu()) : w.remove.message(), k.allowAdditions && w.add.userSuggestion(e), w.is.searchSelection() && w.can.show() && w.is.focusedOnSearch() && w.show() }; k.useLabels && w.has.maxSelections() || (k.apiSettings ? w.can.useAPI() ? w.queryRemote(t, function () { n() }) : w.error(O.noAPI) : (w.filterItems(t), n())) }, queryRemote: function (t, n) { var i = { errorDuration: !1, throttle: k.throttle, urlData: { query: t }, onError: function () { w.add.message(T.serverError), n() }, onFailure: function () { w.add.message(T.serverError), n() }, onSuccess: function (e) { w.remove.message(), w.setup.menu({ values: e[A.remoteValues] }), n() } }; I.api("get request") || w.setup.api(), i = e.extend(!0, {}, i, k.apiSettings), I.api("setting", i).api("query") }, filterItems: function (t) { var n = t !== i ? t : w.get.query(), o = null, a = w.escape.regExp(n), r = new RegExp("^" + a, "igm"); w.has.query() && (o = [], w.verbose("Searching for matching values", n), W.each(function () { var t, i, a = e(this); if ("both" == k.match || "text" == k.match) { if (-1 !== (t = String(w.get.choiceText(a, !1))).search(r)) return o.push(this), !0; if (k.fullTextSearch && w.fuzzySearch(n, t)) return o.push(this), !0 } if ("both" == k.match || "value" == k.match) { if (-1 !== (i = String(w.get.choiceValue(a, t))).search(r)) return o.push(this), !0; if (k.fullTextSearch && w.fuzzySearch(n, i)) return o.push(this), !0 } })), w.debug("Showing only matched items", n), w.remove.filteredItem(), o && W.not(o).addClass(S.filtered) }, fuzzySearch: function (e, t) { var n = t.length, i = e.length; if (e = e.toLowerCase(), t = t.toLowerCase(), i > n) return !1; if (i === n) return e === t; e: for (var o = 0, a = 0; i > o; o++) { for (var r = e.charCodeAt(o); n > a;)if (t.charCodeAt(a++) === r) continue e; return !1 } return !0 }, filterActive: function () { k.useLabels && W.filter("." + S.active).addClass(S.filtered) }, focusSearch: function () { w.is.search() && !w.is.focusedOnSearch() && V[0].focus() }, forceSelection: function () { var e = W.not(S.filtered).filter("." + S.selected).eq(0), t = W.not(S.filtered).filter("." + S.active).eq(0), n = e.length > 0 ? e : t, i = n.size() > 0; if (w.has.query()) { if (i) return w.debug("Forcing partial selection to selected item", n), void w.event.item.click.call(n); w.remove.searchTerm() } w.hide() }, event: { change: function () { X || (w.debug("Input changed, updating selection"), w.set.selected()) }, focus: function () { k.showOnFocus && !B && w.is.hidden() && !h && w.show() }, click: function (t) { e(t.target).is(I) && !w.is.focusedOnSearch() && w.focusSearch() }, blur: function (e) { h = n.activeElement === this, B || h || (w.remove.activeLabel(), w.hide()) }, mousedown: function () { B = !0 }, mouseup: function () { B = !1 }, search: { focus: function () { B = !0, w.is.multiple() && w.remove.activeLabel(), k.showOnFocus && (w.search(), w.show()) }, blur: function (e) { h = n.activeElement === this, Q || h ? h && k.forceSelection && w.forceSelection() : w.is.multiple() ? (w.remove.activeLabel(), w.hide()) : k.forceSelection ? w.forceSelection() : w.hide() } }, icon: { click: function (e) { w.toggle(), e.stopPropagation() } }, text: { focus: function (e) { B = !0, w.focusSearch() } }, input: function (e) { (w.is.multiple() || w.is.searchSelection()) && w.set.filtered(), clearTimeout(w.timer), w.timer = setTimeout(w.search, k.delay.search) }, label: { click: function (t) { var n = e(this), i = I.find(D.label), o = i.filter("." + S.active), a = n.nextAll("." + S.active), r = n.prevAll("." + S.active), s = a.length > 0 ? n.nextUntil(a).add(o).add(n) : n.prevUntil(r).add(o).add(n); t.shiftKey ? (o.removeClass(S.active), s.addClass(S.active)) : t.ctrlKey ? n.toggleClass(S.active) : (o.removeClass(S.active), n.addClass(S.active)), k.onLabelSelect.apply(this, i.filter("." + S.active)) } }, remove: { click: function () { var t = e(this).parent(); t.hasClass(S.active) ? w.remove.activeLabels() : w.remove.activeLabels(t) } }, test: { toggle: function (e) { var t = w.is.multiple() ? w.show : w.toggle; w.determine.eventOnElement(e, t) && e.preventDefault() }, touch: function (e) { w.determine.eventOnElement(e, function () { "touchstart" == e.type ? w.timer = setTimeout(function () { w.hide() }, k.delay.touch) : "touchmove" == e.type && clearTimeout(w.timer) }), e.stopPropagation() }, hide: function (e) { w.determine.eventInModule(e, w.hide) } }, menu: { mousedown: function () { Q = !0 }, mouseup: function () { Q = !1 } }, item: { mouseenter: function (t) { var n = e(this).children(D.menu), i = e(this).siblings(D.item).children(D.menu); n.length > 0 && (clearTimeout(w.itemTimer), w.itemTimer = setTimeout(function () { w.verbose("Showing sub-menu", n), e.each(i, function () { w.animate.hide(!1, e(this)) }), w.animate.show(!1, n) }, k.delay.show), t.preventDefault()) }, mouseleave: function (t) { var n = e(this).children(D.menu); n.length > 0 && (clearTimeout(w.itemTimer), w.itemTimer = setTimeout(function () { w.verbose("Hiding sub-menu", n), w.animate.hide(!1, n) }, k.delay.hide)) }, touchend: function () { }, click: function (t) { var n = e(this), i = e(t ? t.target : ""), o = n.find(D.menu), a = w.get.choiceText(n), r = w.get.choiceValue(n, a), s = o.length > 0; o.find(i).length > 0 || s && !k.allowCategorySelection || (k.useLabels || (w.remove.filteredItem(), w.remove.searchTerm(), w.set.scrollPosition(n)), w.determine.selectAction.call(this, a, r)) } }, document: { keydown: function (e) { var t = e.which; if (w.is.inObject(t, R)) { var n = I.find(D.label), i = n.filter("." + S.active), o = (i.data(E.value), n.index(i)), a = n.length, r = i.length > 0, s = i.length > 1, c = 0 === o, l = o + 1 == a, u = w.is.searchSelection(), d = w.is.focusedOnSearch(), f = w.is.focused(), m = d && 0 === w.get.caretPosition(); if (u && !r && !d) return; t == R.leftArrow ? !f && !m || r ? r && (e.shiftKey ? w.verbose("Adding previous label to selection") : (w.verbose("Selecting previous label"), n.removeClass(S.active)), c && !s ? i.addClass(S.active) : i.prev(D.siblingLabel).addClass(S.active).end(), e.preventDefault()) : (w.verbose("Selecting previous label"), n.last().addClass(S.active)) : t == R.rightArrow ? (f && !r && n.first().addClass(S.active), r && (e.shiftKey ? w.verbose("Adding next label to selection") : (w.verbose("Selecting next label"), n.removeClass(S.active)), l ? u ? d ? n.removeClass(S.active) : w.focusSearch() : s ? i.next(D.siblingLabel).addClass(S.active) : i.addClass(S.active) : i.next(D.siblingLabel).addClass(S.active), e.preventDefault())) : t == R.deleteKey || t == R.backspace ? r ? (w.verbose("Removing active labels"), l && u && !d && w.focusSearch(), i.last().next(D.siblingLabel).addClass(S.active), w.remove.activeLabels(i), e.preventDefault()) : m && !r && t == R.backspace && (w.verbose("Removing last label on input backspace"), i = n.last().addClass(S.active), w.remove.activeLabels(i)) : i.removeClass(S.active) } } }, keydown: function (e) { var t = e.which; if (w.is.inObject(t, R)) { var n, i = W.not(D.unselectable).filter("." + S.selected).eq(0), o = U.children("." + S.active).eq(0), a = i.length > 0 ? i : o, r = a.length > 0 ? a.siblings(":not(." + S.filtered + ")").andSelf() : U.children(":not(." + S.filtered + ")"), s = a.children(D.menu), c = a.closest(D.menu), l = c.hasClass(S.visible) || c.hasClass(S.animating) || c.parent(D.menu).length > 0, u = s.length > 0, d = a.length > 0, f = a.not(D.unselectable).length > 0, m = t == R.delimiter && k.allowAdditions && w.is.multiple(); if (w.is.visible()) { if ((t == R.enter || m) && (t == R.enter && d && u && !k.allowCategorySelection ? (w.verbose("Pressed enter on unselectable category, opening sub menu"), t = R.rightArrow) : f && (w.verbose("Selecting item from keyboard shortcut", a), w.event.item.click.call(a, e), w.is.searchSelection() && w.remove.searchTerm()), e.preventDefault()), t == R.leftArrow && (c[0] !== U[0] && (w.verbose("Left key pressed, closing sub-menu"), w.animate.hide(!1, c), a.removeClass(S.selected), c.closest(D.item).addClass(S.selected), e.preventDefault())), t == R.rightArrow && u && (w.verbose("Right key pressed, opening sub-menu"), w.animate.show(!1, s), a.removeClass(S.selected), s.find(D.item).eq(0).addClass(S.selected), e.preventDefault()), t == R.upArrow) { if (n = d && l ? a.prevAll(D.item + ":not(" + D.unselectable + ")").eq(0) : W.eq(0), r.index(n) < 0) return w.verbose("Up key pressed but reached top of current menu"), void e.preventDefault(); w.verbose("Up key pressed, changing active item"), a.removeClass(S.selected), n.addClass(S.selected), w.set.scrollPosition(n), e.preventDefault() } if (t == R.downArrow) { if (0 === (n = d && l ? n = a.nextAll(D.item + ":not(" + D.unselectable + ")").eq(0) : W.eq(0)).length) return w.verbose("Down key pressed but reached bottom of current menu"), void e.preventDefault(); w.verbose("Down key pressed, changing active item"), W.removeClass(S.selected), n.addClass(S.selected), w.set.scrollPosition(n), e.preventDefault() } t == R.pageUp && (w.scrollPage("up"), e.preventDefault()), t == R.pageDown && (w.scrollPage("down"), e.preventDefault()), t == R.escape && (w.verbose("Escape key pressed, closing dropdown"), w.hide()) } else m && e.preventDefault(), t == R.downArrow && (w.verbose("Down key pressed, showing dropdown"), w.show(), e.preventDefault()) } else w.is.selection() && !w.is.search() && w.set.selectedLetter(String.fromCharCode(t)) } }, trigger: { change: function () { var e = n.createEvent("HTMLEvents"), t = H[0]; t && (w.verbose("Triggering native change event"), e.initEvent("change", !0, !1), t.dispatchEvent(e)) } }, determine: { selectAction: function (t, n) { w.verbose("Determining action", k.action), e.isFunction(w.action[k.action]) ? (w.verbose("Triggering preset action", k.action, t, n), w.action[k.action].call(this, t, n)) : e.isFunction(k.action) ? (w.verbose("Triggering user action", k.action, t, n), k.action.call(this, t, n)) : w.error(O.action, k.action) }, eventInModule: function (t, i) { var o = e(t.target), a = o.closest(n.documentElement).length > 0, r = o.closest(I).length > 0; return i = e.isFunction(i) ? i : function () { }, a && !r ? (w.verbose("Triggering event", i), i(), !0) : (w.verbose("Event occurred in dropdown, canceling callback"), !1) }, eventOnElement: function (t, n) { var i = e(t.target), o = i.closest(D.siblingLabel), a = 0 === I.find(o).length, r = 0 === i.closest(U).length; return n = e.isFunction(n) ? n : function () { }, a && r ? (w.verbose("Triggering event", n), n(), !0) : (w.verbose("Event occurred in dropdown menu, canceling callback"), !1) } }, action: { nothing: function () { }, activate: function (t, n) { if (n = n !== i ? n : t, w.can.activate(e(this))) { if (w.set.selected(n, e(this)), w.is.multiple() && !w.is.allFiltered()) return; w.hideAndClear() } }, select: function (e, t) { w.action.activate.call(this) }, combo: function (t, n) { n = n !== i ? n : t, w.set.selected(n, e(this)), w.hideAndClear() }, hide: function (e, t) { w.set.value(t), w.hideAndClear() } }, get: { id: function () { return y }, defaultText: function () { return I.data(E.defaultText) }, defaultValue: function () { return I.data(E.defaultValue) }, placeholderText: function () { return I.data(E.placeholderText) || "" }, text: function () { return N.text() }, query: function () { return e.trim(V.val()) }, searchWidth: function (e) { return e * k.glyphWidth + "em" }, selectionCount: function () { var t = w.get.values(); return w.is.multiple() ? e.isArray(t) ? t.length : 0 : "" !== w.get.value() ? 1 : 0 }, transition: function (e) { return "auto" == k.transition ? w.is.upward(e) ? "slide up" : "slide down" : k.transition }, userValues: function () { var t = w.get.values(); return !!t && (t = e.isArray(t) ? t : [t], e.grep(t, function (e) { return !1 === w.get.item(e) })) }, uniqueArray: function (t) { return e.grep(t, function (n, i) { return e.inArray(n, t) === i }) }, caretPosition: function () { var e, t, i = V.get(0); return "selectionStart" in i ? i.selectionStart : n.selection ? (i.focus(), t = (e = n.selection.createRange()).text.length, e.moveStart("character", -i.value.length), e.text.length - t) : void 0 }, value: function () { var t = H.length > 0 ? H.val() : I.data(E.value); return e.isArray(t) && 1 === t.length && "" === t[0] ? "" : t }, values: function () { var e = w.get.value(); return "" === e ? "" : !w.has.selectInput() && w.is.multiple() ? "string" == typeof e ? e.split(k.delimiter) : "" : e }, remoteValues: function () { var t = w.get.values(), n = !1; return t && ("string" == typeof t && (t = [t]), n = {}, e.each(t, function (e, t) { var i = w.read.remoteData(t); w.verbose("Restoring value from session data", i, t), n[t] = i || t })), n }, choiceText: function (t, n) { return n = n !== i ? n : k.preserveHTML, t ? (t.find(D.menu).length > 0 && (w.verbose("Retreiving text of element with sub-menu"), (t = t.clone()).find(D.menu).remove(), t.find(D.menuIcon).remove()), t.data(E.text) !== i ? t.data(E.text) : e.trim(n ? t.html() : t.text())) : void 0 }, choiceValue: function (t, n) { return n = n || w.get.choiceText(t), !!t && (t.data(E.value) !== i ? String(t.data(E.value)) : "string" == typeof n ? e.trim(n.toLowerCase()) : String(n)) }, inputEvent: function () { var e = V[0]; return !!e && (e.oninput !== i ? "input" : e.onpropertychange !== i ? "propertychange" : "keyup") }, selectValues: function () { var t = { values: [] }; return I.find("option").each(function () { var n = e(this), o = n.html(), a = n.attr("disabled"), r = n.attr("value") !== i ? n.attr("value") : o; "auto" === k.placeholder && "" === r ? t.placeholder = o : t.values.push({ name: o, value: r, disabled: a }) }), k.placeholder && "auto" !== k.placeholder && (w.debug("Setting placeholder value to", k.placeholder), t.placeholder = k.placeholder), k.sortSelect ? (t.values.sort(function (e, t) { return e.name > t.name ? 1 : -1 }), w.debug("Retrieved and sorted values from select", t)) : w.debug("Retreived values from select", t), t }, activeItem: function () { return W.filter("." + S.active) }, selectedItem: function () { var e = W.not(D.unselectable).filter("." + S.selected); return e.length > 0 ? e : W.eq(0) }, itemWithAdditions: function (e) { var t = w.get.item(e), n = w.create.userChoice(e); return n && n.length > 0 && (t = t.length > 0 ? t.add(n) : n), t }, item: function (t, n) { var o, a, r = !1; return t = t !== i ? t : w.get.values() !== i ? w.get.values() : w.get.text(), o = a ? t.length > 0 : t !== i && null !== t, a = w.is.multiple() && e.isArray(t), n = "" === t || 0 === t || (n || !1), o && W.each(function () { var o = e(this), s = w.get.choiceText(o), c = w.get.choiceValue(o, s); if (null !== c && c !== i) if (a) (-1 !== e.inArray(String(c), t) || -1 !== e.inArray(s, t)) && (r = r ? r.add(o) : o); else if (n) { if (w.verbose("Ambiguous dropdown value using strict type check", o, t), c === t || s === t) return r = o, !0 } else if (String(c) == String(t) || s == t) return w.verbose("Found select item by value", c, t), r = o, !0 }), r } }, check: { maxSelections: function (e) { return !k.maxSelections || ((e = e !== i ? e : w.get.selectionCount()) >= k.maxSelections ? (w.debug("Maximum selection count reached"), k.useLabels && (W.addClass(S.filtered), w.add.message(T.maxSelections)), !0) : (w.verbose("No longer at maximum selection count"), w.remove.message(), w.remove.filteredItem(), w.is.searchSelection() && w.filterItems(), !1)) } }, restore: { defaults: function () { w.clear(), w.restore.defaultText(), w.restore.defaultValue() }, defaultText: function () { var e = w.get.defaultText(); e === w.get.placeholderText ? (w.debug("Restoring default placeholder text", e), w.set.placeholderText(e)) : (w.debug("Restoring default text", e), w.set.text(e)) }, defaultValue: function () { var e = w.get.defaultValue(); e !== i && (w.debug("Restoring default value", e), "" !== e ? (w.set.value(e), w.set.selected()) : (w.remove.activeItem(), w.remove.selectedItem())) }, labels: function () { k.allowAdditions && (k.useLabels || (w.error(O.labels), k.useLabels = !0), w.debug("Restoring selected values"), w.create.userLabels()), w.check.maxSelections() }, selected: function () { w.restore.values(), w.is.multiple() ? (w.debug("Restoring previously selected values and labels"), w.restore.labels()) : w.debug("Restoring previously selected values") }, values: function () { w.set.initialLoad(), k.apiSettings ? k.saveRemoteData ? w.restore.remoteValues() : w.clearValue() : w.set.selected(), w.remove.initialLoad() }, remoteValues: function () { var t = w.get.remoteValues(); w.debug("Recreating selected from session data", t), t && (w.is.single() ? e.each(t, function (e, t) { w.set.text(t) }) : e.each(t, function (e, t) { w.add.label(e, t) })) } }, read: { remoteData: function (e) { var n; return t.Storage === i ? void w.error(O.noStorage) : (n = sessionStorage.getItem(e)) !== i && n } }, save: { defaults: function () { w.save.defaultText(), w.save.placeholderText(), w.save.defaultValue() }, defaultValue: function () { var e = w.get.value(); w.verbose("Saving default value as", e), I.data(E.defaultValue, e) }, defaultText: function () { var e = w.get.text(); w.verbose("Saving default text as", e), I.data(E.defaultText, e) }, placeholderText: function () { var e; !1 !== k.placeholder && N.hasClass(S.placeholder) && (e = w.get.text(), w.verbose("Saving placeholder text as", e), I.data(E.placeholderText, e)) }, remoteData: function (e, n) { return t.Storage === i ? void w.error(O.noStorage) : (w.verbose("Saving remote data to session storage", n, e), void sessionStorage.setItem(n, e)) } }, clear: function () { w.is.multiple() ? w.remove.labels() : (w.remove.activeItem(), w.remove.selectedItem()), w.set.placeholderText(), w.clearValue() }, clearValue: function () { w.set.value("") }, scrollPage: function (e, t) { var n, i, o = t || w.get.selectedItem(), a = o.closest(D.menu), r = a.outerHeight(), s = a.scrollTop(), c = W.eq(0).outerHeight(), l = Math.floor(r / c), u = (a.prop("scrollHeight"), "up" == e ? s - c * l : s + c * l), d = W.not(D.unselectable); i = "up" == e ? d.index(o) - l : d.index(o) + l, (n = ("up" == e ? i >= 0 : i < d.length) ? d.eq(i) : "up" == e ? d.first() : d.last()).length > 0 && (w.debug("Scrolling page", e, n), o.removeClass(S.selected), n.addClass(S.selected), a.scrollTop(u)) }, set: { filtered: function () { var e = w.is.multiple(), t = w.is.searchSelection(), n = e && t, i = t ? w.get.query() : "", o = "string" == typeof i && i.length > 0, a = w.get.searchWidth(i.length), r = "" !== i; e && o && (w.verbose("Adjusting input width", a, k.glyphWidth), V.css("width", a)), o || n && r ? (w.verbose("Hiding placeholder text"), N.addClass(S.filtered)) : (!e || n && !r) && (w.verbose("Showing placeholder text"), N.removeClass(S.filtered)) }, loading: function () { I.addClass(S.loading) }, placeholderText: function (e) { e = e || w.get.placeholderText(), w.debug("Setting placeholder text", e), w.set.text(e), N.addClass(S.placeholder) }, tabbable: function () { w.has.search() ? (w.debug("Added tabindex to searchable dropdown"), V.val("").attr("tabindex", 0), U.attr("tabindex", -1)) : (w.debug("Added tabindex to dropdown"), I.attr("tabindex") === i && (I.attr("tabindex", 0), U.attr("tabindex", -1))) }, initialLoad: function () { w.verbose("Setting initial load"), v = !0 }, activeItem: function (e) { e.addClass(k.allowAdditions && e.filter(D.addition).length > 0 ? S.filtered : S.active) }, scrollPosition: function (e, t) { var n, o, a, r, s, c; n = (e = e || w.get.selectedItem()).closest(D.menu), o = e && e.length > 0, t = t !== i && t, e && n.length > 0 && o && (e.position().top, n.addClass(S.loading), a = (r = n.scrollTop()) - n.offset().top + e.offset().top, t || (c = a + 5 > r + n.height(), s = r > a - 5), w.debug("Scrolling to active item", a), (t || s || c) && n.scrollTop(a), n.removeClass(S.loading)) }, text: function (e) { "select" !== k.action && ("combo" == k.action ? (w.debug("Changing combo button text", e, M), k.preserveHTML ? M.html(e) : M.text(e)) : (e !== w.get.placeholderText() && N.removeClass(S.placeholder), w.debug("Changing text", e, N), N.removeClass(S.filtered), k.preserveHTML ? N.html(e) : N.text(e))) }, selectedLetter: function (t) { var n, i = W.filter("." + S.selected), o = !1; i.length > 0 && w.has.firstLetter(i, t) && (n = i.nextAll(W).eq(0), w.has.firstLetter(n, t) && (o = n)), o || W.each(function () { return w.has.firstLetter(e(this), t) ? (o = e(this), !1) : void 0 }), o && (w.verbose("Scrolling to next value with letter", t), w.set.scrollPosition(o), i.removeClass(S.selected), o.addClass(S.selected)) }, direction: function (e) { "auto" == k.direction ? w.is.onScreen(e) ? w.remove.upward(e) : w.set.upward(e) : "upward" == k.direction && w.set.upward(e) }, upward: function (e) { (e || I).addClass(S.upward) }, value: function (e, t, n) { var o = H.length > 0, a = (w.has.value(e), w.get.values()), r = e !== i ? String(e) : e; if (o) { if (r == a && (w.verbose("Skipping value update already same value", e, a), !w.is.initialLoad())) return; w.is.single() && w.has.selectInput() && w.can.extendSelect() && (w.debug("Adding user option", e), w.add.optionValue(e)), w.debug("Updating input value", e, a), X = !0, H.val(e), !1 === k.fireOnInit && w.is.initialLoad() ? w.debug("Input native change event ignored on initial load") : w.trigger.change(), X = !1 } else w.verbose("Storing value in metadata", e, H), e !== a && I.data(E.value, r); !1 === k.fireOnInit && w.is.initialLoad() ? w.verbose("No callback on initial load", k.onChange) : k.onChange.call($, e, t, n) }, active: function () { I.addClass(S.active) }, multiple: function () { I.addClass(S.multiple) }, visible: function () { I.addClass(S.visible) }, exactly: function (e, t) { w.debug("Setting selected to exact values"), w.clear(), w.set.selected(e, t) }, selected: function (t, n) { var i = w.is.multiple(); (n = k.allowAdditions ? n || w.get.itemWithAdditions(t) : n || w.get.item(t)) && (w.debug("Setting selected menu item to", n), w.is.single() ? (w.remove.activeItem(), w.remove.selectedItem()) : k.useLabels && w.remove.selectedItem(), n.each(function () { var t = e(this), o = w.get.choiceText(t), a = w.get.choiceValue(t, o), r = t.hasClass(S.filtered), s = t.hasClass(S.active), c = t.hasClass(S.addition), l = i && 1 == n.length; i ? !s || c ? (k.apiSettings && k.saveRemoteData && w.save.remoteData(o, a), k.useLabels ? (w.add.value(a, o, t), w.add.label(a, o, l), w.set.activeItem(t), w.filterActive(), w.select.nextAvailable(n)) : (w.add.value(a, o, t), w.set.text(w.add.variables(T.count)), w.set.activeItem(t))) : r || (w.debug("Selected active value, removing label"), w.remove.selected(a)) : (k.apiSettings && k.saveRemoteData && w.save.remoteData(o, a), w.set.text(o), w.set.value(a, o, t), t.addClass(S.active).addClass(S.selected)) })) } }, add: { label: function (t, n, i) { var o, a = w.is.searchSelection() ? V : N; return o = e("<a />").addClass(S.label).attr("data-value", t).html(q.label(t, n)), o = k.onLabelCreate.call(o, t, n), w.has.label(t) ? void w.debug("Label already exists, skipping", t) : (k.label.variation && o.addClass(k.label.variation), void (!0 === i ? (w.debug("Animating in label", o), o.addClass(S.hidden).insertBefore(a).transition(k.label.transition, k.label.duration)) : (w.debug("Adding selection label", o), o.insertBefore(a)))) }, message: function (t) { var n = U.children(D.message), i = k.templates.message(w.add.variables(t)); n.length > 0 ? n.html(i) : n = e("<div/>").html(i).addClass(S.message).appendTo(U) }, optionValue: function (t) { H.find('option[value="' + t + '"]').length > 0 || (x && (x.disconnect(), w.verbose("Temporarily disconnecting mutation observer", t)), w.is.single() && (w.verbose("Removing previous user addition"), H.find("option." + S.addition).remove()), e("<option/>").prop("value", t).addClass(S.addition).html(t).appendTo(H), w.verbose("Adding user addition as an <option>", t), x && x.observe(H[0], { childList: !0, subtree: !0 })) }, userSuggestion: function (e) { var t, n = U.children(D.addition), i = w.get.item(e), o = i && i.not(D.addition).length, a = n.length > 0; if (!k.useLabels || !w.has.maxSelections()) { if ("" === e || o) return void n.remove(); W.removeClass(S.selected), a ? (t = k.templates.addition(w.add.variables(T.addResult, e)), n.html(t).attr("data-" + E.value, e).attr("data-" + E.text, e).removeClass(S.filtered).addClass(S.selected), w.verbose("Replacing user suggestion with new value", n)) : ((n = w.create.userChoice(e)).prependTo(U).addClass(S.selected), w.verbose("Adding item choice to menu corresponding with user choice addition", n)) } }, variables: function (e, t) { var n, i, o = -1 !== e.search("{count}"), a = -1 !== e.search("{maxCount}"), r = -1 !== e.search("{term}"); return w.verbose("Adding templated variables to message", e), o && (n = w.get.selectionCount(), e = e.replace("{count}", n)), a && (n = w.get.selectionCount(), e = e.replace("{maxCount}", k.maxSelections)), r && (i = t || w.get.query(), e = e.replace("{term}", i)), e }, value: function (t, n, i) { var o, a = w.get.values(); return "" === t ? void w.debug("Cannot select blank values from multiselect") : (e.isArray(a) ? (o = a.concat([t]), o = w.get.uniqueArray(o)) : o = [t], w.has.selectInput() ? w.can.extendSelect() && (w.debug("Adding value to select", t, o, H), w.add.optionValue(t)) : (o = o.join(k.delimiter), w.debug("Setting hidden input to delimited value", o, H)), !1 === k.fireOnInit && w.is.initialLoad() ? w.verbose("Skipping onadd callback on initial load", k.onAdd) : k.onAdd.call($, t, n, i), w.set.value(o, t, n, i), void w.check.maxSelections()) } }, remove: { active: function () { I.removeClass(S.active) }, activeLabel: function () { I.find(D.label).removeClass(S.active) }, loading: function () { I.removeClass(S.loading) }, initialLoad: function () { v = !1 }, upward: function (e) { (e || I).removeClass(S.upward) }, visible: function () { I.removeClass(S.visible) }, activeItem: function () { W.removeClass(S.active) }, filteredItem: function () { k.useLabels && w.has.maxSelections() || (k.useLabels && w.is.multiple() ? W.not("." + S.active).removeClass(S.filtered) : W.removeClass(S.filtered)) }, optionValue: function (e) { var t = H.find('option[value="' + e + '"]'); t.length > 0 && t.hasClass(S.addition) && (x && (x.disconnect(), w.verbose("Temporarily disconnecting mutation observer", e)), t.remove(), w.verbose("Removing user addition as an <option>", e), x && x.observe(H[0], { childList: !0, subtree: !0 })) }, message: function () { U.children(D.message).remove() }, searchTerm: function () { w.verbose("Cleared search term"), V.val(""), w.set.filtered() }, selected: function (t, n) { return !!(n = k.allowAdditions ? n || w.get.itemWithAdditions(t) : n || w.get.item(t)) && void n.each(function () { var t = e(this), n = w.get.choiceText(t), i = w.get.choiceValue(t, n); w.is.multiple() ? k.useLabels ? (w.remove.value(i, n, t), w.remove.label(i)) : (w.remove.value(i, n, t), 0 === w.get.selectionCount() ? w.set.placeholderText() : w.set.text(w.add.variables(T.count))) : w.remove.value(i, n, t), t.removeClass(S.filtered).removeClass(S.active), k.useLabels && t.removeClass(S.selected) }) }, selectedItem: function () { W.removeClass(S.selected) }, value: function (e, t, n) { var i, o = w.get.values(); w.has.selectInput() ? (w.verbose("Input is <select> removing selected option", e), i = w.remove.arrayValue(e, o), w.remove.optionValue(e)) : (w.verbose("Removing from delimited values", e), i = (i = w.remove.arrayValue(e, o)).join(k.delimiter)), !1 === k.fireOnInit && w.is.initialLoad() ? w.verbose("No callback on initial load", k.onRemove) : k.onRemove.call($, e, t, n), w.set.value(i, t, n), w.check.maxSelections() }, arrayValue: function (t, n) { return e.isArray(n) || (n = [n]), n = e.grep(n, function (e) { return t != e }), w.verbose("Removed value from delimited string", t, n), n }, label: function (e, t) { var n = I.find(D.label).filter('[data-value="' + e + '"]'); w.verbose("Removing label", n), n.remove() }, activeLabels: function (e) { e = e || I.find(D.label).filter("." + S.active), w.verbose("Removing active label selections", e), w.remove.labels(e) }, labels: function (t) { t = t || I.find(D.label), w.verbose("Removing labels", t), t.each(function () { var t = e(this), n = t.data(E.value), o = n !== i ? String(n) : n, a = w.is.userValue(o); return !1 === k.onLabelRemove.call(t, n) ? void w.debug("Label remove callback cancelled removal") : void (a ? (w.remove.value(o), w.remove.label(o)) : w.remove.selected(o)) }) }, tabbable: function () { w.has.search() ? (w.debug("Searchable dropdown initialized"), V.removeAttr("tabindex"), U.removeAttr("tabindex")) : (w.debug("Simple selection dropdown initialized"), I.removeAttr("tabindex"), U.removeAttr("tabindex")) } }, has: { search: function () { return V.length > 0 }, selectInput: function () { return H.is("select") }, firstLetter: function (e, t) { var n; return !(!e || 0 === e.length || "string" != typeof t) && (n = w.get.choiceText(e, !1), (t = t.toLowerCase()) == String(n).charAt(0).toLowerCase()) }, input: function () { return H.length > 0 }, items: function () { return W.length > 0 }, menu: function () { return U.length > 0 }, message: function () { return 0 !== U.children(D.message).length }, label: function (e) { return I.find(D.label).filter('[data-value="' + e + '"]').length > 0 }, maxSelections: function () { return k.maxSelections && w.get.selectionCount() >= k.maxSelections }, allResultsFiltered: function () { return W.filter(D.unselectable).length === W.length }, query: function () { return "" !== w.get.query() }, value: function (t) { var n = w.get.values(); return !!(e.isArray(n) ? n && -1 !== e.inArray(t, n) : n == t) } }, is: { active: function () { return I.hasClass(S.active) }, alreadySetup: function () { return I.is("select") && I.parent(D.dropdown).length > 0 && 0 === I.prev().length }, animating: function (e) { return e ? e.transition && e.transition("is animating") : U.transition && U.transition("is animating") }, disabled: function () { return I.hasClass(S.disabled) }, focused: function () { return n.activeElement === I[0] }, focusedOnSearch: function () { return n.activeElement === V[0] }, allFiltered: function () { return (w.is.multiple() || w.has.search()) && !w.has.message() && w.has.allResultsFiltered() }, hidden: function (e) { return !w.is.visible(e) }, initialLoad: function () { return v }, onScreen: function (e) { var t, n, i = e || U, o = !0; return i.addClass(S.loading), (n = { above: (t = { context: { scrollTop: L.scrollTop(), height: L.outerHeight() }, menu: { offset: i.offset(), height: i.outerHeight() } }).context.scrollTop <= t.menu.offset.top - t.menu.height, below: t.context.scrollTop + t.context.height >= t.menu.offset.top + t.menu.height }).below ? (w.verbose("Dropdown can fit in context downward", n), o = !0) : n.below || n.above ? (w.verbose("Dropdown cannot fit below, opening upward", n), o = !1) : (w.verbose("Dropdown cannot fit in either direction, favoring downward", n), o = !0), i.removeClass(S.loading), o }, inObject: function (t, n) { var i = !1; return e.each(n, function (e, n) { return n == t ? (i = !0, !0) : void 0 }), i }, multiple: function () { return I.hasClass(S.multiple) }, single: function () { return !w.is.multiple() }, selectMutation: function (t) { var n = !1; return e.each(t, function (t, i) { return i.target && e(i.target).is("select") ? (n = !0, !0) : void 0 }), n }, search: function () { return I.hasClass(S.search) }, searchSelection: function () { return w.has.search() && 1 === V.parent(D.dropdown).length }, selection: function () { return I.hasClass(S.selection) }, userValue: function (t) { return -1 !== e.inArray(t, w.get.userValues()) }, upward: function (e) { return (e || I).hasClass(S.upward) }, visible: function (e) { return e ? e.hasClass(S.visible) : U.hasClass(S.visible) } }, can: { activate: function (e) { return !!k.useLabels || (!w.has.maxSelections() || !(!w.has.maxSelections() || !e.hasClass(S.active))) }, click: function () { return l || "click" == k.on }, extendSelect: function () { return k.allowAdditions || k.apiSettings }, show: function () { return !w.is.disabled() && (w.has.items() || w.has.message()) }, useAPI: function () { return e.fn.api !== i } }, animate: { show: function (t, n) { var o, a = n || U, r = n ? function () { } : function () { w.hideSubMenus(), w.hideOthers(), w.set.active() }; t = e.isFunction(t) ? t : function () { }, w.verbose("Doing menu show animation", a), w.set.direction(n), o = w.get.transition(n), w.is.selection() && w.set.scrollPosition(w.get.selectedItem(), !0), (w.is.hidden(a) || w.is.animating(a)) && ("none" == o ? (r(), a.transition("show"), t.call($)) : e.fn.transition !== i && I.transition("is supported") ? a.transition({ animation: o + " in", debug: k.debug, verbose: k.verbose, duration: k.duration, queue: !0, onStart: r, onComplete: function () { t.call($) } }) : w.error(O.noTransition, o)) }, hide: function (t, n) { var o = n || U, a = (n ? k.duration : k.duration, n ? function () { } : function () { w.can.click() && w.unbind.intent(), w.remove.active() }), r = w.get.transition(n); t = e.isFunction(t) ? t : function () { }, (w.is.visible(o) || w.is.animating(o)) && (w.verbose("Doing menu hide animation", o), "none" == r ? (a(), o.transition("hide"), t.call($)) : e.fn.transition !== i && I.transition("is supported") ? o.transition({ animation: r + " out", duration: k.duration, debug: k.debug, verbose: k.verbose, queue: !0, onStart: a, onComplete: function () { "auto" == k.direction && w.remove.upward(n), t.call($) } }) : w.error(O.transition)) } }, hideAndClear: function () { w.remove.searchTerm(), w.has.maxSelections() || (w.has.search() ? w.hide(function () { w.remove.filteredItem() }) : w.hide()) }, delay: { show: function () { w.verbose("Delaying show event to ensure user intent"), clearTimeout(w.timer), w.timer = setTimeout(w.show, k.delay.show) }, hide: function () { w.verbose("Delaying hide event to ensure user intent"), clearTimeout(w.timer), w.timer = setTimeout(w.hide, k.delay.hide) } }, escape: { regExp: function (e) { return (e = String(e)).replace(F.escape, "\\$&") } }, setting: function (t, n) { if (w.debug("Changing setting", t, n), e.isPlainObject(t)) e.extend(!0, k, t); else { if (n === i) return k[t]; k[t] = n } }, internal: function (t, n) { if (e.isPlainObject(t)) e.extend(!0, w, t); else { if (n === i) return w[t]; w[t] = n } }, debug: function () { k.debug && (k.performance ? w.performance.log(arguments) : (w.debug = Function.prototype.bind.call(console.info, console, k.name + ":"), w.debug.apply(console, arguments))) }, verbose: function () { k.verbose && k.debug && (k.performance ? w.performance.log(arguments) : (w.verbose = Function.prototype.bind.call(console.info, console, k.name + ":"), w.verbose.apply(console, arguments))) }, error: function () { w.error = Function.prototype.bind.call(console.error, console, k.name + ":"), w.error.apply(console, arguments) }, performance: { log: function (e) { var t, n; k.performance && (n = (t = (new Date).getTime()) - (u || t), u = t, d.push({ Name: e[0], Arguments: [].slice.call(e, 1) || "", Element: $, "Execution Time": n })), clearTimeout(w.performance.timer), w.performance.timer = setTimeout(w.performance.display, 500) }, display: function () { var t = k.name + ":", n = 0; u = !1, clearTimeout(w.performance.timer), e.each(d, function (e, t) { n += t["Execution Time"] }), t += " " + n + "ms", c && (t += " '" + c + "'"), (console.group !== i || console.table !== i) && d.length > 0 && (console.groupCollapsed(t), console.table ? console.table(d) : e.each(d, function (e, t) { console.log(t.Name + ": " + t["Execution Time"] + "ms") }), console.groupEnd()), d = [] } }, invoke: function (t, n, o) { var r, s, c, l = Y; return n = n || g, o = $ || o, "string" == typeof t && l !== i && (t = t.split(/[\. ]/), r = t.length - 1, e.each(t, function (n, o) { var a = n != r ? o + t[n + 1].charAt(0).toUpperCase() + t[n + 1].slice(1) : t; if (e.isPlainObject(l[a]) && n != r) l = l[a]; else { if (l[a] !== i) return s = l[a], !1; if (!e.isPlainObject(l[o]) || n == r) return l[o] !== i ? (s = l[o], !1) : (w.error(O.method, t), !1); l = l[o] } })), e.isFunction(s) ? c = s.apply(o, n) : s !== i && (c = s), e.isArray(a) ? a.push(c) : a !== i ? a = [a, c] : c !== i && (a = c), s } }, m ? (Y === i && w.initialize(), w.invoke(f)) : (Y !== i && Y.invoke("destroy"), w.initialize()) }), a !== i ? a : r }, e.fn.dropdown.settings = { debug: !1, verbose: !1, performance: !0, on: "click", action: "activate", apiSettings: !1, saveRemoteData: !0, throttle: 200, context: t, direction: "auto", keepOnScreen: !0, match: "text", fullTextSearch: "exact", placeholder: "auto", preserveHTML: !0, sortSelect: !1, forceSelection: !0, allowAdditions: !1, maxSelections: !1, useLabels: !0, delimiter: ",", showOnFocus: !0, allowTab: !0, allowCategorySelection: !1, fireOnInit: !1, transition: "auto", duration: 200, glyphWidth: 1.0714, label: { transition: "scale", duration: 200, variation: !1 }, delay: { hide: 300, show: 200, search: 20, touch: 50 }, onChange: function (e, t, n) { }, onAdd: function (e, t, n) { }, onRemove: function (e, t, n) { }, onLabelSelect: function (e) { }, onLabelCreate: function (t, n) { return e(this) }, onLabelRemove: function (e) { return !0 }, onNoResults: function (e) { return !0 }, onShow: function () { }, onHide: function () { }, name: "Dropdown", namespace: "dropdown", message: { addResult: "Add <b>{term}</b>", count: "{count} selected", maxSelections: "Max {maxCount} selections", noResults: "No results found.", serverError: "There was an error contacting the server" }, error: { action: "You called a dropdown action that was not defined", alreadySetup: "Once a select has been initialized behaviors must be called on the created ui dropdown", labels: "Allowing user additions currently requires the use of labels.", missingMultiple: "<select> requires multiple property to be set to correctly preserve multiple values", method: "The method you called is not defined.", noAPI: "The API module is required to load resources remotely", noStorage: "Saving remote data requires session storage", noTransition: "This module requires ui transitions <https://github.com/Semantic-Org/UI-Transition>" }, regExp: { escape: /[-[\]{}()*+?.,\\^$|#\s]/g }, metadata: { defaultText: "defaultText", defaultValue: "defaultValue", placeholderText: "placeholder", text: "text", value: "value" }, fields: { remoteValues: "results", values: "values", name: "name", value: "value" }, keys: { backspace: 8, delimiter: 188, deleteKey: 46, enter: 13, escape: 27, pageUp: 33, pageDown: 34, leftArrow: 37, upArrow: 38, rightArrow: 39, downArrow: 40 }, selector: { addition: ".addition", dropdown: ".ui.dropdown", icon: "> .dropdown.icon", input: '> input[type="hidden"], > select', item: ".item", label: "> .label", remove: "> .label > .delete.icon", siblingLabel: ".label", menu: ".menu", message: ".message", menuIcon: ".dropdown.icon", search: "input.search, .menu > .search > input", text: "> .text:not(.icon)", unselectable: ".disabled, .filtered" }, className: { active: "active", addition: "addition", animating: "animating", disabled: "disabled", dropdown: "ui dropdown", filtered: "filtered", hidden: "hidden transition", item: "item", label: "ui label", loading: "loading", menu: "menu", message: "message", multiple: "multiple", placeholder: "default", search: "search", selected: "selected", selection: "selection", upward: "upward", visible: "visible" } }, e.fn.dropdown.settings.templates = { dropdown: function (t) { var n = t.placeholder || !1, i = (t.values, ""); return i += '<label class="titleLabel">' + n + "</label>", i += '<div class="text"></div>', i += '<div class="menu">', e.each(t.values, function (e, t) { i += t.disabled ? '<div class="disabled item" data-value="' + t.value + '">' + t.name + "</div>" : '<div class="item" data-value="' + t.value + '">' + t.name + "</div>" }), i += "</div>" }, menu: function (t, n) { var i = t[n.values] || {}, o = ""; return e.each(i, function (e, t) { o += '<div class="item" data-value="' + t[n.value] + '">' + t[n.name] + "</div>" }), o }, label: function (e, t) { return t + '<i class="delete icon"></i>' }, message: function (e) { return e }, addition: function (e) { return e } } }(jQuery, window, document), function (e, t, n, i) { "use strict"; e.fn.embed = function (n) { var o, a = e(this), r = a.selector || "", s = (new Date).getTime(), c = [], l = arguments[0], u = "string" == typeof l, d = [].slice.call(arguments, 1); return a.each(function () { var f, m = e.isPlainObject(n) ? e.extend(!0, {}, e.fn.embed.settings, n) : e.extend({}, e.fn.embed.settings), g = m.selector, p = m.className, v = m.sources, h = m.error, b = m.metadata, y = m.namespace, x = m.templates, C = "." + y, w = "module-" + y, k = (e(t), e(this)), S = (k.find(g.placeholder), k.find(g.icon), k.find(g.embed)), T = this, A = k.data(w); f = { initialize: function () { f.debug("Initializing embed"), f.determine.autoplay(), f.create(), f.bind.events(), f.instantiate() }, instantiate: function () { f.verbose("Storing instance of module", f), A = f, k.data(w, f) }, destroy: function () { f.verbose("Destroying previous instance of embed"), f.reset(), k.removeData(w).off(C) }, refresh: function () { f.verbose("Refreshing selector cache"), k.find(g.placeholder), k.find(g.icon), S = k.find(g.embed) }, bind: { events: function () { f.has.placeholder() && (f.debug("Adding placeholder events"), k.on("click" + C, g.placeholder, f.createAndShow).on("click" + C, g.icon, f.createAndShow)) } }, create: function () { f.get.placeholder() ? f.createPlaceholder() : f.createAndShow() }, createPlaceholder: function (e) { var t = f.get.icon(), n = f.get.url(); f.generate.embed(n), e = e || f.get.placeholder(), k.html(x.placeholder(e, t)), f.debug("Creating placeholder for embed", e, t) }, createEmbed: function (t) { f.refresh(), t = t || f.get.url(), S = e("<div/>").addClass(p.embed).html(f.generate.embed(t)).appendTo(k), m.onCreate.call(T, t), f.debug("Creating embed object", S) }, createAndShow: function () { f.createEmbed(), f.show() }, change: function (e, t, n) { f.debug("Changing video to ", e, t, n), k.data(b.source, e).data(b.id, t).data(b.url, n), f.create() }, reset: function () { f.debug("Clearing embed and showing placeholder"), f.remove.active(), f.remove.embed(), f.showPlaceholder(), m.onReset.call(T) }, show: function () { f.debug("Showing embed"), f.set.active(), m.onDisplay.call(T) }, hide: function () { f.debug("Hiding embed"), f.showPlaceholder() }, showPlaceholder: function () { f.debug("Showing placeholder image"), f.remove.active(), m.onPlaceholderDisplay.call(T) }, get: { id: function () { return m.id || k.data(b.id) }, placeholder: function () { return m.placeholder || k.data(b.placeholder) }, icon: function () { return m.icon ? m.icon : k.data(b.icon) !== i ? k.data(b.icon) : f.determine.icon() }, source: function (e) { return m.source ? m.source : k.data(b.source) !== i ? k.data(b.source) : f.determine.source() }, type: function () { var e = f.get.source(); return v[e] !== i && v[e].type }, url: function () { return m.url ? m.url : k.data(b.url) !== i ? k.data(b.url) : f.determine.url() } }, determine: { autoplay: function () { f.should.autoplay() && (m.autoplay = !0) }, source: function (t) { var n = !1; return (t = t || f.get.url()) && e.each(v, function (e, i) { return -1 !== t.search(i.domain) ? (n = e, !1) : void 0 }), n }, icon: function () { var e = f.get.source(); return v[e] !== i && v[e].icon }, url: function () { var e, t = m.id || k.data(b.id), n = m.source || k.data(b.source); return (e = v[n] !== i && v[n].url.replace("{id}", t)) && k.data(b.url, e), e } }, set: { active: function () { k.addClass(p.active) } }, remove: { active: function () { k.removeClass(p.active) }, embed: function () { S.empty() } }, encode: { parameters: function (e) { var t, n = []; for (t in e) n.push(encodeURIComponent(t) + "=" + encodeURIComponent(e[t])); return n.join("&amp;") } }, generate: { embed: function (e) { f.debug("Generating embed html"); var t, n, i = f.get.source(); return (e = f.get.url(e)) ? (n = f.generate.parameters(i), t = x.iframe(e, n)) : f.error(h.noURL, k), t }, parameters: function (t, n) { var o = v[t] && v[t].parameters !== i ? v[t].parameters(m) : {}; return (n = n || m.parameters) && (o = e.extend({}, o, n)), o = m.onEmbed(o), f.encode.parameters(o) } }, has: { placeholder: function () { return m.placeholder || k.data(b.placeholder) } }, should: { autoplay: function () { return "auto" === m.autoplay ? m.placeholder || k.data(b.placeholder) !== i : m.autoplay } }, is: { video: function () { return "video" == f.get.type() } }, setting: function (t, n) { if (f.debug("Changing setting", t, n), e.isPlainObject(t)) e.extend(!0, m, t); else { if (n === i) return m[t]; m[t] = n } }, internal: function (t, n) { if (e.isPlainObject(t)) e.extend(!0, f, t); else { if (n === i) return f[t]; f[t] = n } }, debug: function () { m.debug && (m.performance ? f.performance.log(arguments) : (f.debug = Function.prototype.bind.call(console.info, console, m.name + ":"), f.debug.apply(console, arguments))) }, verbose: function () { m.verbose && m.debug && (m.performance ? f.performance.log(arguments) : (f.verbose = Function.prototype.bind.call(console.info, console, m.name + ":"), f.verbose.apply(console, arguments))) }, error: function () { f.error = Function.prototype.bind.call(console.error, console, m.name + ":"), f.error.apply(console, arguments) }, performance: { log: function (e) { var t, n; m.performance && (n = (t = (new Date).getTime()) - (s || t), s = t, c.push({ Name: e[0], Arguments: [].slice.call(e, 1) || "", Element: T, "Execution Time": n })), clearTimeout(f.performance.timer), f.performance.timer = setTimeout(f.performance.display, 500) }, display: function () { var t = m.name + ":", n = 0; s = !1, clearTimeout(f.performance.timer), e.each(c, function (e, t) { n += t["Execution Time"] }), t += " " + n + "ms", r && (t += " '" + r + "'"), a.length > 1 && (t += " (" + a.length + ")"), (console.group !== i || console.table !== i) && c.length > 0 && (console.groupCollapsed(t), console.table ? console.table(c) : e.each(c, function (e, t) { console.log(t.Name + ": " + t["Execution Time"] + "ms") }), console.groupEnd()), c = [] } }, invoke: function (t, n, a) { var r, s, c, l = A; return n = n || d, a = T || a, "string" == typeof t && l !== i && (t = t.split(/[\. ]/), r = t.length - 1, e.each(t, function (n, o) { var a = n != r ? o + t[n + 1].charAt(0).toUpperCase() + t[n + 1].slice(1) : t; if (e.isPlainObject(l[a]) && n != r) l = l[a]; else { if (l[a] !== i) return s = l[a], !1; if (!e.isPlainObject(l[o]) || n == r) return l[o] !== i ? (s = l[o], !1) : (f.error(h.method, t), !1); l = l[o] } })), e.isFunction(s) ? c = s.apply(a, n) : s !== i && (c = s), e.isArray(o) ? o.push(c) : o !== i ? o = [o, c] : c !== i && (o = c), s } }, u ? (A === i && f.initialize(), f.invoke(l)) : (A !== i && A.invoke("destroy"), f.initialize()) }), o !== i ? o : this }, e.fn.embed.settings = { name: "Embed", namespace: "embed", debug: !1, verbose: !1, performance: !0, icon: !1, source: !1, url: !1, id: !1, autoplay: "auto", color: "#444444", hd: !0, brandedUI: !1, parameters: !1, onDisplay: function () { }, onPlaceholderDisplay: function () { }, onReset: function () { }, onCreate: function (e) { }, onEmbed: function (e) { return e }, metadata: { id: "id", icon: "icon", placeholder: "placeholder", source: "source", url: "url" }, error: { noURL: "No URL specified", method: "The method you called is not defined" }, className: { active: "active", embed: "embed" }, selector: { embed: ".embed", placeholder: ".placeholder", icon: ".icon" }, sources: { youtube: { name: "youtube", type: "video", icon: "video play", domain: "youtube.com", url: "//www.youtube.com/embed/{id}", parameters: function (e) { return { autohide: !e.brandedUI, autoplay: e.autoplay, color: e.colors || i, hq: e.hd, jsapi: e.api, modestbranding: !e.brandedUI } } }, vimeo: { name: "vimeo", type: "video", icon: "video play", domain: "vimeo.com", url: "//player.vimeo.com/video/{id}", parameters: function (e) { return { api: e.api, autoplay: e.autoplay, byline: e.brandedUI, color: e.colors || i, portrait: e.brandedUI, title: e.brandedUI } } } }, templates: { iframe: function (e, t) { return '<iframe src="' + e + "?" + t + '" width="100%" height="100%" frameborder="0" scrolling="no" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>' }, placeholder: function (e, t) { var n = ""; return t && (n += '<i class="' + t + ' icon"></i>'), e && (n += '<img class="placeholder" src="' + e + '">'), n } }, api: !0, onPause: function () { }, onPlay: function () { }, onStop: function () { } } }(jQuery, window, document), function (e, t, n, i) { "use strict"; e.fn.modal = function (o) { var a, r = e(this), s = e(t), c = e(n), l = e("body"), u = r.selector || "", d = (new Date).getTime(), f = [], m = arguments[0], g = "string" == typeof m, p = [].slice.call(arguments, 1), v = t.requestAnimationFrame || t.mozRequestAnimationFrame || t.webkitRequestAnimationFrame || t.msRequestAnimationFrame || function (e) { setTimeout(e, 0) }; return r.each(function () { var r, h, b, y, x, C, w, k, S, T = e.isPlainObject(o) ? e.extend(!0, {}, e.fn.modal.settings, o) : e.extend({}, e.fn.modal.settings), A = T.selector, R = T.className, E = T.namespace, P = T.error, F = "." + E, D = "module-" + E, O = e(this), q = e(T.context), j = O.find(A.close), z = this, I = O.data(D); S = { initialize: function () { S.verbose("Initializing dimmer", q), S.create.id(), S.create.dimmer(), S.refreshModals(), S.bind.events(), T.observeChanges && S.observeChanges(), S.instantiate() }, instantiate: function () { S.verbose("Storing instance of modal"), I = S, O.data(D, I) }, create: { dimmer: function () { var t = { debug: T.debug, dimmerName: "modals", duration: { show: T.duration, hide: T.duration } }, n = e.extend(!0, t, T.dimmerSettings); return T.inverted && (n.variation = n.variation !== i ? n.variation + " inverted" : "inverted"), e.fn.dimmer === i ? void S.error(P.dimmer) : (S.debug("Creating dimmer with settings", n), y = q.dimmer(n), T.detachable ? (S.verbose("Modal is detachable, moving content into dimmer"), y.dimmer("add content", O)) : S.set.undetached(), T.blurring && y.addClass(R.blurring), void (x = y.dimmer("get dimmer"))) }, id: function () { w = (Math.random().toString(16) + "000000000").substr(2, 8), C = "." + w, S.verbose("Creating unique id for element", w) } }, destroy: function () { S.verbose("Destroying previous modal"), O.removeData(D).off(F), s.off(C), j.off(F), q.dimmer("destroy") }, observeChanges: function () { "MutationObserver" in t && ((k = new MutationObserver(function (e) { S.debug("DOM tree modified, refreshing"), S.refresh() })).observe(z, { childList: !0, subtree: !0 }), S.debug("Setting up mutation observer", k)) }, refresh: function () { S.remove.scrolling(), S.cacheSizes(), S.set.screenHeight(), S.set.type(), S.set.position() }, refreshModals: function () { h = O.siblings(A.modal), r = h.add(O) }, attachEvents: function (t, n) { var i = e(t); n = e.isFunction(S[n]) ? S[n] : S.toggle, i.length > 0 ? (S.debug("Attaching modal events to element", t, n), i.off(F).on("click" + F, n)) : S.error(P.notFound, t) }, bind: { events: function () { S.verbose("Attaching events"), O.on("click" + F, A.close, S.event.close).on("click" + F, A.approve, S.event.approve).on("click" + F, A.deny, S.event.deny), s.on("resize" + C, S.event.resize) } }, get: { id: function () { return (Math.random().toString(16) + "000000000").substr(2, 8) } }, event: { approve: function () { return !1 === T.onApprove.call(z, e(this)) ? void S.verbose("Approve callback returned false cancelling hide") : void S.hide() }, deny: function () { return !1 === T.onDeny.call(z, e(this)) ? void S.verbose("Deny callback returned false cancelling hide") : void S.hide() }, close: function () { S.hide() }, click: function (t) { var i = e(t.target).closest(A.modal).length > 0, o = e.contains(n.documentElement, t.target); !i && o && (S.debug("Dimmer clicked, hiding all modals"), S.is.active() && (S.remove.clickaway(), T.allowMultiple ? S.hide() : S.hideAll())) }, debounce: function (e, t) { clearTimeout(S.timer), S.timer = setTimeout(e, t) }, keyboard: function (e) { 27 == e.which && (T.closable ? (S.debug("Escape key pressed hiding modal"), S.hide()) : S.debug("Escape key pressed, but closable is set to false"), e.preventDefault()) }, resize: function () { y.dimmer("is active") && v(S.refresh) } }, toggle: function () { S.is.active() || S.is.animating() ? S.hide() : S.show() }, show: function (t) { t = e.isFunction(t) ? t : function () { }, S.refreshModals(), S.showModal(t) }, hide: function (t) { t = e.isFunction(t) ? t : function () { }, S.refreshModals(), S.hideModal(t) }, showModal: function (t) { t = e.isFunction(t) ? t : function () { }, S.is.animating() || !S.is.active() ? (S.showDimmer(), S.cacheSizes(), S.set.position(), S.set.screenHeight(), S.set.type(), S.set.clickaway(), !T.allowMultiple && S.others.active() ? S.hideOthers(S.showModal) : (T.onShow.call(z), T.transition && e.fn.transition !== i && O.transition("is supported") ? (S.debug("Showing modal with css animations"), O.transition({ debug: T.debug, animation: T.transition + " in", queue: T.queue, duration: T.duration, useFailSafe: !0, onComplete: function () { T.onVisible.apply(z), S.add.keyboardShortcuts(), S.save.focus(), S.set.active(), T.autofocus && S.set.autofocus(), t() } })) : S.error(P.noTransition))) : S.debug("Modal is already visible") }, hideModal: function (t, n) { return t = e.isFunction(t) ? t : function () { }, S.debug("Hiding modal"), !1 === T.onHide.call(z, e(this)) ? void S.verbose("Hide callback returned false cancelling hide") : void ((S.is.animating() || S.is.active()) && (T.transition && e.fn.transition !== i && O.transition("is supported") ? (S.remove.active(), O.transition({ debug: T.debug, animation: T.transition + " out", queue: T.queue, duration: T.duration, useFailSafe: !0, onStart: function () { S.others.active() || n || S.hideDimmer(), S.remove.keyboardShortcuts() }, onComplete: function () { T.onHidden.call(z), S.restore.focus(), t() } })) : S.error(P.noTransition))) }, showDimmer: function () { y.dimmer("is animating") || !y.dimmer("is active") ? (S.debug("Showing dimmer"), y.dimmer("show")) : S.debug("Dimmer already visible") }, hideDimmer: function () { return y.dimmer("is animating") || y.dimmer("is active") ? void y.dimmer("hide", function () { S.remove.clickaway(), S.remove.screenHeight() }) : void S.debug("Dimmer is not visible cannot hide") }, hideAll: function (t) { var n = r.filter("." + R.active + ", ." + R.animating); t = e.isFunction(t) ? t : function () { }, n.length > 0 && (S.debug("Hiding all visible modals"), S.hideDimmer(), n.modal("hide modal", t)) }, hideOthers: function (t) { var n = h.filter("." + R.active + ", ." + R.animating); t = e.isFunction(t) ? t : function () { }, n.length > 0 && (S.debug("Hiding other modals", h), n.modal("hide modal", t, !0)) }, others: { active: function () { return h.filter("." + R.active).length > 0 }, animating: function () { return h.filter("." + R.animating).length > 0 } }, add: { keyboardShortcuts: function () { S.verbose("Adding keyboard shortcuts"), c.on("keyup" + F, S.event.keyboard) } }, save: { focus: function () { b = e(n.activeElement).blur() } }, restore: { focus: function () { b && b.length > 0 && b.focus() } }, remove: { active: function () { O.removeClass(R.active) }, clickaway: function () { T.closable && x.off("click" + C) }, bodyStyle: function () { "" === l.attr("style") && (S.verbose("Removing style attribute"), l.removeAttr("style")) }, screenHeight: function () { S.debug("Removing page height"), l.css("height", "") }, keyboardShortcuts: function () { S.verbose("Removing keyboard shortcuts"), c.off("keyup" + F) }, scrolling: function () { y.removeClass(R.scrolling), O.removeClass(R.scrolling) } }, cacheSizes: function () { var o = O.outerHeight(); (S.cache === i || 0 !== o) && (S.cache = { pageHeight: e(n).outerHeight(), height: o + T.offset, contextHeight: "body" == T.context ? e(t).height() : y.height() }), S.debug("Caching modal and container sizes", S.cache) }, can: { fit: function () { return S.cache.height + 2 * T.padding < S.cache.contextHeight } }, is: { active: function () { return O.hasClass(R.active) }, animating: function () { return O.transition("is supported") ? O.transition("is animating") : O.is(":visible") }, scrolling: function () { return y.hasClass(R.scrolling) }, modernBrowser: function () { return !(t.ActiveXObject || "ActiveXObject" in t) } }, set: { autofocus: function () { var e = O.find(":input").filter(":visible"), t = e.filter("[autofocus]"), n = t.length > 0 ? t.first() : e.first(); n.length > 0 && n.focus() }, clickaway: function () { T.closable && x.on("click" + C, S.event.click) }, screenHeight: function () { S.can.fit() ? l.css("height", "") : (S.debug("Modal is taller than page content, resizing page height"), l.css("height", S.cache.height + 2 * T.padding)) }, active: function () { O.addClass(R.active) }, scrolling: function () { y.addClass(R.scrolling), O.addClass(R.scrolling) }, type: function () { S.can.fit() ? (S.verbose("Modal fits on screen"), S.others.active() || S.others.animating() || S.remove.scrolling()) : (S.verbose("Modal cannot fit on screen setting to scrolling"), S.set.scrolling()) }, position: function () { S.verbose("Centering modal on page", S.cache), O.css(S.can.fit() ? { top: "", marginTop: -S.cache.height / 2 } : { marginTop: "", top: c.scrollTop() }) }, undetached: function () { y.addClass(R.undetached) } }, setting: function (t, n) { if (S.debug("Changing setting", t, n), e.isPlainObject(t)) e.extend(!0, T, t); else { if (n === i) return T[t]; T[t] = n } }, internal: function (t, n) { if (e.isPlainObject(t)) e.extend(!0, S, t); else { if (n === i) return S[t]; S[t] = n } }, debug: function () { T.debug && (T.performance ? S.performance.log(arguments) : (S.debug = Function.prototype.bind.call(console.info, console, T.name + ":"), S.debug.apply(console, arguments))) }, verbose: function () { T.verbose && T.debug && (T.performance ? S.performance.log(arguments) : (S.verbose = Function.prototype.bind.call(console.info, console, T.name + ":"), S.verbose.apply(console, arguments))) }, error: function () { S.error = Function.prototype.bind.call(console.error, console, T.name + ":"), S.error.apply(console, arguments) }, performance: { log: function (e) { var t, n; T.performance && (n = (t = (new Date).getTime()) - (d || t), d = t, f.push({ Name: e[0], Arguments: [].slice.call(e, 1) || "", Element: z, "Execution Time": n })), clearTimeout(S.performance.timer), S.performance.timer = setTimeout(S.performance.display, 500) }, display: function () { var t = T.name + ":", n = 0; d = !1, clearTimeout(S.performance.timer), e.each(f, function (e, t) { n += t["Execution Time"] }), t += " " + n + "ms", u && (t += " '" + u + "'"), (console.group !== i || console.table !== i) && f.length > 0 && (console.groupCollapsed(t), console.table ? console.table(f) : e.each(f, function (e, t) { console.log(t.Name + ": " + t["Execution Time"] + "ms") }), console.groupEnd()), f = [] } }, invoke: function (t, n, o) { var r, s, c, l = I; return n = n || p, o = z || o, "string" == typeof t && l !== i && (t = t.split(/[\. ]/), r = t.length - 1, e.each(t, function (n, o) { var a = n != r ? o + t[n + 1].charAt(0).toUpperCase() + t[n + 1].slice(1) : t; if (e.isPlainObject(l[a]) && n != r) l = l[a]; else { if (l[a] !== i) return s = l[a], !1; if (!e.isPlainObject(l[o]) || n == r) return l[o] !== i && (s = l[o], !1); l = l[o] } })), e.isFunction(s) ? c = s.apply(o, n) : s !== i && (c = s), e.isArray(a) ? a.push(c) : a !== i ? a = [a, c] : c !== i && (a = c), s } }, g ? (I === i && S.initialize(), S.invoke(m)) : (I !== i && I.invoke("destroy"), S.initialize()) }), a !== i ? a : this }, e.fn.modal.settings = { name: "Modal", namespace: "modal", debug: !1, verbose: !1, performance: !0, observeChanges: !1, allowMultiple: !1, detachable: !0, closable: !0, autofocus: !0, inverted: !1, blurring: !1, dimmerSettings: { closable: !1, useCSS: !0 }, context: "body", queue: !1, duration: 500, offset: 0, transition: "scale", padding: 50, onShow: function () { }, onVisible: function () { }, onHide: function () { return !0 }, onHidden: function () { }, onApprove: function () { return !0 }, onDeny: function () { return !0 }, selector: { close: "> .close", approve: ".actions .positive, .actions .approve, .actions .ok", deny: ".actions .negative, .actions .deny, .actions .cancel", modal: ".ui.modal" }, error: { dimmer: "UI Dimmer, a required component is not included in this page", method: "The method you called is not defined.", notFound: "The element you specified could not be found" }, className: { active: "active", animating: "animating", blurring: "blurring", scrolling: "scrolling", undetached: "undetached" } } }(jQuery, window, document), function (e, t, n, i) { "use strict"; e.fn.nag = function (n) { var o, a = e(this), r = a.selector || "", s = (new Date).getTime(), c = [], l = arguments[0], u = "string" == typeof l, d = [].slice.call(arguments, 1); return a.each(function () { var a, f = e.isPlainObject(n) ? e.extend(!0, {}, e.fn.nag.settings, n) : e.extend({}, e.fn.nag.settings), m = (f.className, f.selector), g = f.error, p = f.namespace, v = "." + p, h = p + "-module", b = e(this), y = (b.find(m.close), e(f.context ? f.context : "body")), x = this, C = b.data(h); t.requestAnimationFrame || t.mozRequestAnimationFrame || t.webkitRequestAnimationFrame || t.msRequestAnimationFrame, a = { initialize: function () { a.verbose("Initializing element"), b.on("click" + v, m.close, a.dismiss).data(h, a), f.detachable && b.parent()[0] !== y[0] && b.detach().prependTo(y), f.displayTime > 0 && setTimeout(a.hide, f.displayTime), a.show() }, destroy: function () { a.verbose("Destroying instance"), b.removeData(h).off(v) }, show: function () { a.should.show() && !b.is(":visible") && (a.debug("Showing nag", f.animation.show), "fade" == f.animation.show ? b.fadeIn(f.duration, f.easing) : b.slideDown(f.duration, f.easing)) }, hide: function () { a.debug("Showing nag", f.animation.hide), "fade" == f.animation.show ? b.fadeIn(f.duration, f.easing) : b.slideUp(f.duration, f.easing) }, onHide: function () { a.debug("Removing nag", f.animation.hide), b.remove(), f.onHide && f.onHide() }, dismiss: function (e) { f.storageMethod && a.storage.set(f.key, f.value), a.hide(), e.stopImmediatePropagation(), e.preventDefault() }, should: { show: function () { return f.persist ? (a.debug("Persistent nag is set, can show nag"), !0) : a.storage.get(f.key) != f.value.toString() ? (a.debug("Stored value is not set, can show nag", a.storage.get(f.key)), !0) : (a.debug("Stored value is set, cannot show nag", a.storage.get(f.key)), !1) } }, get: { storageOptions: function () { var e = {}; return f.expires && (e.expires = f.expires), f.domain && (e.domain = f.domain), f.path && (e.path = f.path), e } }, clear: function () { a.storage.remove(f.key) }, storage: { set: function (n, o) { var r = a.get.storageOptions(); if ("localstorage" == f.storageMethod && t.localStorage !== i) t.localStorage.setItem(n, o), a.debug("Value stored using local storage", n, o); else if ("sessionstorage" == f.storageMethod && t.sessionStorage !== i) t.sessionStorage.setItem(n, o), a.debug("Value stored using session storage", n, o); else { if (e.cookie === i) return void a.error(g.noCookieStorage); e.cookie(n, o, r), a.debug("Value stored using cookie", n, o, r) } }, get: function (n, o) { var r; return "localstorage" == f.storageMethod && t.localStorage !== i ? r = t.localStorage.getItem(n) : "sessionstorage" == f.storageMethod && t.sessionStorage !== i ? r = t.sessionStorage.getItem(n) : e.cookie !== i ? r = e.cookie(n) : a.error(g.noCookieStorage), ("undefined" == r || "null" == r || r === i || null === r) && (r = i), r }, remove: function (n) { var o = a.get.storageOptions(); "localstorage" == f.storageMethod && t.localStorage !== i ? t.localStorage.removeItem(n) : "sessionstorage" == f.storageMethod && t.sessionStorage !== i ? t.sessionStorage.removeItem(n) : e.cookie !== i ? e.removeCookie(n, o) : a.error(g.noStorage) } }, setting: function (t, n) { if (a.debug("Changing setting", t, n), e.isPlainObject(t)) e.extend(!0, f, t); else { if (n === i) return f[t]; f[t] = n } }, internal: function (t, n) { if (e.isPlainObject(t)) e.extend(!0, a, t); else { if (n === i) return a[t]; a[t] = n } }, debug: function () { f.debug && (f.performance ? a.performance.log(arguments) : (a.debug = Function.prototype.bind.call(console.info, console, f.name + ":"), a.debug.apply(console, arguments))) }, verbose: function () { f.verbose && f.debug && (f.performance ? a.performance.log(arguments) : (a.verbose = Function.prototype.bind.call(console.info, console, f.name + ":"), a.verbose.apply(console, arguments))) }, error: function () { a.error = Function.prototype.bind.call(console.error, console, f.name + ":"), a.error.apply(console, arguments) }, performance: { log: function (e) { var t, n; f.performance && (n = (t = (new Date).getTime()) - (s || t), s = t, c.push({ Name: e[0], Arguments: [].slice.call(e, 1) || "", Element: x, "Execution Time": n })), clearTimeout(a.performance.timer), a.performance.timer = setTimeout(a.performance.display, 500) }, display: function () { var t = f.name + ":", n = 0; s = !1, clearTimeout(a.performance.timer), e.each(c, function (e, t) { n += t["Execution Time"] }), t += " " + n + "ms", r && (t += " '" + r + "'"), (console.group !== i || console.table !== i) && c.length > 0 && (console.groupCollapsed(t), console.table ? console.table(c) : e.each(c, function (e, t) { console.log(t.Name + ": " + t["Execution Time"] + "ms") }), console.groupEnd()), c = [] } }, invoke: function (t, n, r) { var s, c, l, u = C; return n = n || d, r = x || r, "string" == typeof t && u !== i && (t = t.split(/[\. ]/), s = t.length - 1, e.each(t, function (n, o) { var r = n != s ? o + t[n + 1].charAt(0).toUpperCase() + t[n + 1].slice(1) : t; if (e.isPlainObject(u[r]) && n != s) u = u[r]; else { if (u[r] !== i) return c = u[r], !1; if (!e.isPlainObject(u[o]) || n == s) return u[o] !== i ? (c = u[o], !1) : (a.error(g.method, t), !1); u = u[o] } })), e.isFunction(c) ? l = c.apply(r, n) : c !== i && (l = c), e.isArray(o) ? o.push(l) : o !== i ? o = [o, l] : l !== i && (o = l), c } }, u ? (C === i && a.initialize(), a.invoke(l)) : (C !== i && C.invoke("destroy"), a.initialize()) }), o !== i ? o : this }, e.fn.nag.settings = { name: "Nag", debug: !1, verbose: !1, performance: !0, namespace: "Nag", persist: !1, displayTime: 0, animation: { show: "slide", hide: "slide" }, context: !1, detachable: !1, expires: 30, domain: !1, path: "/", storageMethod: "cookie", key: "nag", value: "dismiss", error: { noCookieStorage: "$.cookie is not included. A storage solution is required.", noStorage: "Neither $.cookie or store is defined. A storage solution is required for storing state", method: "The method you called is not defined." }, className: { bottom: "bottom", fixed: "fixed" }, selector: { close: ".close.icon" }, speed: 500, easing: "easeOutQuad", onHide: function () { } } }(jQuery, window, document), function (e, t, n, i) { "use strict"; e.fn.popup = function (o) { var a, r = e(this), s = e(n), c = e(t), l = e("body"), u = r.selector || "", d = (new Date).getTime(), f = [], m = arguments[0], g = "string" == typeof m, p = [].slice.call(arguments, 1); return r.each(function () { var n, r, v, h, b, y = e.isPlainObject(o) ? e.extend(!0, {}, e.fn.popup.settings, o) : e.extend({}, e.fn.popup.settings), x = y.selector, C = y.className, w = y.error, k = y.metadata, S = y.namespace, T = "." + y.namespace, A = "module-" + S, R = e(this), E = e(y.context), P = y.target ? e(y.target) : R, F = 0, D = !1, O = !1, q = this, j = R.data(A); b = { initialize: function () { b.debug("Initializing", R), b.createID(), b.bind.events(), !b.exists() && y.preserve && b.create(), b.instantiate() }, instantiate: function () { b.verbose("Storing instance", b), j = b, R.data(A, j) }, refresh: function () { y.popup ? n = e(y.popup).eq(0) : y.inline && (n = P.nextAll(x.popup).eq(0), y.popup = n), y.popup ? (n.addClass(C.loading), r = b.get.offsetParent(), n.removeClass(C.loading), y.movePopup && b.has.popup() && b.get.offsetParent(n)[0] !== r[0] && (b.debug("Moving popup to the same offset parent as activating element"), n.detach().appendTo(r))) : r = y.inline ? b.get.offsetParent(P) : b.has.popup() ? b.get.offsetParent(n) : l, r.is("html") && r[0] !== l[0] && (b.debug("Setting page as offset parent"), r = l), b.get.variation() && b.set.variation() }, reposition: function () { b.refresh(), b.set.position() }, destroy: function () { b.debug("Destroying previous module"), n && !y.preserve && b.removePopup(), clearTimeout(b.hideTimer), clearTimeout(b.showTimer), c.off(v), R.off(T).removeData(A) }, event: { start: function (t) { var n = e.isPlainObject(y.delay) ? y.delay.show : y.delay; clearTimeout(b.hideTimer), O || (b.showTimer = setTimeout(b.show, n)) }, end: function () { var t = e.isPlainObject(y.delay) ? y.delay.hide : y.delay; clearTimeout(b.showTimer), b.hideTimer = setTimeout(b.hide, t) }, touchstart: function (e) { O = !0, b.show() }, resize: function () { b.is.visible() && b.set.position() }, hideGracefully: function (t) { t && 0 === e(t.target).closest(x.popup).length ? (b.debug("Click occurred outside popup hiding popup"), b.hide()) : b.debug("Click was inside popup, keeping popup open") } }, create: function () { var t = b.get.html(), i = b.get.title(), o = b.get.content(); t || o || i ? (b.debug("Creating pop-up html"), t || (t = y.templates.popup({ title: i, content: o })), n = e("<div/>").addClass(C.popup).data(k.activator, R).html(t), y.inline ? (b.verbose("Inserting popup element inline", n), n.insertAfter(R)) : (b.verbose("Appending popup element to body", n), n.appendTo(E)), b.refresh(), b.set.variation(), y.hoverable && b.bind.popup(), y.onCreate.call(n, q)) : 0 !== P.next(x.popup).length ? (b.verbose("Pre-existing popup found"), y.inline = !0, y.popups = P.next(x.popup).data(k.activator, R), b.refresh(), y.hoverable && b.bind.popup()) : y.popup ? (e(y.popup).data(k.activator, R), b.verbose("Used popup specified in settings"), b.refresh(), y.hoverable && b.bind.popup()) : b.debug("No content specified skipping display", q) }, createID: function () { h = (Math.random().toString(16) + "000000000").substr(2, 8), v = "." + h, b.verbose("Creating unique id for element", h) }, toggle: function () { b.debug("Toggling pop-up"), b.is.hidden() ? (b.debug("Popup is hidden, showing pop-up"), b.unbind.close(), b.show()) : (b.debug("Popup is visible, hiding pop-up"), b.hide()) }, show: function (e) { if (e = e || function () { }, b.debug("Showing pop-up", y.transition), b.is.hidden() && (!b.is.active() || !b.is.dropdown())) { if (b.exists() || b.create(), !1 === y.onShow.call(n, q)) return void b.debug("onShow callback returned false, cancelling popup animation"); y.preserve || y.popup || b.refresh(), n && b.set.position() && (b.save.conditions(), y.exclusive && b.hideAll(), b.animate.show(e)) } }, hide: function (e) { if (e = e || function () { }, b.is.visible() || b.is.animating()) { if (!1 === y.onHide.call(n, q)) return void b.debug("onHide callback returned false, cancelling popup animation"); b.remove.visible(), b.unbind.close(), b.restore.conditions(), b.animate.hide(e) } }, hideAll: function () { e(x.popup).filter("." + C.visible).each(function () { e(this).data(k.activator).popup("hide") }) }, exists: function () { return !!n && (y.inline || y.popup ? b.has.popup() : n.closest(E).length >= 1) }, removePopup: function () { b.has.popup() && !y.popup && (b.debug("Removing popup", n), n.remove(), n = i, y.onRemove.call(n, q)) }, save: { conditions: function () { b.cache = { title: R.attr("title") }, b.cache.title && R.removeAttr("title"), b.verbose("Saving original attributes", b.cache.title) } }, restore: { conditions: function () { return b.cache && b.cache.title && (R.attr("title", b.cache.title), b.verbose("Restoring original attributes", b.cache.title)), !0 } }, animate: { show: function (t) { t = e.isFunction(t) ? t : function () { }, y.transition && e.fn.transition !== i && R.transition("is supported") ? (b.set.visible(), n.transition({ animation: y.transition + " in", queue: !1, debug: y.debug, verbose: y.verbose, duration: y.duration, onComplete: function () { b.bind.close(), t.call(n, q), y.onVisible.call(n, q) } })) : b.error(w.noTransition) }, hide: function (t) { return t = e.isFunction(t) ? t : function () { }, b.debug("Hiding pop-up"), !1 === y.onHide.call(n, q) ? void b.debug("onHide callback returned false, cancelling popup animation") : void (y.transition && e.fn.transition !== i && R.transition("is supported") ? n.transition({ animation: y.transition + " out", queue: !1, duration: y.duration, debug: y.debug, verbose: y.verbose, onComplete: function () { b.reset(), t.call(n, q), y.onHidden.call(n, q) } }) : b.error(w.noTransition)) } }, change: { content: function (e) { n.html(e) } }, get: { html: function () { return R.removeData(k.html), R.data(k.html) || y.html }, title: function () { return R.removeData(k.title), R.data(k.title) || y.title }, content: function () { return R.removeData(k.content), R.data(k.content) || R.attr("title") || y.content }, variation: function () { return R.removeData(k.variation), R.data(k.variation) || y.variation }, popup: function () { return n }, popupOffset: function () { return n.offset() }, calculations: function () { var e, i = P[0], o = y.inline || y.popup && y.movePopup ? P.position() : P.offset(), a = {}; return a = { target: { element: P[0], width: P.outerWidth(), height: P.outerHeight(), top: o.top, left: o.left, margin: {} }, popup: { width: n.outerWidth(), height: n.outerHeight() }, parent: { width: r.outerWidth(), height: r.outerHeight() }, screen: { scroll: { top: c.scrollTop(), left: c.scrollLeft() }, width: c.width(), height: c.height() } }, y.setFluidWidth && b.is.fluid() && (a.container = { width: n.parent().outerWidth() }, a.popup.width = a.container.width), a.target.margin.top = y.inline ? parseInt(t.getComputedStyle(i).getPropertyValue("margin-top"), 10) : 0, a.target.margin.left = y.inline ? b.is.rtl() ? parseInt(t.getComputedStyle(i).getPropertyValue("margin-right"), 10) : parseInt(t.getComputedStyle(i).getPropertyValue("margin-left"), 10) : 0, e = a.screen, a.boundary = { top: e.scroll.top, bottom: e.scroll.top + e.height, left: e.scroll.left, right: e.scroll.left + e.width }, a }, id: function () { return h }, startEvent: function () { return "hover" == y.on ? "mouseenter" : "focus" == y.on && "focus" }, scrollEvent: function () { return "scroll" }, endEvent: function () { return "hover" == y.on ? "mouseleave" : "focus" == y.on && "blur" }, distanceFromBoundary: function (e, t) { var n, i, o = {}; return e = e || b.get.offset(), n = (t = t || b.get.calculations()).popup, i = t.boundary, e && (o = { top: e.top - i.top, left: e.left - i.left, right: i.right - (e.left + n.width), bottom: i.bottom - (e.top + n.height) }, b.verbose("Distance from boundaries determined", e, o)), o }, offsetParent: function (t) { var n = (t !== i ? t[0] : R[0]).parentNode, o = e(n); if (n) for (var a = "none" === o.css("transform"), r = "static" === o.css("position"), s = o.is("html"); n && !s && r && a;)n = n.parentNode, o = e(n), a = "none" === o.css("transform"), r = "static" === o.css("position"), s = o.is("html"); return o && o.length > 0 ? o : e() }, positions: function () { return { "top left": !1, "top center": !1, "top right": !1, "bottom left": !1, "bottom center": !1, "bottom right": !1, "left center": !1, "right center": !1 } }, nextPosition: function (e) { var t = e.split(" "), n = t[0], i = t[1], o = "top" == n || "bottom" == n, a = !1, r = !1, s = !1; return D || (b.verbose("All available positions available"), D = b.get.positions()), b.debug("Recording last position tried", e), D[e] = !0, "opposite" === y.prefer && (s = (s = [{ top: "bottom", bottom: "top", left: "right", right: "left" }[n], i]).join(" "), a = !0 === D[s], b.debug("Trying opposite strategy", s)), "adjacent" === y.prefer && o && (s = (s = [n, { left: "center", center: "right", right: "left" }[i]]).join(" "), r = !0 === D[s], b.debug("Trying adjacent strategy", s)), (r || a) && (b.debug("Using backup position", s), s = { "top left": "top center", "top center": "top right", "top right": "right center", "right center": "bottom right", "bottom right": "bottom center", "bottom center": "bottom left", "bottom left": "left center", "left center": "top left" }[e]), s } }, set: { position: function (e, t) { if (0 !== P.length && 0 !== n.length) { var o, a, r, s, c, l, u, d; if (t = t || b.get.calculations(), e = e || R.data(k.position) || y.position, o = R.data(k.offset) || y.offset, a = y.distanceAway, r = t.target, s = t.popup, c = t.parent, 0 === r.width && 0 === r.height && !(r.element instanceof SVGGraphicsElement)) return b.debug("Popup target is hidden, no action taken"), !1; switch (y.inline && (b.debug("Adding margin to calculation", r.margin), "left center" == e || "right center" == e ? (o += r.margin.top, a += -r.margin.left) : "top left" == e || "top center" == e || "top right" == e ? (o += r.margin.left, a -= r.margin.top) : (o += r.margin.left, a += r.margin.top)), b.debug("Determining popup position from calculations", e, t), b.is.rtl() && (e = e.replace(/left|right/g, function (e) { return "left" == e ? "right" : "left" }), b.debug("RTL: Popup position updated", e)), F == y.maxSearchDepth && "string" == typeof y.lastResort && (e = y.lastResort), e) { case "top left": l = { top: "auto", bottom: c.height - r.top + a, left: r.left + o, right: "auto" }; break; case "top center": l = { bottom: c.height - r.top + a, left: r.left + r.width / 2 - s.width / 2 + o, top: "auto", right: "auto" }; break; case "top right": l = { bottom: c.height - r.top + a, right: c.width - r.left - r.width - o, top: "auto", left: "auto" }; break; case "left center": l = { top: r.top + r.height / 2 - s.height / 2 + o, right: c.width - r.left + a, left: "auto", bottom: "auto" }; break; case "right center": l = { top: r.top + r.height / 2 - s.height / 2 + o, left: r.left + r.width + a, bottom: "auto", right: "auto" }; break; case "bottom left": l = { top: r.top + r.height + a, left: r.left + o, bottom: "auto", right: "auto" }; break; case "bottom center": l = { top: r.top + r.height + a, left: r.left + r.width / 2 - s.width / 2 + o, bottom: "auto", right: "auto" }; break; case "bottom right": l = { top: r.top + r.height + a, right: c.width - r.left - r.width - o, left: "auto", bottom: "auto" } }if (l === i && b.error(w.invalidPosition, e), b.debug("Calculated popup positioning values", l), n.css(l).removeClass(C.position).addClass(e).addClass(C.loading), u = b.get.popupOffset(), d = b.get.distanceFromBoundary(u, t), b.is.offstage(d, e)) { if (b.debug("Position is outside viewport", e), F < y.maxSearchDepth) return F++ , e = b.get.nextPosition(e), b.debug("Trying new position", e), !!n && b.set.position(e, t); if (!y.lastResort) return b.debug("Popup could not find a position to display", n), b.error(w.cannotPlace, q), b.remove.attempts(), b.remove.loading(), b.reset(), y.onUnplaceable.call(n, q), !1; b.debug("No position found, showing with last position") } return b.debug("Position is on stage", e), b.remove.attempts(), b.remove.loading(), y.setFluidWidth && b.is.fluid() && b.set.fluidWidth(t), !0 } b.error(w.notFound) }, fluidWidth: function (e) { e = e || b.get.calculations(), b.debug("Automatically setting element width to parent width", e.parent.width), n.css("width", e.container.width) }, variation: function (e) { (e = e || b.get.variation()) && b.has.popup() && (b.verbose("Adding variation to popup", e), n.addClass(e)) }, visible: function () { R.addClass(C.visible) } }, remove: { loading: function () { n.removeClass(C.loading) }, variation: function (e) { (e = e || b.get.variation()) && (b.verbose("Removing variation", e), n.removeClass(e)) }, visible: function () { R.removeClass(C.visible) }, attempts: function () { b.verbose("Resetting all searched positions"), F = 0, D = !1 } }, bind: { events: function () { b.debug("Binding popup events to module"), "click" == y.on && R.on("click" + T, b.toggle), "hover" == y.on && R.on("touchstart" + T, b.event.touchstart), b.get.startEvent() && R.on(b.get.startEvent() + T, b.event.start).on(b.get.endEvent() + T, b.event.end), y.target && b.debug("Target set to element", P), c.on("resize" + v, b.event.resize) }, popup: function () { b.verbose("Allowing hover events on popup to prevent closing"), n && b.has.popup() && n.on("mouseenter" + T, b.event.start).on("mouseleave" + T, b.event.end) }, close: function () { (!0 === y.hideOnScroll || "auto" == y.hideOnScroll && "click" != y.on) && (s.one(b.get.scrollEvent() + v, b.event.hideGracefully), E.one(b.get.scrollEvent() + v, b.event.hideGracefully)), "hover" == y.on && O && (b.verbose("Binding popup close event to document"), s.on("touchstart" + v, function (e) { b.verbose("Touched away from popup"), b.event.hideGracefully.call(q, e) })), "click" == y.on && y.closable && (b.verbose("Binding popup close event to document"), s.on("click" + v, function (e) { b.verbose("Clicked away from popup"), b.event.hideGracefully.call(q, e) })) } }, unbind: { close: function () { (!0 === y.hideOnScroll || "auto" == y.hideOnScroll && "click" != y.on) && (s.off("scroll" + v, b.hide), E.off("scroll" + v, b.hide)), "hover" == y.on && O && (s.off("touchstart" + v), O = !1), "click" == y.on && y.closable && (b.verbose("Removing close event from document"), s.off("click" + v)) } }, has: { popup: function () { return n && n.length > 0 } }, is: { offstage: function (t, n) { var i = []; return e.each(t, function (e, t) { t < -y.jitter && (b.debug("Position exceeds allowable distance from edge", e, t, n), i.push(e)) }), i.length > 0 }, active: function () { return R.hasClass(C.active) }, animating: function () { return n !== i && n.hasClass(C.animating) }, fluid: function () { return n !== i && n.hasClass(C.fluid) }, visible: function () { return n !== i && n.hasClass(C.visible) }, dropdown: function () { return R.hasClass(C.dropdown) }, hidden: function () { return !b.is.visible() }, rtl: function () { return "rtl" == R.css("direction") } }, reset: function () { b.remove.visible(), y.preserve ? e.fn.transition !== i && n.transition("remove transition") : b.removePopup() }, setting: function (t, n) { if (e.isPlainObject(t)) e.extend(!0, y, t); else { if (n === i) return y[t]; y[t] = n } }, internal: function (t, n) { if (e.isPlainObject(t)) e.extend(!0, b, t); else { if (n === i) return b[t]; b[t] = n } }, debug: function () { y.debug && (y.performance ? b.performance.log(arguments) : (b.debug = Function.prototype.bind.call(console.info, console, y.name + ":"), b.debug.apply(console, arguments))) }, verbose: function () { y.verbose && y.debug && (y.performance ? b.performance.log(arguments) : (b.verbose = Function.prototype.bind.call(console.info, console, y.name + ":"), b.verbose.apply(console, arguments))) }, error: function () { b.error = Function.prototype.bind.call(console.error, console, y.name + ":"), b.error.apply(console, arguments) }, performance: { log: function (e) { var t, n; y.performance && (n = (t = (new Date).getTime()) - (d || t), d = t, f.push({ Name: e[0], Arguments: [].slice.call(e, 1) || "", Element: q, "Execution Time": n })), clearTimeout(b.performance.timer), b.performance.timer = setTimeout(b.performance.display, 500) }, display: function () { var t = y.name + ":", n = 0; d = !1, clearTimeout(b.performance.timer), e.each(f, function (e, t) { n += t["Execution Time"] }), t += " " + n + "ms", u && (t += " '" + u + "'"), (console.group !== i || console.table !== i) && f.length > 0 && (console.groupCollapsed(t), console.table ? console.table(f) : e.each(f, function (e, t) { console.log(t.Name + ": " + t["Execution Time"] + "ms") }), console.groupEnd()), f = [] } }, invoke: function (t, n, o) { var r, s, c, l = j; return n = n || p, o = q || o, "string" == typeof t && l !== i && (t = t.split(/[\. ]/), r = t.length - 1, e.each(t, function (n, o) { var a = n != r ? o + t[n + 1].charAt(0).toUpperCase() + t[n + 1].slice(1) : t; if (e.isPlainObject(l[a]) && n != r) l = l[a]; else { if (l[a] !== i) return s = l[a], !1; if (!e.isPlainObject(l[o]) || n == r) return l[o] !== i && (s = l[o], !1); l = l[o] } })), e.isFunction(s) ? c = s.apply(o, n) : s !== i && (c = s), e.isArray(a) ? a.push(c) : a !== i ? a = [a, c] : c !== i && (a = c), s } }, g ? (j === i && b.initialize(), b.invoke(m)) : (j !== i && j.invoke("destroy"), b.initialize()) }), a !== i ? a : this }, e.fn.popup.settings = { name: "Popup", debug: !1, verbose: !1, performance: !0, namespace: "popup", onCreate: function () { }, onRemove: function () { }, onShow: function () { }, onVisible: function () { }, onHide: function () { }, onUnplaceable: function () { }, onHidden: function () { }, on: "hover", addTouchEvents: !0, position: "top left", variation: "", movePopup: !0, target: !1, popup: !1, inline: !1, preserve: !1, hoverable: !1, content: !1, html: !1, title: !1, closable: !0, hideOnScroll: "auto", exclusive: !1, context: "body", prefer: "opposite", lastResort: !1, delay: { show: 50, hide: 70 }, setFluidWidth: !0, duration: 200, transition: "scale", distanceAway: 0, jitter: 2, offset: 0, maxSearchDepth: 15, error: { invalidPosition: "The position you specified is not a valid position", cannotPlace: "Popup does not fit within the boundaries of the viewport", method: "The method you called is not defined.", noTransition: "This module requires ui transitions <https://github.com/Semantic-Org/UI-Transition>", notFound: "The target or popup you specified does not exist on the page" }, metadata: { activator: "activator", content: "content", html: "html", offset: "offset", position: "position", title: "title", variation: "variation" }, className: { active: "active", animating: "animating", dropdown: "dropdown", fluid: "fluid", loading: "loading", popup: "ui popup", position: "top left center bottom right", visible: "visible" }, selector: { popup: ".ui.popup" }, templates: { escape: function (e) { var t = { "&": "&amp;", "<": "&lt;", ">": "&gt;", '"': "&quot;", "'": "&#x27;", "`": "&#x60;" }; return /[&<>"'`]/.test(e) ? e.replace(/[&<>"'`]/g, function (e) { return t[e] }) : e }, popup: function (t) { var n = "", o = e.fn.popup.settings.templates.escape; return typeof t !== i && (typeof t.title !== i && t.title && (t.title = o(t.title), n += '<div class="header">' + t.title + "</div>"), typeof t.content !== i && t.content && (t.content = o(t.content), n += '<div class="content">' + t.content + "</div>")), n } } } }(jQuery, window, document), function (e, t, n, i) { "use strict"; e.fn.progress = function (t) { var o, a = e(this), r = a.selector || "", s = (new Date).getTime(), c = [], l = arguments[0], u = "string" == typeof l, d = [].slice.call(arguments, 1); return a.each(function () { var a, f, m = e.isPlainObject(t) ? e.extend(!0, {}, e.fn.progress.settings, t) : e.extend({}, e.fn.progress.settings), g = m.className, p = m.metadata, v = m.namespace, h = m.selector, b = m.error, y = "." + v, x = "module-" + v, C = e(this), w = e(this).find(h.bar), k = e(this).find(h.progress), S = e(this).find(h.label), T = this, A = C.data(x), R = !1; f = { initialize: function () { f.debug("Initializing progress bar", m), f.set.duration(), f.set.transitionEvent(), f.read.metadata(), f.read.settings(), f.instantiate() }, instantiate: function () { f.verbose("Storing instance of progress", f), A = f, C.data(x, f) }, destroy: function () { f.verbose("Destroying previous progress for", C), clearInterval(A.interval), f.remove.state(), C.removeData(x), A = i }, reset: function () { f.set.percent(0), f.set.value(0) }, complete: function () { (f.percent === i || f.percent < 100) && f.set.percent(100) }, read: { metadata: function () { var e = { percent: C.data(p.percent), total: C.data(p.total), value: C.data(p.value) }; e.percent && (f.debug("Current percent value set from metadata", e.percent), f.set.percent(e.percent)), e.total && (f.debug("Total value set from metadata", e.total), f.set.total(e.total)), e.value && (f.debug("Current value set from metadata", e.value), f.set.value(e.value), f.set.progress(e.value)) }, settings: function () { !1 !== m.total && (f.debug("Current total set in settings", m.total), f.set.total(m.total)), !1 !== m.value && (f.debug("Current value set in settings", m.value), f.set.value(m.value), f.set.progress(f.value)), !1 !== m.percent && (f.debug("Current percent set in settings", m.percent), f.set.percent(m.percent)) } }, increment: function (e) { var t, n, i; f.has.total() ? (i = (n = f.get.value()) + (e = e || 1), t = f.get.total(), f.debug("Incrementing value", n, i, t), i > t && (f.debug("Value cannot increment above total", t), i = t)) : (i = (n = f.get.percent()) + (e = e || f.get.randomValue()), t = 100, f.debug("Incrementing percentage by", n, i), i > t && (f.debug("Value cannot increment above 100 percent"), i = t)), f.set.progress(i) }, decrement: function (e) { var t, n; f.get.total() ? (n = (t = f.get.value()) - (e = e || 1), f.debug("Decrementing value by", e, t)) : (n = (t = f.get.percent()) - (e = e || f.get.randomValue()), f.debug("Decrementing percentage by", e, t)), 0 > n && (f.debug("Value cannot decrement below 0"), n = 0), f.set.progress(n) }, has: { total: function () { return !1 !== f.get.total() } }, get: { text: function (e) { var t = f.value || 0, n = f.total || 0, i = R ? f.get.displayPercent() : f.percent || 0, o = f.total > 0 ? n - t : 100 - i; return e = (e = e || "").replace("{value}", t).replace("{total}", n).replace("{left}", o).replace("{percent}", i), f.debug("Adding variables to progress bar text", e), e }, randomValue: function () { return f.debug("Generating random increment percentage"), Math.floor(Math.random() * m.random.max + m.random.min) }, numericValue: function (e) { return "string" == typeof e ? "" !== e.replace(/[^\d.]/g, "") && +e.replace(/[^\d.]/g, "") : e }, transitionEnd: function () { var e, t = n.createElement("element"), o = { transition: "transitionend", OTransition: "oTransitionEnd", MozTransition: "transitionend", WebkitTransition: "webkitTransitionEnd" }; for (e in o) if (t.style[e] !== i) return o[e] }, displayPercent: function () { var e = w.width(), t = C.width(), n = e > parseInt(w.css("min-width"), 10) ? e / t * 100 : f.percent; return m.precision > 0 ? Math.round(10 * n * m.precision) / (10 * m.precision) : Math.round(n) }, percent: function () { return f.percent || 0 }, value: function () { return f.value || 0 }, total: function () { return f.total || !1 } }, is: { success: function () { return C.hasClass(g.success) }, warning: function () { return C.hasClass(g.warning) }, error: function () { return C.hasClass(g.error) }, active: function () { return C.hasClass(g.active) }, visible: function () { return C.is(":visible") } }, remove: { state: function () { f.verbose("Removing stored state"), delete f.total, delete f.percent, delete f.value }, active: function () { f.verbose("Removing active state"), C.removeClass(g.active) }, success: function () { f.verbose("Removing success state"), C.removeClass(g.success) }, warning: function () { f.verbose("Removing warning state"), C.removeClass(g.warning) }, error: function () { f.verbose("Removing error state"), C.removeClass(g.error) } }, set: { barWidth: function (e) { e > 100 ? f.error(b.tooHigh, e) : 0 > e ? f.error(b.tooLow, e) : (w.css("width", e + "%"), C.attr("data-percent", parseInt(e, 10))) }, duration: function (e) { e = "number" == typeof (e = e || m.duration) ? e + "ms" : e, f.verbose("Setting progress bar transition duration", e), w.css({ "transition-duration": e }) }, percent: function (e) { e = "string" == typeof e ? +e.replace("%", "") : e, e = m.precision > 0 ? Math.round(10 * e * m.precision) / (10 * m.precision) : Math.round(e), f.percent = e, f.has.total() || (f.value = m.precision > 0 ? Math.round(e / 100 * f.total * 10 * m.precision) / (10 * m.precision) : Math.round(e / 100 * f.total * 10) / 10, m.limitValues && (f.value = f.value > 100 ? 100 : f.value < 0 ? 0 : f.value)), f.set.barWidth(e), f.set.labelInterval(), f.set.labels(), m.onChange.call(T, e, f.value, f.total) }, labelInterval: function () { var e = function () { f.verbose("Bar finished animating, removing continuous label updates"), clearInterval(f.interval), R = !1, f.set.labels() }; clearInterval(f.interval), w.one(a + y, e), f.timer = setTimeout(e, m.duration + 100), R = !0, f.interval = setInterval(f.set.labels, m.framerate) }, labels: function () { f.verbose("Setting both bar progress and outer label text"), f.set.barLabel(), f.set.state() }, label: function (e) { (e = e || "") && (e = f.get.text(e), f.debug("Setting label to text", e), S.text(e)) }, state: function (e) { 100 === (e = e !== i ? e : f.percent) ? !m.autoSuccess || f.is.warning() || f.is.error() ? (f.verbose("Reached 100% removing active state"), f.remove.active()) : (f.set.success(), f.debug("Automatically triggering success at 100%")) : e > 0 ? (f.verbose("Adjusting active progress bar label", e), f.set.active()) : (f.remove.active(), f.set.label(m.text.active)) }, barLabel: function (e) { e !== i ? k.text(f.get.text(e)) : "ratio" == m.label && f.total ? (f.debug("Adding ratio to bar label"), k.text(f.get.text(m.text.ratio))) : "percent" == m.label && (f.debug("Adding percentage to bar label"), k.text(f.get.text(m.text.percent))) }, active: function (e) { e = e || m.text.active, f.debug("Setting active state"), m.showActivity && !f.is.active() && C.addClass(g.active), f.remove.warning(), f.remove.error(), f.remove.success(), e && f.set.label(e), m.onActive.call(T, f.value, f.total) }, success: function (e) { e = e || m.text.success, f.debug("Setting success state"), C.addClass(g.success), f.remove.active(), f.remove.warning(), f.remove.error(), f.complete(), e && f.set.label(e), m.onSuccess.call(T, f.total) }, warning: function (e) { e = e || m.text.warning, f.debug("Setting warning state"), C.addClass(g.warning), f.remove.active(), f.remove.success(), f.remove.error(), f.complete(), e && f.set.label(e), m.onWarning.call(T, f.value, f.total) }, error: function (e) { e = e || m.text.error, f.debug("Setting error state"), C.addClass(g.error), f.remove.active(), f.remove.success(), f.remove.warning(), f.complete(), e && f.set.label(e), m.onError.call(T, f.value, f.total) }, transitionEvent: function () { a = f.get.transitionEnd() }, total: function (e) { f.total = e }, value: function (e) { f.value = e }, progress: function (e) { var t, n = f.get.numericValue(e); !1 === n && f.error(b.nonNumeric, e), f.has.total() ? (f.set.value(n), t = n / f.total * 100, f.debug("Calculating percent complete from total", t), f.set.percent(t)) : (t = n, f.debug("Setting value to exact percentage value", t), f.set.percent(t)) } }, setting: function (t, n) { if (f.debug("Changing setting", t, n), e.isPlainObject(t)) e.extend(!0, m, t); else { if (n === i) return m[t]; m[t] = n } }, internal: function (t, n) { if (e.isPlainObject(t)) e.extend(!0, f, t); else { if (n === i) return f[t]; f[t] = n } }, debug: function () { m.debug && (m.performance ? f.performance.log(arguments) : (f.debug = Function.prototype.bind.call(console.info, console, m.name + ":"), f.debug.apply(console, arguments))) }, verbose: function () { m.verbose && m.debug && (m.performance ? f.performance.log(arguments) : (f.verbose = Function.prototype.bind.call(console.info, console, m.name + ":"), f.verbose.apply(console, arguments))) }, error: function () { f.error = Function.prototype.bind.call(console.error, console, m.name + ":"), f.error.apply(console, arguments) }, performance: { log: function (e) { var t, n; m.performance && (n = (t = (new Date).getTime()) - (s || t), s = t, c.push({ Name: e[0], Arguments: [].slice.call(e, 1) || "", Element: T, "Execution Time": n })), clearTimeout(f.performance.timer), f.performance.timer = setTimeout(f.performance.display, 500) }, display: function () { var t = m.name + ":", n = 0; s = !1, clearTimeout(f.performance.timer), e.each(c, function (e, t) { n += t["Execution Time"] }), t += " " + n + "ms", r && (t += " '" + r + "'"), (console.group !== i || console.table !== i) && c.length > 0 && (console.groupCollapsed(t), console.table ? console.table(c) : e.each(c, function (e, t) { console.log(t.Name + ": " + t["Execution Time"] + "ms") }), console.groupEnd()), c = [] } }, invoke: function (t, n, a) { var r, s, c, l = A; return n = n || d, a = T || a, "string" == typeof t && l !== i && (t = t.split(/[\. ]/), r = t.length - 1, e.each(t, function (n, o) { var a = n != r ? o + t[n + 1].charAt(0).toUpperCase() + t[n + 1].slice(1) : t; if (e.isPlainObject(l[a]) && n != r) l = l[a]; else { if (l[a] !== i) return s = l[a], !1; if (!e.isPlainObject(l[o]) || n == r) return l[o] !== i ? (s = l[o], !1) : (f.error(b.method, t), !1); l = l[o] } })), e.isFunction(s) ? c = s.apply(a, n) : s !== i && (c = s), e.isArray(o) ? o.push(c) : o !== i ? o = [o, c] : c !== i && (o = c), s } }, u ? (A === i && f.initialize(), f.invoke(l)) : (A !== i && A.invoke("destroy"), f.initialize()) }), o !== i ? o : this }, e.fn.progress.settings = { name: "Progress", namespace: "progress", debug: !1, verbose: !1, performance: !0, random: { min: 2, max: 5 }, duration: 300, autoSuccess: !0, showActivity: !0, limitValues: !0, label: "percent", precision: 0, framerate: 1e3 / 30, percent: !1, total: !1, value: !1, onChange: function (e, t, n) { }, onSuccess: function (e) { }, onActive: function (e, t) { }, onError: function (e, t) { }, onWarning: function (e, t) { }, error: { method: "The method you called is not defined.", nonNumeric: "Progress value is non numeric", tooHigh: "Value specified is above 100%", tooLow: "Value specified is below 0%" }, regExp: { variable: /\{\$*[A-z0-9]+\}/g }, metadata: { percent: "percent", total: "total", value: "value" }, selector: { bar: "> .bar", label: "> .label", progress: ".bar > .progress" }, text: { active: !1, error: !1, success: !1, warning: !1, percent: "{percent}%", ratio: "{value} of {total}" }, className: { active: "active", error: "error", success: "success", warning: "warning" } } }(jQuery, window, document), function (e, t, n, i) { "use strict"; e.fn.rating = function (t) { var n, o = e(this), a = o.selector || "", r = (new Date).getTime(), s = [], c = arguments[0], l = "string" == typeof c, u = [].slice.call(arguments, 1); return o.each(function () { var d, f = e.isPlainObject(t) ? e.extend(!0, {}, e.fn.rating.settings, t) : e.extend({}, e.fn.rating.settings), m = f.namespace, g = f.className, p = f.metadata, v = f.selector, h = (f.error, "." + m), b = "module-" + m, y = this, x = e(this).data(b), C = e(this), w = C.find(v.icon); d = { initialize: function () { d.verbose("Initializing rating module", f), 0 === w.length && d.setup.layout(), f.interactive ? d.enable() : d.disable(), d.set.rating(d.get.initialRating()), d.instantiate() }, instantiate: function () { d.verbose("Instantiating module", f), x = d, C.data(b, d) }, destroy: function () { d.verbose("Destroying previous instance", x), d.remove.events(), C.removeData(b) }, refresh: function () { w = C.find(v.icon) }, setup: { layout: function () { var t = d.get.maxRating(), n = e.fn.rating.settings.templates.icon(t); d.debug("Generating icon html dynamically"), C.html(n), d.refresh() } }, event: { mouseenter: function () { var t = e(this); t.nextAll().removeClass(g.selected), C.addClass(g.selected), t.addClass(g.selected).prevAll().addClass(g.selected) }, mouseleave: function () { C.removeClass(g.selected), w.removeClass(g.selected) }, click: function () { var t = e(this), n = d.get.rating(), i = w.index(t) + 1; ("auto" == f.clearable ? 1 === w.length : f.clearable) && n == i ? d.clearRating() : d.set.rating(i) } }, clearRating: function () { d.debug("Clearing current rating"), d.set.rating(0) }, bind: { events: function () { d.verbose("Binding events"), C.on("mouseenter" + h, v.icon, d.event.mouseenter).on("mouseleave" + h, v.icon, d.event.mouseleave).on("click" + h, v.icon, d.event.click) } }, remove: { events: function () { d.verbose("Removing events"), C.off(h) } }, enable: function () { d.debug("Setting rating to interactive mode"), d.bind.events(), C.removeClass(g.disabled) }, disable: function () { d.debug("Setting rating to read-only mode"), d.remove.events(), C.addClass(g.disabled) }, get: { initialRating: function () { return C.data(p.rating) !== i ? (C.removeData(p.rating), C.data(p.rating)) : f.initialRating }, maxRating: function () { return C.data(p.maxRating) !== i ? (C.removeData(p.maxRating), C.data(p.maxRating)) : f.maxRating }, rating: function () { var e = w.filter("." + g.active).length; return d.verbose("Current rating retrieved", e), e } }, set: { rating: function (e) { var t = e - 1 >= 0 ? e - 1 : 0, n = w.eq(t); C.removeClass(g.selected), w.removeClass(g.selected).removeClass(g.active), e > 0 && (d.verbose("Setting current rating to", e), n.prevAll().andSelf().addClass(g.active)), f.onRate.call(y, e) } }, setting: function (t, n) { if (d.debug("Changing setting", t, n), e.isPlainObject(t)) e.extend(!0, f, t); else { if (n === i) return f[t]; f[t] = n } }, internal: function (t, n) { if (e.isPlainObject(t)) e.extend(!0, d, t); else { if (n === i) return d[t]; d[t] = n } }, debug: function () { f.debug && (f.performance ? d.performance.log(arguments) : (d.debug = Function.prototype.bind.call(console.info, console, f.name + ":"), d.debug.apply(console, arguments))) }, verbose: function () { f.verbose && f.debug && (f.performance ? d.performance.log(arguments) : (d.verbose = Function.prototype.bind.call(console.info, console, f.name + ":"), d.verbose.apply(console, arguments))) }, error: function () { d.error = Function.prototype.bind.call(console.error, console, f.name + ":"), d.error.apply(console, arguments) }, performance: { log: function (e) { var t, n; f.performance && (n = (t = (new Date).getTime()) - (r || t), r = t, s.push({ Name: e[0], Arguments: [].slice.call(e, 1) || "", Element: y, "Execution Time": n })), clearTimeout(d.performance.timer), d.performance.timer = setTimeout(d.performance.display, 500) }, display: function () { var t = f.name + ":", n = 0; r = !1, clearTimeout(d.performance.timer), e.each(s, function (e, t) { n += t["Execution Time"] }), t += " " + n + "ms", a && (t += " '" + a + "'"), o.length > 1 && (t += " (" + o.length + ")"), (console.group !== i || console.table !== i) && s.length > 0 && (console.groupCollapsed(t), console.table ? console.table(s) : e.each(s, function (e, t) { console.log(t.Name + ": " + t["Execution Time"] + "ms") }), console.groupEnd()), s = [] } }, invoke: function (t, o, a) { var r, s, c, l = x; return o = o || u, a = y || a, "string" == typeof t && l !== i && (t = t.split(/[\. ]/), r = t.length - 1, e.each(t, function (n, o) { var a = n != r ? o + t[n + 1].charAt(0).toUpperCase() + t[n + 1].slice(1) : t; if (e.isPlainObject(l[a]) && n != r) l = l[a]; else { if (l[a] !== i) return s = l[a], !1; if (!e.isPlainObject(l[o]) || n == r) return l[o] !== i && (s = l[o], !1); l = l[o] } })), e.isFunction(s) ? c = s.apply(a, o) : s !== i && (c = s), e.isArray(n) ? n.push(c) : n !== i ? n = [n, c] : c !== i && (n = c), s } }, l ? (x === i && d.initialize(), d.invoke(c)) : (x !== i && x.invoke("destroy"), d.initialize()) }), n !== i ? n : this }, e.fn.rating.settings = { name: "Rating", namespace: "rating", debug: !1, verbose: !1, performance: !0, initialRating: 0, interactive: !0, maxRating: 4, clearable: "auto", onRate: function (e) { }, error: { method: "The method you called is not defined", noMaximum: "No maximum rating specified. Cannot generate HTML automatically" }, metadata: { rating: "rating", maxRating: "maxRating" }, className: { active: "active", disabled: "disabled", selected: "selected", loading: "loading" }, selector: { icon: ".icon" }, templates: { icon: function (e) { for (var t = 1, n = ""; e >= t;)n += '<i class="icon"></i>', t++; return n } } } }(jQuery, window, document), function (e, t, n, i) { "use strict"; e.fn.search = function (o) { var a, r = e(this), s = r.selector || "", c = (new Date).getTime(), l = [], u = arguments[0], d = "string" == typeof u, f = [].slice.call(arguments, 1); return e(this).each(function () { var m, g = e.isPlainObject(o) ? e.extend(!0, {}, e.fn.search.settings, o) : e.extend({}, e.fn.search.settings), p = g.className, v = g.metadata, h = g.regExp, b = g.fields, y = g.selector, x = g.error, C = g.namespace, w = "." + C, k = C + "-module", S = e(this), T = S.find(y.prompt), A = S.find(y.searchButton), R = S.find(y.results), E = (S.find(y.result), S.find(y.category), this), P = S.data(k); m = { initialize: function () { m.verbose("Initializing module"), m.determine.searchFields(), m.bind.events(), m.set.type(), m.create.results(), m.instantiate() }, instantiate: function () { m.verbose("Storing instance of module", m), P = m, S.data(k, m) }, destroy: function () { m.verbose("Destroying instance"), S.off(w).removeData(k) }, bind: { events: function () { m.verbose("Binding events to search"), g.automatic && (S.on(m.get.inputEvent() + w, y.prompt, m.event.input), T.attr("autocomplete", "off")), S.on("focus" + w, y.prompt, m.event.focus).on("blur" + w, y.prompt, m.event.blur).on("keydown" + w, y.prompt, m.handleKeyboard).on("click" + w, y.searchButton, m.query).on("mousedown" + w, y.results, m.event.result.mousedown).on("mouseup" + w, y.results, m.event.result.mouseup).on("click" + w, y.result, m.event.result.click) } }, determine: { searchFields: function () { o && o.searchFields !== i && (g.searchFields = o.searchFields) } }, event: { input: function () { clearTimeout(m.timer), m.timer = setTimeout(m.query, g.searchDelay) }, focus: function () { m.set.focus(), m.has.minimumCharacters() && (m.query(), m.can.show() && m.showResults()) }, blur: function (e) { var t = function () { m.cancel.query(), m.remove.focus(), m.timer = setTimeout(m.hideResults, g.hideDelay) }; n.activeElement === this || (m.resultsClicked ? (m.debug("Determining if user action caused search to close"), S.one("click", y.results, function (e) { m.is.animating() || m.is.hidden() || t() })) : (m.debug("Input blurred without user action, closing results"), t())) }, result: { mousedown: function () { m.resultsClicked = !0 }, mouseup: function () { m.resultsClicked = !1 }, click: function (n) { m.debug("Search result selected"); var i = e(this), o = i.find(y.title).eq(0), a = i.find("a[href]").eq(0), r = a.attr("href") || !1, s = a.attr("target") || !1, c = (o.html(), o.length > 0 && o.text()), l = m.get.results(), u = i.data(v.result) || m.get.result(c, l); return e.isFunction(g.onSelect) && !1 === g.onSelect.call(E, u, l) ? void m.debug("Custom onSelect callback cancelled default select action") : (m.hideResults(), c && m.set.value(c), void (r && (m.verbose("Opening search link found in result", a), "_blank" == s || n.ctrlKey ? t.open(r) : t.location.href = r))) } } }, handleKeyboard: function (e) { var t, n = S.find(y.result), i = S.find(y.category), o = n.index(n.filter("." + p.active)), a = n.length, r = e.which, s = 13, c = 38, l = 40; if (r == 27 && (m.verbose("Escape key pressed, blurring search field"), m.trigger.blur()), m.is.visible()) if (r == s) { if (m.verbose("Enter key pressed, selecting active result"), n.filter("." + p.active).length > 0) return m.event.result.click.call(n.filter("." + p.active), e), e.preventDefault(), !1 } else r == c ? (m.verbose("Up key pressed, changing active result"), t = 0 > o - 1 ? o : o - 1, i.removeClass(p.active), n.removeClass(p.active).eq(t).addClass(p.active).closest(i).addClass(p.active), e.preventDefault()) : r == l && (m.verbose("Down key pressed, changing active result"), t = o + 1 >= a ? o : o + 1, i.removeClass(p.active), n.removeClass(p.active).eq(t).addClass(p.active).closest(i).addClass(p.active), e.preventDefault()); else r == s && (m.verbose("Enter key pressed, executing query"), m.query(), m.set.buttonPressed(), T.one("keyup", m.remove.buttonFocus)) }, setup: { api: function () { var e = { debug: g.debug, on: !1, cache: "local", action: "search", onError: m.error }; m.verbose("First request, initializing API"), S.api(e) } }, can: { useAPI: function () { return e.fn.api !== i }, show: function () { return m.is.focused() && !m.is.visible() && !m.is.empty() }, transition: function () { return g.transition && e.fn.transition !== i && S.transition("is supported") } }, is: { animating: function () { return R.hasClass(p.animating) }, hidden: function () { return R.hasClass(p.hidden) }, empty: function () { return "" === R.html() }, visible: function () { return R.filter(":visible").length > 0 }, focused: function () { return T.filter(":focus").length > 0 } }, trigger: { blur: function () { var e = n.createEvent("HTMLEvents"), t = T[0]; t && (m.verbose("Triggering native blur event"), e.initEvent("blur", !1, !1), t.dispatchEvent(e)) } }, get: { inputEvent: function () { var e = T[0]; return e !== i && e.oninput !== i ? "input" : e !== i && e.onpropertychange !== i ? "propertychange" : "keyup" }, value: function () { return T.val() }, results: function () { return S.data(v.results) }, result: function (t, n) { var o = ["title", "id"], a = !1; return t = t !== i ? t : m.get.value(), n = n !== i ? n : m.get.results(), "category" === g.type ? (m.debug("Finding result that matches", t), e.each(n, function (n, i) { return (!e.isArray(i.results) || !(a = m.search.object(t, i.results, o)[0])) && void 0 })) : (m.debug("Finding result in results object", t), a = m.search.object(t, n, o)[0]), a || !1 } }, set: { focus: function () { S.addClass(p.focus) }, loading: function () { S.addClass(p.loading) }, value: function (e) { m.verbose("Setting search input value", e), T.val(e) }, type: function (e) { e = e || g.type, "category" == g.type && S.addClass(g.type) }, buttonPressed: function () { A.addClass(p.pressed) } }, remove: { loading: function () { S.removeClass(p.loading) }, focus: function () { S.removeClass(p.focus) }, buttonPressed: function () { A.removeClass(p.pressed) } }, query: function () { var t = m.get.value(), n = m.read.cache(t); m.has.minimumCharacters() ? (n ? (m.debug("Reading result from cache", t), m.save.results(n.results), m.addResults(n.html), m.inject.id(n.results)) : (m.debug("Querying for", t), e.isPlainObject(g.source) || e.isArray(g.source) ? m.search.local(t) : m.can.useAPI() ? m.search.remote(t) : m.error(x.source)), g.onSearchQuery.call(E, t)) : m.hideResults() }, search: { local: function (e) { var t, n = m.search.object(e, g.content); m.set.loading(), m.save.results(n), m.debug("Returned local search results", n), t = m.generateResults({ results: n }), m.remove.loading(), m.addResults(t), m.inject.id(n), m.write.cache(e, { html: t, results: n }) }, remote: function (t) { var n = { onSuccess: function (e) { m.parse.response.call(E, e, t) }, onFailure: function () { m.displayMessage(x.serverError) }, urlData: { query: t } }; S.api("get request") || m.setup.api(), e.extend(!0, n, g.apiSettings), m.debug("Executing search", n), m.cancel.query(), S.api("setting", n).api("query") }, object: function (t, n, o) { var a = [], r = [], s = t.toString().replace(h.escape, "\\$&"), c = new RegExp(h.beginsWith + s, "i"), l = function (t, n) { var i = -1 == e.inArray(n, a), o = -1 == e.inArray(n, r); i && o && t.push(n) }; return n = n || g.source, o = o !== i ? o : g.searchFields, e.isArray(o) || (o = [o]), n === i || !1 === n ? (m.error(x.source), []) : (e.each(o, function (i, o) { e.each(n, function (e, n) { "string" == typeof n[o] && (-1 !== n[o].search(c) ? l(a, n) : g.searchFullText && m.fuzzySearch(t, n[o]) && l(r, n)) }) }), e.merge(a, r)) } }, fuzzySearch: function (e, t) { var n = t.length, i = e.length; if ("string" != typeof e) return !1; if (e = e.toLowerCase(), t = t.toLowerCase(), i > n) return !1; if (i === n) return e === t; e: for (var o = 0, a = 0; i > o; o++) { for (var r = e.charCodeAt(o); n > a;)if (t.charCodeAt(a++) === r) continue e; return !1 } return !0 }, parse: { response: function (e, t) { var n = m.generateResults(e); m.verbose("Parsing server response", e), e !== i && t !== i && e[b.results] !== i && (m.addResults(n), m.inject.id(e[b.results]), m.write.cache(t, { html: n, results: e[b.results] }), m.save.results(e[b.results])) } }, cancel: { query: function () { m.can.useAPI() && S.api("abort") } }, has: { minimumCharacters: function () { return m.get.value().length >= g.minCharacters } }, clear: { cache: function (e) { var t = S.data(v.cache); e ? e && t && t[e] && (m.debug("Removing value from cache", e), delete t[e], S.data(v.cache, t)) : (m.debug("Clearing cache", e), S.removeData(v.cache)) } }, read: { cache: function (e) { var t = S.data(v.cache); return !!g.cache && (m.verbose("Checking cache for generated html for query", e), "object" == typeof t && t[e] !== i && t[e]) } }, create: { id: function (e, t) { var n, o = e + 1; return t !== i ? (n = String.fromCharCode(97 + t) + o, m.verbose("Creating category result id", n)) : (n = o, m.verbose("Creating result id", n)), n }, results: function () { 0 === R.length && (R = e("<div />").addClass(p.results).appendTo(S)) } }, inject: { result: function (e, t, n) { m.verbose("Injecting result into results"); var o = n !== i ? R.children().eq(n).children(y.result).eq(t) : R.children(y.result).eq(t); m.verbose("Injecting results metadata", o), o.data(v.result, e) }, id: function (t) { m.debug("Injecting unique ids into results"); var n = 0, o = 0; return "category" === g.type ? e.each(t, function (t, a) { o = 0, e.each(a.results, function (e, t) { var r = a.results[e]; r.id === i && (r.id = m.create.id(o, n)), m.inject.result(r, o, n), o++ }), n++ }) : e.each(t, function (e, n) { var a = t[e]; a.id === i && (a.id = m.create.id(o)), m.inject.result(a, o), o++ }), t } }, save: { results: function (e) { m.verbose("Saving current search results to metadata", e), S.data(v.results, e) } }, write: { cache: function (e, t) { var n = S.data(v.cache) !== i ? S.data(v.cache) : {}; g.cache && (m.verbose("Writing generated html to cache", e, t), n[e] = t, S.data(v.cache, n)) } }, addResults: function (t) { return e.isFunction(g.onResultsAdd) && !1 === g.onResultsAdd.call(R, t) ? (m.debug("onResultsAdd callback cancelled default action"), !1) : (R.html(t), void (m.can.show() && m.showResults())) }, showResults: function () { m.is.visible() || (m.can.transition() ? (m.debug("Showing results with css animations"), R.transition({ animation: g.transition + " in", debug: g.debug, verbose: g.verbose, duration: g.duration, queue: !0 })) : (m.debug("Showing results with javascript"), R.stop().fadeIn(g.duration, g.easing)), g.onResultsOpen.call(R)) }, hideResults: function () { m.is.visible() && (m.can.transition() ? (m.debug("Hiding results with css animations"), R.transition({ animation: g.transition + " out", debug: g.debug, verbose: g.verbose, duration: g.duration, queue: !0 })) : (m.debug("Hiding results with javascript"), R.stop().fadeOut(g.duration, g.easing)), g.onResultsClose.call(R)) }, generateResults: function (t) { m.debug("Generating html from response", t); var n = g.templates[g.type], i = e.isPlainObject(t[b.results]) && !e.isEmptyObject(t[b.results]), o = e.isArray(t[b.results]) && t[b.results].length > 0, a = ""; return i || o ? (g.maxResults > 0 && (i ? "standard" == g.type && m.error(x.maxResults) : t[b.results] = t[b.results].slice(0, g.maxResults)), e.isFunction(n) ? a = n(t, b) : m.error(x.noTemplate, !1)) : a = m.displayMessage(x.noResults, "empty"), g.onResults.call(E, t), a }, displayMessage: function (e, t) { return t = t || "standard", m.debug("Displaying message", e, t), m.addResults(g.templates.message(e, t)), g.templates.message(e, t) }, setting: function (t, n) { if (e.isPlainObject(t)) e.extend(!0, g, t); else { if (n === i) return g[t]; g[t] = n } }, internal: function (t, n) { if (e.isPlainObject(t)) e.extend(!0, m, t); else { if (n === i) return m[t]; m[t] = n } }, debug: function () { g.debug && (g.performance ? m.performance.log(arguments) : (m.debug = Function.prototype.bind.call(console.info, console, g.name + ":"), m.debug.apply(console, arguments))) }, verbose: function () { g.verbose && g.debug && (g.performance ? m.performance.log(arguments) : (m.verbose = Function.prototype.bind.call(console.info, console, g.name + ":"), m.verbose.apply(console, arguments))) }, error: function () { m.error = Function.prototype.bind.call(console.error, console, g.name + ":"), m.error.apply(console, arguments) }, performance: { log: function (e) { var t, n; g.performance && (n = (t = (new Date).getTime()) - (c || t), c = t, l.push({ Name: e[0], Arguments: [].slice.call(e, 1) || "", Element: E, "Execution Time": n })), clearTimeout(m.performance.timer), m.performance.timer = setTimeout(m.performance.display, 500) }, display: function () { var t = g.name + ":", n = 0; c = !1, clearTimeout(m.performance.timer), e.each(l, function (e, t) { n += t["Execution Time"] }), t += " " + n + "ms", s && (t += " '" + s + "'"), r.length > 1 && (t += " (" + r.length + ")"), (console.group !== i || console.table !== i) && l.length > 0 && (console.groupCollapsed(t), console.table ? console.table(l) : e.each(l, function (e, t) { console.log(t.Name + ": " + t["Execution Time"] + "ms") }), console.groupEnd()), l = [] } }, invoke: function (t, n, o) { var r, s, c, l = P; return n = n || f, o = E || o, "string" == typeof t && l !== i && (t = t.split(/[\. ]/), r = t.length - 1, e.each(t, function (n, o) { var a = n != r ? o + t[n + 1].charAt(0).toUpperCase() + t[n + 1].slice(1) : t; if (e.isPlainObject(l[a]) && n != r) l = l[a]; else { if (l[a] !== i) return s = l[a], !1; if (!e.isPlainObject(l[o]) || n == r) return l[o] !== i && (s = l[o], !1); l = l[o] } })), e.isFunction(s) ? c = s.apply(o, n) : s !== i && (c = s), e.isArray(a) ? a.push(c) : a !== i ? a = [a, c] : c !== i && (a = c), s } }, d ? (P === i && m.initialize(), m.invoke(u)) : (P !== i && P.invoke("destroy"), m.initialize()) }), a !== i ? a : this }, e.fn.search.settings = { name: "Search", namespace: "search", debug: !1, verbose: !1, performance: !0, type: "standard", minCharacters: 1, apiSettings: !1, source: !1, searchFields: ["title", "description"], displayField: "", searchFullText: !0, automatic: !0, hideDelay: 0, searchDelay: 200, maxResults: 7, cache: !0, transition: "scale", duration: 200, easing: "easeOutExpo", onSelect: !1, onResultsAdd: !1, onSearchQuery: function (e) { }, onResults: function (e) { }, onResultsOpen: function () { }, onResultsClose: function () { }, className: { animating: "animating", active: "active", empty: "empty", focus: "focus", hidden: "hidden", loading: "loading", results: "results", pressed: "down" }, error: { source: "Cannot search. No source used, and Semantic API module was not included", noResults: "Your search returned no results", logging: "Error in debug logging, exiting.", noEndpoint: "No search endpoint was specified", noTemplate: "A valid template name was not specified.", serverError: "There was an issue querying the server.", maxResults: "Results must be an array to use maxResults setting", method: "The method you called is not defined." }, metadata: { cache: "cache", results: "results", result: "result" }, regExp: { escape: /[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, beginsWith: "(?:s|^)" }, fields: { categories: "results", categoryName: "name", categoryResults: "results", description: "description", image: "image", price: "price", results: "results", title: "title", url: "url", action: "action", actionText: "text", actionURL: "url" }, selector: { prompt: ".prompt", searchButton: ".search.button", results: ".results", category: ".category", result: ".result", title: ".title, .name" }, templates: { escape: function (e) { var t = { "&": "&amp;", "<": "&lt;", ">": "&gt;", '"': "&quot;", "'": "&#x27;", "`": "&#x60;" }; return /[&<>"'`]/.test(e) ? e.replace(/[&<>"'`]/g, function (e) { return t[e] }) : e }, message: function (e, t) { var n = ""; return e !== i && t !== i && (n += '<div class="message ' + t + '">', n += "empty" == t ? '<div class="header">No Results</div class="header"><div class="description">' + e + '</div class="description">' : ' <div class="description">' + e + "</div>", n += "</div>"), n }, category: function (t, n) { var o = ""; return e.fn.search.settings.templates.escape, t[n.categoryResults] !== i && (e.each(t[n.categoryResults], function (t, a) { a[n.results] !== i && a.results.length > 0 && (o += '<div class="category">', a[n.categoryName] !== i && (o += '<div class="name">' + a[n.categoryName] + "</div>"), e.each(a.results, function (e, t) { o += t[n.url] ? '<a class="result" href="' + t[n.url] + '">' : '<a class="result">', t[n.image] !== i && (o += '<div class="image"> <img src="' + t[n.image] + '"></div>'), o += '<div class="content">', t[n.price] !== i && (o += '<div class="price">' + t[n.price] + "</div>"), t[n.title] !== i && (o += '<div class="title">' + t[n.title] + "</div>"), t[n.description] !== i && (o += '<div class="description">' + t[n.description] + "</div>"), o += "</div>", o += "</a>" }), o += "</div>") }), t[n.action] && (o += '<a href="' + t[n.action][n.actionURL] + '" class="action">' + t[n.action][n.actionText] + "</a>"), o) }, standard: function (t, n) { var o = ""; return t[n.results] !== i && (e.each(t[n.results], function (e, t) { o += t[n.url] ? '<a class="result" href="' + t[n.url] + '">' : '<a class="result">', t[n.image] !== i && (o += '<div class="image"> <img src="' + t[n.image] + '"></div>'), o += '<div class="content">', t[n.price] !== i && (o += '<div class="price">' + t[n.price] + "</div>"), t[n.title] !== i && (o += '<div class="title">' + t[n.title] + "</div>"), t[n.description] !== i && (o += '<div class="description">' + t[n.description] + "</div>"), o += "</div>", o += "</a>" }), t[n.action] && (o += '<a href="' + t[n.action][n.actionURL] + '" class="action">' + t[n.action][n.actionText] + "</a>"), o) } } } }(jQuery, window, document), function (e, t, n, i) { "use strict"; e.fn.shape = function (o) { var a, r = e(this), s = (e("body"), (new Date).getTime()), c = [], l = arguments[0], u = "string" == typeof l, d = [].slice.call(arguments, 1), f = t.requestAnimationFrame || t.mozRequestAnimationFrame || t.webkitRequestAnimationFrame || t.msRequestAnimationFrame || function (e) { setTimeout(e, 0) }; return r.each(function () { var t, m, g, p = r.selector || "", v = e.isPlainObject(o) ? e.extend(!0, {}, e.fn.shape.settings, o) : e.extend({}, e.fn.shape.settings), h = v.namespace, b = v.selector, y = v.error, x = v.className, C = "." + h, w = "module-" + h, k = e(this), S = k.find(b.sides), T = k.find(b.side), A = !1, R = this, E = k.data(w); g = { initialize: function () { g.verbose("Initializing module for", R), g.set.defaultSide(), g.instantiate() }, instantiate: function () { g.verbose("Storing instance of module", g), E = g, k.data(w, E) }, destroy: function () { g.verbose("Destroying previous module for", R), k.removeData(w).off(C) }, refresh: function () { g.verbose("Refreshing selector cache for", R), k = e(R), S = e(this).find(b.shape), T = e(this).find(b.side) }, repaint: function () { g.verbose("Forcing repaint event"), (S[0] || n.createElement("div")).offsetWidth }, animate: function (e, n) { g.verbose("Animating box with properties", e), n = n || function (e) { g.verbose("Executing animation callback"), e !== i && e.stopPropagation(), g.reset(), g.set.active() }, v.beforeChange.call(m[0]), g.get.transitionEvent() ? (g.verbose("Starting CSS animation"), k.addClass(x.animating), S.css(e).one(g.get.transitionEvent(), n), g.set.duration(v.duration), f(function () { k.addClass(x.animating), t.addClass(x.hidden) })) : n() }, queue: function (e) { g.debug("Queueing animation of", e), S.one(g.get.transitionEvent(), function () { g.debug("Executing queued animation"), setTimeout(function () { k.shape(e) }, 0) }) }, reset: function () { g.verbose("Animating states reset"), k.removeClass(x.animating).attr("style", "").removeAttr("style"), S.attr("style", "").removeAttr("style"), T.attr("style", "").removeAttr("style").removeClass(x.hidden), m.removeClass(x.animating).attr("style", "").removeAttr("style") }, is: { complete: function () { return T.filter("." + x.active)[0] == m[0] }, animating: function () { return k.hasClass(x.animating) } }, set: { defaultSide: function () { t = k.find("." + v.className.active), m = t.next(b.side).length > 0 ? t.next(b.side) : k.find(b.side).first(), A = !1, g.verbose("Active side set to", t), g.verbose("Next side set to", m) }, duration: function (e) { e = "number" == typeof (e = e || v.duration) ? e + "ms" : e, g.verbose("Setting animation duration", e), (v.duration || 0 === v.duration) && S.add(T).css({ "-webkit-transition-duration": e, "-moz-transition-duration": e, "-ms-transition-duration": e, "-o-transition-duration": e, "transition-duration": e }) }, currentStageSize: function () { var e = k.find("." + v.className.active), t = e.outerWidth(!0), n = e.outerHeight(!0); k.css({ width: t, height: n }) }, stageSize: function () { var e, t = k.clone().addClass(x.loading), n = t.find("." + v.className.active), i = A ? t.find(b.side).eq(A) : n.next(b.side).length > 0 ? n.next(b.side) : t.find(b.side).first(); g.set.currentStageSize(), n.removeClass(x.active), i.addClass(x.active), t.insertAfter(k), e = { width: i.outerWidth(!0), height: i.outerHeight(!0) }, t.remove(), k.css(e), g.verbose("Resizing stage to fit new content", e) }, nextSide: function (e) { A = e, m = T.filter(e), A = T.index(m), 0 === m.length && (g.set.defaultSide(), g.error(y.side)), g.verbose("Next side manually set to", m) }, active: function () { g.verbose("Setting new side to active", m), T.removeClass(x.active), m.addClass(x.active), v.onChange.call(m[0]), g.set.defaultSide() } }, flip: { up: function () { return !g.is.complete() || g.is.animating() || v.allowRepeats ? void (g.is.animating() ? g.queue("flip up") : (g.debug("Flipping up", m), g.set.stageSize(), g.stage.above(), g.animate(g.get.transform.up()))) : void g.debug("Side already visible", m) }, down: function () { return !g.is.complete() || g.is.animating() || v.allowRepeats ? void (g.is.animating() ? g.queue("flip down") : (g.debug("Flipping down", m), g.set.stageSize(), g.stage.below(), g.animate(g.get.transform.down()))) : void g.debug("Side already visible", m) }, left: function () { return !g.is.complete() || g.is.animating() || v.allowRepeats ? void (g.is.animating() ? g.queue("flip left") : (g.debug("Flipping left", m), g.set.stageSize(), g.stage.left(), g.animate(g.get.transform.left()))) : void g.debug("Side already visible", m) }, right: function () { return !g.is.complete() || g.is.animating() || v.allowRepeats ? void (g.is.animating() ? g.queue("flip right") : (g.debug("Flipping right", m), g.set.stageSize(), g.stage.right(), g.animate(g.get.transform.right()))) : void g.debug("Side already visible", m) }, over: function () { return !g.is.complete() || g.is.animating() || v.allowRepeats ? void (g.is.animating() ? g.queue("flip over") : (g.debug("Flipping over", m), g.set.stageSize(), g.stage.behind(), g.animate(g.get.transform.over()))) : void g.debug("Side already visible", m) }, back: function () { return !g.is.complete() || g.is.animating() || v.allowRepeats ? void (g.is.animating() ? g.queue("flip back") : (g.debug("Flipping back", m), g.set.stageSize(), g.stage.behind(), g.animate(g.get.transform.back()))) : void g.debug("Side already visible", m) } }, get: { transform: { up: function () { return { transform: "translateY(" + -(t.outerHeight(!0) - m.outerHeight(!0)) / 2 + "px) translateZ(" + -t.outerHeight(!0) / 2 + "px) rotateX(-90deg)" } }, down: function () { return { transform: "translateY(" + -(t.outerHeight(!0) - m.outerHeight(!0)) / 2 + "px) translateZ(" + -t.outerHeight(!0) / 2 + "px) rotateX(90deg)" } }, left: function () { return { transform: "translateX(" + -(t.outerWidth(!0) - m.outerWidth(!0)) / 2 + "px) translateZ(" + -t.outerWidth(!0) / 2 + "px) rotateY(90deg)" } }, right: function () { return { transform: "translateX(" + -(t.outerWidth(!0) - m.outerWidth(!0)) / 2 + "px) translateZ(" + -t.outerWidth(!0) / 2 + "px) rotateY(-90deg)" } }, over: function () { return { transform: "translateX(" + -(t.outerWidth(!0) - m.outerWidth(!0)) / 2 + "px) rotateY(180deg)" } }, back: function () { return { transform: "translateX(" + -(t.outerWidth(!0) - m.outerWidth(!0)) / 2 + "px) rotateY(-180deg)" } } }, transitionEvent: function () { var e, t = n.createElement("element"), o = { transition: "transitionend", OTransition: "oTransitionEnd", MozTransition: "transitionend", WebkitTransition: "webkitTransitionEnd" }; for (e in o) if (t.style[e] !== i) return o[e] }, nextSide: function () { return t.next(b.side).length > 0 ? t.next(b.side) : k.find(b.side).first() } }, stage: { above: function () { var e = { origin: (t.outerHeight(!0) - m.outerHeight(!0)) / 2, depth: { active: m.outerHeight(!0) / 2, next: t.outerHeight(!0) / 2 } }; g.verbose("Setting the initial animation position as above", m, e), S.css({ transform: "translateZ(-" + e.depth.active + "px)" }), t.css({ transform: "rotateY(0deg) translateZ(" + e.depth.active + "px)" }), m.addClass(x.animating).css({ top: e.origin + "px", transform: "rotateX(90deg) translateZ(" + e.depth.next + "px)" }) }, below: function () { var e = { origin: (t.outerHeight(!0) - m.outerHeight(!0)) / 2, depth: { active: m.outerHeight(!0) / 2, next: t.outerHeight(!0) / 2 } }; g.verbose("Setting the initial animation position as below", m, e), S.css({ transform: "translateZ(-" + e.depth.active + "px)" }), t.css({ transform: "rotateY(0deg) translateZ(" + e.depth.active + "px)" }), m.addClass(x.animating).css({ top: e.origin + "px", transform: "rotateX(-90deg) translateZ(" + e.depth.next + "px)" }) }, left: function () { var e = t.outerWidth(!0), n = m.outerWidth(!0), i = { origin: (e - n) / 2, depth: { active: n / 2, next: e / 2 } }; g.verbose("Setting the initial animation position as left", m, i), S.css({ transform: "translateZ(-" + i.depth.active + "px)" }), t.css({ transform: "rotateY(0deg) translateZ(" + i.depth.active + "px)" }), m.addClass(x.animating).css({ left: i.origin + "px", transform: "rotateY(-90deg) translateZ(" + i.depth.next + "px)" }) }, right: function () { var e = t.outerWidth(!0), n = m.outerWidth(!0), i = { origin: (e - n) / 2, depth: { active: n / 2, next: e / 2 } }; g.verbose("Setting the initial animation position as left", m, i), S.css({ transform: "translateZ(-" + i.depth.active + "px)" }), t.css({ transform: "rotateY(0deg) translateZ(" + i.depth.active + "px)" }), m.addClass(x.animating).css({ left: i.origin + "px", transform: "rotateY(90deg) translateZ(" + i.depth.next + "px)" }) }, behind: function () { var e = t.outerWidth(!0), n = m.outerWidth(!0), i = { origin: (e - n) / 2, depth: { active: n / 2, next: e / 2 } }; g.verbose("Setting the initial animation position as behind", m, i), t.css({ transform: "rotateY(0deg)" }), m.addClass(x.animating).css({ left: i.origin + "px", transform: "rotateY(-180deg)" }) } }, setting: function (t, n) { if (g.debug("Changing setting", t, n), e.isPlainObject(t)) e.extend(!0, v, t); else { if (n === i) return v[t]; v[t] = n } }, internal: function (t, n) { if (e.isPlainObject(t)) e.extend(!0, g, t); else { if (n === i) return g[t]; g[t] = n } }, debug: function () { v.debug && (v.performance ? g.performance.log(arguments) : (g.debug = Function.prototype.bind.call(console.info, console, v.name + ":"), g.debug.apply(console, arguments))) }, verbose: function () { v.verbose && v.debug && (v.performance ? g.performance.log(arguments) : (g.verbose = Function.prototype.bind.call(console.info, console, v.name + ":"), g.verbose.apply(console, arguments))) }, error: function () { g.error = Function.prototype.bind.call(console.error, console, v.name + ":"), g.error.apply(console, arguments) }, performance: { log: function (e) { var t, n; v.performance && (n = (t = (new Date).getTime()) - (s || t), s = t, c.push({ Name: e[0], Arguments: [].slice.call(e, 1) || "", Element: R, "Execution Time": n })), clearTimeout(g.performance.timer), g.performance.timer = setTimeout(g.performance.display, 500) }, display: function () { var t = v.name + ":", n = 0; s = !1, clearTimeout(g.performance.timer), e.each(c, function (e, t) { n += t["Execution Time"] }), t += " " + n + "ms", p && (t += " '" + p + "'"), r.length > 1 && (t += " (" + r.length + ")"), (console.group !== i || console.table !== i) && c.length > 0 && (console.groupCollapsed(t), console.table ? console.table(c) : e.each(c, function (e, t) { console.log(t.Name + ": " + t["Execution Time"] + "ms") }), console.groupEnd()), c = [] } }, invoke: function (t, n, o) { var r, s, c, l = E; return n = n || d, o = R || o, "string" == typeof t && l !== i && (t = t.split(/[\. ]/), r = t.length - 1, e.each(t, function (n, o) { var a = n != r ? o + t[n + 1].charAt(0).toUpperCase() + t[n + 1].slice(1) : t; if (e.isPlainObject(l[a]) && n != r) l = l[a]; else { if (l[a] !== i) return s = l[a], !1; if (!e.isPlainObject(l[o]) || n == r) return l[o] !== i && (s = l[o], !1); l = l[o] } })), e.isFunction(s) ? c = s.apply(o, n) : s !== i && (c = s), e.isArray(a) ? a.push(c) : a !== i ? a = [a, c] : c !== i && (a = c), s } }, u ? (E === i && g.initialize(), g.invoke(l)) : (E !== i && E.invoke("destroy"), g.initialize()) }), a !== i ? a : this }, e.fn.shape.settings = { name: "Shape", debug: !1, verbose: !1, performance: !0, namespace: "shape", beforeChange: function () { }, onChange: function () { }, allowRepeats: !1, duration: !1, error: { side: "You tried to switch to a side that does not exist.", method: "The method you called is not defined" }, className: { animating: "animating", hidden: "hidden", loading: "loading", active: "active" }, selector: { sides: ".sides", side: ".side" } } }(jQuery, window, document), function (e, t, n, i) { "use strict"; e.fn.sidebar = function (o) { var a, r = e(this), s = e(t), c = e(n), l = e("html"), u = e("head"), d = r.selector || "", f = (new Date).getTime(), m = [], g = arguments[0], p = "string" == typeof g, v = [].slice.call(arguments, 1), h = t.requestAnimationFrame || t.mozRequestAnimationFrame || t.webkitRequestAnimationFrame || t.msRequestAnimationFrame || function (e) { setTimeout(e, 0) }; return r.each(function () { var r, b, y, x, C, w, k = e.isPlainObject(o) ? e.extend(!0, {}, e.fn.sidebar.settings, o) : e.extend({}, e.fn.sidebar.settings), S = k.selector, T = k.className, A = k.namespace, R = k.regExp, E = k.error, P = "." + A, F = "module-" + A, D = e(this), O = e(k.context), q = D.children(S.sidebar), j = (O.children(S.fixed), O.children(S.pusher)), z = this, I = D.data(F); w = { initialize: function () { w.debug("Initializing sidebar", o), w.create.id(), C = w.get.transitionEvent(), w.is.ios() && w.set.ios(), k.delaySetup ? h(w.setup.layout) : w.setup.layout(), h(function () { w.setup.cache() }), w.instantiate() }, instantiate: function () { w.verbose("Storing instance of module", w), I = w, D.data(F, w) }, create: { id: function () { y = (Math.random().toString(16) + "000000000").substr(2, 8), b = "." + y, w.verbose("Creating unique id for element", y) } }, destroy: function () { w.verbose("Destroying previous module for", D), D.off(P).removeData(F), w.is.ios() && w.remove.ios(), O.off(b), s.off(b), c.off(b) }, event: { clickaway: function (e) { var t = j.find(e.target).length > 0 || j.is(e.target), n = O.is(e.target); t && (w.verbose("User clicked on dimmed page"), w.hide()), n && (w.verbose("User clicked on dimmable context (scaled out page)"), w.hide()) }, touch: function (e) { }, containScroll: function (e) { z.scrollTop <= 0 && (z.scrollTop = 1), z.scrollTop + z.offsetHeight >= z.scrollHeight && (z.scrollTop = z.scrollHeight - z.offsetHeight - 1) }, scroll: function (t) { 0 === e(t.target).closest(S.sidebar).length && t.preventDefault() } }, bind: { clickaway: function () { w.verbose("Adding clickaway events to context", O), k.closable && O.on("click" + b, w.event.clickaway).on("touchend" + b, w.event.clickaway) }, scrollLock: function () { k.scrollLock && (w.debug("Disabling page scroll"), s.on("DOMMouseScroll" + b, w.event.scroll)), w.verbose("Adding events to contain sidebar scroll"), c.on("touchmove" + b, w.event.touch), D.on("scroll" + P, w.event.containScroll) } }, unbind: { clickaway: function () { w.verbose("Removing clickaway events from context", O), O.off(b) }, scrollLock: function () { w.verbose("Removing scroll lock from page"), c.off(b), s.off(b), D.off("scroll" + P) } }, add: { inlineCSS: function () { var t, n = w.cache.width || D.outerWidth(), i = w.cache.height || D.outerHeight(), o = w.is.rtl(), a = w.get.direction(), s = { left: n, right: -n, top: i, bottom: -i }; o && (w.verbose("RTL detected, flipping widths"), s.left = -n, s.right = n), t = "<style>", "left" === a || "right" === a ? (w.debug("Adding CSS rules for animation distance", n), t += " .ui.visible." + a + ".sidebar ~ .fixed, .ui.visible." + a + ".sidebar ~ .pusher {   -webkit-transform: translate3d(" + s[a] + "px, 0, 0);           transform: translate3d(" + s[a] + "px, 0, 0); }") : ("top" === a || "bottom" == a) && (t += " .ui.visible." + a + ".sidebar ~ .fixed, .ui.visible." + a + ".sidebar ~ .pusher {   -webkit-transform: translate3d(0, " + s[a] + "px, 0);           transform: translate3d(0, " + s[a] + "px, 0); }"), w.is.ie() && ("left" === a || "right" === a ? (w.debug("Adding CSS rules for animation distance", n), t += " body.pushable > .ui.visible." + a + ".sidebar ~ .pusher:after {   -webkit-transform: translate3d(" + s[a] + "px, 0, 0);           transform: translate3d(" + s[a] + "px, 0, 0); }") : ("top" === a || "bottom" == a) && (t += " body.pushable > .ui.visible." + a + ".sidebar ~ .pusher:after {   -webkit-transform: translate3d(0, " + s[a] + "px, 0);           transform: translate3d(0, " + s[a] + "px, 0); }"), t += " body.pushable > .ui.visible.left.sidebar ~ .ui.visible.right.sidebar ~ .pusher:after, body.pushable > .ui.visible.right.sidebar ~ .ui.visible.left.sidebar ~ .pusher:after {   -webkit-transform: translate3d(0px, 0, 0);           transform: translate3d(0px, 0, 0); }"), r = e(t += "</style>").appendTo(u), w.debug("Adding sizing css to head", r) } }, refresh: function () { w.verbose("Refreshing selector cache"), O = e(k.context), q = O.children(S.sidebar), j = O.children(S.pusher), O.children(S.fixed), w.clear.cache() }, refreshSidebars: function () { w.verbose("Refreshing other sidebars"), q = O.children(S.sidebar) }, repaint: function () { w.verbose("Forcing repaint event"), z.style.display = "none", z.offsetHeight, z.scrollTop = z.scrollTop, z.style.display = "" }, setup: { cache: function () { w.cache = { width: D.outerWidth(), height: D.outerHeight(), rtl: "rtl" == D.css("direction") } }, layout: function () { 0 === O.children(S.pusher).length && (w.debug("Adding wrapper element for sidebar"), w.error(E.pusher), j = e('<div class="pusher" />'), O.children().not(S.omitted).not(q).wrapAll(j), w.refresh()), (0 === D.nextAll(S.pusher).length || D.nextAll(S.pusher)[0] !== j[0]) && (w.debug("Moved sidebar to correct parent element"), w.error(E.movedSidebar, z), D.detach().prependTo(O), w.refresh()), w.clear.cache(), w.set.pushable(), w.set.direction() } }, attachEvents: function (t, n) { var i = e(t); n = e.isFunction(w[n]) ? w[n] : w.toggle, i.length > 0 ? (w.debug("Attaching sidebar events to element", t, n), i.on("click" + P, n)) : w.error(E.notFound, t) }, show: function (t) { if (t = e.isFunction(t) ? t : function () { }, w.is.hidden()) { if (w.refreshSidebars(), k.overlay && (w.error(E.overlay), k.transition = "overlay"), w.refresh(), w.othersActive()) if (w.debug("Other sidebars currently visible"), k.exclusive) { if ("overlay" != k.transition) return void w.hideOthers(w.show); w.hideOthers() } else k.transition = "overlay"; w.pushPage(function () { t.call(z), k.onShow.call(z) }), k.onChange.call(z), k.onVisible.call(z) } else w.debug("Sidebar is already visible") }, hide: function (t) { t = e.isFunction(t) ? t : function () { }, (w.is.visible() || w.is.animating()) && (w.debug("Hiding sidebar", t), w.refreshSidebars(), w.pullPage(function () { t.call(z), k.onHidden.call(z) }), k.onChange.call(z), k.onHide.call(z)) }, othersAnimating: function () { return q.not(D).filter("." + T.animating).length > 0 }, othersVisible: function () { return q.not(D).filter("." + T.visible).length > 0 }, othersActive: function () { return w.othersVisible() || w.othersAnimating() }, hideOthers: function (e) { var t = q.not(D).filter("." + T.visible), n = t.length, i = 0; e = e || function () { }, t.sidebar("hide", function () { ++i == n && e() }) }, toggle: function () { w.verbose("Determining toggled direction"), w.is.hidden() ? w.show() : w.hide() }, pushPage: function (t) { var n, i, o, a = w.get.transition(), r = "overlay" === a || w.othersActive() ? D : j; t = e.isFunction(t) ? t : function () { }, "scale down" == k.transition && w.scrollToTop(), w.set.transition(a), w.repaint(), n = function () { w.bind.clickaway(), w.add.inlineCSS(), w.set.animating(), w.set.visible() }, i = function () { w.set.dimmed() }, o = function (e) { e.target == r[0] && (r.off(C + b, o), w.remove.animating(), w.bind.scrollLock(), t.call(z)) }, r.off(C + b), r.on(C + b, o), h(n), k.dimPage && !w.othersVisible() && h(i) }, pullPage: function (t) { var n, i, o = w.get.transition(), a = "overlay" == o || w.othersActive() ? D : j; t = e.isFunction(t) ? t : function () { }, w.verbose("Removing context push state", w.get.direction()), w.unbind.clickaway(), w.unbind.scrollLock(), n = function () { w.set.transition(o), w.set.animating(), w.remove.visible(), k.dimPage && !w.othersVisible() && j.removeClass(T.dimmed) }, i = function (e) { e.target == a[0] && (a.off(C + b, i), w.remove.animating(), w.remove.transition(), w.remove.inlineCSS(), ("scale down" == o || k.returnScroll && w.is.mobile()) && w.scrollBack(), t.call(z)) }, a.off(C + b), a.on(C + b, i), h(n) }, scrollToTop: function () { w.verbose("Scrolling to top of page to avoid animation issues"), x = e(t).scrollTop(), D.scrollTop(0), t.scrollTo(0, 0) }, scrollBack: function () { w.verbose("Scrolling back to original page position"), t.scrollTo(0, x) }, clear: { cache: function () { w.verbose("Clearing cached dimensions"), w.cache = {} } }, set: { ios: function () { l.addClass(T.ios) }, pushed: function () { O.addClass(T.pushed) }, pushable: function () { O.addClass(T.pushable) }, dimmed: function () { j.addClass(T.dimmed) }, active: function () { D.addClass(T.active) }, animating: function () { D.addClass(T.animating) }, transition: function (e) { e = e || w.get.transition(), D.addClass(e) }, direction: function (e) { e = e || w.get.direction(), D.addClass(T[e]) }, visible: function () { D.addClass(T.visible) }, overlay: function () { D.addClass(T.overlay) } }, remove: { inlineCSS: function () { w.debug("Removing inline css styles", r), r && r.length > 0 && r.remove() }, ios: function () { l.removeClass(T.ios) }, pushed: function () { O.removeClass(T.pushed) }, pushable: function () { O.removeClass(T.pushable) }, active: function () { D.removeClass(T.active) }, animating: function () { D.removeClass(T.animating) }, transition: function (e) { e = e || w.get.transition(), D.removeClass(e) }, direction: function (e) { e = e || w.get.direction(), D.removeClass(T[e]) }, visible: function () { D.removeClass(T.visible) }, overlay: function () { D.removeClass(T.overlay) } }, get: { direction: function () { return D.hasClass(T.top) ? T.top : D.hasClass(T.right) ? T.right : D.hasClass(T.bottom) ? T.bottom : T.left }, transition: function () { var e, t = w.get.direction(); return e = w.is.mobile() ? "auto" == k.mobileTransition ? k.defaultTransition.mobile[t] : k.mobileTransition : "auto" == k.transition ? k.defaultTransition.computer[t] : k.transition, w.verbose("Determined transition", e), e }, transitionEvent: function () { var e, t = n.createElement("element"), o = { transition: "transitionend", OTransition: "oTransitionEnd", MozTransition: "transitionend", WebkitTransition: "webkitTransitionEnd" }; for (e in o) if (t.style[e] !== i) return o[e] } }, is: { ie: function () { return !t.ActiveXObject && "ActiveXObject" in t || "ActiveXObject" in t }, ios: function () { var e = navigator.userAgent, t = e.match(R.ios), n = e.match(R.mobileChrome); return !(!t || n) && (w.verbose("Browser was found to be iOS", e), !0) }, mobile: function () { var e = navigator.userAgent; return e.match(R.mobile) ? (w.verbose("Browser was found to be mobile", e), !0) : (w.verbose("Browser is not mobile, using regular transition", e), !1) }, hidden: function () { return !w.is.visible() }, visible: function () { return D.hasClass(T.visible) }, open: function () { return w.is.visible() }, closed: function () { return w.is.hidden() }, vertical: function () { return D.hasClass(T.top) }, animating: function () { return O.hasClass(T.animating) }, rtl: function () { return w.cache.rtl === i && (w.cache.rtl = "rtl" == D.css("direction")), w.cache.rtl } }, setting: function (t, n) { if (w.debug("Changing setting", t, n), e.isPlainObject(t)) e.extend(!0, k, t); else { if (n === i) return k[t]; k[t] = n } }, internal: function (t, n) { if (e.isPlainObject(t)) e.extend(!0, w, t); else { if (n === i) return w[t]; w[t] = n } }, debug: function () { k.debug && (k.performance ? w.performance.log(arguments) : (w.debug = Function.prototype.bind.call(console.info, console, k.name + ":"), w.debug.apply(console, arguments))) }, verbose: function () { k.verbose && k.debug && (k.performance ? w.performance.log(arguments) : (w.verbose = Function.prototype.bind.call(console.info, console, k.name + ":"), w.verbose.apply(console, arguments))) }, error: function () { w.error = Function.prototype.bind.call(console.error, console, k.name + ":"), w.error.apply(console, arguments) }, performance: { log: function (e) { var t, n; k.performance && (n = (t = (new Date).getTime()) - (f || t), f = t, m.push({ Name: e[0], Arguments: [].slice.call(e, 1) || "", Element: z, "Execution Time": n })), clearTimeout(w.performance.timer), w.performance.timer = setTimeout(w.performance.display, 500) }, display: function () { var t = k.name + ":", n = 0; f = !1, clearTimeout(w.performance.timer), e.each(m, function (e, t) { n += t["Execution Time"] }), t += " " + n + "ms", d && (t += " '" + d + "'"), (console.group !== i || console.table !== i) && m.length > 0 && (console.groupCollapsed(t), console.table ? console.table(m) : e.each(m, function (e, t) { console.log(t.Name + ": " + t["Execution Time"] + "ms") }), console.groupEnd()), m = [] } }, invoke: function (t, n, o) { var r, s, c, l = I; return n = n || v, o = z || o, "string" == typeof t && l !== i && (t = t.split(/[\. ]/), r = t.length - 1, e.each(t, function (n, o) { var a = n != r ? o + t[n + 1].charAt(0).toUpperCase() + t[n + 1].slice(1) : t; if (e.isPlainObject(l[a]) && n != r) l = l[a]; else { if (l[a] !== i) return s = l[a], !1; if (!e.isPlainObject(l[o]) || n == r) return l[o] !== i ? (s = l[o], !1) : (w.error(E.method, t), !1); l = l[o] } })), e.isFunction(s) ? c = s.apply(o, n) : s !== i && (c = s), e.isArray(a) ? a.push(c) : a !== i ? a = [a, c] : c !== i && (a = c), s } }, p ? (I === i && w.initialize(), w.invoke(g)) : (I !== i && w.invoke("destroy"), w.initialize()) }), a !== i ? a : this }, e.fn.sidebar.settings = { name: "Sidebar", namespace: "sidebar", debug: !1, verbose: !1, performance: !0, transition: "auto", mobileTransition: "auto", defaultTransition: { computer: { left: "uncover", right: "uncover", top: "overlay", bottom: "overlay" }, mobile: { left: "uncover", right: "uncover", top: "overlay", bottom: "overlay" } }, context: "body", exclusive: !1, closable: !0, dimPage: !0, scrollLock: !1, returnScroll: !1, delaySetup: !1, duration: 500, onChange: function () { }, onShow: function () { }, onHide: function () { }, onHidden: function () { }, onVisible: function () { }, className: { active: "active", animating: "animating", dimmed: "dimmed", ios: "ios", pushable: "pushable", pushed: "pushed", right: "right", top: "top", left: "left", bottom: "bottom", visible: "visible" }, selector: { fixed: ".fixed", omitted: "script, link, style, .ui.modal, .ui.dimmer, .ui.nag, .ui.fixed", pusher: ".pusher", sidebar: ".ui.sidebar" }, regExp: { ios: /(iPad|iPhone|iPod)/g, mobileChrome: /(CriOS)/g, mobile: /Mobile|iP(hone|od|ad)|Android|BlackBerry|IEMobile|Kindle|NetFront|Silk-Accelerated|(hpw|web)OS|Fennec|Minimo|Opera M(obi|ini)|Blazer|Dolfin|Dolphin|Skyfire|Zune/g }, error: { method: "The method you called is not defined.", pusher: "Had to add pusher element. For optimal performance make sure body content is inside a pusher element", movedSidebar: "Had to move sidebar. For optimal performance make sure sidebar and pusher are direct children of your body tag", overlay: "The overlay setting is no longer supported, use animation: overlay", notFound: "There were no elements that matched the specified selector" } } }(jQuery, window, document), function (e, t, n, i) { "use strict"; e.fn.sticky = function (n) { var o, a = e(this), r = a.selector || "", s = (new Date).getTime(), c = [], l = arguments[0], u = "string" == typeof l, d = [].slice.call(arguments, 1); return a.each(function () { var a, f, m, g, p = e.isPlainObject(n) ? e.extend(!0, {}, e.fn.sticky.settings, n) : e.extend({}, e.fn.sticky.settings), v = p.className, h = p.namespace, b = p.error, y = "." + h, x = "module-" + h, C = e(this), w = e(t), k = e(p.scrollContext), S = (C.selector, C.data(x)), T = t.requestAnimationFrame || t.mozRequestAnimationFrame || t.webkitRequestAnimationFrame || t.msRequestAnimationFrame || function (e) { setTimeout(e, 0) }, A = this; g = { initialize: function () { g.determineContainer(), g.determineContext(), g.verbose("Initializing sticky", p, a), g.save.positions(), g.checkErrors(), g.bind.events(), p.observeChanges && g.observeChanges(), g.instantiate() }, instantiate: function () { g.verbose("Storing instance of module", g), S = g, C.data(x, g) }, destroy: function () { g.verbose("Destroying previous instance"), g.reset(), m && m.disconnect(), w.off("load" + y, g.event.load).off("resize" + y, g.event.resize), k.off("scrollchange" + y, g.event.scrollchange), C.removeData(x) }, observeChanges: function () { var e = f[0]; "MutationObserver" in t && ((m = new MutationObserver(function (e) { clearTimeout(g.timer), g.timer = setTimeout(function () { g.verbose("DOM tree modified, updating sticky menu", e), g.refresh() }, 100) })).observe(A, { childList: !0, subtree: !0 }), m.observe(e, { childList: !0, subtree: !0 }), g.debug("Setting up mutation observer", m)) }, determineContainer: function () { a = C.offsetParent() }, determineContext: function () { return 0 === (f = p.context ? e(p.context) : a).length ? void g.error(b.invalidContext, p.context, C) : void 0 }, checkErrors: function () { return g.is.hidden() && g.error(b.visible, C), g.cache.element.height > g.cache.context.height ? (g.reset(), void g.error(b.elementSize, C)) : void 0 }, bind: { events: function () { w.on("load" + y, g.event.load).on("resize" + y, g.event.resize), k.off("scroll" + y).on("scroll" + y, g.event.scroll).on("scrollchange" + y, g.event.scrollchange) } }, event: { load: function () { g.verbose("Page contents finished loading"), T(g.refresh) }, resize: function () { g.verbose("Window resized"), T(g.refresh) }, scroll: function () { T(function () { k.triggerHandler("scrollchange" + y, k.scrollTop()) }) }, scrollchange: function (e, t) { g.stick(t), p.onScroll.call(A) } }, refresh: function (e) { g.reset(), p.context || g.determineContext(), e && g.determineContainer(), g.save.positions(), g.stick(), p.onReposition.call(A) }, supports: { sticky: function () { var t = e("<div/>"); return t[0], t.addClass(v.supported), t.css("position").match("sticky") } }, save: { lastScroll: function (e) { g.lastScroll = e }, elementScroll: function (e) { g.elementScroll = e }, positions: function () { var e = { height: k.height() }, t = { margin: { top: parseInt(C.css("margin-top"), 10), bottom: parseInt(C.css("margin-bottom"), 10) }, offset: C.offset(), width: C.outerWidth(), height: C.outerHeight() }, n = { offset: f.offset(), height: f.outerHeight() }; a.outerHeight(), g.is.standardScroll() || (g.debug("Non-standard scroll. Removing scroll offset from element offset"), e.top = k.scrollTop(), e.left = k.scrollLeft(), t.offset.top += e.top, n.offset.top += e.top, t.offset.left += e.left, n.offset.left += e.left), g.cache = { fits: t.height < e.height, scrollContext: { height: e.height }, element: { margin: t.margin, top: t.offset.top - t.margin.top, left: t.offset.left, width: t.width, height: t.height, bottom: t.offset.top + t.height }, context: { top: n.offset.top, height: n.height, bottom: n.offset.top + n.height } }, g.set.containerSize(), g.set.size(), g.stick(), g.debug("Caching element positions", g.cache) } }, get: { direction: function (e) { var t = "down"; return e = e || k.scrollTop(), g.lastScroll !== i && (g.lastScroll < e ? t = "down" : g.lastScroll > e && (t = "up")), t }, scrollChange: function (e) { return e = e || k.scrollTop(), g.lastScroll ? e - g.lastScroll : 0 }, currentElementScroll: function () { return g.elementScroll ? g.elementScroll : g.is.top() ? Math.abs(parseInt(C.css("top"), 10)) || 0 : Math.abs(parseInt(C.css("bottom"), 10)) || 0 }, elementScroll: function (e) { e = e || k.scrollTop(); var t = g.cache.element, n = g.cache.scrollContext, i = g.get.scrollChange(e), o = t.height - n.height + p.offset, a = g.get.currentElementScroll(), r = a + i; return g.cache.fits || 0 > r ? 0 : r > o ? o : r } }, remove: { lastScroll: function () { delete g.lastScroll }, elementScroll: function (e) { delete g.elementScroll }, offset: function () { C.css("margin-top", "") } }, set: { offset: function () { g.verbose("Setting offset on element", p.offset), C.css("margin-top", p.offset) }, containerSize: function () { var e = a.get(0).tagName; "HTML" === e || "body" == e ? g.determineContainer() : Math.abs(a.outerHeight() - g.cache.context.height) > p.jitter && (g.debug("Context has padding, specifying exact height for container", g.cache.context.height), a.css({ height: g.cache.context.height })) }, minimumSize: function () { var e = g.cache.element; a.css("min-height", e.height) }, scroll: function (e) { g.debug("Setting scroll on element", e), g.elementScroll != e && (g.is.top() && C.css("bottom", "").css("top", -e), g.is.bottom() && C.css("top", "").css("bottom", e)) }, size: function () { 0 !== g.cache.element.height && 0 !== g.cache.element.width && (A.style.setProperty("width", g.cache.element.width + "px", "important"), A.style.setProperty("height", g.cache.element.height + "px", "important")) } }, is: { standardScroll: function () { return k[0] == t }, top: function () { return C.hasClass(v.top) }, bottom: function () { return C.hasClass(v.bottom) }, initialPosition: function () { return !g.is.fixed() && !g.is.bound() }, hidden: function () { return !C.is(":visible") }, bound: function () { return C.hasClass(v.bound) }, fixed: function () { return C.hasClass(v.fixed) } }, stick: function (e) { var t = e || k.scrollTop(), n = g.cache, i = n.fits, o = n.element, a = n.scrollContext, r = n.context, s = g.is.bottom() && p.pushing ? p.bottomOffset : p.offset, c = (e = { top: t + s, bottom: t + s + a.height }, g.get.direction(e.top), i ? 0 : g.get.elementScroll(e.top)), l = !i; 0 !== o.height && (g.is.initialPosition() ? e.top >= r.bottom ? (g.debug("Initial element position is bottom of container"), g.bindBottom()) : e.top > o.top && (o.height + e.top - c >= r.bottom ? (g.debug("Initial element position is bottom of container"), g.bindBottom()) : (g.debug("Initial element position is fixed"), g.fixTop())) : g.is.fixed() ? g.is.top() ? e.top <= o.top ? (g.debug("Fixed element reached top of container"), g.setInitialPosition()) : o.height + e.top - c >= r.bottom ? (g.debug("Fixed element reached bottom of container"), g.bindBottom()) : l && (g.set.scroll(c), g.save.lastScroll(e.top), g.save.elementScroll(c)) : g.is.bottom() && (e.bottom - o.height <= o.top ? (g.debug("Bottom fixed rail has reached top of container"), g.setInitialPosition()) : e.bottom >= r.bottom ? (g.debug("Bottom fixed rail has reached bottom of container"), g.bindBottom()) : l && (g.set.scroll(c), g.save.lastScroll(e.top), g.save.elementScroll(c))) : g.is.bottom() && (e.top <= o.top ? (g.debug("Jumped from bottom fixed to top fixed, most likely used home/end button"), g.setInitialPosition()) : p.pushing ? g.is.bound() && e.bottom <= r.bottom && (g.debug("Fixing bottom attached element to bottom of browser."), g.fixBottom()) : g.is.bound() && e.top <= r.bottom - o.height && (g.debug("Fixing bottom attached element to top of browser."), g.fixTop()))) }, bindTop: function () { g.debug("Binding element to top of parent container"), g.remove.offset(), C.css({ left: "", top: "", marginBottom: "" }).removeClass(v.fixed).removeClass(v.bottom).addClass(v.bound).addClass(v.top), p.onTop.call(A), p.onUnstick.call(A) }, bindBottom: function () { g.debug("Binding element to bottom of parent container"), g.remove.offset(), C.css({ left: "", top: "" }).removeClass(v.fixed).removeClass(v.top).addClass(v.bound).addClass(v.bottom), p.onBottom.call(A), p.onUnstick.call(A) }, setInitialPosition: function () { g.debug("Returning to initial position"), g.unfix(), g.unbind() }, fixTop: function () { g.debug("Fixing element to top of page"), g.set.minimumSize(), g.set.offset(), C.css({ left: g.cache.element.left, bottom: "", marginBottom: "" }).removeClass(v.bound).removeClass(v.bottom).addClass(v.fixed).addClass(v.top), p.onStick.call(A) }, fixBottom: function () { g.debug("Sticking element to bottom of page"), g.set.minimumSize(), g.set.offset(), C.css({ left: g.cache.element.left, bottom: "", marginBottom: "" }).removeClass(v.bound).removeClass(v.top).addClass(v.fixed).addClass(v.bottom), p.onStick.call(A) }, unbind: function () { g.is.bound() && (g.debug("Removing container bound position on element"), g.remove.offset(), C.removeClass(v.bound).removeClass(v.top).removeClass(v.bottom)) }, unfix: function () { g.is.fixed() && (g.debug("Removing fixed position on element"), g.remove.offset(), C.removeClass(v.fixed).removeClass(v.top).removeClass(v.bottom), p.onUnstick.call(A)) }, reset: function () { g.debug("Reseting elements position"), g.unbind(), g.unfix(), g.resetCSS(), g.remove.offset(), g.remove.lastScroll() }, resetCSS: function () { C.css({ width: "", height: "" }), a.css({ height: "" }) }, setting: function (t, n) { if (e.isPlainObject(t)) e.extend(!0, p, t); else { if (n === i) return p[t]; p[t] = n } }, internal: function (t, n) { if (e.isPlainObject(t)) e.extend(!0, g, t); else { if (n === i) return g[t]; g[t] = n } }, debug: function () { p.debug && (p.performance ? g.performance.log(arguments) : (g.debug = Function.prototype.bind.call(console.info, console, p.name + ":"), g.debug.apply(console, arguments))) }, verbose: function () { p.verbose && p.debug && (p.performance ? g.performance.log(arguments) : (g.verbose = Function.prototype.bind.call(console.info, console, p.name + ":"), g.verbose.apply(console, arguments))) }, error: function () { g.error = Function.prototype.bind.call(console.error, console, p.name + ":"), g.error.apply(console, arguments) }, performance: { log: function (e) { var t, n; p.performance && (n = (t = (new Date).getTime()) - (s || t), s = t, c.push({ Name: e[0], Arguments: [].slice.call(e, 1) || "", Element: A, "Execution Time": n })), clearTimeout(g.performance.timer), g.performance.timer = setTimeout(g.performance.display, 0) }, display: function () { var t = p.name + ":", n = 0; s = !1, clearTimeout(g.performance.timer), e.each(c, function (e, t) { n += t["Execution Time"] }), t += " " + n + "ms", r && (t += " '" + r + "'"), (console.group !== i || console.table !== i) && c.length > 0 && (console.groupCollapsed(t), console.table ? console.table(c) : e.each(c, function (e, t) { console.log(t.Name + ": " + t["Execution Time"] + "ms") }), console.groupEnd()), c = [] } }, invoke: function (t, n, a) { var r, s, c, l = S; return n = n || d, a = A || a, "string" == typeof t && l !== i && (t = t.split(/[\. ]/), r = t.length - 1, e.each(t, function (n, o) { var a = n != r ? o + t[n + 1].charAt(0).toUpperCase() + t[n + 1].slice(1) : t; if (e.isPlainObject(l[a]) && n != r) l = l[a]; else { if (l[a] !== i) return s = l[a], !1; if (!e.isPlainObject(l[o]) || n == r) return l[o] !== i && (s = l[o], !1); l = l[o] } })), e.isFunction(s) ? c = s.apply(a, n) : s !== i && (c = s), e.isArray(o) ? o.push(c) : o !== i ? o = [o, c] : c !== i && (o = c), s } }, u ? (S === i && g.initialize(), g.invoke(l)) : (S !== i && S.invoke("destroy"), g.initialize()) }), o !== i ? o : this }, e.fn.sticky.settings = { name: "Sticky", namespace: "sticky", debug: !1, verbose: !0, performance: !0, pushing: !1, context: !1, scrollContext: t, offset: 0, bottomOffset: 0, jitter: 5, observeChanges: !1, onReposition: function () { }, onScroll: function () { }, onStick: function () { }, onUnstick: function () { }, onTop: function () { }, onBottom: function () { }, error: { container: "Sticky element must be inside a relative container", visible: "Element is hidden, you must call refresh after element becomes visible", method: "The method you called is not defined.", invalidContext: "Context specified does not exist", elementSize: "Sticky element is larger than its container, cannot create sticky." }, className: { bound: "bound", fixed: "fixed", supported: "native", top: "top", bottom: "bottom" } } }(jQuery, window, document), function (e, t, n, i) { "use strict"; e.fn.tab = function (o) { var a, r = e(e.isFunction(this) ? t : this), s = r.selector || "", c = (new Date).getTime(), l = [], u = arguments[0], d = "string" == typeof u, f = [].slice.call(arguments, 1), m = !1; return r.each(function () { var g, p, v, h, b, y, x = e.isPlainObject(o) ? e.extend(!0, {}, e.fn.tab.settings, o) : e.extend({}, e.fn.tab.settings), C = x.className, w = x.metadata, k = x.selector, S = x.error, T = "." + x.namespace, A = "module-" + x.namespace, R = e(this), E = {}, P = !0, F = 0, D = this, O = R.data(A); b = { initialize: function () { b.debug("Initializing tab menu item", R), b.fix.callbacks(), b.determineTabs(), b.debug("Determining tabs", x.context, p), x.auto && b.set.auto(), b.bind.events(), x.history && !m && (b.initializeHistory(), m = !0), b.instantiate() }, instantiate: function () { b.verbose("Storing instance of module", b), O = b, R.data(A, b) }, destroy: function () { b.debug("Destroying tabs", R), R.removeData(A).off(T) }, bind: { events: function () { e.isWindow(D) || (b.debug("Attaching tab activation events to element", R), R.on("click" + T, b.event.click)) } }, determineTabs: function () { var t; "parent" === x.context ? (R.closest(k.ui).length > 0 ? (t = R.closest(k.ui), b.verbose("Using closest UI element as parent", t)) : t = R, g = t.parent(), b.verbose("Determined parent element for creating context", g)) : x.context ? (g = e(x.context), b.verbose("Using selector for tab context", x.context, g)) : g = e("body"), x.childrenOnly ? (p = g.children(k.tabs), b.debug("Searching tab context children for tabs", g, p)) : (p = g.find(k.tabs), b.debug("Searching tab context for tabs", g, p)) }, fix: { callbacks: function () { e.isPlainObject(o) && (o.onTabLoad || o.onTabInit) && (o.onTabLoad && (o.onLoad = o.onTabLoad, delete o.onTabLoad, b.error(S.legacyLoad, o.onLoad)), o.onTabInit && (o.onFirstLoad = o.onTabInit, delete o.onTabInit, b.error(S.legacyInit, o.onFirstLoad)), x = e.extend(!0, {}, e.fn.tab.settings, o)) } }, initializeHistory: function () { if (b.debug("Initializing page state"), e.address === i) return b.error(S.state), !1; if ("state" == x.historyType) { if (b.debug("Using HTML5 to manage state"), !1 === x.path) return b.error(S.path), !1; e.address.history(!0).state(x.path) } e.address.bind("change", b.event.history.change) }, event: { click: function (t) { var n = e(this).data(w.tab); n !== i ? (x.history ? (b.verbose("Updating page state", t), e.address.value(n)) : (b.verbose("Changing tab", t), b.changeTab(n)), t.preventDefault()) : b.debug("No tab specified") }, history: { change: function (t) { var n = t.pathNames.join("/") || b.get.initialPath(), o = x.templates.determineTitle(n) || !1; b.performance.display(), b.debug("History change event", n, t), y = t, n !== i && b.changeTab(n), o && e.address.title(o) } } }, refresh: function () { v && (b.debug("Refreshing tab", v), b.changeTab(v)) }, cache: { read: function (e) { return e !== i && E[e] }, add: function (e, t) { e = e || v, b.debug("Adding cached content for", e), E[e] = t }, remove: function (e) { e = e || v, b.debug("Removing cached content for", e), delete E[e] } }, set: { auto: function () { var t = "string" == typeof x.path ? x.path.replace(/\/$/, "") + "/{$tab}" : "/{$tab}"; b.verbose("Setting up automatic tab retrieval from server", t), e.isPlainObject(x.apiSettings) ? x.apiSettings.url = t : x.apiSettings = { url: t } }, loading: function (e) { var t = b.get.tabElement(e); t.hasClass(C.loading) || (b.verbose("Setting loading state for", t), t.addClass(C.loading).siblings(p).removeClass(C.active + " " + C.loading), t.length > 0 && x.onRequest.call(t[0], e)) }, state: function (t) { e.address.value(t) } }, changeTab: function (n) { var i = t.history && t.history.pushState && x.ignoreFirstLoad && P, o = x.auto || e.isPlainObject(x.apiSettings), a = o && !i ? b.utilities.pathToArray(n) : b.get.defaultPathArray(n); n = b.utilities.arrayToPath(a), e.each(a, function (t, r) { var s, c, l, u, d = a.slice(0, t + 1), f = b.utilities.arrayToPath(d), m = b.is.tab(f), p = t + 1 == a.length, k = b.get.tabElement(f); if (b.verbose("Looking for tab", r), m) { if (b.verbose("Tab was found", r), v = f, h = b.utilities.filterArray(a, d), p ? u = !0 : (c = a.slice(0, t + 2), l = b.utilities.arrayToPath(c), (u = !b.is.tab(l)) && b.verbose("Tab parameters found", c)), u && o) return i ? (b.debug("Ignoring remote content on first tab load", f), P = !1, b.cache.add(n, k.html()), b.activate.all(f), x.onFirstLoad.call(k[0], f, h, y), x.onLoad.call(k[0], f, h, y)) : (b.activate.navigation(f), b.fetch.content(f, n)), !1; b.debug("Opened local tab", f), b.activate.all(f), b.cache.read(f) || (b.cache.add(f, !0), b.debug("First time tab loaded calling tab init"), x.onFirstLoad.call(k[0], f, h, y)), x.onLoad.call(k[0], f, h, y) } else { if (-1 != n.search("/") || "" === n) return b.error(S.missingTab, R, g, f), !1; if (f = (s = e("#" + n + ', a[name="' + n + '"]')).closest("[data-tab]").data(w.tab), k = b.get.tabElement(f), s && s.length > 0 && f) return b.debug("Anchor link used, opening parent tab", k, s), k.hasClass(C.active) || setTimeout(function () { b.scrollTo(s) }, 0), b.activate.all(f), b.cache.read(f) || (b.cache.add(f, !0), b.debug("First time tab loaded calling tab init"), x.onFirstLoad.call(k[0], f, h, y)), x.onLoad.call(k[0], f, h, y), !1 } }) }, scrollTo: function (t) { var i = !!(t && t.length > 0) && t.offset().top; !1 !== i && (b.debug("Forcing scroll to an in-page link in a hidden tab", i, t), e(n).scrollTop(i)) }, update: { content: function (e, t, n) { var o = b.get.tabElement(e), a = o[0]; (n = n !== i ? n : x.evaluateScripts) ? (b.debug("Updating HTML and evaluating inline scripts", e, t), o.html(t)) : (b.debug("Updating HTML", e, t), a.innerHTML = t) } }, fetch: { content: function (t, n) { var o, a, r = b.get.tabElement(t), s = { dataType: "html", encodeParameters: !1, on: "now", cache: x.alwaysRefresh, headers: { "X-Remote": !0 }, onSuccess: function (e) { b.cache.add(n, e), b.update.content(t, e), t == v ? (b.debug("Content loaded", t), b.activate.tab(t)) : b.debug("Content loaded in background", t), x.onFirstLoad.call(r[0], t, h, y), x.onLoad.call(r[0], t, h, y) }, urlData: { tab: n } }, c = r.api("get request") || !1, l = c && "pending" === c.state(); n = n || t, a = b.cache.read(n), x.cache && a ? (b.activate.tab(t), b.debug("Adding cached content", n), "once" == x.evaluateScripts ? b.update.content(t, a, !1) : b.update.content(t, a), x.onLoad.call(r[0], t, h, y)) : l ? (b.set.loading(t), b.debug("Content is already loading", n)) : e.api !== i ? (o = e.extend(!0, {}, x.apiSettings, s), b.debug("Retrieving remote content", n, o), b.set.loading(t), r.api(o)) : b.error(S.api) } }, activate: { all: function (e) { b.activate.tab(e), b.activate.navigation(e) }, tab: function (e) { var t = b.get.tabElement(e), n = t.hasClass(C.active); b.verbose("Showing tab content for", t), n || (t.addClass(C.active).siblings(p).removeClass(C.active + " " + C.loading), t.length > 0 && x.onVisible.call(t[0], e)) }, navigation: function (e) { var t = b.get.navElement(e), n = t.hasClass(C.active); b.verbose("Activating tab navigation for", t, e), n || t.addClass(C.active).siblings(r).removeClass(C.active + " " + C.loading) } }, deactivate: { all: function () { b.deactivate.navigation(), b.deactivate.tabs() }, navigation: function () { r.removeClass(C.active) }, tabs: function () { p.removeClass(C.active + " " + C.loading) } }, is: { tab: function (e) { return e !== i && b.get.tabElement(e).length > 0 } }, get: { initialPath: function () { return r.eq(0).data(w.tab) || p.eq(0).data(w.tab) }, path: function () { return e.address.value() }, defaultPathArray: function (e) { return b.utilities.pathToArray(b.get.defaultPath(e)) }, defaultPath: function (e) { var t = r.filter("[data-" + w.tab + '^="' + e + '/"]').eq(0).data(w.tab) || !1; if (t) { if (b.debug("Found default tab", t), F < x.maxDepth) return F++ , b.get.defaultPath(t); b.error(S.recursion) } else b.debug("No default tabs found for", e, p); return F = 0, e }, navElement: function (e) { return e = e || v, r.filter("[data-" + w.tab + '="' + e + '"]') }, tabElement: function (e) { var t, n, i, o; return e = e || v, i = b.utilities.pathToArray(e), o = b.utilities.last(i), t = p.filter("[data-" + w.tab + '="' + e + '"]'), n = p.filter("[data-" + w.tab + '="' + o + '"]'), t.length > 0 ? t : n }, tab: function () { return v } }, utilities: { filterArray: function (t, n) { return e.grep(t, function (t) { return -1 == e.inArray(t, n) }) }, last: function (t) { return !!e.isArray(t) && t[t.length - 1] }, pathToArray: function (e) { return e === i && (e = v), "string" == typeof e ? e.split("/") : [e] }, arrayToPath: function (t) { return !!e.isArray(t) && t.join("/") } }, setting: function (t, n) { if (b.debug("Changing setting", t, n), e.isPlainObject(t)) e.extend(!0, x, t); else { if (n === i) return x[t]; x[t] = n } }, internal: function (t, n) { if (e.isPlainObject(t)) e.extend(!0, b, t); else { if (n === i) return b[t]; b[t] = n } }, debug: function () { x.debug && (x.performance ? b.performance.log(arguments) : (b.debug = Function.prototype.bind.call(console.info, console, x.name + ":"), b.debug.apply(console, arguments))) }, verbose: function () { x.verbose && x.debug && (x.performance ? b.performance.log(arguments) : (b.verbose = Function.prototype.bind.call(console.info, console, x.name + ":"), b.verbose.apply(console, arguments))) }, error: function () { b.error = Function.prototype.bind.call(console.error, console, x.name + ":"), b.error.apply(console, arguments) }, performance: { log: function (e) { var t, n; x.performance && (n = (t = (new Date).getTime()) - (c || t), c = t, l.push({ Name: e[0], Arguments: [].slice.call(e, 1) || "", Element: D, "Execution Time": n })), clearTimeout(b.performance.timer), b.performance.timer = setTimeout(b.performance.display, 500) }, display: function () { var t = x.name + ":", n = 0; c = !1, clearTimeout(b.performance.timer), e.each(l, function (e, t) { n += t["Execution Time"] }), t += " " + n + "ms", s && (t += " '" + s + "'"), (console.group !== i || console.table !== i) && l.length > 0 && (console.groupCollapsed(t), console.table ? console.table(l) : e.each(l, function (e, t) { console.log(t.Name + ": " + t["Execution Time"] + "ms") }), console.groupEnd()), l = [] } }, invoke: function (t, n, o) { var r, s, c, l = O; return n = n || f, o = D || o, "string" == typeof t && l !== i && (t = t.split(/[\. ]/), r = t.length - 1, e.each(t, function (n, o) { var a = n != r ? o + t[n + 1].charAt(0).toUpperCase() + t[n + 1].slice(1) : t; if (e.isPlainObject(l[a]) && n != r) l = l[a]; else { if (l[a] !== i) return s = l[a], !1; if (!e.isPlainObject(l[o]) || n == r) return l[o] !== i ? (s = l[o], !1) : (b.error(S.method, t), !1); l = l[o] } })), e.isFunction(s) ? c = s.apply(o, n) : s !== i && (c = s), e.isArray(a) ? a.push(c) : a !== i ? a = [a, c] : c !== i && (a = c), s } }, d ? (O === i && b.initialize(), b.invoke(u)) : (O !== i && O.invoke("destroy"), b.initialize()) }), a !== i ? a : this }, e.tab = function () { e(t).tab.apply(this, arguments) }, e.fn.tab.settings = { name: "Tab", namespace: "tab", debug: !1, verbose: !1, performance: !0, auto: !1, history: !1, historyType: "hash", path: !1, context: !1, childrenOnly: !1, maxDepth: 25, alwaysRefresh: !1, cache: !0, ignoreFirstLoad: !1, apiSettings: !1, evaluateScripts: "once", onFirstLoad: function (e, t, n) { }, onLoad: function (e, t, n) { }, onVisible: function (e, t, n) { }, onRequest: function (e, t, n) { }, templates: { determineTitle: function (e) { } }, error: { api: "You attempted to load content without API module", method: "The method you called is not defined", missingTab: "Activated tab cannot be found. Tabs are case-sensitive.", noContent: "The tab you specified is missing a content url.", path: "History enabled, but no path was specified", recursion: "Max recursive depth reached", legacyInit: "onTabInit has been renamed to onFirstLoad in 2.0, please adjust your code.", legacyLoad: "onTabLoad has been renamed to onLoad in 2.0. Please adjust your code", state: "History requires Asual's Address library <https://github.com/asual/jquery-address>" }, metadata: { tab: "tab", loaded: "loaded", promise: "promise" }, className: { loading: "loading", active: "active" }, selector: { tabs: ".ui.tab", ui: ".ui" } } }(jQuery, window, document), function (e, t, n, i) { "use strict"; e.fn.transition = function () { var o, a = e(this), r = a.selector || "", s = (new Date).getTime(), c = [], l = arguments, u = l[0], d = [].slice.call(arguments, 1), f = "string" == typeof u; return t.requestAnimationFrame || t.mozRequestAnimationFrame || t.webkitRequestAnimationFrame || t.msRequestAnimationFrame, a.each(function (t) { var m, g, p, v, h, b, y, x, C, w = e(this), k = this; (C = { initialize: function () { m = C.get.settings.apply(k, l), v = m.className, p = m.error, h = m.metadata, x = "." + m.namespace, y = "module-" + m.namespace, g = w.data(y) || C, b = C.get.animationEndEvent(), f && (f = C.invoke(u)), !1 === f && (C.verbose("Converted arguments into settings object", m), m.interval ? C.delay(m.animate) : C.animate(), C.instantiate()) }, instantiate: function () { C.verbose("Storing instance of module", C), g = C, w.data(y, g) }, destroy: function () { C.verbose("Destroying previous module for", k), w.removeData(y) }, refresh: function () { C.verbose("Refreshing display type on next animation"), delete C.displayType }, forceRepaint: function () { C.verbose("Forcing element repaint"); var e = w.parent(), t = w.next(); 0 === t.length ? w.detach().appendTo(e) : w.detach().insertBefore(t) }, repaint: function () { C.verbose("Repainting element"), k.offsetWidth }, delay: function (e) { var n, o = C.get.animationDirection(); o || (o = C.can.transition() ? C.get.direction() : "static"), e = e !== i ? e : m.interval, n = "auto" == m.reverse && o == v.outward || 1 == m.reverse ? (a.length - t) * m.interval : t * m.interval, C.debug("Delaying animation by", n), setTimeout(C.animate, n) }, animate: function (e) { if (m = e || m, !C.is.supported()) return C.error(p.support), !1; if (C.debug("Preparing animation", m.animation), C.is.animating()) { if (m.queue) return !m.allowRepeats && C.has.direction() && C.is.occurring() && !0 !== C.queuing ? C.debug("Animation is currently occurring, preventing queueing same animation", m.animation) : C.queue(m.animation), !1; if (!m.allowRepeats && C.is.occurring()) return C.debug("Animation is already occurring, will not execute repeated animation", m.animation), !1; C.debug("New animation started, completing previous early", m.animation), g.complete() } C.can.animate() ? C.set.animating(m.animation) : C.error(p.noAnimation, m.animation, k) }, reset: function () { C.debug("Resetting animation to beginning conditions"), C.remove.animationCallbacks(), C.restore.conditions(), C.remove.animating() }, queue: function (e) { C.debug("Queueing animation of", e), C.queuing = !0, w.one(b + ".queue" + x, function () { C.queuing = !1, C.repaint(), C.animate.apply(this, m) }) }, complete: function (e) { C.debug("Animation complete", m.animation), C.remove.completeCallback(), C.remove.failSafe(), C.is.looping() || (C.is.outward() ? (C.verbose("Animation is outward, hiding element"), C.restore.conditions(), C.hide()) : C.is.inward() ? (C.verbose("Animation is outward, showing element"), C.restore.conditions(), C.show()) : (C.verbose("Static animation completed"), C.restore.conditions(), m.onComplete.call(k))) }, force: { visible: function () { var e = w.attr("style"), t = C.get.userStyle(), n = C.get.displayType(), o = t + "display: " + n + " !important;", a = w.css("display"), r = e === i || "" === e; a !== n ? (C.verbose("Overriding default display to show element", n), w.attr("style", o)) : r && w.removeAttr("style") }, hidden: function () { var e = w.attr("style"), t = w.css("display"), n = e === i || "" === e; "none" === t || C.is.hidden() ? n && w.removeAttr("style") : (C.verbose("Overriding default display to hide element"), w.css("display", "none")) } }, has: { direction: function (t) { var n = !1; return "string" == typeof (t = t || m.animation) && (t = t.split(" "), e.each(t, function (e, t) { (t === v.inward || t === v.outward) && (n = !0) })), n }, inlineDisplay: function () { var t = w.attr("style") || ""; return e.isArray(t.match(/display.*?;/, "")) } }, set: { animating: function (e) { var t; C.remove.completeCallback(), e = e || m.animation, t = C.get.animationClass(e), C.save.animation(t), C.force.visible(), C.remove.hidden(), C.remove.direction(), C.start.animation(t) }, duration: function (e, t) { ((t = "number" == typeof (t = t || m.duration) ? t + "ms" : t) || 0 === t) && (C.verbose("Setting animation duration", t), w.css({ "animation-duration": t })) }, direction: function (e) { (e = e || C.get.direction()) == v.inward ? C.set.inward() : C.set.outward() }, looping: function () { C.debug("Transition set to loop"), w.addClass(v.looping) }, hidden: function () { w.addClass(v.transition).addClass(v.hidden) }, inward: function () { C.debug("Setting direction to inward"), w.removeClass(v.outward).addClass(v.inward) }, outward: function () { C.debug("Setting direction to outward"), w.removeClass(v.inward).addClass(v.outward) }, visible: function () { w.addClass(v.transition).addClass(v.visible) } }, start: { animation: function (e) { e = e || C.get.animationClass(), C.debug("Starting tween", e), w.addClass(e).one(b + ".complete" + x, C.complete), m.useFailSafe && C.add.failSafe(), C.set.duration(m.duration), m.onStart.call(k) } }, save: { animation: function (e) { C.cache || (C.cache = {}), C.cache.animation = e }, displayType: function (e) { "none" !== e && w.data(h.displayType, e) }, transitionExists: function (t, n) { e.fn.transition.exists[t] = n, C.verbose("Saving existence of transition", t, n) } }, restore: { conditions: function () { var e = C.get.currentAnimation(); e && (w.removeClass(e), C.verbose("Removing animation class", C.cache)), C.remove.duration() } }, add: { failSafe: function () { var e = C.get.duration(); C.timer = setTimeout(function () { w.triggerHandler(b) }, e + m.failSafeDelay), C.verbose("Adding fail safe timer", C.timer) } }, remove: { animating: function () { w.removeClass(v.animating) }, animationCallbacks: function () { C.remove.queueCallback(), C.remove.completeCallback() }, queueCallback: function () { w.off(".queue" + x) }, completeCallback: function () { w.off(".complete" + x) }, display: function () { w.css("display", "") }, direction: function () { w.removeClass(v.inward).removeClass(v.outward) }, duration: function () { w.css("animation-duration", "") }, failSafe: function () { C.verbose("Removing fail safe timer", C.timer), C.timer && clearTimeout(C.timer) }, hidden: function () { w.removeClass(v.hidden) }, visible: function () { w.removeClass(v.visible) }, looping: function () { C.debug("Transitions are no longer looping"), C.is.looping() && (C.reset(), w.removeClass(v.looping)) }, transition: function () { w.removeClass(v.visible).removeClass(v.hidden) } }, get: { settings: function (t, n, i) { return "object" == typeof t ? e.extend(!0, {}, e.fn.transition.settings, t) : "function" == typeof i ? e.extend({}, e.fn.transition.settings, { animation: t, onComplete: i, duration: n }) : "string" == typeof n || "number" == typeof n ? e.extend({}, e.fn.transition.settings, { animation: t, duration: n }) : "object" == typeof n ? e.extend({}, e.fn.transition.settings, n, { animation: t }) : "function" == typeof n ? e.extend({}, e.fn.transition.settings, { animation: t, onComplete: n }) : e.extend({}, e.fn.transition.settings, { animation: t }) }, animationClass: function (e) { var t = e || m.animation, n = C.can.transition() && !C.has.direction() ? C.get.direction() + " " : ""; return v.animating + " " + v.transition + " " + n + t }, currentAnimation: function () { return !(!C.cache || C.cache.animation === i) && C.cache.animation }, currentDirection: function () { return C.is.inward() ? v.inward : v.outward }, direction: function () { return C.is.hidden() || !C.is.visible() ? v.inward : v.outward }, animationDirection: function (t) { var n; return "string" == typeof (t = t || m.animation) && (t = t.split(" "), e.each(t, function (e, t) { t === v.inward ? n = v.inward : t === v.outward && (n = v.outward) })), n || !1 }, duration: function (e) { return !1 === (e = e || m.duration) && (e = w.css("animation-duration") || 0), "string" == typeof e ? e.indexOf("ms") > -1 ? parseFloat(e) : 1e3 * parseFloat(e) : e }, displayType: function () { return m.displayType ? m.displayType : (w.data(h.displayType) === i && C.can.transition(!0), w.data(h.displayType)) }, userStyle: function (e) { return (e = e || w.attr("style") || "").replace(/display.*?;/, "") }, transitionExists: function (t) { return e.fn.transition.exists[t] }, animationStartEvent: function () { var e, t = n.createElement("div"), o = { animation: "animationstart", OAnimation: "oAnimationStart", MozAnimation: "mozAnimationStart", WebkitAnimation: "webkitAnimationStart" }; for (e in o) if (t.style[e] !== i) return o[e]; return !1 }, animationEndEvent: function () { var e, t = n.createElement("div"), o = { animation: "animationend", OAnimation: "oAnimationEnd", MozAnimation: "mozAnimationEnd", WebkitAnimation: "webkitAnimationEnd" }; for (e in o) if (t.style[e] !== i) return o[e]; return !1 } }, can: { transition: function (t) { var n, o, a, r, s, c, l, u = m.animation, d = C.get.transitionExists(u); if (d === i || t) { if (C.verbose("Determining whether animation exists"), n = w.attr("class"), o = w.prop("tagName"), r = (a = e("<" + o + " />").addClass(n).insertAfter(w)).addClass(u).removeClass(v.inward).removeClass(v.outward).addClass(v.animating).addClass(v.transition).css("animationName"), s = a.addClass(v.inward).css("animationName"), l = a.attr("class", n).removeAttr("style").removeClass(v.hidden).removeClass(v.visible).show().css("display"), C.verbose("Determining final display state", l), C.save.displayType(l), a.remove(), r != s) C.debug("Direction exists for animation", u), c = !0; else { if ("none" == r || !r) return void C.debug("No animation defined in css", u); C.debug("Static animation found", u, l), c = !1 } C.save.transitionExists(u, c) } return d !== i ? d : c }, animate: function () { return C.can.transition() !== i } }, is: { animating: function () { return w.hasClass(v.animating) }, inward: function () { return w.hasClass(v.inward) }, outward: function () { return w.hasClass(v.outward) }, looping: function () { return w.hasClass(v.looping) }, occurring: function (e) { return e = "." + (e = e || m.animation).replace(" ", "."), w.filter(e).length > 0 }, visible: function () { return w.is(":visible") }, hidden: function () { return "hidden" === w.css("visibility") }, supported: function () { return !1 !== b } }, hide: function () { C.verbose("Hiding element"), C.is.animating() && C.reset(), k.blur(), C.remove.display(), C.remove.visible(), C.set.hidden(), C.force.hidden(), m.onHide.call(k), m.onComplete.call(k) }, show: function (e) { C.verbose("Showing element", e), C.remove.hidden(), C.set.visible(), C.force.visible(), m.onShow.call(k), m.onComplete.call(k) }, toggle: function () { C.is.visible() ? C.hide() : C.show() }, stop: function () { C.debug("Stopping current animation"), w.triggerHandler(b) }, stopAll: function () { C.debug("Stopping all animation"), C.remove.queueCallback(), w.triggerHandler(b) }, clear: { queue: function () { C.debug("Clearing animation queue"), C.remove.queueCallback() } }, enable: function () { C.verbose("Starting animation"), w.removeClass(v.disabled) }, disable: function () { C.debug("Stopping animation"), w.addClass(v.disabled) }, setting: function (t, n) { if (C.debug("Changing setting", t, n), e.isPlainObject(t)) e.extend(!0, m, t); else { if (n === i) return m[t]; m[t] = n } }, internal: function (t, n) { if (e.isPlainObject(t)) e.extend(!0, C, t); else { if (n === i) return C[t]; C[t] = n } }, debug: function () { m.debug && (m.performance ? C.performance.log(arguments) : (C.debug = Function.prototype.bind.call(console.info, console, m.name + ":"), C.debug.apply(console, arguments))) }, verbose: function () { m.verbose && m.debug && (m.performance ? C.performance.log(arguments) : (C.verbose = Function.prototype.bind.call(console.info, console, m.name + ":"), C.verbose.apply(console, arguments))) }, error: function () { C.error = Function.prototype.bind.call(console.error, console, m.name + ":"), C.error.apply(console, arguments) }, performance: { log: function (e) { var t, n; m.performance && (n = (t = (new Date).getTime()) - (s || t), s = t, c.push({ Name: e[0], Arguments: [].slice.call(e, 1) || "", Element: k, "Execution Time": n })), clearTimeout(C.performance.timer), C.performance.timer = setTimeout(C.performance.display, 500) }, display: function () { var t = m.name + ":", n = 0; s = !1, clearTimeout(C.performance.timer), e.each(c, function (e, t) { n += t["Execution Time"] }), t += " " + n + "ms", r && (t += " '" + r + "'"), a.length > 1 && (t += " (" + a.length + ")"), (console.group !== i || console.table !== i) && c.length > 0 && (console.groupCollapsed(t), console.table ? console.table(c) : e.each(c, function (e, t) { console.log(t.Name + ": " + t["Execution Time"] + "ms") }), console.groupEnd()), c = [] } }, invoke: function (t, n, a) { var r, s, c, l = g; return n = n || d, a = k || a, "string" == typeof t && l !== i && (t = t.split(/[\. ]/), r = t.length - 1, e.each(t, function (n, o) { var a = n != r ? o + t[n + 1].charAt(0).toUpperCase() + t[n + 1].slice(1) : t; if (e.isPlainObject(l[a]) && n != r) l = l[a]; else { if (l[a] !== i) return s = l[a], !1; if (!e.isPlainObject(l[o]) || n == r) return l[o] !== i && (s = l[o], !1); l = l[o] } })), e.isFunction(s) ? c = s.apply(a, n) : s !== i && (c = s), e.isArray(o) ? o.push(c) : o !== i ? o = [o, c] : c !== i && (o = c), s !== i && s } }).initialize() }), o !== i ? o : this }, e.fn.transition.exists = {}, e.fn.transition.settings = { name: "Transition", debug: !1, verbose: !1, performance: !0, namespace: "transition", interval: 0, reverse: "auto", onStart: function () { }, onComplete: function () { }, onShow: function () { }, onHide: function () { }, useFailSafe: !0, failSafeDelay: 100, allowRepeats: !1, displayType: !1, animation: "fade", duration: !1, queue: !0, metadata: { displayType: "display" }, className: { animating: "animating", disabled: "disabled", hidden: "hidden", inward: "in", loading: "loading", looping: "looping", outward: "out", transition: "transition", visible: "visible" }, error: { noAnimation: "Element is no longer attached to DOM. Unable to animate.", repeated: "That animation is already occurring, cancelling repeated animation", method: "The method you called is not defined", support: "This browser does not support CSS animations" } } }(jQuery, window, document), function (e, t, n, i) { "use strict"; e.api = e.fn.api = function (n) { var o, a = e(e.isFunction(this) ? t : this), r = a.selector || "", s = (new Date).getTime(), c = [], l = arguments[0], u = "string" == typeof l, d = [].slice.call(arguments, 1); return a.each(function () { var a, f, m, g, p, v, h = e.isPlainObject(n) ? e.extend(!0, {}, e.fn.api.settings, n) : e.extend({}, e.fn.api.settings), b = h.namespace, y = h.metadata, x = h.selector, C = h.error, w = h.className, k = "." + b, S = "module-" + b, T = e(this), A = T.closest(x.form), R = h.stateContext ? e(h.stateContext) : T, E = this, P = R[0], F = T.data(S); v = { initialize: function () { u || v.bind.events(), v.instantiate() }, instantiate: function () { v.verbose("Storing instance of module", v), F = v, T.data(S, F) }, destroy: function () { v.verbose("Destroying previous module for", E), T.removeData(S).off(k) }, bind: { events: function () { var e = v.get.event(); e ? (v.verbose("Attaching API events to element", e), T.on(e + k, v.event.trigger)) : "now" == h.on && (v.debug("Querying API endpoint immediately"), v.query()) } }, decode: { json: function (e) { if (e !== i && "string" == typeof e) try { e = JSON.parse(e) } catch (e) { } return e } }, read: { cachedResponse: function (e) { var n; return t.Storage === i ? void v.error(C.noStorage) : (n = sessionStorage.getItem(e), v.debug("Using cached response", e, n), n = v.decode.json(n), !1) } }, write: { cachedResponse: function (n, o) { return o && "" === o ? void v.debug("Response empty, not caching", o) : t.Storage === i ? void v.error(C.noStorage) : (e.isPlainObject(o) && (o = JSON.stringify(o)), sessionStorage.setItem(n, o), void v.verbose("Storing cached response for url", n, o)) } }, query: function () { if (!v.is.disabled()) { if (v.is.loading()) { if (!h.interruptRequests) return void v.debug("Cancelling request, previous request is still pending"); v.debug("Interrupting previous request"), v.abort() } return h.defaultData && e.extend(!0, h.urlData, v.get.defaultData()), h.serializeForm && (h.data = v.add.formData(h.data)), !1 === (f = v.get.settings()) ? (v.cancelled = !0, void v.error(C.beforeSend)) : (v.cancelled = !1, (m = v.get.templatedURL()) || v.is.mocked() ? (m = v.add.urlData(m)) || v.is.mocked() ? (f.url = h.base + m, a = e.extend(!0, {}, h, { type: h.method || h.type, data: g, url: h.base + m, beforeSend: h.beforeXHR, success: function () { }, failure: function () { }, complete: function () { } }), v.debug("Querying URL", a.url), v.verbose("Using AJAX settings", a), "local" === h.cache && v.read.cachedResponse(m) ? (v.debug("Response returned from local cache"), v.request = v.create.request(), void v.request.resolveWith(P, [v.read.cachedResponse(m)])) : void (h.throttle ? h.throttleFirstRequest || v.timer ? (v.debug("Throttling request", h.throttle), clearTimeout(v.timer), v.timer = setTimeout(function () { v.timer && delete v.timer, v.debug("Sending throttled request", g, a.method), v.send.request() }, h.throttle)) : (v.debug("Sending request", g, a.method), v.send.request(), v.timer = setTimeout(function () { }, h.throttle)) : (v.debug("Sending request", g, a.method), v.send.request()))) : void 0 : void v.error(C.missingURL)) } v.debug("Element is disabled API request aborted") }, should: { removeError: function () { return !0 === h.hideError || "auto" === h.hideError && !v.is.form() } }, is: { disabled: function () { return T.filter(x.disabled).length > 0 }, form: function () { return T.is("form") || R.is("form") }, mocked: function () { return h.mockResponse || h.mockResponseAsync || h.response || h.responseAsync }, input: function () { return T.is("input") }, loading: function () { return v.request && "pending" == v.request.state() }, abortedRequest: function (e) { return e && e.readyState !== i && 0 === e.readyState ? (v.verbose("XHR request determined to be aborted"), !0) : (v.verbose("XHR request was not aborted"), !1) }, validResponse: function (t) { return "json" !== h.dataType && "jsonp" !== h.dataType || !e.isFunction(h.successTest) ? (v.verbose("Response is not JSON, skipping validation", h.successTest, t), !0) : (v.debug("Checking JSON returned success", h.successTest, t), h.successTest(t) ? (v.debug("Response passed success test", t), !0) : (v.debug("Response failed success test", t), !1)) } }, was: { cancelled: function () { return v.cancelled || !1 }, succesful: function () { return v.request && "resolved" == v.request.state() }, failure: function () { return v.request && "rejected" == v.request.state() }, complete: function () { return v.request && ("resolved" == v.request.state() || "rejected" == v.request.state()) } }, add: { urlData: function (t, n) { var o, a; return t && (o = t.match(h.regExp.required), a = t.match(h.regExp.optional), n = n || h.urlData, o && (v.debug("Looking for required URL variables", o), e.each(o, function (o, a) { var r = -1 !== a.indexOf("$") ? a.substr(2, a.length - 3) : a.substr(1, a.length - 2), s = e.isPlainObject(n) && n[r] !== i ? n[r] : T.data(r) !== i ? T.data(r) : R.data(r) !== i ? R.data(r) : n[r]; return s === i ? (v.error(C.requiredParameter, r, t), t = !1, !1) : (v.verbose("Found required variable", r, s), s = h.encodeParameters ? v.get.urlEncodedValue(s) : s, void (t = t.replace(a, s))) })), a && (v.debug("Looking for optional URL variables", o), e.each(a, function (o, a) { var r = -1 !== a.indexOf("$") ? a.substr(3, a.length - 4) : a.substr(2, a.length - 3), s = e.isPlainObject(n) && n[r] !== i ? n[r] : T.data(r) !== i ? T.data(r) : R.data(r) !== i ? R.data(r) : n[r]; s !== i ? (v.verbose("Optional variable Found", r, s), t = t.replace(a, s)) : (v.verbose("Optional variable not found", r), t = -1 !== t.indexOf("/" + a) ? t.replace("/" + a, "") : t.replace(a, "")) }))), t }, formData: function (t) { var n = e.fn.serializeObject !== i, o = n ? A.serializeObject() : A.serialize(); return t = t || h.data, e.isPlainObject(t) ? n ? (v.debug("Extending existing data with form data", t, o), t = e.extend(!0, {}, t, o)) : (v.error(C.missingSerialize), v.debug("Cant extend data. Replacing data with form data", t, o), t = o) : (v.debug("Adding form data", o), t = o), t } }, send: { request: function () { v.set.loading(), v.request = v.create.request(), v.is.mocked() ? v.mockedXHR = v.create.mockedXHR() : v.xhr = v.create.xhr(), h.onRequest.call(P, v.request, v.xhr) } }, event: { trigger: function (e) { v.query(), ("submit" == e.type || "click" == e.type) && e.preventDefault() }, xhr: { always: function () { }, done: function (t, n, i) { var o = this, a = (new Date).getTime() - p, r = h.loadingDuration - a, s = !!e.isFunction(h.onResponse) && h.onResponse.call(o, e.extend(!0, {}, t)); r = r > 0 ? r : 0, s && (v.debug("Modified API response in onResponse callback", h.onResponse, s, t), t = s), r > 0 && v.debug("Response completed early delaying state change by", r), setTimeout(function () { v.is.validResponse(t) ? v.request.resolveWith(o, [t, i]) : v.request.rejectWith(o, [i, "invalid"]) }, r) }, fail: function (e, t, n) { var i = this, o = (new Date).getTime() - p, a = h.loadingDuration - o; (a = a > 0 ? a : 0) > 0 && v.debug("Response completed early delaying state change by", a), setTimeout(function () { v.is.abortedRequest(e) ? v.request.rejectWith(i, [e, "aborted", n]) : v.request.rejectWith(i, [e, "error", t, n]) }, a) } }, request: { done: function (e, t) { v.debug("Successful API Response", e), "local" === h.cache && m && (v.write.cachedResponse(m, e), v.debug("Saving server response locally", v.cache)), h.onSuccess.call(P, e, T, t) }, complete: function (e, t) { var n, i; v.was.succesful() ? (i = e, n = t) : (n = e, i = v.get.responseFromXHR(n)), v.remove.loading(), h.onComplete.call(P, i, T, n) }, fail: function (e, t, n) { var o = v.get.responseFromXHR(e), r = v.get.errorFromRequest(o, t, n); "aborted" == t ? (v.debug("XHR Aborted (Most likely caused by page navigation or CORS Policy)", t, n), h.onAbort.call(P, t, T, e)) : "invalid" == t ? v.debug("JSON did not pass success test. A server-side error has most likely occurred", o) : "error" == t && e !== i && (v.debug("XHR produced a server error", t, n), 200 != e.status && n !== i && "" !== n && v.error(C.statusMessage + n, a.url), h.onError.call(P, r, T, e)), h.errorDuration && "aborted" !== t && (v.debug("Adding error state"), v.set.error(), v.should.removeError() && setTimeout(v.remove.error, h.errorDuration)), v.debug("API Request failed", r, e), h.onFailure.call(P, o, T, e) } } }, create: { request: function () { return e.Deferred().always(v.event.request.complete).done(v.event.request.done).fail(v.event.request.fail) }, mockedXHR: function () { var t, n, i, o = h.mockResponse || h.response, a = h.mockResponseAsync || h.responseAsync; return i = e.Deferred().always(v.event.xhr.complete).done(v.event.xhr.done).fail(v.event.xhr.fail), o ? (e.isFunction(o) ? (v.debug("Using specified synchronous callback", o), n = o.call(P, f)) : (v.debug("Using settings specified response", o), n = o), i.resolveWith(P, [n, !1, { responseText: n }])) : e.isFunction(a) && (t = function (e) { v.debug("Async callback returned response", e), e ? i.resolveWith(P, [e, !1, { responseText: e }]) : i.rejectWith(P, [{ responseText: e }, !1, !1]) }, v.debug("Using specified async response callback", a), a.call(P, f, t)), i }, xhr: function () { var t; return t = e.ajax(a).always(v.event.xhr.always).done(v.event.xhr.done).fail(v.event.xhr.fail), v.verbose("Created server request", t), t } }, set: { error: function () { v.verbose("Adding error state to element", R), R.addClass(w.error) }, loading: function () { v.verbose("Adding loading state to element", R), R.addClass(w.loading), p = (new Date).getTime() } }, remove: { error: function () { v.verbose("Removing error state from element", R), R.removeClass(w.error) }, loading: function () { v.verbose("Removing loading state from element", R), R.removeClass(w.loading) } }, get: { responseFromXHR: function (t) { return !!e.isPlainObject(t) && ("json" == h.dataType || "jsonp" == h.dataType ? v.decode.json(t.responseText) : t.responseText) }, errorFromRequest: function (t, n, o) { return e.isPlainObject(t) && t.error !== i ? t.error : h.error[n] !== i ? h.error[n] : o }, request: function () { return v.request || !1 }, xhr: function () { return v.xhr || !1 }, settings: function () { var t; return (t = h.beforeSend.call(P, h)) && (t.success !== i && (v.debug("Legacy success callback detected", t), v.error(C.legacyParameters, t.success), t.onSuccess = t.success), t.failure !== i && (v.debug("Legacy failure callback detected", t), v.error(C.legacyParameters, t.failure), t.onFailure = t.failure), t.complete !== i && (v.debug("Legacy complete callback detected", t), v.error(C.legacyParameters, t.complete), t.onComplete = t.complete)), t === i && v.error(C.noReturnedValue), t !== i ? e.extend(!0, {}, t) : e.extend(!0, {}, h) }, urlEncodedValue: function (e) { var n = t.decodeURIComponent(e), i = t.encodeURIComponent(e); return n !== e ? (v.debug("URL value is already encoded, avoiding double encoding", e), e) : (v.verbose("Encoding value using encodeURIComponent", e, i), i) }, defaultData: function () { var t = {}; return e.isWindow(E) || (v.is.input() ? t.value = T.val() : v.is.form() && (t.text = T.text())), t }, event: function () { return e.isWindow(E) || "now" == h.on ? (v.debug("API called without element, no events attached"), !1) : "auto" == h.on ? T.is("input") ? E.oninput !== i ? "input" : E.onpropertychange !== i ? "propertychange" : "keyup" : T.is("form") ? "submit" : "click" : h.on }, templatedURL: function (e) { if (e = e || T.data(y.action) || h.action || !1, m = T.data(y.url) || h.url || !1) return v.debug("Using specified url", m), m; if (e) { if (v.debug("Looking up url for action", e, h.api), h.api[e] === i && !v.is.mocked()) return void v.error(C.missingAction, h.action, h.api); m = h.api[e] } else v.is.form() && (m = T.attr("action") || R.attr("action") || !1, v.debug("No url or action specified, defaulting to form action", m)); return m } }, abort: function () { var e = v.get.xhr(); e && "resolved" !== e.state() && (v.debug("Cancelling API request"), e.abort()) }, reset: function () { v.remove.error(), v.remove.loading() }, setting: function (t, n) { if (v.debug("Changing setting", t, n), e.isPlainObject(t)) e.extend(!0, h, t); else { if (n === i) return h[t]; h[t] = n } }, internal: function (t, n) { if (e.isPlainObject(t)) e.extend(!0, v, t); else { if (n === i) return v[t]; v[t] = n } }, debug: function () { h.debug && (h.performance ? v.performance.log(arguments) : (v.debug = Function.prototype.bind.call(console.info, console, h.name + ":"), v.debug.apply(console, arguments))) }, verbose: function () { h.verbose && h.debug && (h.performance ? v.performance.log(arguments) : (v.verbose = Function.prototype.bind.call(console.info, console, h.name + ":"), v.verbose.apply(console, arguments))) }, error: function () { v.error = Function.prototype.bind.call(console.error, console, h.name + ":"), v.error.apply(console, arguments) }, performance: { log: function (e) { var t, n; h.performance && (n = (t = (new Date).getTime()) - (s || t), s = t, c.push({ Name: e[0], Arguments: [].slice.call(e, 1) || "", "Execution Time": n })), clearTimeout(v.performance.timer), v.performance.timer = setTimeout(v.performance.display, 500) }, display: function () { var t = h.name + ":", n = 0; s = !1, clearTimeout(v.performance.timer), e.each(c, function (e, t) { n += t["Execution Time"] }), t += " " + n + "ms", r && (t += " '" + r + "'"), (console.group !== i || console.table !== i) && c.length > 0 && (console.groupCollapsed(t), console.table ? console.table(c) : e.each(c, function (e, t) { console.log(t.Name + ": " + t["Execution Time"] + "ms") }), console.groupEnd()), c = [] } }, invoke: function (t, n, a) { var r, s, c, l = F; return n = n || d, a = E || a, "string" == typeof t && l !== i && (t = t.split(/[\. ]/), r = t.length - 1, e.each(t, function (n, o) { var a = n != r ? o + t[n + 1].charAt(0).toUpperCase() + t[n + 1].slice(1) : t; if (e.isPlainObject(l[a]) && n != r) l = l[a]; else { if (l[a] !== i) return s = l[a], !1; if (!e.isPlainObject(l[o]) || n == r) return l[o] !== i ? (s = l[o], !1) : (v.error(C.method, t), !1); l = l[o] } })), e.isFunction(s) ? c = s.apply(a, n) : s !== i && (c = s), e.isArray(o) ? o.push(c) : o !== i ? o = [o, c] : c !== i && (o = c), s } }, u ? (F === i && v.initialize(), v.invoke(l)) : (F !== i && F.invoke("destroy"), v.initialize()) }), o !== i ? o : this }, e.api.settings = { name: "API", namespace: "api", debug: !1, verbose: !1, performance: !0, api: {}, cache: !0, interruptRequests: !0, on: "auto", stateContext: !1, loadingDuration: 0, hideError: "auto", errorDuration: 2e3, encodeParameters: !0, action: !1, url: !1, base: "", urlData: {}, defaultData: !0, serializeForm: !1, throttle: 0, throttleFirstRequest: !0, method: "get", data: {}, dataType: "json", mockResponse: !1, mockResponseAsync: !1, response: !1, responseAsync: !1, beforeSend: function (e) { return e }, beforeXHR: function (e) { }, onRequest: function (e, t) { }, onResponse: !1, onSuccess: function (e, t) { }, onComplete: function (e, t) { }, onFailure: function (e, t) { }, onError: function (e, t) { }, onAbort: function (e, t) { }, successTest: !1, error: { beforeSend: "The before send function has aborted the request", error: "There was an error with your request", exitConditions: "API Request Aborted. Exit conditions met", JSONParse: "JSON could not be parsed during error handling", legacyParameters: "You are using legacy API success callback names", method: "The method you called is not defined", missingAction: "API action used but no url was defined", missingSerialize: "jquery-serialize-object is required to add form data to an existing data object", missingURL: "No URL specified for api event", noReturnedValue: "The beforeSend callback must return a settings object, beforeSend ignored.", noStorage: "Caching responses locally requires session storage", parseError: "There was an error parsing your request", requiredParameter: "Missing a required URL parameter: ", statusMessage: "Server gave an error: ", timeout: "Your request timed out" }, regExp: { required: /\{\$*[A-z0-9]+\}/g, optional: /\{\/\$*[A-z0-9]+\}/g }, className: { loading: "loading", error: "error" }, selector: { disabled: ".disabled", form: "form" }, metadata: { action: "action", url: "url" } } }(jQuery, window, document), function (e, t, n, i) { "use strict"; e.fn.state = function (t) { var o, a = e(this), r = a.selector || "", s = (n.documentElement, (new Date).getTime()), c = [], l = arguments[0], u = "string" == typeof l, d = [].slice.call(arguments, 1); return a.each(function () { var n, f = e.isPlainObject(t) ? e.extend(!0, {}, e.fn.state.settings, t) : e.extend({}, e.fn.state.settings), m = f.error, g = f.metadata, p = f.className, v = f.namespace, h = f.states, b = f.text, y = "." + v, x = v + "-module", C = e(this), w = this, k = C.data(x); n = { initialize: function () { n.verbose("Initializing module"), f.automatic && n.add.defaults(), f.context && "" !== r ? e(f.context).on(r, "mouseenter" + y, n.change.text).on(r, "mouseleave" + y, n.reset.text).on(r, "click" + y, n.toggle.state) : C.on("mouseenter" + y, n.change.text).on("mouseleave" + y, n.reset.text).on("click" + y, n.toggle.state), n.instantiate() }, instantiate: function () { n.verbose("Storing instance of module", n), k = n, C.data(x, n) }, destroy: function () { n.verbose("Destroying previous module", k), C.off(y).removeData(x) }, refresh: function () { n.verbose("Refreshing selector cache"), C = e(w) }, add: { defaults: function () { var o = t && e.isPlainObject(t.states) ? t.states : {}; e.each(f.defaults, function (t, a) { n.is[t] !== i && n.is[t]() && (n.verbose("Adding default states", t, w), e.extend(f.states, a, o)) }) } }, is: { active: function () { return C.hasClass(p.active) }, loading: function () { return C.hasClass(p.loading) }, inactive: function () { return !C.hasClass(p.active) }, state: function (e) { return p[e] !== i && C.hasClass(p[e]) }, enabled: function () { return !C.is(f.filter.active) }, disabled: function () { return C.is(f.filter.active) }, textEnabled: function () { return !C.is(f.filter.text) }, button: function () { return C.is(".button:not(a, .submit)") }, input: function () { return C.is("input") }, progress: function () { return C.is(".ui.progress") } }, allow: function (e) { n.debug("Now allowing state", e), h[e] = !0 }, disallow: function (e) { n.debug("No longer allowing", e), h[e] = !1 }, allows: function (e) { return h[e] || !1 }, enable: function () { C.removeClass(p.disabled) }, disable: function () { C.addClass(p.disabled) }, setState: function (e) { n.allows(e) && C.addClass(p[e]) }, removeState: function (e) { n.allows(e) && C.removeClass(p[e]) }, toggle: { state: function () { var t; if (n.allows("active") && n.is.enabled()) { if (n.refresh(), e.fn.api !== i) if (t = C.api("get request"), C.api("was cancelled")) n.debug("API Request cancelled by beforesend"), f.activateTest = function () { return !1 }, f.deactivateTest = function () { return !1 }; else if (t) return void n.listenTo(t); n.change.state() } } }, listenTo: function (t) { n.debug("API request detected, waiting for state signal", t), t && (b.loading && n.update.text(b.loading), e.when(t).then(function () { "resolved" == t.state() ? (n.debug("API request succeeded"), f.activateTest = function () { return !0 }, f.deactivateTest = function () { return !0 }) : (n.debug("API request failed"), f.activateTest = function () { return !1 }, f.deactivateTest = function () { return !1 }), n.change.state() })) }, change: { state: function () { n.debug("Determining state change direction"), n.is.inactive() ? n.activate() : n.deactivate(), f.sync && n.sync(), f.onChange.call(w) }, text: function () { n.is.textEnabled() && (n.is.disabled() ? (n.verbose("Changing text to disabled text", b.hover), n.update.text(b.disabled)) : n.is.active() ? b.hover ? (n.verbose("Changing text to hover text", b.hover), n.update.text(b.hover)) : b.deactivate && (n.verbose("Changing text to deactivating text", b.deactivate), n.update.text(b.deactivate)) : b.hover ? (n.verbose("Changing text to hover text", b.hover), n.update.text(b.hover)) : b.activate && (n.verbose("Changing text to activating text", b.activate), n.update.text(b.activate))) } }, activate: function () { f.activateTest.call(w) && (n.debug("Setting state to active"), C.addClass(p.active), n.update.text(b.active), f.onActivate.call(w)) }, deactivate: function () { f.deactivateTest.call(w) && (n.debug("Setting state to inactive"), C.removeClass(p.active), n.update.text(b.inactive), f.onDeactivate.call(w)) }, sync: function () { n.verbose("Syncing other buttons to current state"), a.not(C).state(n.is.active() ? "activate" : "deactivate") }, get: { text: function () { return f.selector.text ? C.find(f.selector.text).text() : C.html() }, textFor: function (e) { return b[e] || !1 } }, flash: { text: function (e, t, i) { var o = n.get.text(); n.debug("Flashing text message", e, t), e = e || f.text.flash, t = t || f.flashDuration, i = i || function () { }, n.update.text(e), setTimeout(function () { n.update.text(o), i.call(w) }, t) } }, reset: { text: function () { var e = b.active || C.data(g.storedText), t = b.inactive || C.data(g.storedText); n.is.textEnabled() && (n.is.active() && e ? (n.verbose("Resetting active text", e), n.update.text(e)) : t && (n.verbose("Resetting inactive text", e), n.update.text(t))) } }, update: { text: function (e) { var t = n.get.text(); e && e !== t ? (n.debug("Updating text", e), f.selector.text ? C.data(g.storedText, e).find(f.selector.text).text(e) : C.data(g.storedText, e).html(e)) : n.debug("Text is already set, ignoring update", e) } }, setting: function (t, o) { if (n.debug("Changing setting", t, o), e.isPlainObject(t)) e.extend(!0, f, t); else { if (o === i) return f[t]; f[t] = o } }, internal: function (t, o) { if (e.isPlainObject(t)) e.extend(!0, n, t); else { if (o === i) return n[t]; n[t] = o } }, debug: function () { f.debug && (f.performance ? n.performance.log(arguments) : (n.debug = Function.prototype.bind.call(console.info, console, f.name + ":"), n.debug.apply(console, arguments))) }, verbose: function () { f.verbose && f.debug && (f.performance ? n.performance.log(arguments) : (n.verbose = Function.prototype.bind.call(console.info, console, f.name + ":"), n.verbose.apply(console, arguments))) }, error: function () { n.error = Function.prototype.bind.call(console.error, console, f.name + ":"), n.error.apply(console, arguments) }, performance: { log: function (e) { var t, i; f.performance && (i = (t = (new Date).getTime()) - (s || t), s = t, c.push({ Name: e[0], Arguments: [].slice.call(e, 1) || "", Element: w, "Execution Time": i })), clearTimeout(n.performance.timer), n.performance.timer = setTimeout(n.performance.display, 500) }, display: function () { var t = f.name + ":", o = 0; s = !1, clearTimeout(n.performance.timer), e.each(c, function (e, t) { o += t["Execution Time"] }), t += " " + o + "ms", r && (t += " '" + r + "'"), (console.group !== i || console.table !== i) && c.length > 0 && (console.groupCollapsed(t), console.table ? console.table(c) : e.each(c, function (e, t) { console.log(t.Name + ": " + t["Execution Time"] + "ms") }), console.groupEnd()), c = [] } }, invoke: function (t, a, r) { var s, c, l, u = k; return a = a || d, r = w || r, "string" == typeof t && u !== i && (t = t.split(/[\. ]/), s = t.length - 1, e.each(t, function (o, a) { var r = o != s ? a + t[o + 1].charAt(0).toUpperCase() + t[o + 1].slice(1) : t; if (e.isPlainObject(u[r]) && o != s) u = u[r]; else { if (u[r] !== i) return c = u[r], !1; if (!e.isPlainObject(u[a]) || o == s) return u[a] !== i ? (c = u[a], !1) : (n.error(m.method, t), !1); u = u[a] } })), e.isFunction(c) ? l = c.apply(r, a) : c !== i && (l = c), e.isArray(o) ? o.push(l) : o !== i ? o = [o, l] : l !== i && (o = l), c } }, u ? (k === i && n.initialize(), n.invoke(l)) : (k !== i && k.invoke("destroy"), n.initialize()) }), o !== i ? o : this }, e.fn.state.settings = { name: "State", debug: !1, verbose: !1, namespace: "state", performance: !0, onActivate: function () { }, onDeactivate: function () { }, onChange: function () { }, activateTest: function () { return !0 }, deactivateTest: function () { return !0 }, automatic: !0, sync: !1, flashDuration: 1e3, filter: { text: ".loading, .disabled", active: ".disabled" }, context: !1, error: { beforeSend: "The before send function has cancelled state change", method: "The method you called is not defined." }, metadata: { promise: "promise", storedText: "stored-text" }, className: { active: "active", disabled: "disabled", error: "error", loading: "loading", success: "success", warning: "warning" }, selector: { text: !1 }, defaults: { input: { disabled: !0, loading: !0, active: !0 }, button: { disabled: !0, loading: !0, active: !0 }, progress: { active: !0, success: !0, warning: !0, error: !0 } }, states: { active: !0, disabled: !0, error: !0, loading: !0, success: !0, warning: !0 }, text: { disabled: !1, flash: !1, hover: !1, active: !1, inactive: !1, activate: !1, deactivate: !1 } } }(jQuery, window, document), function (e, t, n, i) { "use strict"; e.fn.visibility = function (o) { var a, r = e(this), s = r.selector || "", c = (new Date).getTime(), l = [], u = arguments[0], d = "string" == typeof u, f = [].slice.call(arguments, 1); return r.each(function () { var r, m, g, p = e.isPlainObject(o) ? e.extend(!0, {}, e.fn.visibility.settings, o) : e.extend({}, e.fn.visibility.settings), v = p.className, h = p.namespace, b = p.error, y = p.metadata, x = "." + h, C = "module-" + h, w = e(t), k = e(this), S = e(p.context), T = (k.selector, k.data(C)), A = t.requestAnimationFrame || t.mozRequestAnimationFrame || t.webkitRequestAnimationFrame || t.msRequestAnimationFrame || function (e) { setTimeout(e, 0) }, R = this, E = !1; g = { initialize: function () { g.debug("Initializing", p), g.setup.cache(), g.should.trackChanges() && ("image" == p.type && g.setup.image(), "fixed" == p.type && g.setup.fixed(), p.observeChanges && g.observeChanges(), g.bind.events()), g.save.position(), g.is.visible() || g.error(b.visible, k), p.initialCheck && g.checkVisibility(), g.instantiate() }, instantiate: function () { g.debug("Storing instance", g), k.data(C, g), T = g }, destroy: function () { g.verbose("Destroying previous module"), m && m.disconnect(), w.off("load" + x, g.event.load).off("resize" + x, g.event.resize), S.off("scrollchange" + x, g.event.scrollchange), k.off(x).removeData(C) }, observeChanges: function () { "MutationObserver" in t && ((m = new MutationObserver(function (e) { g.verbose("DOM tree modified, updating visibility calculations"), g.timer = setTimeout(function () { g.verbose("DOM tree modified, updating sticky menu"), g.refresh() }, 100) })).observe(R, { childList: !0, subtree: !0 }), g.debug("Setting up mutation observer", m)) }, bind: { events: function () { g.verbose("Binding visibility events to scroll and resize"), p.refreshOnLoad && w.on("load" + x, g.event.load), w.on("resize" + x, g.event.resize), S.off("scroll" + x).on("scroll" + x, g.event.scroll).on("scrollchange" + x, g.event.scrollchange) } }, event: { resize: function () { g.debug("Window resized"), p.refreshOnResize && A(g.refresh) }, load: function () { g.debug("Page finished loading"), A(g.refresh) }, scroll: function () { p.throttle ? (clearTimeout(g.timer), g.timer = setTimeout(function () { S.triggerHandler("scrollchange" + x, [S.scrollTop()]) }, p.throttle)) : A(function () { S.triggerHandler("scrollchange" + x, [S.scrollTop()]) }) }, scrollchange: function (e, t) { g.checkVisibility(t) } }, precache: function (t, i) { t instanceof Array || (t = [t]); for (var o = t.length, a = 0, r = [], s = n.createElement("img"), c = function () { ++a >= t.length && e.isFunction(i) && i() }; o--;)s = n.createElement("img"), s.onload = c, s.onerror = c, s.src = t[o], r.push(s) }, enableCallbacks: function () { g.debug("Allowing callbacks to occur"), E = !1 }, disableCallbacks: function () { g.debug("Disabling all callbacks temporarily"), E = !0 }, should: { trackChanges: function () { return d ? (g.debug("One time query, no need to bind events"), !1) : (g.debug("Callbacks being attached"), !0) } }, setup: { cache: function () { g.cache = { occurred: {}, screen: {}, element: {} } }, image: function () { var e = k.data(y.src); e && (g.verbose("Lazy loading image", e), p.once = !0, p.observeChanges = !1, p.onOnScreen = function () { g.debug("Image on screen", R), g.precache(e, function () { g.set.image(e) }) }) }, fixed: function () { g.debug("Setting up fixed"), p.once = !1, p.observeChanges = !1, p.initialCheck = !0, p.refreshOnLoad = !0, o.transition || (p.transition = !1), g.create.placeholder(), g.debug("Added placeholder", r), p.onTopPassed = function () { g.debug("Element passed, adding fixed position", k), g.show.placeholder(), g.set.fixed(), p.transition && e.fn.transition !== i && k.transition(p.transition, p.duration) }, p.onTopPassedReverse = function () { g.debug("Element returned to position, removing fixed", k), g.hide.placeholder(), g.remove.fixed() } } }, create: { placeholder: function () { g.verbose("Creating fixed position placeholder"), r = k.clone(!1).css("display", "none").addClass(v.placeholder).insertAfter(k) } }, show: { placeholder: function () { g.verbose("Showing placeholder"), r.css("display", "block").css("visibility", "hidden") } }, hide: { placeholder: function () { g.verbose("Hiding placeholder"), r.css("display", "none").css("visibility", "") } }, set: { fixed: function () { g.verbose("Setting element to fixed position"), k.addClass(v.fixed).css({ position: "fixed", top: p.offset + "px", left: "auto", zIndex: "1" }) }, image: function (t) { k.attr("src", t), p.transition ? e.fn.transition !== i ? k.transition(p.transition, p.duration) : k.fadeIn(p.duration) : k.show() } }, is: { onScreen: function () { return g.get.elementCalculations().onScreen }, offScreen: function () { return g.get.elementCalculations().offScreen }, visible: function () { return !(!g.cache || !g.cache.element) && !(0 === g.cache.element.width && 0 === g.cache.element.offset.top) } }, refresh: function () { g.debug("Refreshing constants (width/height)"), "fixed" == p.type && (g.remove.fixed(), g.remove.occurred()), g.reset(), g.save.position(), p.checkOnRefresh && g.checkVisibility(), p.onRefresh.call(R) }, reset: function () { g.verbose("Reseting all cached values"), e.isPlainObject(g.cache) && (g.cache.screen = {}, g.cache.element = {}) }, checkVisibility: function (e) { g.verbose("Checking visibility of element", g.cache.element), !E && g.is.visible() && (g.save.scroll(e), g.save.calculations(), g.passed(), g.passingReverse(), g.topVisibleReverse(), g.bottomVisibleReverse(), g.topPassedReverse(), g.bottomPassedReverse(), g.onScreen(), g.offScreen(), g.passing(), g.topVisible(), g.bottomVisible(), g.topPassed(), g.bottomPassed(), p.onUpdate && p.onUpdate.call(R, g.get.elementCalculations())) }, passed: function (t, n) { var o = g.get.elementCalculations(); if (t && n) p.onPassed[t] = n; else { if (t !== i) return g.get.pixelsPassed(t) > o.pixelsPassed; o.passing && e.each(p.onPassed, function (e, t) { o.bottomVisible || o.pixelsPassed > g.get.pixelsPassed(e) ? g.execute(t, e) : p.once || g.remove.occurred(t) }) } }, onScreen: function (e) { var t = g.get.elementCalculations(), n = e || p.onOnScreen, o = "onScreen"; return e && (g.debug("Adding callback for onScreen", e), p.onOnScreen = e), t.onScreen ? g.execute(n, o) : p.once || g.remove.occurred(o), e !== i ? t.onOnScreen : void 0 }, offScreen: function (e) { var t = g.get.elementCalculations(), n = e || p.onOffScreen, o = "offScreen"; return e && (g.debug("Adding callback for offScreen", e), p.onOffScreen = e), t.offScreen ? g.execute(n, o) : p.once || g.remove.occurred(o), e !== i ? t.onOffScreen : void 0 }, passing: function (e) { var t = g.get.elementCalculations(), n = e || p.onPassing, o = "passing"; return e && (g.debug("Adding callback for passing", e), p.onPassing = e), t.passing ? g.execute(n, o) : p.once || g.remove.occurred(o), e !== i ? t.passing : void 0 }, topVisible: function (e) { var t = g.get.elementCalculations(), n = e || p.onTopVisible, o = "topVisible"; return e && (g.debug("Adding callback for top visible", e), p.onTopVisible = e), t.topVisible ? g.execute(n, o) : p.once || g.remove.occurred(o), e === i ? t.topVisible : void 0 }, bottomVisible: function (e) { var t = g.get.elementCalculations(), n = e || p.onBottomVisible, o = "bottomVisible"; return e && (g.debug("Adding callback for bottom visible", e), p.onBottomVisible = e), t.bottomVisible ? g.execute(n, o) : p.once || g.remove.occurred(o), e === i ? t.bottomVisible : void 0 }, topPassed: function (e) { var t = g.get.elementCalculations(), n = e || p.onTopPassed, o = "topPassed"; return e && (g.debug("Adding callback for top passed", e), p.onTopPassed = e), t.topPassed ? g.execute(n, o) : p.once || g.remove.occurred(o), e === i ? t.topPassed : void 0 }, bottomPassed: function (e) { var t = g.get.elementCalculations(), n = e || p.onBottomPassed, o = "bottomPassed"; return e && (g.debug("Adding callback for bottom passed", e), p.onBottomPassed = e), t.bottomPassed ? g.execute(n, o) : p.once || g.remove.occurred(o), e === i ? t.bottomPassed : void 0 }, passingReverse: function (e) { var t = g.get.elementCalculations(), n = e || p.onPassingReverse, o = "passingReverse"; return e && (g.debug("Adding callback for passing reverse", e), p.onPassingReverse = e), t.passing ? p.once || g.remove.occurred(o) : g.get.occurred("passing") && g.execute(n, o), e !== i ? !t.passing : void 0 }, topVisibleReverse: function (e) { var t = g.get.elementCalculations(), n = e || p.onTopVisibleReverse, o = "topVisibleReverse"; return e && (g.debug("Adding callback for top visible reverse", e), p.onTopVisibleReverse = e), t.topVisible ? p.once || g.remove.occurred(o) : g.get.occurred("topVisible") && g.execute(n, o), e === i ? !t.topVisible : void 0 }, bottomVisibleReverse: function (e) { var t = g.get.elementCalculations(), n = e || p.onBottomVisibleReverse, o = "bottomVisibleReverse"; return e && (g.debug("Adding callback for bottom visible reverse", e), p.onBottomVisibleReverse = e), t.bottomVisible ? p.once || g.remove.occurred(o) : g.get.occurred("bottomVisible") && g.execute(n, o), e === i ? !t.bottomVisible : void 0 }, topPassedReverse: function (e) { var t = g.get.elementCalculations(), n = e || p.onTopPassedReverse, o = "topPassedReverse"; return e && (g.debug("Adding callback for top passed reverse", e), p.onTopPassedReverse = e), t.topPassed ? p.once || g.remove.occurred(o) : g.get.occurred("topPassed") && g.execute(n, o), e === i ? !t.onTopPassed : void 0 }, bottomPassedReverse: function (e) { var t = g.get.elementCalculations(), n = e || p.onBottomPassedReverse, o = "bottomPassedReverse"; return e && (g.debug("Adding callback for bottom passed reverse", e), p.onBottomPassedReverse = e), t.bottomPassed ? p.once || g.remove.occurred(o) : g.get.occurred("bottomPassed") && g.execute(n, o), e === i ? !t.bottomPassed : void 0 }, execute: function (e, t) { var n = g.get.elementCalculations(), i = g.get.screenCalculations(); (e = e || !1) && (p.continuous ? (g.debug("Callback being called continuously", t, n), e.call(R, n, i)) : g.get.occurred(t) || (g.debug("Conditions met", t, n), e.call(R, n, i))), g.save.occurred(t) }, remove: { fixed: function () { g.debug("Removing fixed position"), k.removeClass(v.fixed).css({ position: "", top: "", left: "", zIndex: "" }) }, occurred: function (e) { if (e) { var t = g.cache.occurred; t[e] !== i && !0 === t[e] && (g.debug("Callback can now be called again", e), g.cache.occurred[e] = !1) } else g.cache.occurred = {} } }, save: { calculations: function () { g.verbose("Saving all calculations necessary to determine positioning"), g.save.direction(), g.save.screenCalculations(), g.save.elementCalculations() }, occurred: function (e) { e && (g.cache.occurred[e] === i || !0 !== g.cache.occurred[e]) && (g.verbose("Saving callback occurred", e), g.cache.occurred[e] = !0) }, scroll: function (e) { e = e + p.offset || S.scrollTop() + p.offset, g.cache.scroll = e }, direction: function () { var e, t = g.get.scroll(), n = g.get.lastScroll(); return e = t > n && n ? "down" : n > t && n ? "up" : "static", g.cache.direction = e, g.cache.direction }, elementPosition: function () { var e = g.cache.element, t = g.get.screenSize(); return g.verbose("Saving element position"), e.fits = e.height < t.height, e.offset = k.offset(), e.width = k.outerWidth(), e.height = k.outerHeight(), g.cache.element = e, e }, elementCalculations: function () { var e = g.get.screenCalculations(), t = g.get.elementPosition(); return p.includeMargin ? (t.margin = {}, t.margin.top = parseInt(k.css("margin-top"), 10), t.margin.bottom = parseInt(k.css("margin-bottom"), 10), t.top = t.offset.top - t.margin.top, t.bottom = t.offset.top + t.height + t.margin.bottom) : (t.top = t.offset.top, t.bottom = t.offset.top + t.height), t.topVisible = e.bottom >= t.top, t.topPassed = e.top >= t.top, t.bottomVisible = e.bottom >= t.bottom, t.bottomPassed = e.top >= t.bottom, t.pixelsPassed = 0, t.percentagePassed = 0, t.onScreen = t.topVisible && !t.bottomPassed, t.passing = t.topPassed && !t.bottomPassed, t.offScreen = !t.onScreen, t.passing && (t.pixelsPassed = e.top - t.top, t.percentagePassed = (e.top - t.top) / t.height), g.cache.element = t, g.verbose("Updated element calculations", t), t }, screenCalculations: function () { var e = g.get.scroll(); return g.save.direction(), g.cache.screen.top = e, g.cache.screen.bottom = e + g.cache.screen.height, g.cache.screen }, screenSize: function () { g.verbose("Saving window position"), g.cache.screen = { height: S.height() } }, position: function () { g.save.screenSize(), g.save.elementPosition() } }, get: { pixelsPassed: function (e) { var t = g.get.elementCalculations(); return e.search("%") > -1 ? t.height * (parseInt(e, 10) / 100) : parseInt(e, 10) }, occurred: function (e) { return g.cache.occurred !== i && g.cache.occurred[e] || !1 }, direction: function () { return g.cache.direction === i && g.save.direction(), g.cache.direction }, elementPosition: function () { return g.cache.element === i && g.save.elementPosition(), g.cache.element }, elementCalculations: function () { return g.cache.element === i && g.save.elementCalculations(), g.cache.element }, screenCalculations: function () { return g.cache.screen === i && g.save.screenCalculations(), g.cache.screen }, screenSize: function () { return g.cache.screen === i && g.save.screenSize(), g.cache.screen }, scroll: function () { return g.cache.scroll === i && g.save.scroll(), g.cache.scroll }, lastScroll: function () { return g.cache.screen === i ? (g.debug("First scroll event, no last scroll could be found"), !1) : g.cache.screen.top } }, setting: function (t, n) { if (e.isPlainObject(t)) e.extend(!0, p, t); else { if (n === i) return p[t]; p[t] = n } }, internal: function (t, n) { if (e.isPlainObject(t)) e.extend(!0, g, t); else { if (n === i) return g[t]; g[t] = n } }, debug: function () { p.debug && (p.performance ? g.performance.log(arguments) : (g.debug = Function.prototype.bind.call(console.info, console, p.name + ":"), g.debug.apply(console, arguments))) }, verbose: function () { p.verbose && p.debug && (p.performance ? g.performance.log(arguments) : (g.verbose = Function.prototype.bind.call(console.info, console, p.name + ":"), g.verbose.apply(console, arguments))) }, error: function () { g.error = Function.prototype.bind.call(console.error, console, p.name + ":"), g.error.apply(console, arguments) }, performance: { log: function (e) { var t, n; p.performance && (n = (t = (new Date).getTime()) - (c || t), c = t, l.push({ Name: e[0], Arguments: [].slice.call(e, 1) || "", Element: R, "Execution Time": n })), clearTimeout(g.performance.timer), g.performance.timer = setTimeout(g.performance.display, 500) }, display: function () { var t = p.name + ":", n = 0; c = !1, clearTimeout(g.performance.timer), e.each(l, function (e, t) { n += t["Execution Time"] }), t += " " + n + "ms", s && (t += " '" + s + "'"), (console.group !== i || console.table !== i) && l.length > 0 && (console.groupCollapsed(t), console.table ? console.table(l) : e.each(l, function (e, t) { console.log(t.Name + ": " + t["Execution Time"] + "ms") }), console.groupEnd()), l = [] } }, invoke: function (t, n, o) { var r, s, c, l = T; return n = n || f, o = R || o, "string" == typeof t && l !== i && (t = t.split(/[\. ]/), r = t.length - 1, e.each(t, function (n, o) { var a = n != r ? o + t[n + 1].charAt(0).toUpperCase() + t[n + 1].slice(1) : t; if (e.isPlainObject(l[a]) && n != r) l = l[a]; else { if (l[a] !== i) return s = l[a], !1; if (!e.isPlainObject(l[o]) || n == r) return l[o] !== i ? (s = l[o], !1) : (g.error(b.method, t), !1); l = l[o] } })), e.isFunction(s) ? c = s.apply(o, n) : s !== i && (c = s), e.isArray(a) ? a.push(c) : a !== i ? a = [a, c] : c !== i && (a = c), s } }, d ? (T === i && g.initialize(), T.save.scroll(), T.save.calculations(), g.invoke(u)) : (T !== i && T.invoke("destroy"), g.initialize()) }), a !== i ? a : this }, e.fn.visibility.settings = { name: "Visibility", namespace: "visibility", debug: !1, verbose: !1, performance: !0, observeChanges: !0, initialCheck: !0, refreshOnLoad: !0, refreshOnResize: !0, checkOnRefresh: !0, once: !0, continuous: !1, offset: 0, includeMargin: !1, context: t, throttle: !1, type: !1, transition: "fade in", duration: 1e3, onPassed: {}, onOnScreen: !1, onOffScreen: !1, onPassing: !1, onTopVisible: !1, onBottomVisible: !1, onTopPassed: !1, onBottomPassed: !1, onPassingReverse: !1, onTopVisibleReverse: !1, onBottomVisibleReverse: !1, onTopPassedReverse: !1, onBottomPassedReverse: !1, onUpdate: !1, onRefresh: function () { }, metadata: { src: "src" }, className: { fixed: "fixed", placeholder: "placeholder" }, error: { method: "The method you called is not defined.", visible: "Element is hidden, you must call refresh after element becomes visible" } } }(jQuery, window, document);






//ruleup-aes.js start

var CryptoJS = CryptoJS || function (u, p) { var d = {}, l = d.lib = {}, s = function () { }, t = l.Base = { extend: function (a) { s.prototype = this; var c = new s; a && c.mixIn(a); c.hasOwnProperty("init") || (c.init = function () { c.$super.init.apply(this, arguments) }); c.init.prototype = c; c.$super = this; return c }, create: function () { var a = this.extend(); a.init.apply(a, arguments); return a }, init: function () { }, mixIn: function (a) { for (var c in a) a.hasOwnProperty(c) && (this[c] = a[c]); a.hasOwnProperty("toString") && (this.toString = a.toString) }, clone: function () { return this.init.prototype.extend(this) } }, r = l.WordArray = t.extend({ init: function (a, c) { a = this.words = a || []; this.sigBytes = c != p ? c : 4 * a.length }, toString: function (a) { return (a || v).stringify(this) }, concat: function (a) { var c = this.words, e = a.words, j = this.sigBytes; a = a.sigBytes; this.clamp(); if (j % 4) for (var k = 0; k < a; k++)c[j + k >>> 2] |= (e[k >>> 2] >>> 24 - 8 * (k % 4) & 255) << 24 - 8 * ((j + k) % 4); else if (65535 < e.length) for (k = 0; k < a; k += 4)c[j + k >>> 2] = e[k >>> 2]; else c.push.apply(c, e); this.sigBytes += a; return this }, clamp: function () { var a = this.words, c = this.sigBytes; a[c >>> 2] &= 4294967295 << 32 - 8 * (c % 4); a.length = u.ceil(c / 4) }, clone: function () { var a = t.clone.call(this); a.words = this.words.slice(0); return a }, random: function (a) { for (var c = [], e = 0; e < a; e += 4)c.push(4294967296 * u.random() | 0); return new r.init(c, a) } }), w = d.enc = {}, v = w.Hex = { stringify: function (a) { var c = a.words; a = a.sigBytes; for (var e = [], j = 0; j < a; j++) { var k = c[j >>> 2] >>> 24 - 8 * (j % 4) & 255; e.push((k >>> 4).toString(16)); e.push((k & 15).toString(16)) } return e.join("") }, parse: function (a) { for (var c = a.length, e = [], j = 0; j < c; j += 2)e[j >>> 3] |= parseInt(a.substr(j, 2), 16) << 24 - 4 * (j % 8); return new r.init(e, c / 2) } }, b = w.Latin1 = { stringify: function (a) { var c = a.words; a = a.sigBytes; for (var e = [], j = 0; j < a; j++)e.push(String.fromCharCode(c[j >>> 2] >>> 24 - 8 * (j % 4) & 255)); return e.join("") }, parse: function (a) { for (var c = a.length, e = [], j = 0; j < c; j++)e[j >>> 2] |= (a.charCodeAt(j) & 255) << 24 - 8 * (j % 4); return new r.init(e, c) } }, x = w.Utf8 = { stringify: function (a) { try { return decodeURIComponent(escape(b.stringify(a))) } catch (c) { throw Error("Malformed UTF-8 data"); } }, parse: function (a) { return b.parse(unescape(encodeURIComponent(a))) } }, q = l.BufferedBlockAlgorithm = t.extend({ reset: function () { this._data = new r.init; this._nDataBytes = 0 }, _append: function (a) { "string" == typeof a && (a = x.parse(a)); this._data.concat(a); this._nDataBytes += a.sigBytes }, _process: function (a) { var c = this._data, e = c.words, j = c.sigBytes, k = this.blockSize, b = j / (4 * k), b = a ? u.ceil(b) : u.max((b | 0) - this._minBufferSize, 0); a = b * k; j = u.min(4 * a, j); if (a) { for (var q = 0; q < a; q += k)this._doProcessBlock(e, q); q = e.splice(0, a); c.sigBytes -= j } return new r.init(q, j) }, clone: function () { var a = t.clone.call(this); a._data = this._data.clone(); return a }, _minBufferSize: 0 }); l.Hasher = q.extend({ cfg: t.extend(), init: function (a) { this.cfg = this.cfg.extend(a); this.reset() }, reset: function () { q.reset.call(this); this._doReset() }, update: function (a) { this._append(a); this._process(); return this }, finalize: function (a) { a && this._append(a); return this._doFinalize() }, blockSize: 16, _createHelper: function (a) { return function (b, e) { return (new a.init(e)).finalize(b) } }, _createHmacHelper: function (a) { return function (b, e) { return (new n.HMAC.init(a, e)).finalize(b) } } }); var n = d.algo = {}; return d }(Math); (function () { var u = CryptoJS, p = u.lib.WordArray; u.enc.Base64 = { stringify: function (d) { var l = d.words, p = d.sigBytes, t = this._map; d.clamp(); d = []; for (var r = 0; r < p; r += 3)for (var w = (l[r >>> 2] >>> 24 - 8 * (r % 4) & 255) << 16 | (l[r + 1 >>> 2] >>> 24 - 8 * ((r + 1) % 4) & 255) << 8 | l[r + 2 >>> 2] >>> 24 - 8 * ((r + 2) % 4) & 255, v = 0; 4 > v && r + 0.75 * v < p; v++)d.push(t.charAt(w >>> 6 * (3 - v) & 63)); if (l = t.charAt(64)) for (; d.length % 4;)d.push(l); return d.join("") }, parse: function (d) { var l = d.length, s = this._map, t = s.charAt(64); t && (t = d.indexOf(t), -1 != t && (l = t)); for (var t = [], r = 0, w = 0; w < l; w++)if (w % 4) { var v = s.indexOf(d.charAt(w - 1)) << 2 * (w % 4), b = s.indexOf(d.charAt(w)) >>> 6 - 2 * (w % 4); t[r >>> 2] |= (v | b) << 24 - 8 * (r % 4); r++ } return p.create(t, r) }, _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=" } })(); (function (u) {
    function p(b, n, a, c, e, j, k) { b = b + (n & a | ~n & c) + e + k; return (b << j | b >>> 32 - j) + n } function d(b, n, a, c, e, j, k) { b = b + (n & c | a & ~c) + e + k; return (b << j | b >>> 32 - j) + n } function l(b, n, a, c, e, j, k) { b = b + (n ^ a ^ c) + e + k; return (b << j | b >>> 32 - j) + n } function s(b, n, a, c, e, j, k) { b = b + (a ^ (n | ~c)) + e + k; return (b << j | b >>> 32 - j) + n } for (var t = CryptoJS, r = t.lib, w = r.WordArray, v = r.Hasher, r = t.algo, b = [], x = 0; 64 > x; x++)b[x] = 4294967296 * u.abs(u.sin(x + 1)) | 0; r = r.MD5 = v.extend({
        _doReset: function () { this._hash = new w.init([1732584193, 4023233417, 2562383102, 271733878]) }, _doProcessBlock: function (q, n) { for (var a = 0; 16 > a; a++) { var c = n + a, e = q[c]; q[c] = (e << 8 | e >>> 24) & 16711935 | (e << 24 | e >>> 8) & 4278255360 } var a = this._hash.words, c = q[n + 0], e = q[n + 1], j = q[n + 2], k = q[n + 3], z = q[n + 4], r = q[n + 5], t = q[n + 6], w = q[n + 7], v = q[n + 8], A = q[n + 9], B = q[n + 10], C = q[n + 11], u = q[n + 12], D = q[n + 13], E = q[n + 14], x = q[n + 15], f = a[0], m = a[1], g = a[2], h = a[3], f = p(f, m, g, h, c, 7, b[0]), h = p(h, f, m, g, e, 12, b[1]), g = p(g, h, f, m, j, 17, b[2]), m = p(m, g, h, f, k, 22, b[3]), f = p(f, m, g, h, z, 7, b[4]), h = p(h, f, m, g, r, 12, b[5]), g = p(g, h, f, m, t, 17, b[6]), m = p(m, g, h, f, w, 22, b[7]), f = p(f, m, g, h, v, 7, b[8]), h = p(h, f, m, g, A, 12, b[9]), g = p(g, h, f, m, B, 17, b[10]), m = p(m, g, h, f, C, 22, b[11]), f = p(f, m, g, h, u, 7, b[12]), h = p(h, f, m, g, D, 12, b[13]), g = p(g, h, f, m, E, 17, b[14]), m = p(m, g, h, f, x, 22, b[15]), f = d(f, m, g, h, e, 5, b[16]), h = d(h, f, m, g, t, 9, b[17]), g = d(g, h, f, m, C, 14, b[18]), m = d(m, g, h, f, c, 20, b[19]), f = d(f, m, g, h, r, 5, b[20]), h = d(h, f, m, g, B, 9, b[21]), g = d(g, h, f, m, x, 14, b[22]), m = d(m, g, h, f, z, 20, b[23]), f = d(f, m, g, h, A, 5, b[24]), h = d(h, f, m, g, E, 9, b[25]), g = d(g, h, f, m, k, 14, b[26]), m = d(m, g, h, f, v, 20, b[27]), f = d(f, m, g, h, D, 5, b[28]), h = d(h, f, m, g, j, 9, b[29]), g = d(g, h, f, m, w, 14, b[30]), m = d(m, g, h, f, u, 20, b[31]), f = l(f, m, g, h, r, 4, b[32]), h = l(h, f, m, g, v, 11, b[33]), g = l(g, h, f, m, C, 16, b[34]), m = l(m, g, h, f, E, 23, b[35]), f = l(f, m, g, h, e, 4, b[36]), h = l(h, f, m, g, z, 11, b[37]), g = l(g, h, f, m, w, 16, b[38]), m = l(m, g, h, f, B, 23, b[39]), f = l(f, m, g, h, D, 4, b[40]), h = l(h, f, m, g, c, 11, b[41]), g = l(g, h, f, m, k, 16, b[42]), m = l(m, g, h, f, t, 23, b[43]), f = l(f, m, g, h, A, 4, b[44]), h = l(h, f, m, g, u, 11, b[45]), g = l(g, h, f, m, x, 16, b[46]), m = l(m, g, h, f, j, 23, b[47]), f = s(f, m, g, h, c, 6, b[48]), h = s(h, f, m, g, w, 10, b[49]), g = s(g, h, f, m, E, 15, b[50]), m = s(m, g, h, f, r, 21, b[51]), f = s(f, m, g, h, u, 6, b[52]), h = s(h, f, m, g, k, 10, b[53]), g = s(g, h, f, m, B, 15, b[54]), m = s(m, g, h, f, e, 21, b[55]), f = s(f, m, g, h, v, 6, b[56]), h = s(h, f, m, g, x, 10, b[57]), g = s(g, h, f, m, t, 15, b[58]), m = s(m, g, h, f, D, 21, b[59]), f = s(f, m, g, h, z, 6, b[60]), h = s(h, f, m, g, C, 10, b[61]), g = s(g, h, f, m, j, 15, b[62]), m = s(m, g, h, f, A, 21, b[63]); a[0] = a[0] + f | 0; a[1] = a[1] + m | 0; a[2] = a[2] + g | 0; a[3] = a[3] + h | 0 }, _doFinalize: function () {
            var b = this._data, n = b.words, a = 8 * this._nDataBytes, c = 8 * b.sigBytes; n[c >>> 5] |= 128 << 24 - c % 32; var e = u.floor(a /
                4294967296); n[(c + 64 >>> 9 << 4) + 15] = (e << 8 | e >>> 24) & 16711935 | (e << 24 | e >>> 8) & 4278255360; n[(c + 64 >>> 9 << 4) + 14] = (a << 8 | a >>> 24) & 16711935 | (a << 24 | a >>> 8) & 4278255360; b.sigBytes = 4 * (n.length + 1); this._process(); b = this._hash; n = b.words; for (a = 0; 4 > a; a++)c = n[a], n[a] = (c << 8 | c >>> 24) & 16711935 | (c << 24 | c >>> 8) & 4278255360; return b
        }, clone: function () { var b = v.clone.call(this); b._hash = this._hash.clone(); return b }
    }); t.MD5 = v._createHelper(r); t.HmacMD5 = v._createHmacHelper(r)
})(Math); (function () { var u = CryptoJS, p = u.lib, d = p.Base, l = p.WordArray, p = u.algo, s = p.EvpKDF = d.extend({ cfg: d.extend({ keySize: 4, hasher: p.MD5, iterations: 1 }), init: function (d) { this.cfg = this.cfg.extend(d) }, compute: function (d, r) { for (var p = this.cfg, s = p.hasher.create(), b = l.create(), u = b.words, q = p.keySize, p = p.iterations; u.length < q;) { n && s.update(n); var n = s.update(d).finalize(r); s.reset(); for (var a = 1; a < p; a++)n = s.finalize(n), s.reset(); b.concat(n) } b.sigBytes = 4 * q; return b } }); u.EvpKDF = function (d, l, p) { return s.create(p).compute(d, l) } })(); CryptoJS.lib.Cipher || function (u) { var p = CryptoJS, d = p.lib, l = d.Base, s = d.WordArray, t = d.BufferedBlockAlgorithm, r = p.enc.Base64, w = p.algo.EvpKDF, v = d.Cipher = t.extend({ cfg: l.extend(), createEncryptor: function (e, a) { return this.create(this._ENC_XFORM_MODE, e, a) }, createDecryptor: function (e, a) { return this.create(this._DEC_XFORM_MODE, e, a) }, init: function (e, a, b) { this.cfg = this.cfg.extend(b); this._xformMode = e; this._key = a; this.reset() }, reset: function () { t.reset.call(this); this._doReset() }, process: function (e) { this._append(e); return this._process() }, finalize: function (e) { e && this._append(e); return this._doFinalize() }, keySize: 4, ivSize: 4, _ENC_XFORM_MODE: 1, _DEC_XFORM_MODE: 2, _createHelper: function (e) { return { encrypt: function (b, k, d) { return ("string" == typeof k ? c : a).encrypt(e, b, k, d) }, decrypt: function (b, k, d) { return ("string" == typeof k ? c : a).decrypt(e, b, k, d) } } } }); d.StreamCipher = v.extend({ _doFinalize: function () { return this._process(!0) }, blockSize: 1 }); var b = p.mode = {}, x = function (e, a, b) { var c = this._iv; c ? this._iv = u : c = this._prevBlock; for (var d = 0; d < b; d++)e[a + d] ^= c[d] }, q = (d.BlockCipherMode = l.extend({ createEncryptor: function (e, a) { return this.Encryptor.create(e, a) }, createDecryptor: function (e, a) { return this.Decryptor.create(e, a) }, init: function (e, a) { this._cipher = e; this._iv = a } })).extend(); q.Encryptor = q.extend({ processBlock: function (e, a) { var b = this._cipher, c = b.blockSize; x.call(this, e, a, c); b.encryptBlock(e, a); this._prevBlock = e.slice(a, a + c) } }); q.Decryptor = q.extend({ processBlock: function (e, a) { var b = this._cipher, c = b.blockSize, d = e.slice(a, a + c); b.decryptBlock(e, a); x.call(this, e, a, c); this._prevBlock = d } }); b = b.CBC = q; q = (p.pad = {}).Pkcs7 = { pad: function (a, b) { for (var c = 4 * b, c = c - a.sigBytes % c, d = c << 24 | c << 16 | c << 8 | c, l = [], n = 0; n < c; n += 4)l.push(d); c = s.create(l, c); a.concat(c) }, unpad: function (a) { a.sigBytes -= a.words[a.sigBytes - 1 >>> 2] & 255 } }; d.BlockCipher = v.extend({ cfg: v.cfg.extend({ mode: b, padding: q }), reset: function () { v.reset.call(this); var a = this.cfg, b = a.iv, a = a.mode; if (this._xformMode == this._ENC_XFORM_MODE) var c = a.createEncryptor; else c = a.createDecryptor, this._minBufferSize = 1; this._mode = c.call(a, this, b && b.words) }, _doProcessBlock: function (a, b) { this._mode.processBlock(a, b) }, _doFinalize: function () { var a = this.cfg.padding; if (this._xformMode == this._ENC_XFORM_MODE) { a.pad(this._data, this.blockSize); var b = this._process(!0) } else b = this._process(!0), a.unpad(b); return b }, blockSize: 4 }); var n = d.CipherParams = l.extend({ init: function (a) { this.mixIn(a) }, toString: function (a) { return (a || this.formatter).stringify(this) } }), b = (p.format = {}).OpenSSL = { stringify: function (a) { var b = a.ciphertext; a = a.salt; return (a ? s.create([1398893684, 1701076831]).concat(a).concat(b) : b).toString(r) }, parse: function (a) { a = r.parse(a); var b = a.words; if (1398893684 == b[0] && 1701076831 == b[1]) { var c = s.create(b.slice(2, 4)); b.splice(0, 4); a.sigBytes -= 16 } return n.create({ ciphertext: a, salt: c }) } }, a = d.SerializableCipher = l.extend({ cfg: l.extend({ format: b }), encrypt: function (a, b, c, d) { d = this.cfg.extend(d); var l = a.createEncryptor(c, d); b = l.finalize(b); l = l.cfg; return n.create({ ciphertext: b, key: c, iv: l.iv, algorithm: a, mode: l.mode, padding: l.padding, blockSize: a.blockSize, formatter: d.format }) }, decrypt: function (a, b, c, d) { d = this.cfg.extend(d); b = this._parse(b, d.format); return a.createDecryptor(c, d).finalize(b.ciphertext) }, _parse: function (a, b) { return "string" == typeof a ? b.parse(a, this) : a } }), p = (p.kdf = {}).OpenSSL = { execute: function (a, b, c, d) { d || (d = s.random(8)); a = w.create({ keySize: b + c }).compute(a, d); c = s.create(a.words.slice(b), 4 * c); a.sigBytes = 4 * b; return n.create({ key: a, iv: c, salt: d }) } }, c = d.PasswordBasedCipher = a.extend({ cfg: a.cfg.extend({ kdf: p }), encrypt: function (b, c, d, l) { l = this.cfg.extend(l); d = l.kdf.execute(d, b.keySize, b.ivSize); l.iv = d.iv; b = a.encrypt.call(this, b, c, d.key, l); b.mixIn(d); return b }, decrypt: function (b, c, d, l) { l = this.cfg.extend(l); c = this._parse(c, l.format); d = l.kdf.execute(d, b.keySize, b.ivSize, c.salt); l.iv = d.iv; return a.decrypt.call(this, b, c, d.key, l) } }) }(); (function () { for (var u = CryptoJS, p = u.lib.BlockCipher, d = u.algo, l = [], s = [], t = [], r = [], w = [], v = [], b = [], x = [], q = [], n = [], a = [], c = 0; 256 > c; c++)a[c] = 128 > c ? c << 1 : c << 1 ^ 283; for (var e = 0, j = 0, c = 0; 256 > c; c++) { var k = j ^ j << 1 ^ j << 2 ^ j << 3 ^ j << 4, k = k >>> 8 ^ k & 255 ^ 99; l[e] = k; s[k] = e; var z = a[e], F = a[z], G = a[F], y = 257 * a[k] ^ 16843008 * k; t[e] = y << 24 | y >>> 8; r[e] = y << 16 | y >>> 16; w[e] = y << 8 | y >>> 24; v[e] = y; y = 16843009 * G ^ 65537 * F ^ 257 * z ^ 16843008 * e; b[k] = y << 24 | y >>> 8; x[k] = y << 16 | y >>> 16; q[k] = y << 8 | y >>> 24; n[k] = y; e ? (e = z ^ a[a[a[G ^ z]]], j ^= a[a[j]]) : e = j = 1 } var H = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54], d = d.AES = p.extend({ _doReset: function () { for (var a = this._key, c = a.words, d = a.sigBytes / 4, a = 4 * ((this._nRounds = d + 6) + 1), e = this._keySchedule = [], j = 0; j < a; j++)if (j < d) e[j] = c[j]; else { var k = e[j - 1]; j % d ? 6 < d && 4 == j % d && (k = l[k >>> 24] << 24 | l[k >>> 16 & 255] << 16 | l[k >>> 8 & 255] << 8 | l[k & 255]) : (k = k << 8 | k >>> 24, k = l[k >>> 24] << 24 | l[k >>> 16 & 255] << 16 | l[k >>> 8 & 255] << 8 | l[k & 255], k ^= H[j / d | 0] << 24); e[j] = e[j - d] ^ k } c = this._invKeySchedule = []; for (d = 0; d < a; d++)j = a - d, k = d % 4 ? e[j] : e[j - 4], c[d] = 4 > d || 4 >= j ? k : b[l[k >>> 24]] ^ x[l[k >>> 16 & 255]] ^ q[l[k >>> 8 & 255]] ^ n[l[k & 255]] }, encryptBlock: function (a, b) { this._doCryptBlock(a, b, this._keySchedule, t, r, w, v, l) }, decryptBlock: function (a, c) { var d = a[c + 1]; a[c + 1] = a[c + 3]; a[c + 3] = d; this._doCryptBlock(a, c, this._invKeySchedule, b, x, q, n, s); d = a[c + 1]; a[c + 1] = a[c + 3]; a[c + 3] = d }, _doCryptBlock: function (a, b, c, d, e, j, l, f) { for (var m = this._nRounds, g = a[b] ^ c[0], h = a[b + 1] ^ c[1], k = a[b + 2] ^ c[2], n = a[b + 3] ^ c[3], p = 4, r = 1; r < m; r++)var q = d[g >>> 24] ^ e[h >>> 16 & 255] ^ j[k >>> 8 & 255] ^ l[n & 255] ^ c[p++], s = d[h >>> 24] ^ e[k >>> 16 & 255] ^ j[n >>> 8 & 255] ^ l[g & 255] ^ c[p++], t = d[k >>> 24] ^ e[n >>> 16 & 255] ^ j[g >>> 8 & 255] ^ l[h & 255] ^ c[p++], n = d[n >>> 24] ^ e[g >>> 16 & 255] ^ j[h >>> 8 & 255] ^ l[k & 255] ^ c[p++], g = q, h = s, k = t; q = (f[g >>> 24] << 24 | f[h >>> 16 & 255] << 16 | f[k >>> 8 & 255] << 8 | f[n & 255]) ^ c[p++]; s = (f[h >>> 24] << 24 | f[k >>> 16 & 255] << 16 | f[n >>> 8 & 255] << 8 | f[g & 255]) ^ c[p++]; t = (f[k >>> 24] << 24 | f[n >>> 16 & 255] << 16 | f[g >>> 8 & 255] << 8 | f[h & 255]) ^ c[p++]; n = (f[n >>> 24] << 24 | f[g >>> 16 & 255] << 16 | f[h >>> 8 & 255] << 8 | f[k & 255]) ^ c[p++]; a[b] = q; a[b + 1] = s; a[b + 2] = t; a[b + 3] = n }, keySize: 8 }); u.AES = p._createHelper(d) })();

//ruleup-aes.js end


//term-app-new.js start

var app = angular.module('App', []); app.constant('globals', { api: 'pankaj', fershDeskURL: 'https://insurejoy.freshdesk.com/helpdesk/tickets.json', encryptionKey: '9080706050403020', encryptionIv: '1020304080706050', staticKey: 'IG006072021', RedirectURL: "https://qa.indiacover360.com/Application/", ServiceURL: "https://apiqa.indiacover360.com", IGwServiceURL: "https://apiqa.indiacover360.com", UIURL: "https://qa.indiacover360.com/HomePage", landingPage: "https://qa.indiacover360.com", mainPage: "https://qa.indiacover360.com/Application/?CPID=", }); app.run(function ($window, $rootScope) { $rootScope.online = navigator.onLine; $window.addEventListener("offline", function () { $rootScope.$apply(function () { $rootScope.online = !1 }) }, !1); $rootScope.$on('$locationChangeSuccess', function (event, absNewUrl, absOldUrl) { if (absOldUrl != absNewUrl) { if (absNewUrl.indexOf("OTP") != -1) { $rootScope.popredirect(1) } else { $rootScope.popredirect(2) } } }) }); app.controller('MainController', ["$scope", "$sce", "$rootScope", "globals", "$http", "CommonService", "$document", "$location", "$timeout", "$window", "$filter", "ValidationFactory", "$interval", function ($scope, $sce, $rootScope, globals, $http, CommonService, $document, $location, $timeout, $window, $filter, ValidationFactory, $interval) {
$scope.genderList = [{ value: 'M', text: 'Male' }, { value: 'F', text: 'Female' }]; $scope.annualIncomeList = []; $scope.termDetails = { income: '500000', age: '28', name: '', mobile: '', pincode: '', gender: 'M', city: '', salutation: 'Mr' }; $scope.errors = {}; $scope.disablePin = true; $scope.getAge = function (dateString) {
    var today = new Date(); var tempage = dateString.split("-"); var birthDate = new Date(parseInt(tempage[2]), (parseInt(tempage[0]) - 1), parseInt(tempage[1])); var age = today.getFullYear() - birthDate.getFullYear(); var m = today.getMonth() - birthDate.getMonth(); if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) { age-- }
    return age
}
    function getincomeList() {
        let count = 4; for (let i = 400000; i <= 10000000; i = i + 100000) {
            if (count < 100) { $scope.annualIncomeList.push({ value: i, text: count + ' Lacs' }); }
            else { $scope.annualIncomeList.push({ value: i, text: '1 Crore' }); }
            count++;
        }
    }
    function getCityList() { $scope.cityList = []; $scope.CityValue = false; CommonService.citylist($scope).then(function (res) { if (res.data) { let city = res.data; for (let i = 0; i < city.length; i++) { city[i].CityStateName = city[i].City + ", " + city[i].State; $scope.cityList.push(city[i]); } } }) }
    function getPincodeList() { $scope.pincodeList = []; CommonService.pincodeList($scope).then(function (res) { if (res.data) { $scope.disablePin = false; $scope.pincodeList = res.data; } }) }
    $scope.submitleadform = function () {
        if ($scope.userOTP != undefined) { $scope.wrongotpmsgshow = !1 } else { $scope.wrongotpmsgshow = !0 }
        if ($scope.userOTP == undefined || $scope.userOTP == "" || $scope.userOTP == null) { $scope.wrongotpmsgshow = !0; $scope.wrongotpmsg = "Enter Correct OTP" } else { $scope.wrongotpmsgshow = !1; $scope.leadcreationfn7() }
    }
    $scope.otpFn = function (flag, flag1) {
        if (flag == 2) { $scope.resendFlag = true; $scope.wrongotpmsgshow = false; $scope.otpText = "Successfully Re-sent the One Time Password to your mobile number"; }
        else {
        $scope.resendFlag = false; var tempmobile = $scope.termDetails.mobile; if (flag1 == 3)
            $scope.termDetails.mobile = $scope.termDetails.newMobile;
        }
        $scope.errors.mobile = false; $scope.leadcreaterequestdata.RequestString.LeadCreateRequest.User.UserName = "IGTERM2016"; $scope.leadcreaterequestdata.RequestString.LeadCreateRequest.User.UserPassword = "IG@TERM@2016"; $scope.otpcreaterequestdata.RequestString.OTPValidationRequest.User.UserName = "IGTERM2016"; $scope.otpcreaterequestdata.RequestString.OTPValidationRequest.User.UserPassword = "IG@TERM@2016"; $scope.leadcreaterequestdata.RequestString.LeadCreateRequest.Products.product[0].productid = 3; $scope.otpcreaterequestdata.RequestString.OTPValidationRequest.User.Productid = 3; $scope.leadcreaterequestdata.RequestString.LeadCreateRequest.Visitor.leads.lead[0].leadId = $scope.IGQuoteId; $scope.leadcreaterequestdata.RequestString.LeadCreateRequest.Visitor.Name = $scope.termDetails.name; $scope.leadcreaterequestdata.RequestString.LeadCreateRequest.Visitor.EmailId = "2018@xyz.com"; $scope.leadcreaterequestdata.RequestString.LeadCreateRequest.Visitor.MobileNo = $scope.termDetails.mobile; var resendFlag = CommonService.SendOTPReboot($scope, globals); resendFlag.then(function (result) {
            console.log(result); var token = result.data.TokenId; $scope.otpcreaterequestdata.RequestString.OTPValidationRequest.OTPValidation.Tokenid = token; $scope.otpcreaterequestdata.RequestString.OTPValidationRequest.OTPValidation.Mobile = $scope.termDetails.mobile; $scope.leadcreaterequestdata.RequestString.LeadCreateRequest.Visitor.OriginPageid = 0; $scope.leadcreaterequestdata.RequestString.LeadCreateRequest.Visitor.IsCallBackRequire = "false"; if (result.data.IsVerified == true) { $scope.leadcreaterequestdata.RequestString.LeadCreateRequest.User.Tokenid = token; $scope.leadcreaterequestdata.RequestString.LeadCreateRequest.Visitor.MobileNo = $scope.termDetails.mobile; $scope.leadcreationfn4(token); }
            else if (result.data.Message == "success") { $scope.otpPopup = true; $scope.otpMobile = true; $scope.updateMobile = false; $scope.updateLoader = false; $scope.showbtnleadloader = false; $scope.errors.mobile = false; $scope.errors.newMobile = false; }
            else if (result.data.Message == "Proceed to the quotes page without OTP verification") { $window.location.href = globals.RedirectURL + "Term?CPID=" + btoa($scope.IGQuoteId) }
            else {
            $scope.showbtnleadloader = false; $scope.updateLoader = false; if (flag1 == 3) { $scope.termDetails.mobile = tempmobile; $scope.errors.newMobile = true; $scope.errors.newMobileMessage = result.data.Message; }
            else { $scope.errors.mobileMessage = result.data.Message; $scope.errors.mobile = true; }
            }
        }, function () { $scope.showbtnleadloader = false; $scope.updateLoader = false; });
    }
    $scope.leadcreationfn7 = function () {
        $scope.otpcreaterequestdata.RequestString.OTPValidationRequest.OTPValidation.OTP = $scope.userOTP; var response = CommonService.GetMobileVerificationWithOTPRequest2($scope.otpcreaterequestdata); $scope.otpLoader = true; $scope.wrongotpmsgshow = false; response.then(function (result) {
            console.log(result); result.data = [angular.fromJson(result.data)]; $scope.leadcreaterequestdata.RequestString.LeadCreateRequest.User.Tokenid = result.data[0].data.Token.Tokenid; $scope.leadcreaterequestdata.RequestString.LeadCreateRequest.Visitor.MobileNo = $scope.termDetails.mobile; if (result.data[0].data.Error.ErrorCode == 1) { $scope.wrongotpmsg = "Enter Correct OTP"; $scope.wrongotpmsgshow = true; $scope.otpLoader = false; } else {
                $scope.leadcreationfn4(result.data)
                window.dataLayer = window.dataLayer || []; window.dataLayer.push({ 'event': 'LeadSubmit', 'LeadID': $scope.IGQuoteId, 'Product': 'Term Insurance' });
            }
        }, function () { $scope.otpLoader = false; });
    }
    $scope.leadcreationfn4 = function (value, flag) { var response = CommonService.GetMobileVerificationWithOTPRequest1($scope.leadcreaterequestdata); response.then(function (result) { console.log(result); result.data = [angular.fromJson(result.data)]; if (result.data[0].data.Error.ErrorCode == "0") { $window.location.href = globals.RedirectURL + "Term?CPID=" + btoa($scope.IGQuoteId) } }, function () { $scope.otpLoader = false; }); }
    $scope.calculateAgeInYear = function (insDOB, childDOB) { var date1 = new Date(insDOB); var date2 = new Date(childDOB); var diffDays = parseInt((date2 - date1) / (1000 * 60 * 60 * 24) / 365); return Math.abs(diffDays) }
    $scope.validation = function (id, flag) {
        if (id == 'age') {
            if (!$scope.termDetails.age) { $scope.errors.age = true; $scope.errors.ageMessage = "Age is required." }
            else { $scope.errors.age = false; }
            return $scope.errors.age;
        }
        else if (id == 'income') {
            if (!$scope.termDetails.income) { $scope.errors.income = true; $scope.errors.incomeMessage = "Annual Income is required." }
            else { $scope.errors.income = false; $scope.calculateSumAssuredRange($scope.termDetails.income); }
            return $scope.errors.income;
        }
        else if (id == 'name') {
            if (!$scope.termDetails.name) { $scope.errors.name = true; $scope.errors.nameMessage = "Name is required." }
            else { $scope.errors.name = false; }
            return $scope.errors.name;
        }
        else if (id == 'mobile') {
            if (!$scope.termDetails.mobile) { $scope.errors.mobile = true; $scope.errors.mobileMessage = "Mobile No. is required" }
            else if (ValidationFactory.mobilevalidate($scope.termDetails.mobile) != 'True') { $scope.errors.mobile = true; $scope.errors.mobileMessage = "Invalid Mobile No." }
            else if ($scope.termDetails.mobile.length < 10) { $scope.errors.mobile = true; $scope.errors.mobileMessage = "Mobile no. must be 10 digits." }
            else { $scope.errors.mobile = false; }
            return $scope.errors.mobile;
        }
        else if (id == 'newmobile') {
            if (!$scope.termDetails.newMobile) { $scope.errors.newMobile = true; $scope.errors.newMobileMessage = "Mobile No. is required" }
            else if (ValidationFactory.mobilevalidate($scope.termDetails.newMobile) != 'True') { $scope.errors.newMobile = true; $scope.errors.newMobileMessage = "Invalid Mobile No." }
            else if ($scope.termDetails.newMobile.length < 10) { $scope.errors.newMobile = true; $scope.errors.newMobileMessage = "Mobile no. must be 10 digits." }
            else { $scope.errors.newMobile = false; }
            return $scope.errors.newMobile;
        }
        else if (id == "city") {
            if (!$scope.termDetails.city) { $scope.errors.city = true; $scope.errors.cityMessage = "City is required"; }
            else { $scope.errors.city = false; if (!flag) { $scope.termDetails.pincode = ""; } }
            return $scope.errors.city;
        }
    }
    $scope.calculateSumAssuredRange = function (useractualincome) {
        if (useractualincome != undefined) {
        $scope.userfloatincome = parseFloat(useractualincome / 100000).toFixed(2); $scope.homepageincometext = ''; $scope.minincome = ''; $scope.maxincome = ''; var userincomeinlacs = Math.round($scope.userfloatincome); var count = useractualincome.toString().length; if (count <= 7) { $scope.homepageincometext = parseFloat(useractualincome / 100000).toFixed(2) + ' Lacs' }
            if (userincomeinlacs >= 0 && userincomeinlacs <= 3) { $scope.minincome = 0; $scope.maxincome = 3 } else if (userincomeinlacs >= 3 && userincomeinlacs <= 4) { $scope.minincome = 3; $scope.maxincome = 4 } else if (userincomeinlacs >= 4 && userincomeinlacs <= 7) { $scope.minincome = 4; $scope.maxincome = 7 } else if (userincomeinlacs >= 7 && userincomeinlacs <= 10) { $scope.minincome = 7; $scope.maxincome = 10 } else if (userincomeinlacs >= 10 && userincomeinlacs <= 15) { $scope.minincome = 10; $scope.maxincome = 15 } else if (userincomeinlacs >= 15) { $scope.minincome = 15; $scope.maxincome = 20 }
        }
        return $scope
    }
    $scope.gettermcontinuepop = function (ids) {
        var flag = 0; $scope.product = "Term"; if ($scope.validation('income') && ids == 'aicm') { flag = 1; }
        if ($scope.validation('age') && ids == 'aicm') { flag = 1; }
        if ($scope.validation('city', 1)) { flag = 1; }
        if ($scope.validation('name') && ids != 'aicm') { flag = 1; }
        if ($scope.validation('mobile')) { flag = 1; }
        if (flag == 0) {
        $scope.userOTP = ''; $scope.otpText = "Successfully sent the One Time Password to your mobile number"; var userincomeinlacs = parseFloat(($scope.termDetails.income / 100000).toFixed(0) * 100000); if (userincomeinlacs > 2500000) { $scope.SumAssured = 50000000 }
        else { if ($scope.termDetails.age <= 39) { $scope.SumAssured = userincomeinlacs * 20 } else if ($scope.termDetails.age >= 40 && $scope.termDetails.age <= 50) { $scope.SumAssured = userincomeinlacs * 15 } else if ($scope.termDetails.age >= 51 && $scope.termDetails.age <= 55) { $scope.SumAssured = userincomeinlacs * 10 } else { $scope.SumAssured = userincomeinlacs * 5 } }
            $scope.showbtnleadloader = true; var saveRequirementData = CommonService.saveNewTermRequirementData($scope, globals); saveRequirementData.then(function (pl) { $scope.IGQuoteId = JSON.parse(angular.toJson(pl.data.IGQuoteId)); if ($scope.IGQuoteId > 0) { $scope.otpFn(); } }, function () { $scope.showbtnleadloader = false; });
        }
    }
    $scope.updateMobileNumber = function () { if (!$scope.validation('newmobile')) { $scope.updateLoader = true; $scope.otpFn(1, 3); } }
    $scope.init = function (ids) {
        var currentURL = $location.absUrl(); if (currentURL.indexOf("dev.indiacover360.com") != -1) { globals.RedirectURL = "https://dev.indiacover360.com/Application/"; globals.ServiceURL = "https://api.indiacover360.com"; globals.IGwServiceURL = "https://api.indiacover360.com"; globals.UIURL = "https://dev.indiacover360.com/HomePage"; globals.landingPage = "https://dev.indiacover360.com"; globals.mainPage = "https://dev.indiacover360.com/Application/?CPID="; }
        else if (currentURL.indexOf("qa.indiacover360.com") != -1) { globals.RedirectURL = "https://qa.indiacover360.com/Application/"; globals.ServiceURL = "https://apiqa.indiacover360.com"; globals.IGwServiceURL = "https://apiqa.indiacover360.com"; globals.UIURL = "https://qa.indiacover360.com/HomePage"; globals.landingPage = "https://qa.indiacover360.com"; globals.mainPage = "https://qa.indiacover360.com/Application/?CPID="; }
        else if (currentURL.indexOf("insurejoy.com") != -1 || currentURL.indexOf("insurejoy.in") != -1) { globals.RedirectURL = "https://insurejoy.com/Application/"; globals.ServiceURL = "https://api.insurejoy.com"; globals.IGwServiceURL = "https://api.insurejoy.com"; globals.UIURL = "https://insurejoy.com/HomePage"; globals.landingPage = "https://insurejoy.com"; globals.mainPage = "https://insurejoy.com/Application/?CPID="; }
        if (ids == 'aicm') { $scope.termDetails = { income: '', age: '', name: '', mobile: '', pincode: '', gender: 'M', city: '', salutation: 'Mr' }; }
        $scope.otpPopup = false; $scope.otpMobile = false; $scope.updateMobile = false; getCityList(); getincomeList(); getAgeList(28, 65); $scope.carquotesleadrequest = ValidationFactory.GetEncryptedString(); $scope.leadcreaterequestdata = ValidationFactory.GetLeadCreationEncryptedString(); $scope.otpcreaterequestdata = ValidationFactory.GetOTPString1(); var currentURL = $location.absUrl(); CommonService.IGVisiterClickCount(currentURL); $scope.webUrl = $location.absUrl(); var sourcevia = document.referrer; if ($scope.webUrl.indexOf("enhance") != -1 && $scope.webUrl.indexOf("child") != -1) { if (sourcevia.indexOf("google") != -1 || sourcevia.indexOf("yahoo") != -1 || sourcevia.indexOf("bing") != -1) { $scope.utmsourcedata = "organic"; $scope.utmcampaigndata = "organic"; } }
        var temp1 = $scope.webUrl.split("#")[0].split('&'); console.log($location.absUrl()); for (var i = 0; i < temp1.length; i++) {
            if (temp1[i].indexOf("utm_source") != -1) { $scope.utmsourcedata = temp1[i].split('=')[1] }
            if (temp1[i].indexOf("utm_medium") != -1) { $scope.utmmediumdata = temp1[i].split('=')[1] }
            if (temp1[i].indexOf("utm_campaign") != -1) { $scope.utmcampaigndata = temp1[i].split('=')[1] }
            if (temp1[i].indexOf("utm_term") != -1) { $scope.utmtermdata = temp1[i].split('=')[1] }
            if (temp1[i].indexOf("partnerleadid") != -1) { $scope.utmpartnerleadiddata = temp1[i].split('=')[1] }
            if (temp1[i].indexOf("partneragentid") != -1) { $scope.utmpartneragentiddata = temp1[i].split('=')[1] }
        }
    }
    $scope.encryptedData = function (value) { if (value) { const encrypted = CryptoJS.AES.encrypt(CryptoJS.enc.Utf8.parse(value + globals.staticKey), CryptoJS.enc.Utf8.parse(globals.encryptionKey), { keySize: 128 / 8, iv: CryptoJS.enc.Utf8.parse(globals.encryptionIv), mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 }); return encrypted.toString(); } }
    function getAgeList(start, end) { $scope.ageList = []; for (let i = start; i <= end; i++) { $scope.ageList.push({ value: i, text: i + ' Years' }); } }
}])
var app = angular.module('App'); app.service('CommonService', function ($location, $filter, $http, globals) {
    'use strict'; var CommonService = {}; CommonService.formatReg = function (registrationNo) {
        var regNo = registrationNo; regNo = regNo.replace(/-/g, ""); var regNoArray = new Array(4); regNoArray[0] = regNo.slice(0, 2); regNoArray[1] = ''; regNoArray[2] = ''; regNoArray[3] = ''; try {
            if (!isNaN(regNo.slice(2, 4))) { regNoArray[1] = regNo.slice(2, 4); } else {
                if (!isNaN(regNo.slice(2, 3))) { regNoArray[1] = regNo.slice(2, 3); }
                if (isNaN(regNo.slice(3, 4))) { regNoArray[2] = regNo.slice(3, 4); }
            }
            if (!isNaN(regNo.slice(4, 8))) { regNoArray[3] = regNoArray[3] + regNo.slice(4, 8); } else {
            regNoArray[2] = regNoArray[2] + regNo.slice(4, 5); if (isNaN(regNo.slice(5, 6)) == true && isNaN(regNo.slice(6, 7)) == true) { regNoArray[2] = regNoArray[2] + regNo.slice(5, 7); } else {
                if (isNaN(regNo.slice(5, 6))) { regNoArray[2] = regNoArray[2] + regNo.slice(5, 6); } else { regNoArray[3] = regNoArray[3] + regNo.slice(5, 6); }
                if (!isNaN(regNo.slice(6, 7))) { regNoArray[3] = regNoArray[3] + regNo.slice(6, 7); }
            }
                if (!isNaN(regNo.slice(7, 11))) { regNoArray[3] = regNoArray[3] + regNo.slice(7, 11); }
            }
        } catch (e) { }
        return regNoArray.join('-').replace(/--/g, "-").replace(/-\s*$/, "").replace(/[^- 0-9 a-z A-z]/g, "");
    }; CommonService.insurancecompanies = function (data) { var request = $http({ method: "POST", url: globals.IGwServiceURL + "/IGGeneralServices.svc/web/GetInsurer", headers: { 'Content-Type': 'application/json; charset=utf-8' }, dataType: "json", data: JSON.stringify({ "RequestString": data }) }); return request; }; CommonService.SendOTPReboot = function ($scope) {
        var mbl = $scope.termDetails.mobile; var vData = { "IsResend": $scope.resendFlag, "MobileNumber": mbl, "CP_ID": $scope.IGQuoteId, "ClientKey": $scope.encryptedData($scope.IGQuoteId.toString() + mbl) }
        var request = $http({ method: "POST", dataType: "json", url: globals.ServiceURL + "/Lead.svc/web/SendOTPReboot", contentType: "application/json; charset=utf-8", data: JSON.stringify(vData) }); return request;
    }; CommonService.citylist = function ($scope) { var vData = { IsTopLocation: $scope.CityValue }; var request = $http({ method: "POST", dataType: "json", url: globals.ServiceURL + '/MasterService.svc/web/GetCityList', contentType: "application/json; charset=utf-8", data: JSON.stringify(vData) }); return request; }; CommonService.pincodeList = function ($scope) { var vData = { citypin: { CityId: $scope.termDetails.city } }; var request = $http({ method: "POST", dataType: "json", url: globals.ServiceURL + '/CommonService.svc/web/GetCityBasisPinCode', contentType: "application/json; charset=utf-8", data: JSON.stringify(vData) }); return request; }; CommonService.getCountrylist = function () { var request = $http({ method: "POST", url: globals.ServiceURL + '/MasterService.svc/web/GetCountryList', }); return request; }; CommonService.getCPIDdata = function (data) { var requestdata = parseInt(data); var request = $http({ method: "POST", url: globals.ServiceURL + "/Lead.svc/web/GetContinueJourneyDetails", contentType: "application/json", dataType: "json", data: requestdata }); return request; }; CommonService.saveChildRequirementData = function ($scope, globals) { var requestdata = { "IGQuoteId": 0, "IsDnc": true, "PartnerAgentId": $scope.utmpartneragentiddata, "LandingURL": $scope.webUrl, "PartnerLeadId": $scope.utmpartnerleadiddata, "RequestType": "", "Requests": [{ "__type": "NonTermRequest:#ServiceEntities", "DOBs": [JSON.parse(CommonService.stringifyWcf($scope.formdob, 1)), JSON.parse(CommonService.stringifyWcf($scope.childDOB, 1))], "Features": [{ "__type": "BooleanFeature:#ServiceEntities", "Id": "0", "Name": "" }, { "__type": "BooleanFeature:#ServiceEntities", "Id": "0", "Name": "" }], "Amount": $scope.selectedincome, "PayingMode": $scope.childincometype, "MaturityTerm": $scope.MaturityTerm, "Gender": $scope.formgender, "CityId": 3035, "MinRisk": 1, "MaxRisk": 5, "ProductId": 7, "MaturityType": "HistoricalGrowth", "PaymentDuration": 0 }], "ServiceTimeOut": "2147483647", "utmMedium": $scope.utmmediumdata, "utmCompaign": $scope.utmcampaigndata, "utmSource": $scope.utmsourcedata, "utmTerm": $scope.utmtermdata }; var request = $http({ method: "POST", dataType: "jsonp", url: globals.ServiceURL + "/QuoteService.svc/web/Save", data: requestdata }); return request; }; CommonService.saveNewTermRequirementData = function ($scope, globals) {
        if ($scope.utmmediumdata == undefined || $scope.utmmediumdata == null) { $scope.utmmediumdata = "" }
        if ($scope.utmcampaigndata == undefined || $scope.utmcampaigndata == null) { $scope.utmcampaigndata = "" }
        if ($scope.utmsourcedata == undefined || $scope.utmsourcedata == null) { $scope.utmsourcedata = "" }
        if ($scope.UtmTerm == undefined || $scope.UtmTerm == null) { $scope.UtmTerm = "" }
        var requestdata = { "IGQuoteId": 0, "IsDnc": !0, "PartnerAgentId": "", "LandingURL": $scope.webUrl, "MobileNo": $scope.termDetails.mobile, "PartnerLeadId": "", "RequestType": "", "Requests": [{ "__type": "TermRequest:#ServiceEntities", "Features": null, "ProductId": 3, "AnnualIncomeRange": $scope.termDetails.income, "PayingMode": 'Yearly', "PolicyTerm": 0, "SelectedRiders": [], "SumAssured": $scope.SumAssured, "UserInputIncome": parseInt($scope.termDetails.income), "MinAnnualIncomeRange": $scope.minincome, "MaxAnnualIncomeRange": $scope.maxincome, "Features": null, "Age": $scope.termDetails.age, "CityID": parseInt($scope.termDetails.city), "CityId": parseInt($scope.termDetails.city), "Gender": $scope.termDetails.gender }], "ServiceTimeOut": 2147483647, "utmMedium": $scope.utmmediumdata, "utmCompaign": $scope.utmcampaigndata, "utmSource": $scope.utmsourcedata, "utmTerm": $scope.utmtermdata }; $scope.TermRequestData = requestdata; var request = $http({ method: "POST", dataType: "jsonp", url: globals.ServiceURL + "/QuoteService.svc/web/Save", data: requestdata }); return request
    }; CommonService.GetMobileVerificationWithOTPRequest = function (data) { var requestdata = { RequestString: JSON.stringify(data.RequestString, null, "    ") }; var request = $http({ method: "POST", dataType: "jsonp", url: globals.IGwServiceURL + "/Lead.svc/web/GetMobileVerificationWithOTPRequest", data: JSON.stringify(requestdata) }); return request; }; CommonService.GetMobileVerificationWithOTPRequest1 = function (data) { var requestdata = { RequestString: JSON.stringify(data.RequestString, null, "    ") }; var request = $http({ method: "POST", dataType: "jsonp", url: globals.IGwServiceURL + "/Lead.svc/web/GetLeadCreateRequest", data: JSON.stringify(requestdata) }); return request; }; CommonService.GetMobileVerificationWithOTPRequest2 = function (data) { var requestdata = { RequestString: JSON.stringify(data.RequestString, null, "    ") }; var request = $http({ method: "POST", dataType: "jsonp", url: globals.IGwServiceURL + "/Lead.svc/web/GetOTPVerificationRequest", data: JSON.stringify(requestdata) }); return request; }
    CommonService.IGVisiterClickCount = function (url) {
        var vData = { "IGUrl": url }
        var request = $http({ method: "POST", dataType: "json", url: globals.IGwServiceURL + "/CommonService.svc/web/IGVisiterClickCount", contentType: "application/json; charset=utf-8", data: JSON.stringify(vData) }); return request;
    }; CommonService.stringifyWcf = function (json, flag) {
        var reISO = /^(\d{4})-(\d{2})-(\d{2})T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)Z$/; var reMsAjax = /^\/Date\((d|-|.*)\)[\/|\\]$/; return JSON.stringify(json, function (key, value1) {
            debugger; var value; if (typeof value1 == "string") {
                if (flag == 1) { value = value1.split('-')[1] + '-' + value1.split('-')[0] + '-' + value1.split('-')[2]; } else if (flag == 3) { value = value1.split('/')[0] + '-' + value1.split('/')[1] + '-' + value1.split('/')[2]; } else { value = value1.split('-')[1] + '-' + value1.split('-')[0] + '-' + value1.split('-')[2]; }
                value1 = new Date(value); if (isNaN(Date.parse(value1))) { var splitdata = value.split('-'); value = new Date(splitdata[2], splitdata[0] - 1, (splitdata[1])); } else { value = new Date(value) }
                value = value.setDate(value.getDate() + 1); var s = JSON.parse(JSON.stringify(new Date(value))); var a = reISO.exec(s); if (a) { var val = '/Date(' + new Date(Date.UTC(+a[1], +a[2] - 1, +a[3], +a[4], +a[5], +a[6])).getTime() + ')/'; this[key] = val; return val; }
            }
            return value;
        })
    }
    return CommonService;
}); app.directive('mdBlur', function ($timeout) { var directive = { restrict: 'A', link: function (scope, element, attributes) { $timeout(function () { angular.element(element[0].querySelector("select.md-input")).bind("blur", function () { $timeout(function () { scope.$eval(attributes.mdBlur); }, 100); }); }, 0); } }; return directive; }); app.directive("scrollBottom", function () { return { link: function (scope, element, attr) { var $id = $("#" + attr.scrollBottom); $(element).on("click", function () { $id.scrollTop($id[0].scrollHeight); }); } } }); app.directive('onlyLettersInput', onlyLettersInput); function onlyLettersInput() {
    return {
        require: 'ngModel', link: function (scope, element, attr, ngModelCtrl) {
            function fromUser(text) {
                var transformedInput = text.replace(/[^a-zA-Z\s]/g, ''); if (transformedInput !== text) { ngModelCtrl.$setViewValue(transformedInput); ngModelCtrl.$render(); }
                return transformedInput;
            }
            ngModelCtrl.$parsers.push(fromUser);
        }
    };
}; app.filter('startsWithLetter', function () {
    return function (items, letter) {
        var filtered = []; if (letter != undefined) {
            var letterMatch = new RegExp(letter, 'i'); var letterlength = letter.length; for (var i = 0; i < items.length; i++) { var item = items[i]; if (letterMatch.test(item.ActualIncomeText.substring(0, letterlength))) { filtered.push(item); } }
            return filtered;
        }
        else
            return items;
    };
}); app.directive('alphabetOnly', function () {
    return {
        require: 'ngModel', link: function (scope, element, attr, ngModelCtrl) {
            function fromUser(text) {
                if (text) {
                    text = text.toString(); var transformedInput = text.replace(/[^a-zA-Z]/g, ''); if (transformedInput !== text) { ngModelCtrl.$setViewValue(transformedInput); ngModelCtrl.$render() }
                    return transformedInput
                }
                return undefined
            }
            ngModelCtrl.$parsers.push(fromUser)
        }
    }
}); app.directive('alphabetSpace', function () {
    return {
        require: 'ngModel', link: function (scope, element, attr, ngModelCtrl) {
            function fromUser(text) {
                if (text) {
                    text = text.toString(); var transformedInput = text.replace(/[^a-zA-Z\s]/g, ''); if (transformedInput !== text) { ngModelCtrl.$setViewValue(transformedInput); ngModelCtrl.$render() }
                    return transformedInput
                }
                return undefined
            }
            ngModelCtrl.$parsers.push(fromUser)
        }
    }
}); app.directive('numbersOnly', function () {
    return {
        require: 'ngModel', link: function (scope, element, attr, ngModelCtrl) {
            function fromUser(text) {
                if (text) {
                    text = text.toString(); var transformedInput = text.replace(/[^0-9]/g, ''); if (transformedInput !== text) { ngModelCtrl.$setViewValue(transformedInput); ngModelCtrl.$render(); }
                    return transformedInput;
                }
                return undefined;
            }
            ngModelCtrl.$parsers.push(fromUser);
        }
    };
}); app.filter('startsWithLetter1', function () {
    return function (items, letter) {
        var filtered = []; if (letter != undefined) {
            var letterMatch = new RegExp(letter, 'i'); var letterlength = letter.length; for (var i = 0; i < items.length; i++) { var item = items[i]; if (letterMatch.test(item.CityStateName.substring(0, letterlength))) { filtered.push(item); } }
            for (var i = 0; i < items.length; i++) {
                var item3 = items[i]; var item1 = item3.CityStateName.split(','); var item2 = item1[0]; if (letterMatch.test(item2.substring(0, item2.length))) {
                    if (filtered.indexOf(item3) == -1)
                        filtered.push(item3);
                }
            }
            return filtered;
        }
        else
            return items;
    };
}); app.filter('SearchWithLetter', function () {
    return function (items, letter) {
        var filtered = []; var letterMatch = new RegExp(letter, 'i'); for (var i = 0; i < items.length; i++) { var item = items[i]; if (letterMatch.test(item.CityStateName)) { filtered.push(item); } }
        return filtered;
    };
}); app.directive('focusMe', ['$timeout', '$parse', function ($timeout, $parse) { return { link: function (scope, element, attrs) { var model = $parse(attrs.focusMe); scope.$watch(model, function (value) { console.log('value=', value); if (value === true) { $timeout(function () { element[0].focus(); }); } }); element.bind('blur', function () { console.log('blur'); scope.$apply(model.assign(scope, false)); }); } }; }]); app.filter('roundof', function ($filter) { return function (input) { return Math.round(input); }; }); app.filter('freeaddon', function ($filter) {
    return function (input) {
        if (parseInt(input) == 0) { var input = "Free"; }
        return input;
    };
}); app.filter('trim', function () {
    return function (value) {
        if (!angular.isString(value)) { return value; }
        return value.replace(/[\s]/g, '');
    };
}); app.filter('rupeesFigure', function () {
    return function (income) {
        if (!isNaN(income) && angular.isNumber(income)) {
            var userfloatincome = ''; var count = (parseInt(income)).toString().length; if (count < 4) { userfloatincome = parseFloat(income / 1000).toFixed(2) + ' K*'; }
            else if (count == 4 || count == 5) { userfloatincome = parseFloat(income / 1000).toFixed(2) + ' K*'; }
            else if (count == 6 || count == 7) { userfloatincome = parseFloat(income / 100000).toFixed(2) + ' Lacs*'; }
            else if (count == 8 || count == 9) { userfloatincome = parseFloat(income / 10000000).toFixed(2) + ' Crore*'; }
            return userfloatincome;
        }
        else { return; }
    };
}); app.directive('ngEnter', function () { return function (scope, element, attrs) { element.bind("keydown keypress", function (event) { if (event.which === 13) { scope.$apply(function () { scope.$eval(attrs.ngEnter, { 'event': event }); }); event.preventDefault(); } }); }; }); app.filter('INR', function () {
    return function (input) {
        if (!isNaN(input)) {
            var result = input.toString().split('.'); var lastThree = result[0].substring(result[0].length - 3); var otherNumbers = result[0].substring(0, result[0].length - 3); if (otherNumbers != '')
                lastThree = ',' + lastThree; var output = otherNumbers.replace(/\B(?=(\d{2})+(?!\d))/g, ",") + lastThree; if (result.length > 1) { output += "." + result[1]; }
            return output;
        }
    }
}); app.directive('commaseparator', function ($filter) {
    return {
        require: 'ngModel', link: function (scope, elem, attrs, ctrl) {
            if (!ctrl) { return; }
            ctrl.$formatters.unshift(function () { return $filter('commainr')(ctrl.$modelValue); }); ctrl.$parsers.unshift(function (viewValue) { var plainNumber = viewValue.replace(/[\,\.\-\+]/g, ''), b = $filter('commainr')(plainNumber); elem.val(b); return plainNumber; });
        }
    };
}); app.filter('commainr', function () {
    return function (input) {
        if (!isNaN(input) && input != undefined && input != null) {
            var result = input.toString(); var lastThree = result.substring(result.length - 3); var otherNumbers = result.substring(0, result.length - 3); if (otherNumbers != '')
                lastThree = ',' + lastThree; var output = otherNumbers.replace(/\B(?=(\d{2})+(?!\d))/g, ",") + lastThree; return output
        }
    }
}); app.factory('ValidationFactory', function () {
    return {
        GetOTPString1: function () { var leadrequest = { "RequestString": { "OTPValidationRequest": { "User": { "UserName": "123", "UserPassword": "123", "UserIP": "192.168.1.129", "Vendorid": "2018", "Productid": "3" }, "OTPValidation": { "Mobile": "9873008200", "OTP": "4073", "Tokenid": "WIN-I2MHQOTJM4B6df1875a-c2a4-46e0-8d68-0a889c269359" } } } }; return leadrequest; }, GetEncryptedString: function () { var bikeleadrequest = { "RequestString": { "MobileValidationRequest": { "User": { "UserName": "123", "UserPassword": "123", "UserIP": "192.168.1.129", "Vendorid": "2018", "Productid": "8" }, "MobileValidation": { "Mobile": undefined, "isOTPRequire": "No", "isOTPRequireForValidMobile": "No" } } } }; return bikeleadrequest; }, GetLeadCreationEncryptedString: function () { var bikeleadrequest = { "RequestString": { "LeadCreateRequest": { "User": { "UserName": "123", "UserPassword": "123", "UserIP": "192.168.1.129", "Vendorid": 2018, "Tokenid": "8a748771-574b-48b2-a113-ecb85bb3593f" }, "Products": { "product": [{ "productid": 8 }] }, "Visitor": { "leads": { "lead": [{ "leadId": "" }] }, "Name": "", "EmailId": "", "MobileNo": "", "CountryCode": "+91", "IsCallBackRequire": "false", "OriginPageid": "2" } } } }; return bikeleadrequest; }, mobilevalidate: function (mobile) {
            var reg = /^([0|\+[0-9]{1,5})?([1-9][0-9]{9})$/; if (mobile != undefined && mobile.toString().length == 10 && reg.test(mobile)) { var msgMobile = "True"; }
            else { var msgMobile = "False"; }
            return msgMobile;
        }, emailvalidate: function (email) {
            var reg = /^([A-Za-z0-9_\-\.])+\@([A-Za-z0-9_\-\.])+\.([A-Za-z]{2,4})$/; if (email != undefined && email.length != 4 && reg.test(email)) { var msgEmail = "True"; }
            else { var msgEmail = "False"; }
            return msgEmail;
        }, descriptionvalidate: function (text) {
            var regex = /[^\w\s]/gi; if (text != undefined && text != "" && !regex.test(text)) { var msgText = "True"; }
            else { var msgText = "False"; }
            return msgText;
        }, namevalidate: function (name) {
            var regex = /^[a-zA-Z\s]*$/
            if ((name != undefined) && (name != "") && (regex.test(name))) { var msgName = "True"; }
            else { var msgName = "False"; }
            return msgName;
        }, onlynumber: function (number) {
            var reg = /[^0-9]+/g; if ((number != undefined) && (!reg.test(number))) { var msgNumber = "True"; }
            else { var msgNumber = "False"; }
            return msgNumber;
        }, nospacevalidate: function (nospace) {
            var reg = /\s/g; if ((nospace != undefined) && (!reg.test(nospace))) { var magNoSpace = "True"; }
            else { var magNoSpace = "False"; }
            return magNoSpace;
        }, required: function (txt) {
            var reg = /\s/g; if ((txt != undefined) && (txt != "")) { var msgRequired = "True"; }
            else { var msgRequired = "False"; }
            return msgRequired;
        }, validatepancard: function (pancard) {
            var regex = /^[a-zA-Z'.\\s]{1,40}$/; if ((pancard != undefined) && (regex.test(pancard))) { var msgName = "True"; }
            else { var msgName = "False"; }
            return msgName;
        }, AgeGroup: function (datediif) {
            var userdatearray = datediif.split('-'); var d1 = new Date(userdatearray[1] + "/" + userdatearray[0] + "/" + userdatearray[2]); d2 = new Date(); if (d2 < d1) {
                var diff = monthDiff(d2, d1); if (diff == 0)
                    return 0; else
                    return -diff;
            }
            var years = d2.getFullYear() - d1.getFullYear(); var months = d2.getMonth() - d1.getMonth(); var days = (d2.getDate() - d1.getDate()) / 30; return years * 12 + months + days;
        },
    }
});

//term-app-new.js end